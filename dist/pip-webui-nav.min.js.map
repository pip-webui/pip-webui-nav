{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/actions/ActionsService.ts","src/actions/IActionsService.ts","src/actions/PrimaryActions.ts","src/actions/SecondaryActions.ts","src/actions/index.ts","src/appbar/AppBar.ts","src/appbar/AppBarConfig.ts","src/appbar/AppBarPart.ts","src/appbar/AppBarService.ts","src/appbar/index.ts","src/breadcrumb/Breadcrumb.ts","src/breadcrumb/BreadcrumbConfig.ts","src/breadcrumb/BreadcrumbService.ts","src/breadcrumb/index.ts","src/common/NavService.ts","src/dependencies/TranslateFilter.ts","src/dropdown/Dropdown.ts","src/header/NavHeader.ts","src/header/NavHeaderConfig.ts","src/header/NavHeaderService.ts","src/header/index.ts","src/icon/NavIcon.ts","src/icon/NavIconConfig.ts","src/icon/NavIconService.ts","src/icon/index.ts","src/index.ts","src/language/LanguagePickerDirective.ts","src/menu/NavMenu.ts","src/menu/NavMenuService.ts","src/menu/index.ts","src/search/SearchBar.ts","src/search/SearchConfig.ts","src/search/SearchService.ts","src/search/index.ts","src/sidenav/SideNav.ts","src/sidenav/SideNavPart.ts","src/sidenav/SideNavService.ts","src/sidenav/SideNavState.ts","src/sidenav/index.ts","src/tabs/Tabs.ts","temp/pip-webui-nav-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","nav","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","IActionsService_1","IActionsService_2","IActionsService_3","ActionsService","config","$rootScope","_config","_rootScope","Object","defineProperty","prototype","primaryGlobalActions","value","sendChangeEvent","secondaryGlobalActions","primaryLocalActions","secondaryLocalActions","show","primaryActions","secondaryActions","hide","updateCount","action","count","_","isNumber","each","name","clearCounts","$emit","ActionsChangedEvent","openMenuEvent","SecondaryActionsOpenEvent","ActionsProvider","ActionsConfig","$get","_service","angular","provider","SimpleActionItem","ActionItem","_super","__extends","PrimaryActionsController","$element","$injector","$scope","$window","$location","pipActions","$log","$attrs","_this","_pipTranslate","has","get","setTranslations","DOCUMENTS_ATTACHED","ERROR_DOCUMENTS_LOADED","addClass","$on","event","onActionsChanged","$inject","$onInit","localActions","globalActions","isHidden","access","actionCount","String","clickAction","$mdOpenMenu","divider","subActions","originatorEv","isFunction","click","href","location","url","state","_state","go","stateParams","$broadcast","PrimaryActionsBindings","PrimaryActionsChanges","bindings","templateUrl","controller","component","SecondaryActionsController","onActionsMenuOpen","getMenu","menuFn","_menuFn","openMenu","ev","calcActions","actions","secondaryActionsVisible","secondaryDividerVisible","SecondaryActionsBindings","SecondaryActionsChanges","AppBarController","pipAppBar","onAppBarChanged","appbar","transclude","7","AppBarConfig","8","AppBarPartController","_partName","_partValue","pos","indexOf","substr","parts","currentPartValue","visible","appbarPart","ngIfDirective","ngIf","priority","terminal","restrict","link","apply","arguments","9","AppBarChangedEvent","AppBarService","configurable","classes","sendConfigEvent","enumerable","shadowBreakpoints","setShadow","hideShadow","reject","c","startsWith","breakpoints","bp","push","addShadow","_i","removeShadow","cc","part","AppBarProvider","set","AppBarConfig_1","__export","m","p","hasOwnProperty","./AppBar","./AppBarConfig","./AppBarPart","./AppBarService","11","BreadcrumbController","pipBreadcrumb","$mdMedia","$state","BreadcrumbService_1","BreadcrumbChangedEvent","onBreadcrumbChanged","BreadcrumbService_2","BreadcrumbBackEvent","onBreadcrumbBack","pipMedia","_media","undefined","items","item","history","back","onClick","openSearch","SearchService_1","OpenSearchEvent","actionsVisible","isArray","onOpenMenu","onSubActionClick","breadcrumb","./BreadcrumbService","12","BreadcrumbItem","title","BreadcrumbConfig","13","BreadcrumbService","text","criteria","showText","showItems","BreadcrumbProvider","BreadcrumbConfig_1","./BreadcrumbConfig","14","15","NavService","icon","search","sidenav","header","menu","reset","showMenu","translateFilter","pipTranslate","DropdownController","$timeout","_pipTheme","_pipMedia","currentTheme","theme","themeClass","media","isUndefined","activeIndex","disabled","ngDisabled","onSelect","index","select","pipChange","showDropdown","DropdownBindings","DropdownChanges","dropdown","NavHeaderController","pipNavHeader","navConstant","initImage","cleanupNavHeaderChanged","$event","onNavHeaderChanged","cleanupSideNavStateChanged","onStateChanged","$onDestroy","imageBlock","find","image","onload","onImageLoad","onerror","onImageError","initHeader","subtitle","imageUrl","imageCss","setImageMarginCSS","loadedDefaultImage","$apply","setImage","id","showHeader","cssParams","containerWidth","width","clientWidth","containerHeight","height","clientHeight","imageWidth","imageHeight","margin","css","loadError","defaultImageUrl","attr","onUserClick","navHeader","NavHeaderConfig","20","NavHeaderService","callbackOrEvent","isString","NavHeaderChangedEvent","NavHeaderProvider","NavHeaderConfig_1","clear","./NavHeaderService","22","23","SideNavService_1","NavIconService_1","NavIconBindings","type","NavIconChanges","NavIconController","pipNavIcon","clearFn","onNavIconChanged","onNavIconClick","OpenSideNavEvent","NavIconClickedEvent","NavIcon","NavIconConfig","25","NavIconService","setCallbackOrEvent","showIcon","showBack","showImage","NavIconChangedEvent","NavIconConfig_1","NavIconProvider","setMenu","setIcon","setBack","./NavIconConfig","26","./INavIconService","./NavIcon","./NavIconService","27","constant","TAB_BREAKPOINT","SIDENAV_CONTAINER","SIDENAV_SMALL_WIDTH","SIDENAV_ANIMATION_DURATION","./appbar","./breadcrumb","./common/NavService","./dependencies/TranslateFilter","./dropdown/Dropdown","./header","./icon","./language/LanguagePickerDirective","./menu","./search","./sidenav","./tabs/Tabs","28","LanguagePickerDirectiveController","_translate","setLanguages","languages","language","onLanguageClick","LanguagePickerBindings","languagePickerDirective","navMenuDirective","NavMenuController","controllerAs","pipSideNav","pipNavMenu","_animationDuration","_pipSideNavElement","parent","sections","setCollapsible","defaultIcon","cleanupNavMenuChanged","onConfigChanged","collapsed","isCollapsed","onExpand","expanded","removeClass","isSectionEmpty","linkCollection","result","expand","isExpanded","expandedButton","sideNavState","isActive","parentState","includes","split","clickLink","stopPropagation","close","current","NavMenuBindings","NavMenuChangedEvent","NavMenuService","updateBadgeStyle","style","links","badgeStyle","NavMenuProvider","./NavMenuService","32","SearchBarController","pipSearch","enabled","stateChange","SearchChangedEvent","onSearchChanged","focusText","setTimeout","element","$","focus","enable","callback","SearchActivatedEvent","onKeyDown","keyCode","SearchBar","./SearchService","34","SearchConfig","CloseSearchEvent","SearchService","open","params","toggle","SearchProvider","36","./SearchBar","./SearchConfig","37","SideNavController","_bigWidth","SIDENAV_LARGE_WIDTH","_middleWidth","SIDENAV_MIDDLE_WIDTH","_isResizing","_navState","SideNavState_1","SideNavStateConfig","_mediaBreakpoints","setBreakpoints","setSideNaveState","windowResize","debounce","cleanupMainResized","cleanupSideNavState","onSideNavState","sidenavState","setState","SideNavStateNames","Toggle","cleanupSideNavChanged","onSideNavChanged","isObject","xs","sm","md","lg","stateName","mainWidth","_mainContainer","innerWidth","sideNavWidth","currentWidth","Small","Large","XLarge","sideNav","SideNavBindings","38","sidenavPartDirective","scope","SideNavPartBindings_1","SideNavPartController_1","partValue","partName","directive","hookSideNavEvents","CloseSideNavEvent","SideNavService","$mdSidenav","SideNavStateChangedEvent","SideNavChangedEvent","SideNavProvider","SideNavConfig","run","./SideNavState","40","SideNavState","isLockedOpen","showIconTooltype","small","large","xlarge","41","./SideNavPart","./SideNavService","42","PipTab","TabsChanges","TabsDirectiveController","setTheme","setMedia","setTranslate","tabs","translateObjects","isDisabled","toBoolean","tabDisabled","selectedTabId","showShadow","showTabsShadow","showTabs","toLowerCase","$onChanges","changes","currentValue","previousValue","on","Tabs","TabsBindings","43","$templateCache","put"],"mappings":"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","file":"pip-webui-nav.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ActionsConfig } from './IActionsService';\nimport { ActionItem } from './IActionsService';\nimport { ActionsChangedEvent } from './IActionsService';\nimport { SecondaryActionsOpenEvent } from './IActionsService';\nimport { IActionsService } from './IActionsService';\nimport { IActionsProvider } from './IActionsService';\n\n\nclass ActionsService implements IActionsService {\n    private _config: ActionsConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: ActionsConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): ActionsConfig {\n        return this._config;\n    }\n\n    public get primaryGlobalActions(): ActionItem[] {\n        return this._config.primaryGlobalActions;\n    }\n\n    public set primaryGlobalActions(value: ActionItem[]) {\n        this._config.primaryGlobalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get secondaryGlobalActions(): ActionItem[] {\n        return this._config.secondaryGlobalActions;\n    }\n\n    public set secondaryGlobalActions(value: ActionItem[]) {\n        this._config.secondaryGlobalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get primaryLocalActions(): ActionItem[] {\n        return this._config.primaryLocalActions;\n    }\n\n    public set primaryLocalActions(value: ActionItem[]) {\n        this._config.primaryLocalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get secondaryLocalActions(): ActionItem[] {\n        return this._config.secondaryLocalActions;\n    }\n\n    public set secondaryLocalActions(value: ActionItem[]) {\n        this._config.secondaryLocalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void {\n        this._config.primaryLocalActions = primaryActions || [];\n        this._config.secondaryLocalActions = secondaryActions || [];\n        this.sendChangeEvent();\n    }\n\n    public hide(): void {\n        this._config.primaryLocalActions = [];\n        this._config.secondaryLocalActions = [];\n        this.sendChangeEvent();\n    }\n\n    public updateCount(action: string, count: number) {\n        if (action == null || !_.isNumber(count)) return;\n\n        _.each(this._config.primaryGlobalActions, (a) => {\n            if (a.name == action)\n                a.count = count;\n        });\n        _.each(this._config.primaryLocalActions, (a) => {\n            if (a.name == action)\n                a.count = count;\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public clearCounts(): void {\n        _.each(this._config.primaryGlobalActions, (a) => {\n            a.count = null;\n        });\n        _.each(this._config.primaryLocalActions, (a) => {\n            a.count = null;\n        });\n\n        this.sendChangeEvent();\n    }\n\n    private sendChangeEvent() {\n        this._rootScope.$emit(ActionsChangedEvent, this._config);\n    }\n\n    public openMenuEvent(): void {\n        this._rootScope.$emit(SecondaryActionsOpenEvent);\n    }\n}\n\nclass ActionsProvider implements IActionsProvider {\n    private _config: ActionsConfig = new ActionsConfig();\n    private _service: ActionsService;\n\n    public get config(): ActionsConfig {\n        return this._config;\n    }\n\n    public set config(value: ActionsConfig) {\n        this._config = value || new ActionsConfig();\n    }\n\n    public get primaryGlobalActions(): ActionItem[] {\n        return this._config.primaryGlobalActions;\n    }\n\n    public set primaryGlobalActions(value: ActionItem[]) {\n        this._config.primaryGlobalActions = value || [];\n    }\n\n    public get secondaryGlobalActions(): ActionItem[] {\n        return this._config.secondaryGlobalActions;\n    }\n\n    public set secondaryGlobalActions(value: ActionItem[]) {\n        this._config.secondaryGlobalActions = value || [];\n    }\n\n    public get primaryLocalActions(): ActionItem[] {\n        return this._config.primaryLocalActions;\n    }\n\n    public set primaryLocalActions(value: ActionItem[]) {\n        this._config.primaryLocalActions = value || [];\n    }\n\n    public get secondaryLocalActions(): ActionItem[] {\n        return this._config.secondaryLocalActions;\n    }\n\n    public set secondaryLocalActions(value: ActionItem[]) {\n        this._config.secondaryLocalActions = value || [];\n    }\n\n    public $get($rootScope) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ActionsService(this._config, $rootScope);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipActions')\n    .provider('pipActions', ActionsProvider);\n\n","export const ActionsChangedEvent: string = 'pipActionsChanged';\nexport const SecondaryActionsOpenEvent: string = 'pipSecondaryActionsOpen';\n\nexport class SimpleActionItem {\n    // Name to refer to the item\n    public name: string;\n    // Link visible title\n    public title?: string;\n    // Show divider instead of title\n    public divider?: boolean;\n    // Icon name from $iconProvider\n    public icon?: string;\n    // Counter badge\n    public count?: number;\n    // Access function\n    public access?: (action: SimpleActionItem) => boolean;\n    // Show on specified breakpoints\n    public breakpoints?: string[];\n    // window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public click?: (action: SimpleActionItem) => void;\n}\n\nexport class ActionItem extends SimpleActionItem {\n    public subActions: SimpleActionItem[];\n}\n\nexport class ActionsConfig {\n    // Primary global actions visible on the screen\n    public primaryGlobalActions: ActionItem[] = [];\n    // Primary local actions visible on the screen\n    public primaryLocalActions: ActionItem[] = [];\n\n    // Secondary global actions available in popup\n    public secondaryGlobalActions: ActionItem[] = [];\n    // Secondary local actions available in popup\n    public secondaryLocalActions: ActionItem[]= [];\n}\n\nexport interface IActionsService {\n    readonly config: ActionsConfig;\n\n    primaryGlobalActions: ActionItem[];\n    primaryLocalActions: ActionItem[];\n    secondaryGlobalActions: ActionItem[];\n    secondaryLocalActions: ActionItem[];    \n\n    show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void;\n    hide(): void;\n    updateCount(link: string, count: number): void; \n    clearCounts(): void;\n    openMenuEvent(): void;\n}\n\nexport interface IActionsProvider extends ng.IServiceProvider {\n    config: ActionsConfig;\n    \n    primaryGlobalActions: ActionItem[];\n    primaryLocalActions: ActionItem[];\n    secondaryGlobalActions: ActionItem[];\n    secondaryLocalActions: ActionItem[];    \n}","import { IActionsService, ActionItem, ActionsConfig } from \"./IActionsService\";\n\nclass PrimaryActionsController {\n    private _pipTranslate: pip.services.ITranslateService\n\n    public config: ActionsConfig;\n\n    public localActions: ActionItem[];\n    public globalActions: ActionItem[];\n    public originatorEv: any;\n\n    constructor(\n        private $element: ng.IAugmentedJQuery,\n        private $injector: ng.auto.IInjectorService,\n        private $scope: angular.IScope,\n        private $rootScope: ng.IRootScopeService,\n        private $window: ng.IWindowService,\n        private $location: ng.ILocationService,\n        private pipActions: IActionsService,\n        $log: ng.ILogService,\n        $attrs: ng.IAttributes\n\n    ) {\n        \"ngInject\";\n\n\n        this._pipTranslate = this.$injector.has('pipTranslate') ? <pip.services.ITranslateService>this.$injector.get('pipTranslate') : null;\n        if (this._pipTranslate && this._pipTranslate.setTranslations) {\n            this._pipTranslate.setTranslations('en', {\n                DOCUMENTS_ATTACHED: 'document(s) attached',\n                ERROR_DOCUMENTS_LOADED: 'Error: <%= error_number %> document(s) are not loaded'\n            });\n            this._pipTranslate.setTranslations('ru', {\n                DOCUMENTS_ATTACHED: 'документов добавлено',\n                ERROR_DOCUMENTS_LOADED: 'Ошибка: <%= error_number %> документ(ов) не загружено'\n\n            });\n        }\n\n        // Apply class and call resize\n        this.$element.addClass('pip-primary-actions');\n\n        this.$rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\n            this.onActionsChanged(event, config);\n        });\n\n    }\n    \n    public $onInit() {\n        if (this.localActions) {\n            this.pipActions.primaryLocalActions = this.localActions;\n        }\n\n        if (this.globalActions) {\n            this.pipActions.primaryGlobalActions = this.globalActions;\n        }\n\n        this.config = this.pipActions.config;\n    }\n\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\n        this.config = config;\n    }\n\n    public isHidden(action: ActionItem): boolean {\n        // Todo: Check breakpoints here\n        return action.access && !action.access(action);\n    }\n\n    public actionCount(action: ActionItem): string {\n        if (action.count === null || action.count <= 0) {\n            return '';\n        }\n        if (action.count > 99) {\n            return '!';\n        }\n\n        return String(action.count);\n    }\n\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\n        if (!action || action.divider) {\n            return;\n        }\n\n        if (action.subActions) {\n            $mdOpenMenu(this.originatorEv);\n            return;\n        }\n\n        if (_.isFunction(action.click)) {\n            action.click(action);\n            return;\n        }\n\n        if (action.href) {\n            this.$window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            this.$location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if (this.$injector.has('this._state')) {\n                let _state: angular.ui.IStateService = this.$injector.has('pipTranslate') ? <angular.ui.IStateService>this.$injector.get('$state') : null ;\n                if (_state) {\n                    _state.go(action.state, action.stateParams);\n                }\n            }\n            return;\n        }\n\n        if (action.event) {\n            this.$rootScope.$broadcast(action.event);\n        } else {\n            // Otherwise raise notification\n            this.$rootScope.$broadcast('pipActionClicked', action.name);\n        }\n    }\n\n}\n\n\ninterface IPrimaryActionsBindings {\n    [key: string]: any;\n\n    localActions: any,\n    globalActions: any,\n    originatorEv: any\n}\n\nconst PrimaryActionsBindings: IPrimaryActionsBindings = {\n    localActions: '<pipLocalActions',\n    globalActions: '<pipGlobalActions',\n    originatorEv: '<?pipOriginatorEv'\n}\n\nclass PrimaryActionsChanges implements ng.IOnChangesObject, IPrimaryActionsBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    localActions: ng.IChangesObject<ActionItem[]>;\n    globalActions: ng.IChangesObject<ActionItem[]>;\n    originatorEv: ng.IChangesObject<any>;\n}\n\n\n(() => {\n    const primaryActions: ng.IComponentOptions = {\n        bindings: PrimaryActionsBindings,\n        templateUrl: 'actions/PrimaryActions.html',\n        controller: PrimaryActionsController\n    };\n\n\n    angular\n        .module('pipActions')\n        .component('pipPrimaryActions', primaryActions);\n\n})();","import { IActionsService, ActionItem, ActionsConfig } from \"./IActionsService\";\n\nclass SecondaryActionsController {\n    private pipTranslate: pip.services.ITranslateService\n    private _menuFn: Function;\n    private originatorEv: any;\n\n    public config: ActionsConfig;\n    public localActions: ActionItem[];\n    public globalActions: ActionItem[];\n\n    constructor(\n        private $attrs: ng.IAttributes,\n        private $injector: ng.auto.IInjectorService,\n        private $log: ng.ILogService,\n        private $rootScope: ng.IRootScopeService,\n        private $window: ng.IWindowService,\n        private $location: ng.ILocationService,\n        private pipActions: IActionsService,\n        $element: ng.IAugmentedJQuery,\n    ) {\n        \"ngInject\";\n\n        // Apply class and call resize\n        $element.addClass('pip-secondary-actions');\n\n        if (this.localActions) {\n            pipActions.secondaryLocalActions = this.localActions;\n        }\n\n        if (this.globalActions) {\n            pipActions.secondaryGlobalActions = this.globalActions;\n        }\n\n        this.config = pipActions.config;\n\n        this.$rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\n            this.onActionsChanged(event, config);\n        });\n\n        this.$rootScope.$on('pipSecondaryActionsOpen', () => {\n            this.onActionsMenuOpen();\n        });\n\n    }\n\n    public getMenu(menuFn: Function): void {\n         this._menuFn = menuFn;\n    }\n\n    public onActionsMenuOpen(): void {\n        this._menuFn();\n    }\n\n    public openMenu($mdOpenMenu: Function, ev: ng.IAngularEvent): void {\n        this.originatorEv = ev;\n        $mdOpenMenu(ev);\n    }\n\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\n        this.config = config;\n    }\n\n    public isHidden(action: ActionItem): boolean {\n        // Todo: Check breakpoints here\n        return action.access && !action.access(action);\n    }\n\n    public actionCount(action: ActionItem): string {\n        if (action.count === null || action.count <= 0) {\n            return '';\n        }\n        if (action.count > 99) {\n            return '!';\n        }\n\n        return String(action.count);\n    }\n\n\n    private calcActions(actions: ActionItem[]): number {\n        let count: number = 0;\n\n        _.each(actions, (action: ActionItem) => {\n            if (!this.isHidden(action)) {\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    public secondaryActionsVisible() {\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 ||\n            this.calcActions(this.config.secondaryLocalActions) > 0;\n    }\n\n    public secondaryDividerVisible() {\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 &&\n            this.calcActions(this.config.secondaryLocalActions) > 0;\n    }\n\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\n        if (!action || action.divider) {\n            return;\n        }\n\n        // todo: do not supported into ActionItem\n        // if (action.close) {\n        //     this.$scope.originatorEv = null;\n        // }\n\n        if (action.subActions) {\n            $mdOpenMenu(this.originatorEv);\n            return;\n        }\n\n        if (action.click) {\n            action.click(action);\n            return;\n        }\n\n        if (action.href) {\n            this.$window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            this.$location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if (this.$injector.has('this._state')) {\n                let _state: angular.ui.IStateService = this.$injector.has('pipTranslate') ? <angular.ui.IStateService>this.$injector.get('$state') : null;\n                if (_state) {\n                    _state.go(action.state, action.stateParams);\n                }\n            }\n            return;\n        }\n\n        if (action.event) {\n            this.$rootScope.$broadcast(action.event);\n        } else {\n            // Otherwise raise notification\n            this.$rootScope.$broadcast('pipActionClicked', action.name);\n        }\n    }\n\n}\n\n\ninterface ISecondaryActionsBindings {\n    [key: string]: any;\n\n    localActions: any,\n    globalActions: any\n}\n\nconst SecondaryActionsBindings: ISecondaryActionsBindings = {\n    localActions: '<pipLocalActions',\n    globalActions: '<pipGlobalActions'\n}\n\nclass SecondaryActionsChanges implements ng.IOnChangesObject, ISecondaryActionsBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n    localActions: ng.IChangesObject<ActionItem[]>;\n    globalActions: ng.IChangesObject<ActionItem[]>;\n}\n\n\n(() => {\n    const secondaryActions: ng.IComponentOptions = {\n        bindings: SecondaryActionsBindings,\n        templateUrl: 'actions/SecondaryActions.html',\n        controller: SecondaryActionsController\n    };\n\n    angular\n        .module('pipActions')\n        .component('pipSecondaryActions', secondaryActions);\n\n})();\n","angular.module('pipActions', ['ngMaterial', 'pipNav.Templates', 'ui.router']);\n\nimport './ActionsService';\nimport './PrimaryActions';\nimport './SecondaryActions';\n\nexport * from './IActionsService';","﻿import { AppBarConfig } from './AppBarConfig';\nimport { IAppBarService } from \"./IAppBarService\";\n\nclass AppBarController {\n    public config: AppBarConfig;\n\n    constructor(\n        $element: ng.IAugmentedJQuery,\n        $rootScope: ng.IRootScopeService,\n        pipAppBar: IAppBarService\n    ) {\n        \"ngInject\";\n        // Apply class and call resize\n        $element.addClass('pip-appbar');\n        $element.addClass('color-primary-bg');\n\n        this.config = pipAppBar.config;\n\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\n            this.onAppBarChanged(event, config)\n        });\n    }\n\n    public onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\n        this.config = config;\n    }\n    \n}\n\n{\n    const appbar: ng.IComponentOptions = {\n        transclude: true,\n        templateUrl: 'appbar/AppBar.html',\n        controller: AppBarController\n    }\n\n    angular\n        .module('pipAppBar')\n        .component('pipAppbar', appbar);\n\n}","export class AppBarConfig {\n    visible: boolean;\n    parts: any;\n    classes: string[];\n} ","import { AppBarConfig } from './AppBarConfig';\nimport { IAppBarService } from \"./IAppBarService\";\n\nclass AppBarPartController {\n    \n    private _partName: string;\n    private _partValue: string;\n\n    constructor(\n        private $scope: ng.IScope,\n        $element: ng.IAugmentedJQuery,\n        $attrs: ng.IAttributes,\n        $log: ng.ILogService,\n        $rootScope: ng.IRootScopeService,\n        pipAppBar: IAppBarService\n    ) {\n        \"ngInject\";\n\n        this._partName = String($attrs['pipAppbarPart']);\n        this._partValue = null;\n\n        // Break part apart\n        let pos: number = this._partName.indexOf(':');\n        if (pos > 0) {\n            this._partValue = this._partName.substr(pos + 1);\n            this._partName = this._partName.substr(0, pos);\n        }\n\n        // onAppBarChanged(null, pipAppBar.config);\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\n            this.onAppBarChanged(null, config)\n        });\n\n    }\n\n    private onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\n        let parts: any = config.parts || {};\n        let currentPartValue = parts[this._partName];\n\n        // Set visible variable to switch ngIf\n        let visible: boolean = !!(this._partValue ? currentPartValue == this._partValue : currentPartValue);\n\n        if (visible != this.$scope['visible'])\n            this.$scope['visible'] = visible;\n    }\n\n}\n\n// Example is taken from here: http://stackoverflow.com/questions/20325480/angularjs-whats-the-best-practice-to-add-ngif-to-a-directive-programmatically\n(() => {\n    function appbarPart(ngIfDirective) {\n        \"ngInject\";\n\n        var ngIf = ngIfDirective[0];\n\n        return {\n            transclude: ngIf.transclude,\n            priority: ngIf.priority,\n            terminal: ngIf.terminal,\n            restrict: ngIf.restrict,\n            scope: true,\n            link: function linkFunction($scope: ng.IScope, $element: ng.IAugmentedJQuery, $attrs: ng.IAttributes) {\n                // Visualize based on visible variable in scope\n                $attrs['ngIf'] = () => {\n                    return $scope['visible'];\n                };\n                ngIf.link.apply(ngIf, arguments);\n            },\n            controller: AppBarPartController\n        };\n    }\n\n    angular.module('pipAppBar')\n        .directive('pipAppbarPart', appbarPart);\n\n})();","import { AppBarConfig } from './AppBarConfig';\nimport { IAppBarService, IAppBarProvider } from './IAppBarService';\n\nexport const AppBarChangedEvent: string = 'pipAppBarChanged';\n\nclass AppBarService implements IAppBarService {\n    private _config: AppBarConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(config: AppBarConfig, $rootScope: ng.IRootScopeService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): AppBarConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void {\n        this._config.visible = true;\n        this._config.parts = parts || this._config.parts || {};\n        this._config.classes = classes || this._config.classes || [];\n        if (shadowBreakpoints) {\n            this.setShadow(shadowBreakpoints); \n        }\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.visible = false;\n        this.sendConfigEvent();\n    }\n\n    private hideShadow(): void {\n        this._config.classes = _.reject(this._config.classes, (c) => c.startsWith('pip-shadow'));\n    }\n\n    private setShadow(breakpoints: string[]): void {\n        this.hideShadow();\n\n        if (breakpoints != null && breakpoints.length > 0) {\n            _.each(breakpoints, (bp) => {\n                this._config.classes.push('pip-shadow-' + bp);\n            });\n        } else {\n            this._config.classes.push('pip-shadow');\n        }\n    }\n\n    public addShadow(...breakpoints: string[]): void {\n        this.setShadow(breakpoints);\n        this.sendConfigEvent();\n    }\n\n    public removeShadow(): void {\n        this.hideShadow();\n        this.sendConfigEvent();\n    }\n \n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$broadcast(AppBarChangedEvent, this._config);\n    }\n}\n\nclass AppBarProvider implements IAppBarProvider {\n    private _config: AppBarConfig = {\n        visible: true,\n        parts: {},\n        classes: []\n    };\n    private _service: AppBarService;\n\n    public get config(): AppBarConfig {\n        return this._config;\n    }\n\n    public set config(value: AppBarConfig) {\n        this._config = value || new AppBarConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new AppBarService(this._config, $rootScope);\n\n        return this._service;\n    }     \n}\n\nangular\n    .module('pipAppBar')\n    .provider('pipAppBar', AppBarProvider);\n","angular\n    .module('pipAppBar', ['ngMaterial', 'pipNav.Templates']);\n\nimport './AppBarConfig';\nimport './AppBarService';\nimport './AppBar';\nimport './AppBarPart';\n\nexport * from './AppBarService';\n","import { SimpleActionItem } from '../actions/IActionsService';\nimport { BreadcrumbItem } from './BreadcrumbConfig';\nimport { BreadcrumbConfig } from './BreadcrumbConfig';\nimport { IBreadcrumbService } from './IBreadcrumbService';\nimport { BreadcrumbChangedEvent } from './BreadcrumbService';\nimport { BreadcrumbBackEvent } from './BreadcrumbService';\nimport { OpenSearchEvent } from '../search/SearchService';\n\nclass BreadcrumbController {\n    private originatorEv: Event;\n    private _media: any;\n\n    public config: BreadcrumbConfig;\n\n    public constructor(\n        private $rootScope: ng.IRootScopeService,\n        private $window: ng.IWindowService,\n        private $location: ng.ILocationService,\n        private $injector: ng.auto.IInjectorService,\n        pipBreadcrumb: IBreadcrumbService,\n        $mdMedia: angular.material.IMedia,\n        $state: ng.ui.IStateService,\n        $element: ng.IAugmentedJQuery,\n    ) {\n        \"ngInject\";\n\n        // Apply class and call resize\n        $element.addClass('pip-breadcrumb');\n\n        this.config = pipBreadcrumb.config;\n\n        $rootScope.$on(BreadcrumbChangedEvent, (event: ng.IAngularEvent, config: BreadcrumbConfig) => {\n            this.onBreadcrumbChanged(event, config);\n        });\n        $rootScope.$on(BreadcrumbBackEvent, () => { this.onBreadcrumbBack(); });\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this._media = pipMedia !== undefined ? pipMedia : $mdMedia;\n    }\n\n    private onBreadcrumbChanged(event: ng.IAngularEvent, config: BreadcrumbConfig): void {\n        this.config = config;\n    }\n\n    private onBreadcrumbBack(): void {\n        let items: BreadcrumbItem[] = this.config.items;\n        // Go to the last breadcrumb item\n        if (_.isArray(items) && items.length > 0) {\n            let item: BreadcrumbItem = items[items.length - 1];\n            if (_.isFunction(item.click)) {\n                item.click(item);\n            } else {\n                this.$window.history.back();\n            }\n        } else {\n            this.$window.history.back();\n        }\n    }\n\n    public onClick(item: BreadcrumbItem): void {\n        if (_.isFunction(item.click)) {\n            item.click(item);\n        }\n    }\n\n    public openSearch(): void {\n        this.$rootScope.$broadcast(OpenSearchEvent);\n    }\n\n    public actionsVisible(item: BreadcrumbItem): boolean {\n\n        return angular.isArray(item.subActions) && item.subActions.length > 1;\n    }\n\n    public onOpenMenu($mdOpenMenu: Function, event: Event): void {\n        this.originatorEv = event;\n        $mdOpenMenu(this.originatorEv);\n    }\n\n    public onSubActionClick(action: SimpleActionItem): void {\n        if (!action || action.divider) {\n            return;\n        }\n\n        if (_.isFunction(action.click)) {\n            action.click(action);\n            return;\n        }\n\n        if (action.href) {\n            this.$window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            this.$location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if (this.$injector.has('$state')) {\n                let _state: angular.ui.IStateService = this.$injector.get('$state') as ng.ui.IStateService\n                _state.go(action.state, action.stateParams);\n            }\n            return;\n        }\n\n        if (action.event) {\n            this.$rootScope.$broadcast(action.event);\n            this.originatorEv = null;\n        } else {\n            // Otherwise raise notification\n            this.$rootScope.$broadcast('pipActionClicked', action.name);\n            this.originatorEv = null;\n        }\n    }\n}\n\nconst breadcrumb: ng.IComponentOptions = {\n    bindings: {},\n    templateUrl: 'breadcrumb/Breadcrumb.html',\n    controller: BreadcrumbController\n}\n\nangular\n    .module('pipBreadcrumb')\n    .component('pipBreadcrumb', breadcrumb);","import { SimpleActionItem } from '../actions/IActionsService';\nexport class BreadcrumbItem {\n    title: string = null;\n    click?: (item: BreadcrumbItem) => void = null;   \n    subActions?: SimpleActionItem[] = null; \n}\n\nexport class BreadcrumbConfig {\n    text: string;\n    items: BreadcrumbItem[];\n    criteria: string;\n}\n","import { BreadcrumbItem, BreadcrumbConfig } from './BreadcrumbConfig';\nimport { IBreadcrumbService, IBreadcrumbProvider } from './IBreadcrumbService';\n\nexport const BreadcrumbChangedEvent: string = \"pipBreadcrumbChanged\";\nexport const BreadcrumbBackEvent: string = \"pipBreadcrumbBack\";\n\nclass BreadcrumbService implements IBreadcrumbService {\n    private _config: BreadcrumbConfig;\n\n    public constructor(\n        private $rootScope: ng.IRootScopeService,\n        config: BreadcrumbConfig\n    ) {\n        this._config = config;\n    }\n\n    public get config() {\n        return this._config;\n    }\n\n    public get text(): string {\n        return this._config.text;\n    }\n\n    public set text(value: string) {\n        this._config.text = value;\n        this._config.items = null;\n\n        this.sendConfigEvent();\n    }\n\n    public get items(): BreadcrumbItem[] {\n        return this._config.items;\n    }\n\n    public set items(value: BreadcrumbItem[]) {\n        this._config.text = null;\n        this._config.items = value;\n\n        this.sendConfigEvent();\n    }\n\n    public get criteria(): string {\n        return this._config.criteria;\n    }\n\n    public set criteria(value: string) {\n        this._config.criteria = value;\n        this.sendConfigEvent();\n    }\n\n    public showText(text: string, criteria?: string): void {\n        this._config.text = text;\n        this._config.items = null;\n        this._config.criteria = criteria;\n        this.sendConfigEvent();\n    }\n\n    public showItems(items: BreadcrumbItem[], criteria?: string): void {\n        this._config.items = items || [];\n        this._config.text = null;\n        this._config.criteria = criteria;\n        this.sendConfigEvent();\n    }\n\n    public sendConfigEvent() {\n        this.$rootScope.$broadcast(BreadcrumbChangedEvent, this._config);\n    }\n}\n\n\nclass BreadcrumbProvider implements IBreadcrumbProvider, ng.IServiceProvider {\n    private _config: BreadcrumbConfig = new BreadcrumbConfig();\n    private _service: BreadcrumbService;\n\n    public get text(): string {\n        return this._config.text;\n    }\n\n    public set text(value: string) {\n        this._config.text = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService): IBreadcrumbService {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new BreadcrumbService($rootScope, this._config);\n\n        return this._service;\n    }\n}\n\n\nangular\n    .module('pipBreadcrumb')\n    .provider('pipBreadcrumb', BreadcrumbProvider);\n","angular.module('pipBreadcrumb', ['ngMaterial', 'pipNav.Templates', 'pipNav.Translate']);\n\nimport './Breadcrumb';\nimport './BreadcrumbService';\n\nexport * from './BreadcrumbService';\n\n\n","import { INavService } from './INavService'\nimport { INavIconService } from '../icon/INavIconService';\nimport { INavMenuService } from '../menu/INavMenuService';\nimport { INavHeaderService } from '../header/INavHeaderService';\nimport { IBreadcrumbService } from '../breadcrumb/IBreadcrumbService';\nimport { ISearchService } from '../search/ISearchService';\nimport { IActionsService } from '../actions/IActionsService';\nimport { IAppBarService } from '../appbar/IAppBarService';\nimport { ISideNavService } from '../sidenav/ISideNavService';\n\nclass NavService implements INavService {\n\n    public appbar: IAppBarService;\n    public icon: INavIconService;\n    public breadcrumb: IBreadcrumbService;\n    public actions: IActionsService;\n    public search: ISearchService;\n    public sidenav: ISideNavService;\n    public header: INavHeaderService;\n    public menu: INavMenuService;\n\n    public constructor($injector: ng.auto.IInjectorService) {\n        \"ngInject\";\n\n        this.appbar = $injector.has('pipAppBar') ? <IAppBarService>$injector.get('pipAppBar') : null;\n        this.icon = $injector.has('pipNavIcon') ? <INavIconService>$injector.get('pipNavIcon') : null;\n        this.breadcrumb = $injector.has('pipBreadcrumb') ? <IBreadcrumbService>$injector.get('pipBreadcrumb') : null;\n        this.actions = $injector.has('pipActions') ? <IActionsService>$injector.get('pipActions') : null;\n        this.search = $injector.has('pipSearch') ? <ISearchService>$injector.get('pipSearch') : null;\n        this.sidenav = $injector.has('pipSideNav') ? <ISideNavService>$injector.get('pipSideNav') : null;\n        this.header = $injector.has('pipNavHeader') ? <INavHeaderService>$injector.get('pipNavHeader') : null;\n        this.menu = $injector.has('pipNavMenu') ? <INavMenuService>$injector.get('pipNavMenu') : null;\n    }\n\n    public reset() {\n        // Reset appbar\n        if (this.appbar) {\n            this.appbar.show();\n        }\n\n        // Reset icon\n        if (this.icon) {\n            this.icon.showMenu();\n        }\n\n        // Reset breadcrumb\n        if (this.breadcrumb) {\n            this.breadcrumb.showText(null);\n        }\n\n        // Reset actions\n        if (this.actions) {\n            this.actions.show();\n        }\n\n        // Reset search\n        if (this.search) {\n            this.search.set(null);\n        }\n\n        if (this.sidenav) {\n            this.sidenav.show();\n        }\n\n    }\n}\n\nangular\n    .module('pipNavService', [])\n    .service('pipNavService', NavService);","{\n\n    function translateFilter($injector: ng.auto.IInjectorService) {\n        \"ngInject\";\n\n        let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') \n            ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n\n        return function (key: string) {\n            return pipTranslate ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular\n        .module('pipNav.Translate', [])\n        .filter('translate', translateFilter);\n\n}\n\n","{\n    class DropdownController {\n        private _pipTranslate: pip.services.ITranslateService;\n        private _pipTheme: pip.themes.IThemeService;\n        private _pipMedia: pip.layouts.IMediaService;\n\n        public themeClass: string;\n        public media: any;\n        public actions: any[]; // string or array\n        public activeIndex: number;\n        public selectedIndex: number;\n        public currentTheme: string;\n\n        public ngDisabled: Function;\n        public showDropdown: Function;\n        public select: any;\n        public pipChange: Function;\n\n        constructor(\n            private $scope: angular.IScope,\n            private $timeout: ng.ITimeoutService,\n            $element: ng.IAugmentedJQuery,\n            $attrs: ng.IAttributes,\n            $injector: ng.auto.IInjectorService,\n            $log: ng.ILogService,\n            $rootScope: ng.IRootScopeService,\n            $mdMedia: angular.material.IMedia,\n\n        ) {\n            \"ngInject\";\n\n            this._pipTheme = $injector.has('pipTheme') ? <pip.themes.IThemeService>$injector.get('pipTheme') : null;\n            this._pipMedia = $injector.has('pipMedia') ? <pip.layouts.IMediaService>$injector.get('pipMedia') : null;\n\n            if (this._pipTheme) {\n                this.currentTheme = this._pipTheme.theme;\n            } else if ($rootScope['$theme']) {\n                this.currentTheme = $rootScope['$theme'];\n            }\n\n            this.themeClass = ($attrs['class'] || '') + ' md-' + this.currentTheme + '-theme';\n\n            //pipAssert.isArray($scope.actions, 'pipDropdown: pip-actions attribute should take an array, but take ' + typeof $scope.actions);\n            this.media = !_.isUndefined(this._pipMedia) ? this._pipMedia : $mdMedia;\n            this.actions = (this.actions && _.isArray(this.actions)) ? this.actions : [];\n            this.activeIndex = this.activeIndex || 0;\n        }\n\n        public disabled(): boolean {\n            if (this.ngDisabled) {\n                return this.ngDisabled();\n            } else {\n                return false;\n            }\n        }\n\n        public onSelect(index: number): void {\n            this.activeIndex = index;\n            if (this.select) {\n                this.select(this.actions[index], this.activeIndex);\n            }\n\n            if (this.pipChange) {\n                this.$timeout(() => {\n                    this.pipChange();\n                });\n            }\n        }\n\n        public show(): boolean {\n            let result: boolean;\n            if (this.showDropdown()) {\n                return !!this.showDropdown();\n            } else {\n                return true;\n            }\n        }\n\n    }\n\n\n    interface IDropdownBindings {\n        [key: string]: any;\n\n        ngDisabled: any,\n        actions: any,\n        showDropdown: any,\n        activeIndex: any,\n        select: any,\n        pipChange: any\n    }\n\n    const DropdownBindings: IDropdownBindings = {\n        ngDisabled: '&',\n        actions: '=pipActions',\n        showDropdown: '&pipShow',\n        activeIndex: '=pipActiveIndex',\n        select: '=pipDropdownSelect',\n        pipChange: '&'\n    }\n\n    class DropdownChanges implements ng.IOnChangesObject, IDropdownBindings {\n        [key: string]: ng.IChangesObject<any>;\n\n        ngDisabled: ng.IChangesObject<Function>;\n        actions: ng.IChangesObject<any>;\n        showDropdown: ng.IChangesObject<Function>;\n        activeIndex: ng.IChangesObject<number>;\n        select: ng.IChangesObject<any>;\n        pipChange: ng.IChangesObject<Function>;\n    }\n\n    const dropdown: ng.IComponentOptions = {\n        bindings: DropdownBindings,\n        templateUrl: 'dropdown/Dropdown.html',\n        controller: DropdownController\n    };\n\n    angular\n        .module('pipDropdown', ['pipNav.Templates'])\n        .component('pipDropdown', dropdown);\n\n}","import { INavHeaderService } from \"./INavHeaderService\";\nimport { NavHeaderConfig } from \"./NavHeaderConfig\";\n\n{\n    class NavHeaderController {\n        private cleanupNavHeaderChanged: Function;\n        private cleanupSideNavStateChanged: Function;\n\n        public title: string;\n        public subtitle: string;\n        public imageUrl: string;\n        public imageCss: string;\n        public image: any;\n        public imageBlock: any;\n        public loadedDefaultImage: boolean;\n        public showHeader: boolean;\n\n        constructor(\n            private $element: ng.IAugmentedJQuery,\n            private $scope: angular.IScope,\n            $log: ng.ILogService,\n            private $rootScope: ng.IRootScopeService,\n            private $timeout: ng.ITimeoutService,\n            private pipNavHeader: INavHeaderService,\n            navConstant: any\n\n        ) {\n            \"ngInject\";\n\n            // Apply class and call resize\n            $element.addClass('pip-sticky-nav-header');\n\n            this.initImage();\n\n            this.cleanupNavHeaderChanged = $rootScope.$on('pipNavHeaderChanged', ($event: ng.IAngularEvent, config: NavHeaderConfig) => {\n                this.onNavHeaderChanged($event, config)\n            });\n            this.cleanupSideNavStateChanged = $rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: any) => { //navState\n                this.onStateChanged($event, state)\n            });\n\n        }\n\n        public $onDestroy() {\n\n            if (angular.isFunction(this.cleanupNavHeaderChanged)) {\n                this.cleanupNavHeaderChanged();\n            }\n            if (angular.isFunction(this.cleanupSideNavStateChanged)) {\n                this.cleanupSideNavStateChanged();\n            }\n        }\n\n        private initImage() {\n            this.imageBlock = this.$element.find('.pip-sticky-nav-header-user')\n\n            this.$timeout(() => {\n                this.image = this.$element.find('.pip-sticky-nav-header-user-image');\n\n                if (this.image[0]) {\n                    this.image[0].onload = (() => this.onImageLoad());\n\n                    // ($event: HTMLElement, erroev: Event): any =>  {\n                    //     this.onImageLoad($event);\n                    //     return null;\n                    // }\n                    this.image[0].onerror = (() => this.onImageError());\n                    // ($event: ng.IAngularEvent) => {\n                    //     this.onImageError($event);\n                    // }\n                } else {\n                    this.image.onload = (() => this.onImageLoad());\n                    this.image.onerror = (() => this.onImageError());\n                }\n\n                this.onNavHeaderChanged(null, this.pipNavHeader.config);\n            }, 20);\n        }\n\n        private initHeader() {\n            if (!this.pipNavHeader.config) return;\n\n            this.title = this.pipNavHeader.config.title;\n            this.subtitle = this.pipNavHeader.config.subtitle;\n            this.imageUrl = this.pipNavHeader.config.imageUrl;\n            this.imageCss = this.pipNavHeader.config.imageCss;\n        }\n\n        // // When image is loaded resize/reposition it\n        // private onImageLoad($event) {\n        //     let image: ng.IAugmentedJQuery = $($event.target);\n        //     this.setImageMarginCSS(image);\n        // };\n\n        // private onImageError($event) {\n        //     if (this.loadedDefaultImage) return;\n        //     this.$scope.$apply(() => {\n        //         this.setImage(this.pipNavHeader.config, true);\n        //     });\n        // };\n        // When image is loaded resize/reposition it\n        private onImageLoad() {\n            this.setImageMarginCSS(this.image);\n        };\n\n        private onImageError() {\n            if (this.loadedDefaultImage) return;\n            this.$scope.$apply(() => {\n                this.setImage(this.pipNavHeader.config, true);\n            });\n        };\n\n        private onStateChanged(event: ng.IAngularEvent, state: any) { // navState\n            if (state === undefined) return;\n\n            if (state.id == 'toggle') {\n                this.$timeout(() => {\n                    this.showHeader = state && state.id == 'toggle';\n                }, 400);\n            } else {\n                this.showHeader = false;\n            }\n        }\n\n        private setImageMarginCSS(image: ng.IAugmentedJQuery) { //image[0]\n            var cssParams = {},\n                containerWidth = this.imageBlock.width ? this.imageBlock.width() : this.imageBlock.clientWidth,\n                containerHeight = this.imageBlock.height ? this.imageBlock.height() : this.imageBlock.clientHeight,\n                imageWidth = image[0]['naturalWidth'] || image.width,\n                imageHeight = image[0]['naturalHeight'] || image.height,\n                margin = 0;\n\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n                cssParams['margin-left'] = '' + margin + 'px';\n                cssParams['height'] = '' + containerHeight + 'px';\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px';\n                cssParams['margin-top'] = '';\n            } else {\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n                cssParams['margin-top'] = '' + margin + 'px';\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px';\n                cssParams['width'] = '' + containerWidth + 'px';\n                cssParams['margin-left'] = '';\n            }\n\n            image.css(cssParams);\n        };\n\n        private setImage(config, loadError: boolean) {\n            if (!config) return;\n\n            var url: string;\n\n            if (!loadError && !!config.imageUrl && !this.loadedDefaultImage) {\n                url = config.imageUrl;\n            } else {\n                this.loadedDefaultImage = true;\n                url = config.defaultImageUrl;\n            }\n\n            if (url && this.image) {\n                this.image.attr('src', url);\n            } else {\n                this.imageBlock.css('display', 'none');\n            }\n        }\n\n        private onNavHeaderChanged($event: ng.IAngularEvent, config: NavHeaderConfig) {\n            if (!config) return;\n            this.setImage(config, false)\n\n            this.title = config.title;\n            this.subtitle = config.subtitle;\n            this.imageUrl = config.imageUrl;\n            this.imageCss = config.imageCss;\n        }\n\n        public onUserClick() {\n            this.$rootScope.$broadcast('pipNavUserClicked'); // todo\n        }\n\n    }\n\n    const navHeader: ng.IComponentOptions = {\n        templateUrl: 'header/NavHeader.html',\n        controller: NavHeaderController\n    };\n\n    angular\n        .module('pipNavHeader')\n        .component('pipNavHeader', navHeader);\n\n}","export class NavHeaderConfig {\n    // Image url\n    public imageUrl: string;\n    // Image url\n    public defaultImageUrl: string;\n    // Title\n    public title: string;\n    // Subtitle\n    public subtitle: string;\n    // image styles\n    public imageCss: string;\n    // Handle header click event\n    click: () => void;\n    // Event name\n    event: string\n};","import { NavHeaderConfig } from \"./NavHeaderConfig\";\nimport { INavHeaderService, INavHeaderProvider } from \"./INavHeaderService\";\n\nexport let NavHeaderChangedEvent = 'pipNavHeaderChanged';\n\nclass NavHeaderService implements INavHeaderService {\n    private _config: NavHeaderConfig;\n\n    public constructor(config: NavHeaderConfig, private $rootScope: ng.IRootScopeService) {\n        this._config = config;\n    }\n\n    public get config(): NavHeaderConfig {\n        return this._config;\n    }\n\n    public get title(): string {\n        return this._config.title;\n    }\n\n    public set title(value: string) {\n        this._config.title = value;\n        this.sendConfigEvent();\n    }\n\n    public get subtitle(): string {\n        return this._config.subtitle;\n    }\n\n    public set subtitle(value: string) {\n        this._config.subtitle = value;\n        this.sendConfigEvent();\n    }\n\n    public get imageUrl(): string {\n        return this._config.imageUrl;\n    }\n\n    public set imageUrl(value: string) {\n        this._config.imageUrl = value;\n        this.sendConfigEvent();\n    }\n\n    public get click(): () => void {\n        return this._config.click;\n    }\n\n    public set click(value: () => void) {\n        this._config.click = value;\n        this.sendConfigEvent();\n    }\n\n    public get event(): string {\n        return this._config.event;\n    }\n\n    public set event(value: string) {\n        this._config.event = value;\n        this.sendConfigEvent();\n    }\n\n    public show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\n        this._config.title = title;\n        this._config.subtitle = subtitle;\n        this._config.imageUrl = imageUrl;\n\n        if (_.isFunction(callbackOrEvent)) {\n            this._config.click = callbackOrEvent;\n        } else {\n            this._config.click = null;\n        }\n        if (_.isString(callbackOrEvent)) {\n            this._config.event = callbackOrEvent;\n        } else {\n            this._config.event = null;\n        }\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.title = null;\n        this._config.subtitle = null;\n        this._config.imageUrl = null;\n        this._config.click = null;\n        this._config.event = null;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this.$rootScope.$emit(NavHeaderChangedEvent, this._config);\n    }\n}\n\nclass NavHeaderProvider implements INavHeaderProvider {\n    private _config: NavHeaderConfig = new NavHeaderConfig();\n    private _service: NavHeaderService;\n\n    public get config(): NavHeaderConfig {\n        return this._config;\n    }\n\n    public set config(value: NavHeaderConfig) {\n        this._config = value || new NavHeaderConfig();\n    }\n\n    public get defaultImageUrl(): string {\n        return this._config.defaultImageUrl;\n    }\n\n    public set defaultImageUrl(value: string) {\n        this._config.defaultImageUrl = value;\n    }\n\n    public get title(): string {\n        return this._config.title;\n    }\n\n    public set title(value: string) {\n        this._config.title = value;\n    }\n\n    public get subtitle(): string {\n        return this._config.subtitle;\n    }\n\n    public set subtitle(value: string) {\n        this._config.subtitle = value;\n    }\n\n    public get imageUrl(): string {\n        return this._config.imageUrl;\n    }\n\n    public set imageUrl(value: string) {\n        this._config.imageUrl = value;\n    }\n\n    public get click(): () => void {\n        return this._config.click;\n    }\n\n    public set click(value: () => void) {\n        this._config.click = value;\n    }\n\n    public get event(): string {\n        return this._config.event;\n    }\n\n    public set event(value: string) {\n        this._config.event = value;\n    }\n\n    public set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\n        this._config.title = title;\n        this._config.subtitle = subtitle;\n        this._config.imageUrl = imageUrl;\n\n        if (_.isFunction(callbackOrEvent)) {\n            this._config.click = callbackOrEvent;\n        } else {\n            this._config.click = null;\n        }\n        if (_.isString(callbackOrEvent)) {\n            this._config.event = callbackOrEvent;\n        } else {\n            this._config.event = null;\n        }\n    }\n\n    public clear(): void {\n        this._config.title = null;\n        this._config.subtitle = null;\n        this._config.imageUrl = null;\n        this._config.click = null;\n        this._config.event = null;\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavHeaderService(this._config, $rootScope);\n\n        return this._service;\n    }\n\n}\n\n\nangular\n    .module('pipNavHeader')\n    .provider('pipNavHeader', NavHeaderProvider);\n","angular.module('pipNavHeader', ['ngMaterial', 'pipNav.Templates']);\n\nimport './NavHeaderService';\nimport './NavHeader';\n\nexport * from './NavHeaderService';","import { OpenSideNavEvent } from '../sidenav/SideNavService';\nimport { NavIconConfig } from './NavIconConfig';\nimport { INavIconService } from './INavIconService';\nimport { NavIconClickedEvent, NavIconChangedEvent } from './NavIconService';\n\ninterface INavIconBindings {\n    [key: string]: any;\n\n    type: any;\n    imageUrl: any;\n    icon: any;\n}\n\nconst NavIconBindings: INavIconBindings = {\n    type: '<?pipType',\n    imageUrl: '<?pipImageUrl',\n    icon: '<?pipIcon'\n}\n\nclass NavIconChanges implements ng.IOnChangesObject, INavIconBindings {\n    [key: string]: ng.IChangesObject<any>;\n    // Not one way bindings\n\n    type: ng.IChangesObject<string>;\n    imageUrl: ng.IChangesObject<string>;\n    icon: ng.IChangesObject<string>;\n}\n\nclass NavIconController implements INavIconBindings {\n    private clearFn: Function;\n\n    public config: NavIconConfig;\n    public type: string;\n    public imageUrl: string;\n    public icon: string;\n\n    constructor(\n        private $rootScope: ng.IRootScopeService,\n        private $window: ng.IWindowService,\n        $element: ng.IAugmentedJQuery,\n        $scope: angular.IScope,\n        $log: ng.ILogService,\n        pipNavIcon: INavIconService\n    ) {\n        \"ngInject\";\n\n\n        // Apply class and call resize\n        $element.addClass('pip-nav-icon');\n\n        this.config = pipNavIcon.config;\n\n        this.clearFn = $rootScope.$on('pipNavIconChanged', (event: ng.IAngularEvent, config: NavIconConfig) => {\n            this.onNavIconChanged(event, config)\n        });\n\n    }\n\n    public $onInit() {\n        if (this.type) {\n            this.config.type = this.type;\n        }\n        if (this.imageUrl) {\n            this.config.imageUrl = this.imageUrl;\n        }\n        if (this.icon) {\n            this.config.icon = this.icon;\n        }        \n    }\n\n    public $onDestroy() {\n        if (_.isFunction(this.clearFn)) {\n            this.clearFn();\n        }\n    }\n\n    public onNavIconChanged(event: ng.IAngularEvent, config: NavIconConfig): void {\n        this.config = config;\n    }\n\n    public onNavIconClick(): void {\n        if (_.isFunction(this.config.click)) {\n            // Execute nav icon callback\n            this.config.click();\n        } else if (this.config.event) {\n            this.$rootScope.$broadcast(this.config.event);\n        } else if (this.config.type == 'menu') {\n            this.$rootScope.$broadcast(OpenSideNavEvent);\n        } else if (this.config.type == 'back') {\n            this.$window.history.back();\n        } else {\n            this.$rootScope.$broadcast(NavIconClickedEvent);\n        }\n    }\n\n}\n\nconst NavIcon: ng.IComponentOptions = {\n    bindings: NavIconBindings,\n    templateUrl: 'icon/NavIcon.html',\n    controller: NavIconController\n}\n\nangular\n    .module('pipNavIcon')\n    .component('pipNavIcon', NavIcon);\n","export class NavIconConfig {\n    // Type of nav icon: 'back', 'menu', 'image' or 'none'\n    public type: string;\n    // Image url\n    public imageUrl: string;\n    // Icon name\n    public icon: string;\n    // Handle nav icon click event\n    click: () => void;\n    // Event name\n    event: string\n};","import { NavIconConfig } from './NavIconConfig';\nimport { INavIconService, INavIconProvider } from './INavIconService';\n\nexport const NavIconClickedEvent: string = 'pipNavIconClicked';\nexport const NavIconChangedEvent: string = 'pipNavIconChanged';\n\nclass NavIconService implements INavIconService {\n    private _config: NavIconConfig;\n\n    public constructor(config: NavIconConfig, private $rootScope: ng.IRootScopeService) {\n        this._config = config;\n    }\n\n    public get config(): NavIconConfig {\n        return this._config;\n    }\n\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\n        if (_.isFunction(callbackOrEvent)) {\n            this._config.click = callbackOrEvent;\n            this._config.event = null;\n        } else if (_.isString(callbackOrEvent)) {\n            this._config.click = null;\n            this._config.event = callbackOrEvent;\n        } else {\n            this._config.click = null;\n            this._config.event = null;\n        }\n    }\n\n    public showMenu(callbackOrEvent?: any): void {\n        this._config.type = 'menu';\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showIcon(icon: string, callbackOrEvent?: any): void {\n        this._config.type = 'icon';\n        this._config.icon = icon;\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showBack(callbackOrEvent?: any): void {\n        this._config.type = 'back';\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showImage(imageUrl: string, callbackOrEvent?: any): void {\n        this._config.type = 'image';\n        this._config.imageUrl = imageUrl;\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.type = 'none';\n        this.setCallbackOrEvent(null);\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this.$rootScope.$broadcast(NavIconChangedEvent, this._config);\n    }\n}\n\nclass NavIconProvider implements INavIconProvider {\n    private _config: NavIconConfig = new NavIconConfig();\n    private _service: NavIconService;\n\n    public get config(): NavIconConfig {\n        return this._config;\n    }\n\n    public set config(value: NavIconConfig) {\n        this._config = value || new NavIconConfig();\n    }\n\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\n        if (_.isFunction(callbackOrEvent))\n            this._config.click = callbackOrEvent;\n        else this._config.click = null;\n\n        if (_.isString(callbackOrEvent))\n            this._config.event = callbackOrEvent;\n        else this._config.event = null;\n    }\n\n    public setMenu(callbackOrEvent?: any): void {\n        this._config.type = 'menu';\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setIcon(icon: string, callbackOrEvent?: any): void {\n        this._config.type = 'icon';\n        this._config.icon = icon;\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setBack(callbackOrEvent?: any): void {\n        this._config.type = 'back';\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setImage(imageUrl: string, callbackOrEvent?: any): void {\n        this._config.type = 'image';\n        this._config.imageUrl = imageUrl;\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public clear(): void {\n        this._config.type = 'none';\n        this.setCallbackOrEvent(null);\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavIconService(this._config, $rootScope);\n\n        return this._service;\n    }\n     \n}\n\n\nangular\n    .module('pipNavIcon')\n    .provider('pipNavIcon', NavIconProvider);\n","angular.module('pipNavIcon', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './NavIconConfig';\nimport './INavIconService';\nimport './NavIconService';\nimport './NavIcon';\n\n\nexport * from './NavIconConfig';\nexport * from './INavIconService';\nexport * from './NavIconService';\n","﻿import './dependencies/TranslateFilter';\nimport './language/LanguagePickerDirective';\nimport './dropdown/Dropdown';\nimport './tabs/Tabs';\nimport './actions';\nimport './appbar';\nimport './search';\nimport './breadcrumb';\nimport './sidenav';\nimport './header';\nimport './menu';\nimport './icon';\nimport './common/NavService';\n\nangular\n    .module('pipNav', [\n        'pipNavService',\n        'pipDropdown',\n        'pipTabs',\n        'pipAppBar',\n        'pipSearchBar',\n        'pipNavIcon',\n        'pipBreadcrumb',\n        'pipLanguagePicker',\n        'pipActions', \n        'pipSideNav',\n        'pipNavMenu',\n        'pipNavHeader'\n    ])\n    .constant('navConstant', {\n        'TAB_BREAKPOINT': 'gt-sm',\n        'SIDENAV_CONTAINER': '.pip-main',\n        'SIDENAV_LARGE_WIDTH': 320,\n        'SIDENAV_MIDDLE_WIDTH': 240,\n        'SIDENAV_SMALL_WIDTH': 72,\n        'SIDENAV_ANIMATION_DURATION': 600\n    })\n\nexport * from './actions';\nexport * from './appbar';\nexport * from './breadcrumb';\nexport * from './search';\nexport * from './sidenav';\nexport * from './icon';\nexport * from './menu';\nexport * from './header';\nexport * from './common/INavService';\n","{\n    class LanguagePickerDirectiveController implements ILanguagePickerBindings {\n        private _translate: pip.services.ITranslateService;\n        public languages: string[] = ['en', 'ru'];\n        public value: string = null;\n\n        public constructor(\n            $element: ng.IAugmentedJQuery,\n            $injector: ng.auto.IInjectorService,\n            $rootScope: ng.IRootScopeService\n        ) {\n            \"ngInject\";\n\n            this._translate = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n\n            // Apply class and call resize\n            $element.addClass('pip-language-picker');\n\n            this.setLanguages(this.languages);\n\n            this.value = this.value  || this.languages[0];\n        }\n\n        public get language() {\n            return this._translate ? this._translate.language : null;\n        }\n\n        public setLanguages(languages: string[]): void {\n            this.languages = languages.length > 0 ? languages : ['en', 'ru'];\n        }\n\n        public onLanguageClick(language: string) {\n            if (this._translate != null) {\n                this.value = language;\n                // this.$timeout(() => {\n                this._translate.language = this.value;\n                // }, 0);\n            }\n        }\n\n    }\n\n    interface ILanguagePickerBindings {\n        [key: string]: any;\n\n        languages: any,\n        value: any\n    }\n\n    const LanguagePickerBindings: ILanguagePickerBindings = {\n        languages: '<languages',\n        value: '=?value'\n    }\n\n    const languagePickerDirective: ng.IComponentOptions = {\n        bindings: LanguagePickerBindings,\n        templateUrl: 'language/LanguagePicker.html',\n        controller: LanguagePickerDirectiveController\n    }\n\n    angular\n        .module('pipLanguagePicker', [\n            'ngMaterial', 'pipNav.Translate', 'pipNav.Templates'\n        ])\n        .component('pipLanguagePicker', languagePickerDirective);\n\n}","import { ISideNavService} from '../sidenav/ISideNavService';\nimport { INavMenuService} from './INavMenuService';\nimport { SideNavStateNames, SideNavState, SideNavConfig } from '../sidenav/SideNavState';\nimport { NavMenuConfig, NavMenuSection, NavMenuLink } from './NavMenuConfig';\n\n(() => {\n    class NavMenuController {\n        private _state: angular.ui.IStateService;\n        private _pipMedia: pip.layouts.IMediaService;\n        private _animationDuration;\n        private _pipSideNavElement: ng.IAugmentedJQuery;\n\n        public sections: NavMenuSection[];\n        public defaultIcon: string;\n        public isCollapsed: boolean;\n        public expanded: boolean;\n        public expandedButton: boolean;\n        public sideNavState: SideNavState;\n\n        constructor(\n            private $scope: angular.IScope,\n            private $window: ng.IWindowService,\n            private $location: ng.ILocationService,\n            private $rootScope: ng.IRootScopeService,\n            private $timeout: ng.ITimeoutService,\n            private pipSideNav: ISideNavService,\n            private pipNavMenu: INavMenuService,\n\n            $element: ng.IAugmentedJQuery,\n            $injector: ng.auto.IInjectorService,\n            navConstant: any\n\n        ) {\n            \"ngInject\";\n\n            this._state = $injector.has('$state') ? <angular.ui.IStateService>$injector.get('$state') : null;\n\n            this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION,\n                this._pipSideNavElement = $element.parent().parent();\n            // Apply class and call resize\n            $element.addClass('pip-sticky-nav-menu');\n\n            this.sections = this.$scope['sections'] || this.pipNavMenu.sections;\n\n            this.setCollapsible();\n\n            this.defaultIcon = this.pipNavMenu.defaultIcon;\n\n            this.onStateChanged(null, this.pipSideNav.state);\n\n            let cleanupNavMenuChanged: Function = this.$rootScope.$on('pipNavMenuChanged', ($event: ng.IAngularEvent, config: NavMenuConfig) => { //navState\n                this.onConfigChanged($event, config)\n            });\n            let cleanupSideNavStateChanged: Function = this.$rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: SideNavState) => { //navState\n                this.onStateChanged($event, state)\n            });\n\n            this.$scope.$on('$destroy', () => {\n                if (angular.isFunction(cleanupNavMenuChanged)) {\n                    cleanupNavMenuChanged();\n                }\n                if (angular.isFunction(cleanupSideNavStateChanged)) {\n                    cleanupSideNavStateChanged();\n                }\n            });\n\n        }\n\n        private setCollapsible(): void {\n            var collapsed: boolean;\n            if (angular.isFunction(this.$scope['collapsed'])) {\n                collapsed = this.$scope['collapsed']();\n            } else {\n                collapsed = this.$scope['collapsed'] !== false && this.$scope['collapsed'] !== 'false';\n            }\n\n            this.isCollapsed = collapsed;\n        }\n\n        public onExpand(): void {\n            if (!this.isCollapsed) { return }\n\n            this.expanded = !this.expanded;\n\n            if (this.expanded) {\n                this._pipSideNavElement.removeClass('pip-sticky-nav-small');\n            } else {\n                this._pipSideNavElement.addClass('pip-sticky-nav-small');\n            }\n            this.$rootScope.$emit('pipNavExpanded', this.expanded);\n        }\n\n        public isHidden(item: NavMenuLink): boolean {\n            return item && item.access && !item.access(item);\n        }\n\n        public isSectionEmpty(linkCollection: NavMenuLink[]): boolean {\n            var result = true;\n            _.each(linkCollection, (link: NavMenuLink) => {\n                if (!this.isHidden(link)) {\n                    result = false;\n                }\n            });\n\n            return result;\n        }\n\n        private onConfigChanged($event: ng.IAngularEvent, config: NavMenuConfig): void {\n            if (!config) return;\n            this.sections = config.sections;\n        }\n\n        private onStateChanged(event: ng.IAngularEvent, state: SideNavState): void {\n            // SS> You shall not set it into the menu state. Instead it shall be controlled by the state of Sidenav\n            if (!state) return;\n\n            this.isCollapsed = state.expand;\n            this.expanded = state.isExpanded;\n            this.expandedButton = state.expandedButton;\n\n            this.sideNavState = state;\n        }\n\n        public isActive(link: NavMenuLink): boolean {\n            if (link.parentState) {\n\n                if (this._state != null && this._state.includes(link.parentState)) {\n                    return true;\n                }\n            } else if (link.state) {\n                if (this._state != null && this._state.includes(link.state)) {\n                    return true;\n                }\n            } else if (link.href) {\n                if (link.href.split('?')[0] === this.$window.location.href.split('?')[0]) {\n                    return true;\n                }\n            } else if (link.url) {\n                if (link.url.split(/[\\s/?]+/)[1] === this.$location.url().split(/[\\s/?]+/)[1]) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        public clickLink(event: ng.IAngularEvent, link: NavMenuLink): void {\n            event.stopPropagation();\n\n            if (!link) {\n                this.pipSideNav.close();\n\n                return;\n            }\n\n            if (link.href) {\n                if (link.href.split('?')[0] === this.$window.location.href.split('?')[0]) {\n                    this.pipSideNav.close();\n\n                    return;\n                }\n\n                this.pipSideNav.close();\n                this.$timeout(() => {\n                    this.$window.location.href = link.href;\n                }, this._animationDuration);\n\n                return;\n            } else if (link.url) {\n                if (link.url.split(/[\\s/?]+/)[1] === this.$location.url().split(/[\\s/?]+/)[1]) {\n                    this.pipSideNav.close();\n                    return;\n                }\n\n                this.pipSideNav.close();\n                this.$timeout(() => {\n                    this.$location.url(link.url);\n                }, this._animationDuration);\n\n                return;\n            } else if (link.state) {\n                if (this._state != null && this._state.current.name === link.state) {\n                    this.pipSideNav.close();\n\n                    return;\n                }\n\n                this.pipSideNav.close();\n                this.$timeout(() => {\n                    this._state.go(link.state, link.stateParams);\n                }, this._animationDuration);\n\n                return;\n            } else if (link.event) {\n                this.$rootScope.$broadcast(link.event, link);\n            }\n\n            this.pipSideNav.close();\n        }\n    }\n\n    interface INavMenuBindings {\n        [key: string]: any;\n        sections: any,\n        collapsed: any\n    }\n\n    const NavMenuBindings: INavMenuBindings = {\n        sections: '=?pipSections',\n        collapsed: '=?pipCollapsed'\n    };\n\n    function navMenuDirective() {\n        return {\n            restrict: 'EA',\n            scope: NavMenuBindings,\n            replace: false,\n            templateUrl: 'menu/NavMenu.html',\n            controller: NavMenuController,\n            controllerAs: '$ctrl'\n        };\n    }\n\n    angular\n        .module('pipNavMenu')\n        .directive('pipNavMenu', navMenuDirective);\n\n})();","import { NavMenuConfig, NavMenuSection } from './NavMenuConfig';\nimport { INavMenuService, INavMenuProvider } from './INavMenuService';\n\nexport const NavMenuChangedEvent = 'pipNavMenuChanged';\n\nclass NavMenuService implements INavMenuService {\n    private _config: NavMenuConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: NavMenuConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get sections(): NavMenuSection[] {\n        return this._config.sections;\n    }\n\n    public set sections(value: NavMenuSection[]) {\n        this._config.sections = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get defaultIcon(): string {\n        return this._config.defaultIcon;\n    }\n\n    public updateBadgeStyle(link: string, style: string): void {\n        if (link == null || !_.isString(style)) return;\n\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                if (l.name == link)\n                    l.badgeStyle = style;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public set defaultIcon(value: string) {\n        this._config.defaultIcon = value;\n        this.sendChangeEvent();\n    }\n\n    public updateCount(link: string, count: number): void {\n        if (link == null || !_.isNumber(count)) return;\n\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                if (l.name == link)\n                    l.count = count;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public clearCounts(): void {\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                l.count = null;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    private sendChangeEvent() {\n        this._rootScope.$emit(NavMenuChangedEvent, this._config);\n    }\n}\n\nclass NavMenuProvider implements INavMenuProvider {\n    private _config: NavMenuConfig = {\n        sections: [],\n        defaultIcon: 'icons:folder'\n    };\n    private _service: NavMenuService;\n\n    public get sections(): NavMenuSection[] {\n        return this._config.sections;\n    }\n\n    public set sections(value: NavMenuSection[]) {\n        this._config.sections = value || [];\n    }\n\n    public get defaultIcon(): string {\n        return this._config.defaultIcon;\n    }\n\n    public set defaultIcon(value: string) {\n        this._config.defaultIcon = value;\n    }\n\n    public $get($rootScope) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavMenuService(this._config, $rootScope);\n\n        return this._service;\n    }\n}\n\nangular\n    .module('pipNavMenu')\n    .provider('pipNavMenu', NavMenuProvider);\n","angular.module('pipNavMenu', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './NavMenuService';\nimport './NavMenu';","import { SearchConfig } from './SearchConfig';\nimport { ISearchService } from './ISearchService';\nimport { OpenSearchEvent, CloseSearchEvent, SearchChangedEvent, SearchActivatedEvent } from './SearchService';\n\nclass SearchBarController {\n    private clearFn: Function;\n\n    public config: SearchConfig;\n    public enabled: boolean = false;\n    public search: any = { text: '' };\n\n    public constructor(\n        private $element: ng.IAugmentedJQuery,\n        private $rootScope: ng.IRootScopeService,\n        pipSearch: ISearchService\n    ) {\n        \"ngInject\";\n\n        // Apply class and call resize\n        $element.addClass('pip-search-bar');\n\n        this.config = pipSearch.config;\n        this.stateChange();\n        this.clearFn = $rootScope.$on(SearchChangedEvent, (event: ng.IAngularEvent, config: SearchConfig) => {\n            this.onSearchChanged(event, config);\n        });\n    }\n\n    public $onDestroy() {\n        if (_.isFunction(this.clearFn)) {\n            this.clearFn();\n        }\n    }\n\n    private stateChange(): void {\n        if (this.enabled) {\n            this.$element.addClass('w-stretch');\n            this.$element.parent().addClass('pip-search-active');\n\n        } else {\n            this.$element.removeClass('w-stretch');\n            this.$element.parent().removeClass('pip-search-active');\n        }\n    }\n\n    private onSearchChanged(event: ng.IAngularEvent, config: SearchConfig): void {\n        this.config = config;\n        this.enabled = false;\n        this.search.text = '';\n        this.stateChange();\n    }\n\n    private focusText(): void {\n        setTimeout(() => {\n            let element: JQuery = $('.pip-search-text');\n            if (element.length > 0)\n                element.focus();\n        }, 0);\n    }\n\n    public enable(): void {\n        this.search.text = this.config.criteria;\n        this.enabled = true;\n        this.focusText();\n        this.stateChange();\n    }\n\n    public onClick(): void {\n        let search = this.search.text;\n\n        this.search.text = '';\n        this.enabled = false;\n        this.stateChange();\n\n        if (this.config.callback) {\n            this.config.callback(search);\n        } else {\n            this.$rootScope.$broadcast(SearchActivatedEvent, search);\n        }\n    }\n\n    public clear(): void {\n        if (this.search.text) {\n            this.search.text = '';\n            this.focusText();\n        } else {\n            this.enabled = false;\n            this.stateChange();\n            this.onClick();\n        }\n    }\n\n    public onKeyDown(event: KeyboardEvent): void {\n        // Enter pressed\n        if (event.keyCode === 13)\n            this.onClick();\n        // ESC pressed\n        else if (event.keyCode === 27) {\n            this.enabled = false;\n            this.stateChange();\n        }\n    }\n}\n\nconst SearchBar: ng.IComponentOptions = {\n    templateUrl: 'search/SearchBar.html',\n    controller: SearchBarController\n}\n\nangular\n    .module('pipSearchBar')\n    .component('pipSearchBar', SearchBar);\n","export class SearchConfig {\n    // Search visible\n    public visible: boolean;\n    // Search criteria\n    public criteria: string;\n    // Custom search parameters\n    public params: any;\n    // History for search autocomplete\n    public history: string[];\n    // Callback for search\n    callback: (criteria: string) => void;\n}","import { SearchConfig } from './SearchConfig';\nimport { ISearchProvider, ISearchService } from './ISearchService';\n\nexport const OpenSearchEvent = 'pipOpenSearch';\nexport const CloseSearchEvent = 'pipCloseSearch';\nexport const SearchChangedEvent = 'pipSearchChanged';\nexport const SearchActivatedEvent = 'pipSearchActivated';\n\nclass SearchService implements ISearchService {\n    private _config: SearchConfig;\n\n    public constructor(\n        config: SearchConfig,\n        private $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n\n        $rootScope.$on(OpenSearchEvent, () => { this.open });\n        $rootScope.$on(CloseSearchEvent, () => { this.close });\n    }\n\n    public get config(): SearchConfig {\n        return this._config;\n    }\n\n    public get criteria(): string {\n        return this._config.criteria;\n    }\n\n    public set criteria(value: string) {\n        this._config.criteria = value;\n        this.sendConfigEvent();\n    }\n\n    public get params(): any {\n        return this._config.params;\n    }\n\n    public set params(value: any) {\n        this._config.params = value;\n        this.sendConfigEvent();\n    }\n\n    public get history(): string[] {\n        return this._config.history;\n    }\n\n    public set history(value: string[]) {\n        this._config.history = value;\n        this.sendConfigEvent();\n    }\n\n    public get callback(): (criteria: string) => void {\n        return this._config.callback;\n    }\n\n    public set callback(value: (criteria: string) => void) {\n        this._config.callback = value;\n        this.sendConfigEvent();\n    }\n\n    public set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void {\n        this._config.callback = callback;\n        this._config.criteria = criteria;\n        this._config.params = params;\n        this._config.history = history;\n        this.sendConfigEvent();\n    }\n\n    public clear(): void {\n        this._config.callback = null;\n        this._config.criteria = null;\n        this._config.params = null;\n        this.sendConfigEvent();\n    }\n\n    public open(): void {\n        this._config.visible = true;\n        this.sendConfigEvent();\n    }\n\n    public close(): void {\n        this._config.visible = false;\n        this.sendConfigEvent();\n    }\n\n    public toggle(): void {\n        this._config.visible = !this._config.visible;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent(): void {\n        this.$rootScope.$broadcast(SearchChangedEvent, this._config);\n    }\n}\n\nclass SearchProvider implements ISearchProvider {\n    private _config: SearchConfig = new SearchConfig();\n    private _service: SearchService = null;\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SearchService(this._config, $rootScope);\n\n        return this._service;\n    }\n}\n\n\nangular.module('pipSearchBar')\n    .provider('pipSearch', SearchProvider);\n","angular.module('pipSearchBar', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './SearchConfig';\nimport './ISearchService';\nimport './SearchService';\nimport './SearchBar';\n\nexport * from './ISearchService';\n","import { ISideNavService } from './ISideNavService';\nimport { SideNavStateNames, SideNavState, SideNavStateConfig, SideNavConfig } from './SideNavState';\n\nclass SideNavController implements ISideNavBindings {\n    private _pipMedia: pip.layouts.IMediaService;\n    private _isResizing: boolean;\n    private _animationDuration: number;\n    private _mainContainer: string; // todo add  to config\n    private _bigWidth: number;\n    private _middleWidth: number;\n    private _smallWidth: number;\n    private _mediaBreakpoints: pip.layouts.MediaBreakpoints;\n    private _navState: SideNavStateConfig;\n    private cleanupMainResized: Function;\n    private cleanupSideNavState: Function;\n    private cleanupNavHeaderChanged: Function;\n    private cleanupSideNavChanged: Function;\n    private windowResize: Function;\n\n    public sidenavState: SideNavState;\n\n    constructor(\n        private $element: ng.IAugmentedJQuery,\n        $attrs: ng.IAttributes,\n        $injector: ng.auto.IInjectorService,\n        private $scope: angular.IScope,\n        private $rootScope: ng.IRootScopeService,\n        private $timeout: ng.ITimeoutService,\n        private pipSideNav: ISideNavService,\n        navConstant: any\n\n    ) {\n        \"ngInject\";\n\n        this._pipMedia = $injector.has('pipMedia') ? <pip.layouts.IMediaService>$injector.get('pipMedia') : null;\n\n        this._mainContainer = navConstant.SIDENAV_CONTAINER;\n        this._bigWidth = navConstant.SIDENAV_LARGE_WIDTH;\n        this._middleWidth = navConstant.SIDENAV_MIDDLE_WIDTH;\n        this._smallWidth = navConstant.SIDENAV_SMALL_WIDTH;\n        this._isResizing = false;\n        this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION;\n        this._navState = new SideNavStateConfig();\n        this._mediaBreakpoints = this.setBreakpoints();\n\n        // Apply class and call resize\n        this.$element.addClass('pip-sticky-sidenav');\n\n        if (this.pipSideNav.config && this.pipSideNav.config.type != 'popup') {\n            this.$timeout(() => {\n                this.setSideNaveState()\n            }, 100);\n\n            this.windowResize = _.debounce(() => { this.setSideNaveState(); }, 10);\n            this.cleanupMainResized = this.$rootScope.$on('pipMainResized', () => {\n                this.windowResize();\n            });\n            this.cleanupSideNavState = this.$rootScope.$on('pipSideNavState', ($event: ng.IAngularEvent, state: SideNavStateNames) => {\n                this.onSideNavState($event, state)\n            });\n        } else {\n            this._isResizing = false;\n            this.sidenavState = null;\n            this.$timeout(() => {\n                this.setState(SideNavStateNames.Toggle);\n            }, 100);\n        }\n\n        this.cleanupNavHeaderChanged = this.$rootScope.$on('pipNavIconClicked', () => {\n            this.onNavIconClick();\n        });\n        this.cleanupSideNavChanged = this.$rootScope.$on('pipSideNavChanged', ($event: ng.IAngularEvent, config: SideNavConfig) => { //navState\n            this.onSideNavChanged($event, config)\n        });\n\n    }\n\n    public $onDestroy() {\n        if (angular.isFunction(this.cleanupNavHeaderChanged)) {\n            this.cleanupNavHeaderChanged();\n        }\n        if (angular.isFunction(this.cleanupSideNavChanged)) {\n            this.cleanupSideNavChanged();\n        }\n        if (angular.isFunction(this.cleanupMainResized)) {\n            this.cleanupMainResized();\n        }\n        if (angular.isFunction(this.cleanupSideNavState)) {\n            this.cleanupSideNavState();\n        }\n    }\n\n    private setBreakpoints(): pip.layouts.MediaBreakpoints {\n        if (!this._pipMedia || !angular.isObject(this._pipMedia.breakpoints)) {\n            return { xs: 639, sm: 959, md: 1024, lg: 1919 };\n        } else {\n            return this._pipMedia.breakpoints;\n        }\n    }\n\n    private onSideNavChanged($event: ng.IAngularEvent, config: SideNavConfig): void {\n        if (config && config.visible) {\n            this.$element.css('display', 'block');\n        } else {\n            this.$element.css('display', 'none');\n        }\n    }\n\n    private onNavIconClick(): void {\n        this.pipSideNav.open();\n    }\n\n    private onSideNavState($event: ng.IAngularEvent, stateName: SideNavStateNames): void {\n        if (angular.isString(stateName) && this._navState[stateName] !== undefined) {\n            this.setState(stateName);\n        }\n    }\n\n    private setSideNaveState(): void {\n        if (this.pipSideNav.config && this.pipSideNav.config.type == 'popup') { return }\n\n        if (this._isResizing) {\n            this.$timeout(() => { this.setSideNaveState() }, this._animationDuration);\n\n            return;\n        }\n\n        let mainWidth: number = $(this._mainContainer).innerWidth();\n        let sideNavWidth: number = $('.pip-sticky-sidenav').innerWidth();\n        let currentWidth: number = sideNavWidth ? sideNavWidth + 2 : 0; // add border width\n\n        if (mainWidth + currentWidth < this._mediaBreakpoints.sm) {\n            this.setState(SideNavStateNames.Toggle);\n            return;\n        }\n        if (mainWidth + currentWidth < this._mediaBreakpoints.md) {\n            this.setState(SideNavStateNames.Small);\n            return;\n        }\n        if (mainWidth + currentWidth < this._mediaBreakpoints.lg) {\n            this.setState(SideNavStateNames.Large);\n            return;\n        }\n        this.setState(SideNavStateNames.XLarge);\n    }\n\n    private setState(stateName: SideNavStateNames) {\n        if (this._isResizing) return;\n        if (this.sidenavState && this.sidenavState.id == stateName) return;\n\n        if (stateName != SideNavStateNames.Toggle) {\n            this.$element.removeClass('sidenav-mobile');\n        }\n\n        if (stateName != SideNavStateNames.Small) {\n            this.$element.removeClass('pip-sticky-nav-small');\n        }\n\n        if (stateName != SideNavStateNames.XLarge) {\n            this.$element.removeClass('sidenav-desktop');\n        }\n\n        if (stateName != SideNavStateNames.Large) {\n            this.$element.removeClass('sidenav-smalldesktop');\n        }\n\n        this._isResizing = true;\n        if (stateName == SideNavStateNames.Toggle) {\n            this.pipSideNav.close();\n        }\n        this.sidenavState = this._navState[String(stateName)];\n        this.$element.addClass(this.sidenavState.addClass);\n\n        this.pipSideNav.state = this.sidenavState;\n\n        // check sideNav State\n        this.$timeout(() => {\n            this.setSideNaveState()\n        }, 15);\n\n        // complete animation\n        this.$timeout(() => {\n            this._isResizing = false;\n        }, this._animationDuration); //animationDuration\n\n    }\n}\n\n\ninterface ISideNavBindings {\n    [key: string]: any;\n    sidenavState: any\n}\n\nconst SideNavBindings: ISideNavBindings = {\n    sidenavState: '=?'\n};\n\n(() => {\n\n    const sideNav: ng.IComponentOptions = {\n        transclude: true,\n        bindings: SideNavBindings,\n        templateUrl: 'sidenav/SideNav.html',\n        controller: SideNavController\n    };\n\n    angular\n        .module('pipSideNav')\n        .component('pipSidenav', sideNav);\n\n})();","{\n\n    interface ISideNavPartBindings {\n        [key: string]: any;\n        visible: any\n    }\n\n    const SideNavPartBindings: ISideNavPartBindings = {\n        visible: '=?'\n    }\n\n    class SideNavPartController {\n        private partName: string;\n        private partValue: string = null;\n        private pos: number;\n\n        constructor(\n            private $scope: ng.IScope,\n            $element: ng.IRootElementService,\n            $attrs: ng.IAttributes,\n            $rootScope: ng.IRootScopeService,\n            pipSideNav) {\n\n            this.partName = '' + $attrs['pipSidenavPart'];\n            this.pos = this.partName.indexOf(':');\n            if (this.pos > 0) {\n                this.partValue = this.partName.substr(this.pos + 1);\n                this.partName = this.partName.substr(0, this.pos);\n            }\n\n            this.onSideNavChanged(null, pipSideNav.config)\n            $rootScope.$on('pipSideNavChanged', (event, config) => { this.onSideNavChanged(event, config) });\n        }\n\n        private onSideNavChanged(event, config) {\n            let parts = config.parts || {};\n            let currentPartValue = parts[this.partName];\n            let visible: boolean = !!(this.partValue ? currentPartValue == this.partValue : currentPartValue);\n\n            if (visible != this.$scope['visible'])\n                this.$scope['visible'] = visible;\n        }\n    }\n\n    function sidenavPartDirective(ngIfDirective) {\n        \"ngInject\";\n        let ngIf = ngIfDirective[0];\n\n        return {\n            transclude: ngIf.transclude,\n            priority: ngIf.priority,\n            terminal: ngIf.terminal,\n            restrict: ngIf.restrict,\n            scope: SideNavPartBindings,\n            link: function linkFunction(\n                $scope: ng.IScope,\n                $element: ng.IRootElementService,\n                $attrs: ng.IAttributes) {\n                $attrs['ngIf'] = () => { return $scope['visible'] };\n                ngIf.link.apply(ngIf, arguments);\n            },\n            controller: SideNavPartController\n        };\n    }\n\n    angular\n        .module('pipSideNav')\n        .directive('pipSidenavPart', sidenavPartDirective);\n\n}","import { SideNavState, SideNavConfig } from \"./SideNavState\";\nimport { ISideNavProvider, ISideNavService } from \"./ISideNavService\";\n\nexport const SideNavChangedEvent = 'pipSideNavChanged';\nexport const SideNavStateChangedEvent = 'pipSideNavStateChanged';\nexport const OpenSideNavEvent = 'pipOpenSideNav';\nexport const CloseSideNavEvent = 'pipCloseSideNav';\n\nclass SideNavService implements ISideNavService {\n    private _config: SideNavConfig;\n    private _state: any;\n\n    public constructor(\n        config: SideNavConfig, \n        private $rootScope: ng.IRootScopeService, \n        private $mdSidenav: ng.material.ISidenavService) {\n        this._config = config;\n    }\n\n    public get config(): SideNavConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public get state(): any {\n        return this._state;\n    }\n\n    public set state(value: any) {\n        this._state = value || {};\n        this.$rootScope.$broadcast(SideNavStateChangedEvent, value);\n    }\n\n    public get type(): string {\n        return this._config.type;\n    }\n\n    public set type(value: string) {\n        this._config.type = value;\n    }\n\n    public open() {\n        this.$mdSidenav('pip-sticky-sidenav').open();\n    }\n\n    public close() {\n        this.$mdSidenav('pip-sticky-sidenav').close();\n    }\n\n    public toggle() {\n        this.$mdSidenav('pip-sticky-sidenav').toggle();\n    }\n\n    public show() {\n        if (!this._config.visible) {\n            this._config.visible = true;\n            this.sendConfigEvent();\n        }\n    }\n\n    public hide() {\n        if (this._config.visible) {\n            this._config.visible = false;\n            this.sendConfigEvent();\n        }\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this.$rootScope.$emit(SideNavChangedEvent, this._config);\n    }\n}\n\nclass SideNavProvider implements ISideNavProvider {\n    private _config: SideNavConfig = {\n        parts: {},\n        classes: [],\n        type: 'popup',\n        state: null,\n        visible: true\n    };\n\n    private _service: SideNavService;\n\n    public get config(): SideNavConfig {\n        return this._config;\n    }\n\n    public set config(value: SideNavConfig) {\n        this._config = value || new SideNavConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n    }\n\n    public get type(): string {\n        return this._config.type;\n    }\n\n    public set type(value: string) {\n        this._config.type = value;\n    }\n\n    public get visible(): boolean {\n        return this._config.visible;\n    }\n\n    public set visible(value: boolean) {\n        this._config.visible = value;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n\n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SideNavService(this._config, $rootScope, $mdSidenav);\n\n        return this._service;\n    }\n}\n\nfunction hookSideNavEvents($rootScope: ng.IRootScopeService, pipSideNav: ISideNavService) {\n    $rootScope.$on(OpenSideNavEvent, () => { pipSideNav.open(); });\n    $rootScope.$on(CloseSideNavEvent, () => { pipSideNav.close(); });\n}\n\nangular\n    .module('pipSideNav')\n    .provider('pipSideNav', SideNavProvider)\n    .run(hookSideNavEvents);\n","export class SideNavStateNames {\n    static Toggle: string = 'toggle';\n    static Small: string = 'small';\n    static Large: string = 'large';\n    static XLarge: string = 'xlarge';\n}\n\nexport class SideNavState {\n    id: SideNavStateNames;\n    // Class which added to sidenav in this state\n    addClass: string;\n    // Side nav always open\n    isLockedOpen: boolean;\n    // Show SideNav header \n    showHeader: boolean;\n    // Show expanded button\n    expandedButton: boolean;\n    // SideNav has expand\n    isExpanded: boolean;\n    // SideNav is Expanded in this state by default\n    expand: boolean;\n    // Tooltype is show\n    showIconTooltype: boolean;\n}\n\nexport class SideNavStateConfig {\n    toggle: SideNavState = { // media(sm, xs)\n        id: SideNavStateNames.Toggle,\n        addClass: 'sidenav-mobile',\n        showHeader: true,\n        isLockedOpen: false,\n        expandedButton: false,\n        isExpanded: true,\n        expand: true,\n        showIconTooltype: false\n    };\n    small: SideNavState = { // media(md)\n        id: SideNavStateNames.Small,\n        addClass: 'pip-sticky-nav-small sidenav-smalldesktop',\n        showHeader: false,\n        isLockedOpen: true,\n        expandedButton: false,\n        isExpanded: false,\n        expand: false,\n        showIconTooltype: true\n    };\n    large: SideNavState = { // media(lg)\n        id: SideNavStateNames.Large,\n        addClass: 'sidenav-smalldesktop',\n        showHeader: false,\n        isLockedOpen: true,\n        expandedButton: true,\n        isExpanded: true,\n        expand: true,\n        showIconTooltype: true\n    };\n    xlarge: SideNavState = { // media(xl)\n        id: SideNavStateNames.XLarge,\n        addClass: 'sidenav-desktop',\n        showHeader: false,\n        isLockedOpen: true,\n        expandedButton: false,\n        isExpanded: true,\n        expand: true,\n        showIconTooltype: false\n    };\n}\n\nexport class SideNavConfig {\n    parts: any;\n    classes: string[];\n    state: SideNavState;\n    type: string;\n    visible: boolean;\n}","angular.module('pipSideNav', ['ngMaterial', 'pipNav.Templates']);\n\nimport './SideNavState';\nimport './SideNavService';\nimport './SideNavPart';\nimport './SideNav';\n\nexport * from './SideNavService';","\nexport class PipTab {\n    id: string;\n    name?: string;\n    count: number;\n    title: string;\n}\n\n{\n    interface ITabsBindings {\n        [key: string]: any;\n\n        ngDisabled: any;\n        tabs: any;\n        showTabs: any;\n        showTabsShadow: any;\n        activeIndex: any;\n        select: any;\n        breakpoints: any;\n        themeClass: any;\n    }\n\n    const TabsBindings: ITabsBindings = {\n        ngDisabled: '&?', // function\n        tabs: '<pipTabs', // PipTab[]\n        showTabs: '&pipShowTabs', // function\n        showTabsShadow: '&pipTabsShadow', // function\n        activeIndex: '<?pipActiveIndex', // number\n        select: '=pipTabsSelect', // function\n        breakpoints: '<?pipBreakpoints', // string\n        themeClass: '<?themeClass', // string\n    }\n\n    class TabsChanges implements ng.IOnChangesObject, ITabsBindings {\n        [key: string]: ng.IChangesObject<any>;\n        // Not one way bindings\n        ngDisabled: ng.IChangesObject<() => ng.IPromise<void>>;\n        tabs: ng.IChangesObject<PipTab[]>;\n        showTabs: ng.IChangesObject<() => ng.IPromise<void>>;\n        showTabsShadow: ng.IChangesObject<() => ng.IPromise<void>>;\n        activeIndex: ng.IChangesObject<number>;\n        select: ng.IChangesObject<() => ng.IPromise<void>>;\n        breakpoints: ng.IChangesObject<string>;\n        themeClass: ng.IChangesObject<string>;\n    }\n\n    class TabsDirectiveController implements ITabsBindings {\n        private _pipTranslate: pip.services.ITranslateService;\n        private _pipTheme: pip.themes.IThemeService;\n        private _pipMedia: pip.layouts.IMediaService;\n        private selectedTabId: string;\n\n        public ngDisabled: Function;\n        public tabs: PipTab[];\n        public activeIndex: number;\n        public breakpoints: string;\n        public showTabs: Function;\n        public showTabsShadow: Function;\n        public select: Function;\n        public themeClass: string;\n\n        public media: any;\n        public currentTheme: string;\n\n        public change: () => ng.IPromise<any>;\n\n        constructor(\n            private $element: ng.IAugmentedJQuery,\n            private $injector: ng.auto.IInjectorService,\n            private $rootScope: ng.IRootScopeService,\n            private $timeout: ng.ITimeoutService,\n            private navConstant: any,\n            $mdMedia: angular.material.IMedia\n        ) {\n            \"ngInject\";\n\n            this.setTheme();\n            this.setMedia($mdMedia);\n        }\n\n        private setTheme(): void {\n            this._pipTheme = this.$injector.has('pipTheme') ? <pip.themes.IThemeService>this.$injector.get('pipTheme') : null;\n            if (this._pipTheme) {\n                this.currentTheme = this._pipTheme.theme;\n            } else if (this.$rootScope['$theme']) {\n                this.currentTheme = this.$rootScope['$theme'];\n            }\n\n            this.themeClass = (this.themeClass || '') + ' md-' + this.currentTheme + '-theme';\n        }\n\n        private setMedia($mdMedia: angular.material.IMedia): void {\n            this._pipMedia = this.$injector.has('pipMedia') ? <pip.layouts.IMediaService>this.$injector.get('pipMedia') : null;\n            this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\n        }\n\n        private setTranslate(): void {\n            this._pipTranslate = this.$injector.has('pipTranslate') ? <pip.services.ITranslateService>this.$injector.get('pipTranslate') : null;\n            if (this._pipTranslate) {\n                if (this.tabs.length > 0 && this.tabs[0].title) {\n                    this._pipTranslate.translateObjects(this.tabs, 'title', 'nameLocal');\n                } else {\n                    this._pipTranslate.translateObjects(this.tabs, 'name', 'nameLocal');\n                }\n            }\n        }\n\n        public isDisabled(): boolean {\n            if (_.isFunction(this.ngDisabled)) {\n                return this.ngDisabled();\n            } else {\n                return this.toBoolean(this.ngDisabled);\n            }\n        };\n\n        public tabDisabled(index: number): boolean {\n            return (this.isDisabled() && this.activeIndex != index);\n        };\n\n        public onSelect(index: number): void {\n            if (this.isDisabled()) return;\n            this.activeIndex = index;\n            this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\n            this.$timeout(() => {\n                if (this.select) {\n                    this.select(this.tabs[this.activeIndex], this.activeIndex);\n                }\n            }, 0);\n\n        };\n\n        public showShadow(): boolean {\n            if (_.isFunction(this.showTabsShadow)) {\n                return this.showTabsShadow();\n            } else {\n                return this.toBoolean(this.showTabsShadow);\n            }\n        };\n\n        public show(): boolean {\n            if (_.isFunction(this.showTabs)) {\n                return this.showTabs();\n            } else {\n                return this.toBoolean(this.showTabs);\n            }\n        };\n\n        public toBoolean(value: any): boolean {\n            if (value == null) return false;\n            if (!value) return false;\n            value = value.toString().toLowerCase();\n            return value == '1' || value == 'true';\n        }\n\n        public $onChanges(changes: TabsChanges) {\n            if (changes.activeIndex === undefined) {\n                if (!this.activeIndex) {\n                    this.activeIndex = 0;\n                }\n            } else {\n                this.activeIndex = changes.activeIndex.currentValue || 0;\n                if (this.$timeout && this.activeIndex !== changes.activeIndex.previousValue) {\n                    this.$timeout(() => {\n                        let a = this.$element.find('md-tabs-canvas');\n                        if (a && a[0]) {\n                            angular.element(a[0]).attr('activeIndex', this.activeIndex);\n                        }\n                        a.on('focusout', () => {\n                            angular.element(a[0]).attr('activeIndex', this.activeIndex);\n                            this.$timeout(() => {\n                                angular.element(a[0]).attr('activeIndex', this.activeIndex);\n                            }, 50);\n                        });\n                    }, 1000);\n                }\n            }\n\n            if (changes.breakpoints === undefined) {\n                if (!this.breakpoints) {\n                    this.breakpoints = this.navConstant.TAB_BREAKPOINT;\n                }\n            } else {\n                this.breakpoints = changes.breakpoints.currentValue ? changes.breakpoints.currentValue : this.navConstant.TAB_BREAKPOINT\n            }\n\n            if (changes.tabs === undefined || !_.isArray(changes.tabs.currentValue)) {\n                if (!this.tabs) {\n                    this.tabs = [];\n                }\n            } else {\n                this.tabs = changes.tabs.currentValue;\n                this.setTranslate();\n            }\n\n            if (!changes.activeIndex && changes.tabs && this.selectedTabId !== undefined) {\n                const index = _.indexOf(this.tabs, _.find(this.tabs, {\n                    id: this.selectedTabId\n                }));\n                if (index < 0) {\n                    this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\n                } else if (this.tabs.length > 0 && this.activeIndex) {\n                    this.onSelect(index);\n                }\n            } else {\n                this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\n            }\n        }\n\n    }\n\n    const Tabs: ng.IComponentOptions = {\n        bindings: TabsBindings,\n        templateUrl: 'tabs/Tabs.html',\n        controller: TabsDirectiveController\n    }\n\n    angular\n        .module('pipTabs', ['pipNav.Templates'])\n        .component('pipTabs', Tabs);\n}\n","(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('appbar/AppBar.html',\n    '<md-toolbar class=\"{{ $ctrl.config.classes.join(\\' \\') }}\" ng-if=\"$ctrl.config.visible\" ng-transclude=\"\"></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/PrimaryActions.html',\n    '<div pip-focused=\"\" pip-focused-tabindex=\"2\"><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in $ctrl.config.primaryLocalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"$ctrl.clickAction(action, $mdOpenMenu);\" tabindex=\"-1\" ng-hide=\"$ctrl.isHidden(action)\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge\" ng-show=\"action.count > 0\">{{ $ctrl.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon}}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"$ctrl.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"$ctrl.clickAction(subAction)\">{{ ::subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in $ctrl.config.primaryGlobalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"$ctrl.clickAction(action, $mdOpenMenu);\" ng-hide=\"$ctrl.isHidden(action)\" tabindex=\"-1\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge color-badge-bg\" ng-show=\"action.count > 0\">{{ $ctrl.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon }}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"$ctrl.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"$ctrl.clickAction(subAction)\">{{ subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/SecondaryActions.html',\n    '<md-menu ng-if=\"$ctrl.secondaryActionsVisible()\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button\" tabindex=\"3\" ng-init=\"$ctrl.getMenu($mdOpenMenu)\" ng-click=\"$ctrl.onSecondaryActionClick(); $ctrl.openMenu($mdOpenMenu, $event);\" aria-label=\"open actions\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"action in $ctrl.config.secondaryLocalActions\" ng-if=\"!action.divider\" ng-hide=\"$ctrl.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"$ctrl.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider><md-menu-divider ng-if=\"$ctrl.secondaryDividerVisible()\"></md-menu-divider><md-menu-item ng-repeat-start=\"action in $ctrl.config.secondaryGlobalActions\" ng-if=\"!action.divider\" ng-hide=\"$ctrl.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"$ctrl.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('breadcrumb/Breadcrumb.html',\n    '<div class=\"pip-breadcrumb-block\"><div class=\"text-overflow\" ng-if=\"!$ctrl._media(\\'xs\\')\"><span ng-if=\"$ctrl.config.criteria\" ng-click=\"$ctrl.openSearch()\">{{ $ctrl.config.criteria }} -</span><span class=\"pip-breadcrumb-item {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\" ng-repeat-start=\"item in $ctrl.config.items\" ng-click=\"$ctrl.onClick(item)\" ng-init=\"stepWidth = 100/($ctrl.config.items.length + 1)\" ng-class=\"{\\'cursor-pointer\\': !$last}\" ng-style=\"{\\'max-width\\': stepWidth + \\'%\\'}\"><span ng-if=\"!$last || !$ctrl.actionsVisible(item)\">{{ item.title | translate }}</span><div ng-if=\"$last && $ctrl.actionsVisible(item)\" style=\"display: inline-block; position: relative;\"><md-menu md-offset=\"0 44\"><span class=\"layout-row pip-breadcrumb-item-menu cursor-pointer {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-click=\"$ctrl.onOpenMenu($mdOpenMenu, $event)\" md-ink-ripple=\"\" aria-label=\"open breadcrumb actions\">{{ item.title | translate }}<md-icon class=\"pip-triangle-down\" md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-if=\"!subItem.divider\" ng-repeat-start=\"subItem in item.subActions\"><md-button ng-click=\"$ctrl.onSubActionClick(subItem)\" ng-if=\"!action.divider\" tabindex=\"4\"><md-icon md-menu-align-target=\"\" ng-if=\"subItem.icon\" md-svg-icon=\"{{ subItem.icon }}\"></md-icon><span>{{ subItem.title | translate }}</span></md-button></md-menu-item><md-menu-divider ng-if=\"subItem.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div></span><md-icon ng-repeat-end=\"\" md-svg-icon=\"icons:chevron-right\" ng-hide=\"$last\"></md-icon><span class=\"pip-title breadcrumb-accent\" ng-if=\"$ctrl.config.text\">{{ $ctrl.config.text | translate }}</span></div><div style=\"position: relative;\" ng-if=\"$ctrl._media(\\'xs\\')\"><md-menu md-offset=\"0 44\"><span class=\"pip-mobile-breadcrumb layout-row\" ng-click=\"$ctrl.config.items && $ctrl.config.items.length > 1 ? $mdOpenMenu() : return\"><span class=\"text-overflow\"><span ng-if=\"$ctrl.config.criteria\" ng-click=\"$ctrl.openSearch()\">{{ $ctrl.config.criteria }} -</span> <span class=\"breadcrumb-accent\" ng-if=\"$ctrl.config.text\">{{ $ctrl.config.text | translate }}</span> <span ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\" class=\"breadcrumb-accent {{ ($ctrl.config.items && $ctrl.config.items.length > 1) ? \\'cursor-pointer\\' : \\'\\' }}\">{{ $ctrl.config.items[$ctrl.config.items.length - 1].title | translate }}</span></span><md-icon class=\"pip-triangle-down cursor-pointer breadcrumb-accent\" md-svg-icon=\"icons:triangle-down\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 1\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.config.items\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\"><md-button ng-click=\"$ctrl.onClick(item)\" tabindex=\"5\"><md-icon md-menu-align-target=\"\" ng-if=\"item.icon\" md-svg-icon=\"{{ item.icon }}\"></md-icon><span>{{ item.title | translate }}</span></md-button></md-menu-item><md-menu-item ng-if=\"$ctrl.config.text\"><md-button tabindex=\"5\"><span class=\"text-grey\">{{ $ctrl.config.text | translate }}</span></md-button></md-menu-item></md-menu-content></md-menu></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('icon/NavIcon.html',\n    '<md-button class=\"md-icon-button pip-nav-icon\" ng-if=\"$ctrl.config.type != \\'none\\'\" ng-class=\"$ctrl.config.class\" ng-click=\"$ctrl.onNavIconClick()\" tabindex=\"{{ $ctrl.config.type==\\'menu\\' || $ctrl.config.type==\\'back\\' ? 4 : -1 }}\" aria-label=\"menu\"><md-icon ng-if=\"$ctrl.config.type==\\'menu\\'\" md-svg-icon=\"icons:menu\"></md-icon><img ng-src=\"{{ $ctrl.config.imageUrl }}\" ng-if=\"$ctrl.config.type==\\'image\\'\" height=\"24\" width=\"24\"><md-icon ng-if=\"$ctrl.config.type==\\'back\\'\" md-svg-icon=\"icons:arrow-left\"></md-icon><md-icon ng-if=\"$ctrl.config.type==\\'icon\\'\" md-svg-icon=\"{{ $ctrl.config.icon }}\"></md-icon></md-button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('header/NavHeader.html',\n    '<md-toolbar ng-show=\"$ctrl.showHeader\" class=\"layout-row layout-align-start-center\"><div class=\"flex-fixed pip-sticky-nav-header-user\"><md-button class=\"md-icon-button\" ng-click=\"$ctrl.onUserClick()\" aria-label=\"current user\" tabindex=\"-1\"><img src=\"\" class=\"pip-sticky-nav-header-user-image\" ng-class=\"$ctrl.imageCss\"></md-button></div><div class=\"pip-sticky-nav-header-user-text\"><div class=\"pip-sticky-nav-header-user-pri\" ng-click=\"$ctrl.onUserClick()\" tabindex=\"-1\">{{ $ctrl.title | translate }}</div><div class=\"pip-sticky-nav-header-user-sec\">{{ $ctrl.subtitle | translate }}</div></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dropdown/Dropdown.html',\n    '<md-toolbar class=\"md-subhead color-primary-bg {{ $ctrl.themeClass}}\" ng-if=\"$ctrl.show()\" ng-class=\"{\\'md-whiteframe-3dp\\': $ctrl.media(\\'xs\\')}\"><div class=\"pip-divider\"></div><md-select ng-model=\"$ctrl.selectedIndex\" tabindex=\"15\" ng-disabled=\"$ctrl.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"DROPDOWN\" md-ink-ripple=\"\" md-on-close=\"$ctrl.onSelect($ctrl.selectedIndex)\"><md-option ng-repeat=\"action in $ctrl.actions\" value=\"{{ ::$index }}\" ng-selected=\"$ctrl.activeIndex == $index ? true : false\">{{ (action.title || action.name || action) | translate }}</md-option></md-select></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('language/LanguagePicker.html',\n    '<md-menu md-position-mode=\"target-right target\"><span class=\"pip-language\" ng-click=\"$mdOpenMenu()\" aria-label=\"language selection\">{{ $ctrl.value | translate }}<md-icon md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"3\"><md-menu-item ng-repeat=\"language in $ctrl.languages\"><md-button ng-click=\"$ctrl.onLanguageClick(language)\" tabindex=\"7\">{{ language | translate }}</md-button></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu/NavMenu.html',\n    '<div ng-if=\"$ctrl.sections && $ctrl.sections.length\"><md-list class=\"sidenav-list\" pip-focused=\"\" pip-focused-tabindex=\"10\" pip-with-hidden=\"true\"><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-sticky-nav-expanded-button\" ng-click=\"$ctrl.onExpand()\" ng-disabled=\"!$ctrl.isCollapsed\" tabindex=\"-1\" ng-if=\"$ctrl.expandedButton\"><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-left\" ng-if=\"$ctrl.expanded\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-right\" ng-if=\"!$ctrl.expanded\"></md-icon></md-list-item><md-divider ng-show=\"$ctrl.expandedButton\"></md-divider><div class=\"pip-section\" ng-repeat=\"section in $ctrl.sections\" ng-hide=\"section.access && !section.access(section)\"><md-divider ng-show=\"$index > 0 && !$ctrl.isSectionEmpty(section.links)\"></md-divider><md-subheader ng-show=\"section.title\" style=\"height: 48px;\"><span ng-if=\"$ctrl.expanded\" class=\"pip-sticky-nav-menu-title section-title\">{{ ::section.title | translate }}</span><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && section.icon\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ $ctrl.defaultIcon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && !section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ $ctrl.defaultIcon }}\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && !section.icon\"><md-tooltip md-visible=\"showTooltip\" class=\"md-secondary\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon></md-subheader><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-focusable\" tabindex=\"-1\" ng-repeat=\"link in section.links\" ng-class=\"{\\'active\\': $ctrl.isActive(link)}\" ng-hide=\"link.access && !link.access(link)\"><md-button class=\"layout-row layout-align-start-center pip-button-block\" tabindex=\"-1\" ng-click=\"$ctrl.clickLink($event, link)\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">{{ ::link.tooltipText | translate }}</md-tooltip><div class=\"pip-sticky-nav-menu-icon-block\"><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-if=\"!($ctrl.sideNavState.showIconTooltype && !link.tooltipText && !$ctrl.expanded)\" ng-hide=\"!link.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-hide=\"!link.icon\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !link.tooltipText && !$ctrl.expanded\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::link.tooltipText || link.title | translate }}</md-tooltip></md-icon></div><div class=\"pip-sticky-nav-menu-title\">{{ ::link.title | translate }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count < 100\">{{ link.count }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count > 99\">!</div></md-button></md-list-item></div></md-list></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('search/SearchBar.html',\n    '<div class=\"md-toolbar-tools pip-search-container\" ng-if=\"$ctrl.enabled\"><div class=\"layout-row pip-search-selected\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"start search\" ng-click=\"$ctrl.onClick()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><input class=\"pip-search-text flex\" type=\"search\" tabindex=\"6\" ng-model=\"$ctrl.search.text\" ng-keydown=\"$ctrl.onKeyDown($event)\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"clear search\" ng-click=\"$ctrl.clear()\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div><div class=\"md-toolbar-tools layout-row layout-align-end-center flex-fixed lp0 rp0\" ng-if=\"!$ctrl.enabled\"><md-button class=\"md-icon-button\" tabindex=\"5\" aria-label=\"start search\" ng-click=\"$ctrl.enable()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('sidenav/SideNav.html',\n    '<md-sidenav class=\"md-sidenav-left\" md-is-locked-open=\"$ctrl.sidenavState.isLockedOpen\" md-component-id=\"pip-sticky-sidenav\" ng-transclude=\"\"></md-sidenav>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tabs/Tabs.html',\n    '<md-toolbar class=\"pip-nav color-primary-bg {{ $ctrl.themeClass }}\" ng-class=\"{\\'pip-visible\\': $ctrl.show(), \\'pip-shadow\\': $ctrl.showShadow()}\"><md-tabs class=\"color-primary-bg\" \"=\"\" ng-if=\"$ctrl.media($ctrl.breakpoints)\" md-selected=\"$ctrl.activeIndex\" ng-class=\"{\\'disabled\\': $ctrl.isDisabled()}\" md-stretch-tabs=\"true\" md-dynamic-height=\"true\"><md-tab ng-repeat=\"tab in $ctrl.tabs track by $index\" ng-disabled=\"$ctrl.tabDisabled($index)\" md-on-select=\"$ctrl.onSelect($index)\"><md-tab-label>{{:: tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 0 && tab.counts <= 99\">{{ tab.counts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 99\">!</div></md-tab-label></md-tab></md-tabs><div class=\"md-subhead pip-tabs-content color-primary-bg\" ng-if=\"!$ctrl.media($ctrl.breakpoints)\"><div class=\"pip-divider position-top m0\"></div><md-select ng-model=\"$ctrl.activeIndex\" ng-disabled=\"$ctrl.isDisabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"SELECT\" md-ink-ripple=\"\" md-on-close=\"$ctrl.onSelect($ctrl.activeIndex)\"><md-option ng-repeat=\"tab in $ctrl.tabs track by $index\" class=\"pip-tab-option\" value=\"{{ ::$index }}\">{{ ::tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 0 && tab.counts <= 99\">{{ tab.counts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 99\">!</div></md-option></md-select></div></md-toolbar>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-nav-html.min.js.map\n"]}