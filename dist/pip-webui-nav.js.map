{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/actions/ActionsService.ts","src/actions/PrimaryActionsDirective.ts","src/actions/SecondaryActionsDirective.ts","src/actions/index.ts","src/appbar/AppBarDirective.ts","src/appbar/AppBarPartDirective.ts","src/appbar/AppBarService.ts","src/appbar/index.ts","src/breadcrumb/BreadcrumbDirective.ts","src/breadcrumb/BreadcrumbService.ts","src/breadcrumb/index.ts","src/common/NavService.ts","src/dependencies/TranslateFilter.ts","src/dropdown/DropdownDirective.ts","src/header/NavHeaderDirective.ts","src/header/NavHeaderService.ts","src/header/index.ts","src/icon/NavIconDirective.ts","src/icon/NavIconService.ts","src/icon/index.ts","src/index.ts","src/language/LanguagePickerDirective.ts","src/menu/NavMenuDirective.ts","src/menu/NavMenuService.ts","src/menu/index.ts","src/search/SearchBarDirective.ts","src/search/SearchService.ts","src/search/index.ts","src/sidenav/SideNavDirective.ts","src/sidenav/SideNavPartDirective.ts","src/sidenav/SideNavService.ts","src/sidenav/index.ts","src/tabs/TabsDirective.ts","temp/pip-webui-nav-html.min.js"],"names":[],"mappings":"AAAA;ACAA,YAAY,CAAC;;;;;;AAEF,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAErD;IAAA;IA2BA,CAAC;IAAD,uBAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,4CAAgB;AA6B7B;IAAgC,8BAAgB;IAAhD;;IAEA,CAAC;IAAD,iBAAC;AAAD,CAFA,AAEC,CAF+B,gBAAgB,GAE/C;AAFY,gCAAU;AAIvB;IAAA;QAEW,yBAAoB,GAAiB,EAAE,CAAC;QAExC,wBAAmB,GAAiB,EAAE,CAAC;QAGvC,2BAAsB,GAAiB,EAAE,CAAC;QAE1C,0BAAqB,GAAgB,EAAE,CAAC;IACnD,CAAC;IAAD,oBAAC;AAAD,CAVA,AAUC,IAAA;AAVY,sCAAa;AAmC1B;IAII,wBACI,MAAqB,EACrB,UAAgC;QAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,kCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,gDAAoB;aAA/B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;QAC7C,CAAC;aAED,UAAgC,KAAmB;YAC/C,IAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,KAAK,IAAI,EAAE,CAAC;YAChD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,kDAAsB;aAAjC;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAC/C,CAAC;aAED,UAAkC,KAAmB;YACjD,IAAI,CAAC,OAAO,CAAC,sBAAsB,GAAG,KAAK,IAAI,EAAE,CAAC;YAClD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,+CAAmB;aAA9B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;QAC5C,CAAC;aAED,UAA+B,KAAmB;YAC9C,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,KAAK,IAAI,EAAE,CAAC;YAC/C,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,iDAAqB;aAAhC;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;QAC9C,CAAC;aAED,UAAiC,KAAmB;YAChD,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,KAAK,IAAI,EAAE,CAAC;YACjD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,6BAAI,GAAX,UAAY,cAA6B,EAAE,gBAA+B;QACtE,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,cAAc,IAAI,EAAE,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,gBAAgB,IAAI,EAAE,CAAC;QAC5D,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB,UAAmB,MAAc,EAAE,KAAa;QAC5C,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC;QAEjD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAC,CAAC;YACxC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC;gBACjB,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAC,CAAC;YACvC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC;gBACjB,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB;QACI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAC,CAAC;YACxC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAC,CAAC;YACvC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IACL,qBAAC;AAAD,CA7FA,AA6FC,IAAA;AAED;IAAA;QACY,YAAO,GAAkB,IAAI,aAAa,EAAE,CAAC;IAmDzD,CAAC;IAhDG,sBAAW,mCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAoB;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,aAAa,EAAE,CAAC;QAChD,CAAC;;;OAJA;IAMD,sBAAW,iDAAoB;aAA/B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;QAC7C,CAAC;aAED,UAAgC,KAAmB;YAC/C,IAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,KAAK,IAAI,EAAE,CAAC;QACpD,CAAC;;;OAJA;IAMD,sBAAW,mDAAsB;aAAjC;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAC/C,CAAC;aAED,UAAkC,KAAmB;YACjD,IAAI,CAAC,OAAO,CAAC,sBAAsB,GAAG,KAAK,IAAI,EAAE,CAAC;QACtD,CAAC;;;OAJA;IAMD,sBAAW,gDAAmB;aAA9B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;QAC5C,CAAC;aAED,UAA+B,KAAmB;YAC9C,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,KAAK,IAAI,EAAE,CAAC;QACnD,CAAC;;;OAJA;IAMD,sBAAW,kDAAqB;aAAhC;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;QAC9C,CAAC;aAED,UAAiC,KAAmB;YAChD,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,KAAK,IAAI,EAAE,CAAC;QACrD,CAAC;;;OAJA;IAMM,8BAAI,GAAX,UAAY,UAAU;QAClB,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,sBAAC;AAAD,CApDA,AAoDC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;;;AC/N7C,YAAY,CAAC;AAGb,CAAC;IAED,kCACI,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU;QAG/E,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAEzC,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YACpB,UAAU,CAAC,mBAAmB,GAAG,MAAM,CAAC,YAAY,CAAC;QAEzD,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;YACrB,UAAU,CAAC,oBAAoB,GAAG,MAAM,CAAC,aAAa,CAAC;QAE3D,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAElC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;QAEtD,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QAEjC,MAAM,CAAC;QAGP,0BAA0B,KAAK,EAAE,MAAM;YACnC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3B,CAAC;QAED,kBAAkB,MAAM;YAEpB,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC;QAED,qBAAqB,MAAM;YACvB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7C,MAAM,CAAC,EAAE,CAAC;YACd,CAAC;YACD,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,GAAG,CAAC;YACf,CAAC;YAED,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QACxB,CAAC;QAED,qBAAqB,OAAO;YACxB,IAAI,KAAK,GAAG,CAAC,CAAC;YAEd,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,MAAM;gBAC5B,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAK,EAAE,CAAC;gBACZ,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED;YACI,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC;gBACxD,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAC7D,CAAC;QAED;YACI,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC;gBACxD,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAC7D,CAAC;QAED,qBAAqB,MAAM,EAAE,WAAW;YACpC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;YAC/B,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACjC,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,KAAK,EAAE,CAAC;gBACf,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACpC,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBACb,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1B,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC1B,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACrC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;gBAChD,CAAC;gBACD,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACxC,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,UAAU,CAAC,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC;IAEL,CAAC;IAGD;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,YAAY,EAAE,kBAAkB;gBAChC,aAAa,EAAE,mBAAmB;aACrC;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,6BAA6B;YAC1C,UAAU,EAAE,wBAAwB;SACvC,CAAC;IACN,CAAC;IAGD,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,mBAAmB,EAAE,uBAAuB,CAAC,CAAC;AAE7D,CAAC,CAAC,EAAE,CAAC;;;ACxIL,YAAY,CAAC;AAGb,CAAC;IAED,oCACI,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU;QAG/E,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QAE3C,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;YACpB,UAAU,CAAC,qBAAqB,GAAG,MAAM,CAAC,YAAY,CAAC;QAE3D,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;YACrB,UAAU,CAAC,sBAAsB,GAAG,MAAM,CAAC,aAAa,CAAC;QAE7D,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAElC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;QAEtD,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,MAAM,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;QACzD,MAAM,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;QAEzD,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QAEjC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE3B,MAAM,CAAC;QAGP,kBAAkB,WAAW,EAAE,EAAE;YAC7B,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC;YACzB,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,CAAC;QAED,0BAA0B,KAAK,EAAE,MAAM;YACnC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAE3B,CAAC;QAED,kBAAkB,MAAM;YACpB,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC;QAED,qBAAqB,MAAM;YACvB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7C,MAAM,CAAC,EAAE,CAAC;YACd,CAAC;YACD,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,GAAG,CAAC;YACf,CAAC;YAED,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QACxB,CAAC;QAED,qBAAqB,OAAO;YACxB,IAAI,KAAK,GAAG,CAAC,CAAC;YAEd,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,MAAM;gBAC5B,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAK,EAAE,CAAC;gBACZ,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED;YACI,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC;gBACxD,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAC7D,CAAC;QAED;YACI,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC;gBACxD,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAC7D,CAAC;QAED,qBAAqB,MAAM,EAAE,WAAW;YACpC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;YAC/B,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACjC,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,KAAK,EAAE,CAAC;gBACf,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACpC,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBACb,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1B,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC1B,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACrC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;gBAChD,CAAC;gBACD,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACxC,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,UAAU,CAAC,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC;IAEL,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,YAAY,EAAE,kBAAkB;gBAChC,aAAa,EAAE,mBAAmB;aACrC;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,+BAA+B;YAC5C,UAAU,EAAE,0BAA0B;SACzC,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,qBAAqB,EAAE,yBAAyB,CAAC,CAAC;AAEjE,CAAC,CAAC,EAAE,CAAC;;;AChJL,YAAY,CAAC;;;;AAEb,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,WAAW,CAAC,CAAC,CAAC;AAE9E,4BAA0B;AAC1B,qCAAmC;AACnC,uCAAqC;AAErC,sCAAiC;;;ACRhC,YAAY,CAAC;AAGd,CAAC;IAED,mCAAmC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS;QACtE,UAAU,CAAC;QAGX,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAChC,QAAQ,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAItC,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAEjC,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;QAEpD,yBAAyB,KAAK,EAAE,MAAM;YAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3B,CAAC;IACL,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,oBAAoB;YACjC,UAAU,EAAE,yBAAyB;SACxC,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AAE7C,CAAC,CAAC,EAAE,CAAC;;;ACrCL,YAAY,CAAC;AAGb,CAAC;IAED,uCAAuC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS;QAClF,UAAU,CAAC;QAEX,IAAI,QAAQ,GAAG,EAAE,GAAG,MAAM,CAAC,aAAa,CAAC;QACzC,IAAI,SAAS,GAAG,IAAI,CAAC;QAGrB,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACV,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACrC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC;QAED,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;QAExC,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;QAEpD,yBAAyB,KAAK,EAAE,MAAM;YAClC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;YAC/B,IAAI,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YAGvC,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,gBAAgB,IAAI,SAAS,GAAG,gBAAgB,CAAC,CAAC;YAE/E,EAAE,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;gBAC1B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QACjC,CAAC;IAEL,CAAC;IAGD,6BAA6B,aAAa;QACtC,UAAU,CAAC;QAEX,IAAI,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAE5B,MAAM,CAAC;YACH,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,sBAAsB,MAAW,EAAE,QAAQ,EAAE,MAAW;gBAE1D,MAAM,CAAC,IAAI,GAAG;oBACV,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC1B,CAAC,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACrC,CAAC;YACD,UAAU,EAAE,6BAA6B;SAC5C,CAAC;IACN,CAAC;IAED,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;SACtB,SAAS,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;AAErD,CAAC,CAAC,EAAE,CAAC;;;AC7DL,YAAY,CAAC;AAEF,QAAA,kBAAkB,GAAG,kBAAkB,CAAC;AAEnD;IAAA;IAIA,CAAC;IAAD,mBAAC;AAAD,CAJA,AAIC,IAAA;AAJY,oCAAY;AAkCzB;IAII,uBAAmB,MAAoB,EAAE,UAAgC;QACrE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,iCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,kCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAW,gCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,4BAAI,GAAX,UAAY,KAAW,EAAE,OAAkB,EAAE,iBAA4B;QACrE,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;QAC7D,EAAE,CAAC,CAAC,iBAAiB,CAAC;YAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QACzD,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,4BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,kCAAU,GAAlB;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,EAA1B,CAA0B,CAAC,CAAC;IAC7F,CAAC;IAEO,iCAAS,GAAjB,UAAkB,WAAqB;QAAvC,iBAUC;QATG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,EAAE;gBACnB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAEM,iCAAS,GAAhB;QAAiB,qBAAwB;aAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;YAAxB,gCAAwB;;QACrC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAY,GAAnB;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,gCAAQ,GAAf;QAAA,iBAKC;QALe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,mCAAW,GAAlB;QAAA,iBAKC;QALkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,4BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,uCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,0BAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IACL,oBAAC;AAAD,CAvFA,AAuFC,IAAA;AAED;IAAA;QACY,YAAO,GAAiB;YAC5B,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;SACd,CAAC;IAoDN,CAAC;IAjDG,sBAAW,kCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAmB;YACjC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,YAAY,EAAE,CAAC;QAC/C,CAAC;;;OAJA;IAMD,sBAAW,iCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QAErC,CAAC;;;OALA;IAOD,sBAAW,mCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAe;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,IAAI,EAAE,CAAC;QACvC,CAAC;;;OAJA;IAMM,iCAAQ,GAAf;QAAA,iBAIC;QAJe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,oCAAW,GAAlB;QAAA,iBAIC;QAJkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACrC,CAAC;IAEM,6BAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEhE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,qBAAC;AAAD,CAzDA,AAyDC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,WAAW,CAAC;KACnB,QAAQ,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;;;AC5L3C,YAAY,CAAC;;;;AAEb,OAAO;KACF,MAAM,CAAC,WAAW,EAAE,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAE7D,2BAAyB;AACzB,6BAA2B;AAC3B,iCAA+B;AAE/B,qCAAgC;;;ACThC,YAAY,CAAC;AAMb,yDAA6D;AAC7D,yDAA0D;AAC1D,yDAAyD;AAGzD,CAAC;IAED;QASI,8BACI,QAAa,EACb,UAAgC,EAChC,OAA0B,EAC1B,MAA2B,EAC3B,SAA8B,EAC9B,SAAmC,EACnC,aAAiC;YAEjC,UAAU,CAAC;YATf,iBAuBC;YAZG,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAG3B,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;YAEpC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;YAEnC,UAAU,CAAC,GAAG,CAAC,0CAAsB,EAAE,UAAC,KAAK,EAAE,MAAM,IAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxG,UAAU,CAAC,GAAG,CAAC,uCAAmB,EAAE,cAAQ,KAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5E,CAAC;QAEO,kDAAmB,GAA3B,UAA4B,KAAK,EAAE,MAAM;YACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC;QAEO,+CAAgB,GAAxB;YACI,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAE9B,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACnC,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC9B,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;oBAC3B,YAAY,CAAC,IAAI,CAAC,CAAC;gBACvB,IAAI;oBACA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpC,CAAC;YAAC,IAAI;gBACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpC,CAAC;QAEM,sCAAO,GAAd,UAAe,IAAoB;YAC/B,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;QAEM,yCAAU,GAAjB;YACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,+BAAe,CAAC,CAAC;QAChD,CAAC;QAEM,6CAAc,GAArB,UAAsB,IAAoB;YAEtC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1E,CAAC;QAEM,yCAAU,GAAjB,UAAkB,WAAW,EAAE,KAAY;YACvC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,CAAC;QAEM,+CAAgB,GAAvB,UAAwB,MAAwB;YAC5C,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACrB,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACzC,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAwB,CAAA;oBAChE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;gBAChD,CAAC;gBACD,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC5D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7B,CAAC;QACL,CAAC;QACL,2BAAC;IAAD,CA5GA,AA4GC,IAAA;IAGD;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,4BAA4B;YACzC,UAAU,EAAE,oBAAoB;YAChC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAGD,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC;SAC1B,SAAS,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;AAErD,CAAC,CAAC,EAAE,CAAC;;;AC3IL,YAAY,CAAC;AAGF,QAAA,sBAAsB,GAAG,sBAAsB,CAAC;AAChD,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAErD;IAAA;IAIA,CAAC;IAAD,qBAAC;AAAD,CAJA,AAIC,IAAA;AAJY,wCAAc;AAM3B;IAAA;IAIA,CAAC;IAAD,uBAAC;AAAD,CAJA,AAIC,IAAA;AAJY,4CAAgB;AAqB7B;IAII,2BACI,MAAwB,EACxB,UAAgC;QAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,qCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,mCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;YAE1B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OAPA;IASD,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAuB;YACpC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAE3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OAPA;IASD,sBAAW,uCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,oCAAQ,GAAf,UAAgB,IAAY,EAAE,QAAiB;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,qCAAS,GAAhB,UAAiB,KAAuB,EAAE,QAAiB;QACvD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,2CAAe,GAAtB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,8BAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;IACL,wBAAC;AAAD,CAhEA,AAgEC,IAAA;AAGD;IAAA;QACY,YAAO,GAAqB;YAChC,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACjB,CAAC;IAmBN,CAAC;IAhBG,sBAAW,oCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMM,iCAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEpE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,yBAAC;AAAD,CAxBA,AAwBC,IAAA;AAGD,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC;KAC1B,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;;;AChInD,YAAY,CAAC;;;;AAEb,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAExF,iCAA+B;AAC/B,+BAA6B;AAE7B,yCAAoC;;;ACPpC,YAAY,CAAC;AAwBb;IAEI,oBAAmB,SAAS;QACxB,UAAU,CAAC;QAEX,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QAC7E,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QAC7E,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;QACzF,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QAC7E,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QACnF,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;IACjF,CAAC;IAWM,0BAAK,GAAZ;QAEI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;YACZ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAGvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACV,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAGzB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAGnC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAGxB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;YACZ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAE1B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;YACb,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IACL,iBAAC;AAAD,CAhDA,AAgDC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC;KAC3B,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;;;AC5E1C,YAAY,CAAC;AAGb,CAAC;IAED,yBAAyB,SAAS;QAC9B,UAAU,CAAC;QAEX,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAExF,MAAM,CAAC,UAAU,GAAG;YAChB,MAAM,CAAC,YAAY,GAAI,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;QACpE,CAAC,CAAA;IACL,CAAC;IAED,OAAO;SACF,MAAM,CAAC,kBAAkB,EAAE,EAAE,CAAC;SAC9B,MAAM,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AAE1C,CAAC,CAAC,EAAE,CAAC;;;ACnBL,YAAY,CAAC;AAGb,CAAC;IAED,qCAAqC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ;QACpG,UAAU,CAAC;QAEX,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QAC5E,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QAC5E,IAAI,YAAY,GAAG,SAAS,CAAC;QAE7B,EAAE,CAAC,CAAC,QAAQ,CAAC;YACT,YAAY,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;YACvB,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC;QAErC,MAAM,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,MAAM,GAAG,YAAY,GAAG,QAAQ,CAAC;QAGvE,MAAM,CAAC,KAAK,GAAG,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC;QAC5D,MAAM,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;QACrF,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,CAAC,CAAC;QAE7C,MAAM,CAAC,QAAQ,GAAG;YACd,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC,CAAC;QAEF,MAAM,CAAC,QAAQ,GAAG,UAAU,KAAK;YAC7B,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;YAC7D,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnB,QAAQ,CAAC;oBACL,MAAM,CAAC,SAAS,EAAE,CAAC;gBACvB,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC;QAEF,MAAM,CAAC,IAAI,GAAG;YACV,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC,CAAC;IAEN,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,UAAU,EAAE,GAAG;gBACf,OAAO,EAAE,aAAa;gBACtB,YAAY,EAAE,UAAU;gBACxB,WAAW,EAAE,iBAAiB;gBAC9B,MAAM,EAAE,oBAAoB;gBAC5B,SAAS,EAAE,GAAG;aACjB;YACD,WAAW,EAAE,wBAAwB;YACrC,UAAU,EAAE,2BAA2B;SAC1C,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,aAAa,EAAE,CAAC,kBAAkB,CAAC,CAAC;SAC3C,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;AAEjD,CAAC,CAAC,EAAE,CAAC;;;AC3EL,YAAY,CAAC;AAGb,CAAC;IAEG,sCAAsC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY;QACtF,UAAU,CAAC;QAEX,IACI,KAAK,GAAG,IAAI,EACZ,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,6BAA6B,CAAC,EACzD,MAAM,EACN,YAAY,EACZ,kBAAkB,GAAG,KAAK,CAAC;QAG/B,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QAE3C,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QAEjC,QAAQ,CAAC;YACL,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;YAE5D,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,WAAW,CAAC;gBAC/B,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,YAAY,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC;gBAC5B,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC;YAClC,CAAC;YAED,kBAAkB,CAAC,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,UAAU,CAAC,GAAG,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC;QAC1D,UAAU,CAAC,GAAG,CAAC,wBAAwB,EAAE,cAAc,CAAC,CAAC;QAEzD,MAAM,CAAC;QAEP;YACI,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YAEjC,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC;YACzC,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC/C,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC/C,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;QACnD,CAAC;QAGD,qBAAqB,MAAM;YACvB,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7B,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC;QAAA,CAAC;QAEF,sBAAsB,MAAM;YACxB,EAAE,CAAC,CAAC,kBAAkB,CAAC;gBAAC,MAAM,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC;gBACV,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACP,CAAC;QAAA,CAAC;QAEF,wBAAwB,KAAK,EAAE,KAAK;YAChC,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC;YAChC,YAAY,GAAG,KAAK,CAAC;YAErB,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACvB,QAAQ,CAAC;oBACL,MAAM,CAAC,UAAU,GAAG,YAAY,IAAI,YAAY,CAAC,EAAE,IAAI,QAAQ,CAAC;gBACpE,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;YAC9B,CAAC;QACL,CAAC;QAED,2BAA2B,SAAS,EAAE,KAAK;YACvC,IAAI,SAAS,GAAG,EAAE,EACd,cAAc,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,GAAG,SAAS,CAAC,WAAW,EAC5E,eAAe,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC,YAAY,EAChF,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,KAAK,CAAC,KAAK,EACjD,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,KAAK,CAAC,MAAM,EACpD,MAAM,GAAG,CAAC,CAAC;YAEf,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;gBAClE,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,WAAW,GAAG,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9E,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;gBAC9C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,eAAe,GAAG,IAAI,CAAC;gBAClD,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,UAAU,GAAG,eAAe,GAAG,WAAW,GAAG,IAAI,CAAC;gBAC5E,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,UAAU,GAAG,cAAc,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9E,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;gBAC7C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,WAAW,GAAG,cAAc,GAAG,UAAU,GAAG,IAAI,CAAC;gBAC5E,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;gBAChD,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;YAClC,CAAC;YAED,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACzB,CAAC;QAAA,CAAC;QAEF,kBAAkB,MAAM,EAAE,SAAkB;YACxC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YAEpB,IAAI,GAAW,CAAC;YAEhB,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACzD,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,kBAAkB,GAAG,IAAI,CAAC;gBAC1B,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC;YACjC,CAAC;YAED,EAAE,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACtC,CAAC;QACL,CAAC;QAED,4BAA4B,MAAM,EAAE,MAAM;YACtC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YACpB,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;YAEvB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC5B,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAClC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAClC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACtC,CAAC;QAED;YACI,UAAU,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QAC/C,CAAC;IAEL,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,EAEN;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,uBAAuB;YACpC,UAAU,EAAE,4BAA4B;SAC3C,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,cAAc,CAAC;SACtB,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;AAEvD,CAAC,CAAC,EAAE,CAAC;;;ACxJL,YAAY,CAAC;AAEF,QAAA,qBAAqB,GAAG,qBAAqB,CAAC;AAEzD;IAAA;IAaA,CAAC;IAAD,sBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,0CAAe;AAa3B,CAAC;AA2BF;IAII,0BAAmB,MAAuB,EAAE,UAAgC;QACxE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,oCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,mCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,sCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,sCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,mCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAiB;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,mCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,+BAAI,GAAX,UAAY,KAAa,EAAE,QAAgB,EAAE,QAAgB,EAAE,eAAqB;QAChF,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEjC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAE/B,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,+BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,0CAAe,GAAvB;QACG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,6BAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9D,CAAC;IACL,uBAAC;AAAD,CAtFA,AAsFC,IAAA;AAED;IAAA;QACY,YAAO,GAAoB,IAAI,eAAe,EAAE,CAAC;IA0F7D,CAAC;IAvFG,sBAAW,qCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAsB;YACpC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,eAAe,EAAE,CAAC;QAClD,CAAC;;;OAJA;IAMD,sBAAW,8CAAe;aAA1B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;QACxC,CAAC;aAED,UAA2B,KAAa;YACpC,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;QACzC,CAAC;;;OAJA;IAMD,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAW,uCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAJA;IAMD,sBAAW,uCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAJA;IAMD,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAiB;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMM,+BAAG,GAAV,UAAW,KAAa,EAAE,QAAgB,EAAE,QAAgB,EAAE,eAAqB;QAC/E,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEjC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAE/B,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;IACnC,CAAC;IAEM,iCAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;IAC9B,CAAC;IAEM,gCAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEnE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEL,wBAAC;AAAD,CA3FA,AA2FC,IAAA;AAGD,OAAO;KACF,MAAM,CAAC,cAAc,CAAC;KACtB,QAAQ,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;;;ACpOjD,YAAY,CAAC;;;;AAEb,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAEnE,8BAA4B;AAC5B,gCAA8B;AAE9B,wCAAmC;;;ACPnC,YAAY,CAAC;AAGb,CAAC;IAED,oCAAoC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU;QACzF,UAAU,CAAC;QAGX,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAElC,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAElC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;QAEtD,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;QAEvC,0BAA0B,KAAK,EAAE,MAAM;YACnC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3B,CAAC;QAED;YACI,IAAI,UAAU,EAAE,YAAY,CAAC;YAE7B,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAEpC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7B,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;gBACtC,UAAU,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;YAC5C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;gBACtC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAC3B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,UAAU,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;YAC/C,CAAC;QACL,CAAC;IAEL,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,cAAc;gBACxB,IAAI,EAAE,UAAU;aACnB;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,mBAAmB;YAChC,UAAU,EAAE,0BAA0B;SACzC,CAAC;IACN,CAAC;IAGD,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AAE/C,CAAC,CAAC,EAAE,CAAC;;;AC3DL,YAAY,CAAC;AAEF,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAErD;IAAA;IAWA,CAAC;IAAD,oBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,sCAAa;AAWzB,CAAC;AAsBF;IAII,wBAAmB,MAAqB,EAAE,UAAgC;QACtE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,kCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAEO,2CAAkB,GAA1B,UAA2B,eAAqB;QAC5C,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,CAAC;IACL,CAAC;IAEM,iCAAQ,GAAf,UAAgB,eAAqB;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,iCAAQ,GAAf,UAAgB,IAAY,EAAE,eAAqB;QAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,iCAAQ,GAAf,UAAgB,eAAqB;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,kCAAS,GAAhB,UAAiB,QAAgB,EAAE,eAAqB;QACpD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAClE,CAAC;IACL,qBAAC;AAAD,CA7DA,AA6DC,IAAA;AAED;IAAA;QACY,YAAO,GAAkB,IAAI,aAAa,EAAE,CAAC;IAyDzD,CAAC;IAtDG,sBAAW,mCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAoB;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,aAAa,EAAE,CAAC;QAChD,CAAC;;;OAJA;IAMO,4CAAkB,GAA1B,UAA2B,eAAqB;QAC5C,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAE/B,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;IACnC,CAAC;IAEM,iCAAO,GAAd,UAAe,eAAqB;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,iCAAO,GAAd,UAAe,IAAY,EAAE,eAAqB;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,iCAAO,GAAd,UAAe,eAAqB;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,kCAAQ,GAAf,UAAgB,QAAgB,EAAE,eAAqB;QACnD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,+BAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAEM,8BAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEL,sBAAC;AAAD,CA1DA,AA0DC,IAAA;AAGD,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;;;ACnK7C,YAAY,CAAC;;;;AAEb,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAErF,4BAA0B;AAC1B,8BAA4B;AAE5B,sCAAiC;;;ACPhC,YAAY,CAAC;;;;AAEd,0CAAwC;AACxC,8CAA4C;AAC5C,wCAAsC;AACtC,gCAA8B;AAC9B,qBAAmB;AACnB,oBAAkB;AAClB,oBAAkB;AAClB,wBAAsB;AACtB,qBAAmB;AACnB,oBAAkB;AAClB,kBAAgB;AAChB,kBAAgB;AAChB,+BAA6B;AAE7B,OAAO;KACF,MAAM,CAAC,QAAQ,EAAE;IACd,eAAe;IACf,aAAa;IACb,SAAS;IACT,WAAW;IACX,cAAc;IACd,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,cAAc;CACjB,CAAC,CAAC;AAEP,+BAA0B;AAC1B,8BAAyB;AACzB,kCAA6B;AAC7B,8BAAyB;AACzB,+BAA0B;AAC1B,4BAAuB;AACvB,4BAAuB;AACvB,8BAAyB;;;ACtCzB,YAAY,CAAC;AAGb,CAAC;IAED;QAII,2CACI,MAAW,EACX,QAAa,EACb,MAAW,EACX,UAAgC,EAChC,QAA4B,EAC5B,SAAc;YAEd,UAAU,CAAC;YAcR,cAAS,GAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAZtC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;YAGvF,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YAEzC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAGlC,UAAU,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACzD,CAAC;QAID,sBAAW,uDAAQ;iBAAnB;gBACI,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC7D,CAAC;;;WAAA;QAEM,wDAAY,GAAnB,UAAoB,IAAI;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC;QAEM,2DAAe,GAAtB,UAAuB,QAAQ;YAA/B,iBAMC;YALG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC;oBACV,KAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC;gBAC7C,CAAC,EAAE,CAAC,CAAC,CAAC;YACV,CAAC;QACL,CAAC;QAEL,wCAAC;IAAD,CA5CA,AA4CC,IAAA;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,SAAS,EAAE,YAAY;aAC1B;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,UAAU,OAAO,EAAE,IAAI;gBAChC,MAAM,CAAC,8BAA8B,CAAC;YAC1C,CAAC;YACD,UAAU,EAAE,iCAAiC;YAC7C,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,mBAAmB,EAAE;QACzB,YAAY,EAAE,kBAAkB,EAAE,kBAAkB;KACvD,CAAC;SACD,SAAS,CAAC,mBAAmB,EAAE,uBAAuB,CAAC,CAAC;AAE7D,CAAC,CAAC,EAAE,CAAC;;;ACxEL,YAAY,CAAC;AAGb,CAAC;IAEG,oCAAoC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU;QAC7H,UAAU,CAAC;QAEX,IAAI,iBAAiB,GAAG,GAAG,EACvB,iBAAiB,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC;QAEnD,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAEzC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC;QAGzD,cAAc,EAAE,CAAC;QAEjB,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAE5C,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAEvC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,eAAe,CAAC,CAAC;QACrD,UAAU,CAAC,GAAG,CAAC,wBAAwB,EAAE,cAAc,CAAC,CAAC;QAEzD,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC9B,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;QACvC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE3B,MAAM,CAAC;QAEP;YACI,IAAI,SAAS,CAAC;YACd,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvC,SAAS,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,SAAS,GAAG,MAAM,CAAC,SAAS,KAAK,KAAK,IAAI,MAAM,CAAC,SAAS,KAAK,OAAO,CAAC;YAC3E,CAAC;YAED,MAAM,CAAC,WAAW,GAAG,SAAS,CAAC;QACnC,CAAC;QAED;YACI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAA;YAAC,CAAC;YAEnC,MAAM,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;YAEnC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,iBAAiB,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;YAC1D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,iBAAiB,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;YACvD,CAAC;YACD,UAAU,CAAC,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxD,CAAC;QAED,kBAAkB,IAAI;YAClB,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;QAED,wBAAwB,cAAc;YAClC,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,IAAI;gBACjC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAChB,MAAM,GAAG,KAAK,CAAC;YACvB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAED,yBAAyB,KAAK,EAAE,MAAM;YAClC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YAEpB,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACtC,CAAC;QAED,wBAAwB,KAAK,EAAE,KAAK;YAGhC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC;YAEnB,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;YAClC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC;YACnC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;YAE7C,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;QAChC,CAAC;QAED,kBAAkB,IAAI;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnB,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gBACtE,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBACtD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpB,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gBACtE,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAChD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClE,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvE,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;YAGD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,mBAAmB,KAAK,EAAE,IAAI;YAC1B,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,UAAU,CAAC,KAAK,EAAE,CAAC;gBACnB,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClE,UAAU,CAAC,KAAK,EAAE,CAAC;oBACnB,MAAM,CAAC;gBACX,CAAC;gBAED,UAAU,CAAC,KAAK,EAAE,CAAC;gBACnB,QAAQ,CAAC;oBACL,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACtC,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAEtB,MAAM,CAAC;YACX,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBAChB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvE,UAAU,CAAC,KAAK,EAAE,CAAC;oBACnB,MAAM,CAAC;gBACX,CAAC;gBAED,UAAU,CAAC,KAAK,EAAE,CAAC;gBACnB,QAAQ,CAAC;oBACL,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC5B,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAEtB,MAAM,CAAC;YACX,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClB,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gBAEtE,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBACvD,UAAU,CAAC,KAAK,EAAE,CAAC;oBACnB,MAAM,CAAC;gBACX,CAAC;gBAED,UAAU,CAAC,KAAK,EAAE,CAAC;gBACnB,QAAQ,CAAC;oBACL,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAC1B,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBACrC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC5C,CAAC;gBACL,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAEtB,MAAM,CAAC;YACX,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBAChB,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAE5C,UAAU,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;IACL,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,EAGN;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,mBAAmB;YAChC,UAAU,EAAE,0BAA0B;SACzC,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AAEnD,CAAC,CAAC,EAAE,CAAC;;;AC7LL,YAAY,CAAC;AAEF,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAErD;IAAA;IA2BA,CAAC;IAAD,kBAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,kCAAW;AA6BxB;IAAA;IAWA,CAAC;IAAD,qBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,wCAAc;AAa3B;IAAA;IAGA,CAAC;IAAD,oBAAC;AAAD,CAHA,AAGC,IAAA;AAHY,sCAAa;AAkB1B;IAII,wBACI,MAAqB,EACrB,UAAgC;QAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,oCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAuB;YACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,IAAI,EAAE,CAAC;YACpC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,uCAAW;aAAtB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACpC,CAAC;aAeD,UAAuB,KAAa;YAChC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OAlBA;IAEM,yCAAgB,GAAvB,UAAwB,IAAY,EAAE,KAAa;QAC/C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC;QAE/C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,UAAC,CAAC;gBACd,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;oBACf,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAOM,oCAAW,GAAlB,UAAmB,IAAY,EAAE,KAAa;QAC1C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC;QAE/C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,UAAC,CAAC;gBACd,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;oBACf,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB;QACI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,UAAC,CAAC;gBACd,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IACL,qBAAC;AAAD,CArEA,AAqEC,IAAA;AAED;IAAA;QACY,YAAO,GAAkB;YAC7B,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,cAAc;SAC9B,CAAC;IA2BN,CAAC;IAxBG,sBAAW,qCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAuB;YACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,IAAI,EAAE,CAAC;QACxC,CAAC;;;OAJA;IAMD,sBAAW,wCAAW;aAAtB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACpC,CAAC;aAED,UAAuB,KAAa;YAChC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;QACrC,CAAC;;;OAJA;IAMM,8BAAI,GAAX,UAAY,UAAU;QAClB,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,sBAAC;AAAD,CA/BA,AA+BC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;;;AC1K7C,YAAY,CAAC;;;;AAEb,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAErF,4BAA0B;AAC1B,8BAA4B;AAE5B,sCAAiC;;;ACPjC,YAAY,CAAC;AAIb,iDAAqD;AACrD,iDAAuD;AAGvD,CAAC;IAED;QAQI,6BACI,QAAQ,EACR,UAAgC,EAChC,SAAyB;YAEzB,UAAU,CAAC;YALf,iBAkBC;YArBM,YAAO,GAAY,KAAK,CAAC;YACzB,WAAM,GAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;YAS9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAGzB,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;YAEpC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,UAAU,CAAC,GAAG,CAAC,kCAAkB,EAAE,UAAC,KAAK,EAAE,MAAM;gBAC7C,KAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,yCAAW,GAAnB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAEf,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACpC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;YAEzD,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACvC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YAC5D,CAAC;QACL,CAAC;QAEO,6CAAe,GAAvB,UAAwB,KAAK,EAAE,MAAM;YACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;QAEO,uCAAS,GAAjB;YACI,UAAU,CAAC;gBACP,IAAI,OAAO,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC;gBACpC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;oBACnB,OAAO,CAAC,KAAK,EAAE,CAAC;YACxB,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC;QAEM,oCAAM,GAAb;YACI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;QAEM,qCAAO,GAAd;YACI,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAE9B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI;gBACA,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,oCAAoB,EAAE,MAAM,CAAC,CAAC;QACjE,CAAC;QAEM,mCAAK,GAAZ;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,SAAS,EAAE,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC;QACL,CAAC;QAEM,uCAAS,GAAhB,UAAiB,KAAU;YAEvB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,EAAE,CAAC;YAEnB,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC;QACL,CAAC;QACL,0BAAC;IAAD,CAjGA,AAiGC,IAAA;IAGD;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,uBAAuB;YACpC,UAAU,EAAE,mBAAmB;YAC/B,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC;SACzB,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;AAEnD,CAAC,CAAC,EAAE,CAAC;;;AC5HL,YAAY,CAAC;AAEF,QAAA,eAAe,GAAG,eAAe,CAAC;AAClC,QAAA,gBAAgB,GAAG,gBAAgB,CAAC;AACpC,QAAA,kBAAkB,GAAG,kBAAkB,CAAC;AACxC,QAAA,oBAAoB,GAAG,oBAAoB,CAAC;AAEvD;IAAA;IAWA,CAAC;IAAD,mBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,oCAAY;AA+BzB;IAII,uBACI,MAAoB,EACpB,UAAgC;QAFpC,iBASC;QALG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,UAAU,CAAC,GAAG,CAAC,uBAAe,EAAE,cAAQ,KAAI,CAAC,IAAI,CAAA,CAAC,CAAC,CAAC,CAAC;QACrD,UAAU,CAAC,GAAG,CAAC,wBAAgB,EAAE,cAAQ,KAAI,CAAC,KAAK,CAAA,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,sBAAW,iCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,mCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,iCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/B,CAAC;aAED,UAAkB,KAAU;YACxB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,kCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAe;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,mCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAiC;YACjD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,2BAAG,GAAV,UAAW,QAAoC,EAAE,QAAiB,EAAE,MAAY,EAAE,OAAkB;QAChG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,4BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,8BAAM,GAAb;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,uCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,0BAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IACL,oBAAC;AAAD,CAxFA,AAwFC,IAAA;AAED;IAAA;QACY,YAAO,GAAiB,IAAI,YAAY,EAAE,CAAC;QAC3C,aAAQ,GAAkB,IAAI,CAAC;IAU3C,CAAC;IARU,6BAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEhE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,qBAAC;AAAD,CAZA,AAYC,IAAA;AAGD,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC;KACzB,QAAQ,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;;;AChJ3C,YAAY,CAAC;;;;AAEb,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAEvF,2BAAyB;AACzB,gCAA8B;AAE9B,qCAAgC;;;ACPhC,YAAY,CAAC;AAGb,CAAC;IAEG,oCAAoC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU;QACvG,UAAU,CAAC;QAGX,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,EACvE,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI,EACtF,aAAa,GAAG,WAAW,EAC3B,QAAQ,GAAG,GAAG,EACd,WAAW,GAAG,GAAG,EACjB,UAAU,GAAG,EAAE,EACf,UAAU,GAAG,KAAK,EAClB,iBAAiB,GAAG,GAAG,EACvB,gBAAgB,CAAC;QAErB,QAAQ,GAAG,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC;QAExD,MAAM,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE;gBACJ,EAAE,EAAE,QAAQ;gBACZ,QAAQ,EAAE,gBAAgB;gBAC1B,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,KAAK;gBACnB,cAAc,EAAE,KAAK;gBACrB,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE,IAAI;gBACZ,gBAAgB,EAAE,KAAK;aAC1B;YACD,KAAK,EAAE;gBACH,EAAE,EAAE,OAAO;gBACX,QAAQ,EAAE,2CAA2C;gBACrD,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,KAAK;gBACrB,UAAU,EAAE,KAAK;gBACjB,MAAM,EAAE,KAAK;gBACb,gBAAgB,EAAE,IAAI;aACzB;YACD,KAAK,EAAE;gBACH,EAAE,EAAE,OAAO;gBACX,QAAQ,EAAE,sBAAsB;gBAChC,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,IAAI;gBACpB,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE,IAAI;gBACZ,gBAAgB,EAAE,IAAI;aACzB;YACD,MAAM,EAAE;gBACJ,EAAE,EAAE,QAAQ;gBACZ,QAAQ,EAAE,iBAAiB;gBAC3B,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,KAAK;gBACrB,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE,IAAI;gBACZ,gBAAgB,EAAE,KAAK;aAC1B;SACJ,CAAC;QAEF,gBAAgB,GAAG,cAAc,EAAE,CAAC;QAGpC,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;QAGxC,WAAW,EAAE,CAAC;QAEd,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;YACzD,QAAQ,CAAC;gBACL,gBAAgB,EAAE,CAAA;YACtB,CAAC,EAAE,GAAG,CAAC,CAAC;YAER,IAAI,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;YACpD,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;YAC/C,UAAU,CAAC,GAAG,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;QACtD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,UAAU,GAAG,KAAK,CAAC;YACnB,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3B,QAAQ,CAAC;gBACL,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACvB,CAAC,EAAE,GAAG,CAAC,CAAC;QAEZ,CAAC;QAED,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,cAAc,CAAC,CAAC;QACpD,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;QAEtD,MAAM,CAAC;QAEP;YACI,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,WAAW,IAAI,QAAQ,CAAC,CAAC,CAAC;YAE9D,CAAC;QACL,CAAC;QAGD;YACI,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACvD,MAAM,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC;YAChC,CAAC;QACL,CAAC;QAED,0BAA0B,KAAK,EAAE,MAAM;YACnC,IAAI,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;YAE1B,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACpC,CAAC;QACL,CAAC;QAED,wBAAwB,KAAK;YACzB,UAAU,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;QAED,wBAAwB,KAAK,EAAE,KAAK;YAChC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;gBAClE,QAAQ,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC;QACL,CAAC;QAED;YACI,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAA;YAAC,CAAC;YAEtE,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACb,QAAQ,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;gBAE9C,MAAM,CAAC;YACX,CAAC;YAED,IAAI,SAAS,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,UAAU,EAAE,CAAC;YAC9C,IAAI,YAAY,GAAG,CAAC,CAAC,qBAAqB,CAAC,CAAC,UAAU,EAAE,CAAC;YACzD,IAAI,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;YAEvD,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,GAAG,gBAAgB,CAAC,EAAG,CAAC,CAAC,CAAC;gBAClD,QAAQ,CAAC,QAAQ,CAAG,CAAC;gBACrB,MAAM,CAAC;YACX,CAAC;YACD,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,GAAG,gBAAgB,CAAC,EAAG,CAAC,CAAC,CAAC;gBAClD,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAClB,MAAM,CAAC;YACX,CAAC;YACD,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,GAAG,gBAAgB,CAAC,EAAG,CAAC,CAAC,CAAC;gBAClD,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAClB,MAAM,CAAC;YACX,CAAC;YACD,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACvB,CAAC;QAED,kBAAkB,KAAa;YAC3B,EAAE,CAAC,CAAC,UAAU,CAAC;gBAAC,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE,IAAI,KAAK,CAAC;gBAAC,MAAM,CAAC;YAEnE,EAAE,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACpB,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;YAC3C,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC;gBACnB,QAAQ,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;YACjD,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACpB,QAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;YAC5C,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC;gBACnB,QAAQ,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;YACjD,CAAC;YAED,UAAU,GAAG,IAAI,CAAC;YAClB,EAAE,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACpB,UAAU,CAAC,KAAK,EAAE,CAAC;YACvB,CAAC;YACD,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7C,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAEhD,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC;YAEvC,QAAQ,CAAC;gBACL,gBAAgB,EAAE,CAAA;YACtB,CAAC,EAAE,EAAE,CAAC,CAAC;YAGP,QAAQ,CAAC;gBACL,UAAU,GAAG,KAAK,CAAC;YACvB,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAE1B,CAAC;IACL,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,sBAAsB;YACnC,UAAU,EAAE,0BAA0B;SACzC,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AAEnD,CAAC,CAAC,EAAE,CAAC;;;ACpNL,YAAY,CAAC;AAGb,CAAC;IAEG,wCAAwC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU;QACpF,UAAU,CAAC;QAEX,IAAI,QAAQ,GAAG,EAAE,GAAG,MAAM,CAAC,cAAc,CAAC;QAC1C,IAAI,SAAS,GAAG,IAAI,CAAC;QAGrB,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACV,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACrC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC;QAED,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAA;QACzC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;QAEtD,0BAA0B,KAAK,EAAE,MAAM;YACnC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;YAC/B,IAAI,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,gBAAgB,IAAI,SAAS,GAAG,gBAAgB,CAAC,CAAC;YAE/E,EAAE,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;gBAC1B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QACjC,CAAC;IAEL,CAAC;IAED,8BAA8B,aAAa;QACvC,UAAU,CAAC;QAEX,IAAI,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAE5B,MAAM,CAAC;YACH,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,sBAAsB,MAAW,EAAE,QAAQ,EAAE,MAAM;gBACrD,MAAM,CAAC,IAAI,GAAG,cAAc,MAAM,CAAC,MAAM,CAAC,OAAO,CAAA,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACrC,CAAC;YACD,UAAU,EAAE,8BAA8B;SAC7C,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAAC;AAE3D,CAAC,CAAC,EAAE,CAAC;;;ACvDL,YAAY,CAAC;AAEF,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAC1C,QAAA,wBAAwB,GAAG,wBAAwB,CAAC;AACpD,QAAA,gBAAgB,GAAG,gBAAgB,CAAC;AACpC,QAAA,iBAAiB,GAAG,iBAAiB,CAAC;AAEjD;IAAA;IAMA,CAAC;IAAD,oBAAC;AAAD,CANA,AAMC,IAAA;AANY,sCAAa;AAuC1B;IAOI,wBAAmB,MAAqB,EAAE,UAAgC,EAAE,UAAuC;QAC/G,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,sBAAW,kCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,mCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAW,iCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,iCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,gCAAwB,EAAE,KAAK,CAAC,CAAC;QAChE,CAAC;;;OALA;IAOM,6BAAI,GAAX;QACI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;IAEM,8BAAK,GAAZ;QACI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;IAEM,+BAAM,GAAb;QACI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC;IACjD,CAAC;IAEM,6BAAI,GAAX;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAEM,6BAAI,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAEM,iCAAQ,GAAf;QAAA,iBAKC;QALe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB;QAAA,iBAKC;QALkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IACL,qBAAC;AAAD,CAvFA,AAuFC,IAAA;AAED;IAAA;QACY,YAAO,GAAkB;YAC7B,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI;SAChB,CAAC;IAoEN,CAAC;IAhEG,sBAAW,mCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAoB;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,aAAa,EAAE,CAAC;QAChD,CAAC;;;OAJA;IAMD,sBAAW,kCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACrC,CAAC;;;OAJA;IAMD,sBAAW,iCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAW,oCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAc;YAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAW,oCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAe;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,IAAI,EAAE,CAAC;QACvC,CAAC;;;OAJA;IAMM,kCAAQ,GAAf;QAAA,iBAIC;QAJe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qCAAW,GAAlB;QAAA,iBAIC;QAJkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,8BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACrC,CAAC;IAEM,8BAAI,GAAX,UAAY,UAAgC,EAAE,UAAuC;QACjF,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAE7E,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,sBAAC;AAAD,CA3EA,AA2EC,IAAA;AAED,2BAA2B,UAAgC,EAAE,UAA2B;IACpF,UAAU,CAAC,GAAG,CAAC,wBAAgB,EAAE,cAAQ,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,UAAU,CAAC,GAAG,CAAC,yBAAiB,EAAE,cAAQ,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC;AAED,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC;KACvC,GAAG,CAAC,iBAAiB,CAAC,CAAC;;;AC5N5B,YAAY,CAAC;;;;AAEb,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAEjE,4BAA0B;AAC1B,kCAAgC;AAChC,8BAA4B;AAE5B,sCAAiC;;;ACRjC,YAAY,CAAC;AAGb,CAAC;IAEG,iCAAiC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ;QACxG,UAAU,CAAC;QAEX,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,EACvE,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,EACvE,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,EACnE,YAAY,GAAG,SAAS,CAAC;QAE7B,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;QAErB,EAAE,CAAC,CAAC,QAAQ,CAAC;YACT,YAAY,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;YACvB,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC;QAErC,MAAM,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,MAAM,GAAG,YAAY,GAAG,QAAQ,CAAC;QAEvE,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjD,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;YACrE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YACpE,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,QAAQ,CAAC;gBACL,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACZ,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;gBACxD,CAAC;gBACD,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE;oBACb,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;oBACpD,QAAQ,CAAC;wBACL,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;oBACxD,CAAC,EAAE,EAAE,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC;QAED,MAAM,CAAC,KAAK,GAAG,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC;QAC5D,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;QAEzE,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QACxF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjD,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;YACrE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,YAAY,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YACpE,CAAC;QACL,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,CAAC,CAAC;QACtD,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC;QAExD,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QAEnB,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,QAAQ;gBAC3C,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,QAAQ,IAAI,CAAC,CAAC;gBAC5C,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC;YAC5D,CAAC,CAAC,CAAC;QACP,CAAC;QAED,MAAM,CAAC;QAEP;YACI,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YAC/B,CAAC;QACL,CAAC;QAAA,CAAC;QAEF,qBAAqB,KAAK;YACtB,MAAM,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC;QACvE,CAAC;QAAA,CAAC;QAEF,kBAAkB,KAAK;YACnB,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAAC,MAAM,CAAC;YAC9B,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;YACpC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC;YACxD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YACzF,CAAC;QACL,CAAC;QAAA,CAAC;QAEF;YACI,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QAAA,CAAC;QAEF;YACI,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;QAAA,CAAC;QAEF,mBAAmB,KAAK;YACpB,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAChC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;YACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;QAC3C,CAAC;IAEL,CAAC;IAGD;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,cAAc;gBACxB,cAAc,EAAE,gBAAgB;gBAChC,WAAW,EAAE,iBAAiB;gBAC9B,MAAM,EAAE,gBAAgB;aAC3B;YACD,WAAW,EAAE,gBAAgB;YAC7B,UAAU,EAAE,uBAAuB;SACtC,CAAC;IACN,CAAC;IAGD,OAAO;SACF,MAAM,CAAC,SAAS,EAAE,CAAC,kBAAkB,CAAC,CAAC;SACvC,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AAE7C,CAAC,CAAC,EAAE,CAAC;;;AC9IL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-nav.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nexport let ActionsChangedEvent = 'pipActionsChanged';\n\nexport class SimpleActionItem {\n    // Name to refer to the item\n    public name: string;\n    // Link visible title\n    public title?: string;\n    // Show divider instead of title\n    public divider?: boolean;\n    // Icon name from $iconProvider\n    public icon?: string;\n    // Counter badge\n    public count?: number;\n    // Access function\n    public access?: (action: SimpleActionItem) => boolean;\n    // Show on specified breakpoints\n    public breakpoints?: string[];\n    // window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public click?: (action: SimpleActionItem) => void;\n}\n\nexport class ActionItem extends SimpleActionItem {\n    public subActions: SimpleActionItem[];\n}\n\nexport class ActionsConfig {\n    // Primary global actions visible on the screen\n    public primaryGlobalActions: ActionItem[] = [];\n    // Primary local actions visible on the screen\n    public primaryLocalActions: ActionItem[] = [];\n\n    // Secondary global actions available in popup\n    public secondaryGlobalActions: ActionItem[] = [];\n    // Secondary local actions available in popup\n    public secondaryLocalActions: ActionItem[]= [];\n}\n\nexport interface IActionsService {\n    readonly config: ActionsConfig;\n\n    primaryGlobalActions: ActionItem[];\n    primaryLocalActions: ActionItem[];\n    secondaryGlobalActions: ActionItem[];\n    secondaryLocalActions: ActionItem[];    \n\n    show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void;\n    hide(): void;\n    updateCount(link: string, count: number): void; \n    clearCounts(): void;\n}\n\nexport interface IActionsProvider extends ng.IServiceProvider {\n    config: ActionsConfig;\n    \n    primaryGlobalActions: ActionItem[];\n    primaryLocalActions: ActionItem[];\n    secondaryGlobalActions: ActionItem[];\n    secondaryLocalActions: ActionItem[];    \n}\n\nclass ActionsService implements IActionsService {\n    private _config: ActionsConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: ActionsConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): ActionsConfig {\n        return this._config;\n    }\n\n    public get primaryGlobalActions(): ActionItem[] {\n        return this._config.primaryGlobalActions;\n    }\n\n    public set primaryGlobalActions(value: ActionItem[]) {\n        this._config.primaryGlobalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get secondaryGlobalActions(): ActionItem[] {\n        return this._config.secondaryGlobalActions;\n    }\n\n    public set secondaryGlobalActions(value: ActionItem[]) {\n        this._config.secondaryGlobalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get primaryLocalActions(): ActionItem[] {\n        return this._config.primaryLocalActions;\n    }\n\n    public set primaryLocalActions(value: ActionItem[]) {\n        this._config.primaryLocalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get secondaryLocalActions(): ActionItem[] {\n        return this._config.secondaryLocalActions;\n    }\n\n    public set secondaryLocalActions(value: ActionItem[]) {\n        this._config.secondaryLocalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void {\n        this._config.primaryLocalActions = primaryActions || [];\n        this._config.secondaryLocalActions = secondaryActions || [];\n        this.sendChangeEvent();\n    }\n\n    public hide(): void {\n        this._config.primaryLocalActions = [];\n        this._config.secondaryLocalActions = [];\n        this.sendChangeEvent();\n    }\n\n    public updateCount(action: string, count: number) {\n        if (action == null || !_.isNumber(count)) return;\n\n        _.each(this._config.primaryGlobalActions, (a) => {\n            if (a.name == action)\n                a.count = count;\n        });\n        _.each(this._config.primaryLocalActions, (a) => {\n            if (a.name == action)\n                a.count = count;\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public clearCounts(): void {\n        _.each(this._config.primaryGlobalActions, (a) => {\n            a.count = null;\n        });\n        _.each(this._config.primaryLocalActions, (a) => {\n            a.count = null;\n        });\n\n        this.sendChangeEvent();\n    }\n\n    private sendChangeEvent() {\n        this._rootScope.$emit(ActionsChangedEvent, this._config);\n    }\n}\n\nclass ActionsProvider implements IActionsProvider {\n    private _config: ActionsConfig = new ActionsConfig();\n    private _service: ActionsService;\n\n    public get config(): ActionsConfig {\n        return this._config;\n    }\n\n    public set config(value: ActionsConfig) {\n        this._config = value || new ActionsConfig();\n    }\n\n    public get primaryGlobalActions(): ActionItem[] {\n        return this._config.primaryGlobalActions;\n    }\n\n    public set primaryGlobalActions(value: ActionItem[]) {\n        this._config.primaryGlobalActions = value || [];\n    }\n\n    public get secondaryGlobalActions(): ActionItem[] {\n        return this._config.secondaryGlobalActions;\n    }\n\n    public set secondaryGlobalActions(value: ActionItem[]) {\n        this._config.secondaryGlobalActions = value || [];\n    }\n\n    public get primaryLocalActions(): ActionItem[] {\n        return this._config.primaryLocalActions;\n    }\n\n    public set primaryLocalActions(value: ActionItem[]) {\n        this._config.primaryLocalActions = value || [];\n    }\n\n    public get secondaryLocalActions(): ActionItem[] {\n        return this._config.secondaryLocalActions;\n    }\n\n    public set secondaryLocalActions(value: ActionItem[]) {\n        this._config.secondaryLocalActions = value || [];\n    }\n\n    public $get($rootScope) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ActionsService(this._config, $rootScope);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipActions')\n    .provider('pipActions', ActionsProvider);\n\n","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction PrimaryActionsController(\n    $scope, $element, $attrs, $rootScope, $window, $location, $injector, pipActions) {\n\n    // Apply class and call resize\n    $element.addClass('pip-primary-actions');\n\n    if ($scope.localActions) \n        pipActions.primaryLocalActions = $scope.localActions;\n\n    if ($scope.globalActions)\n        pipActions.primaryGlobalActions = $scope.globalActions;\n\n    $scope.config = pipActions.config;\n\n    $rootScope.$on('pipActionsChanged', onActionsChanged);\n\n    $scope.isHidden = isHidden;\n    $scope.actionCount = actionCount;\n    $scope.clickAction = clickAction;\n\n    return;\n    ///////////////////////\n\n    function onActionsChanged(event, config) {\n        $scope.config = config;\n    }\n\n    function isHidden(action) {\n        // Todo: Check breakpoints here\n        return action.access && !action.access(action);\n    }\n\n    function actionCount(action) {\n        if (action.count === null || action.count <= 0) {\n            return '';\n        }\n        if (action.count > 99) {\n            return '!';\n        }\n\n        return action.count;\n    }\n\n    function calcActions(actions) {\n        var count = 0;\n\n        _.each(actions, function (action) {\n            if (!isHidden(action)) {\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    function secondaryActionsVisible() {\n        return calcActions($scope.config.secondaryGlobalActions) > 0 ||\n            calcActions($scope.config.secondaryLocalActions) > 0;\n    }\n\n    function secondaryDividerVisible() {\n        return calcActions($scope.config.secondaryGlobalActions) > 0 &&\n            calcActions($scope.config.secondaryLocalActions) > 0;\n    }\n\n    function clickAction(action, $mdOpenMenu) {\n        if (!action || action.divider) {\n            return;\n        }\n\n        if (action.close) {\n            $scope.originatorEv = null;\n        }\n\n        if (action.menu) {\n            $mdOpenMenu($scope.originatorEv);\n            return;\n        }\n\n        if (action.click) {\n            action.click();\n            return;\n        }\n\n        if (action.href) {\n            $window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            $location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if ($injector.has('$state')) {\n                var $state = $injector.get('$state');\n                $state.go(action.state, action.stateParams);\n            }\n            return;\n        }\n\n        if (action.event) {\n            $rootScope.$broadcast(action.event);\n        } else {\n            // Otherwise raise notification\n            $rootScope.$broadcast('pipActionClicked', action.name);\n        }\n    }\n\n}\n\n\nfunction primaryActionsDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            localActions: '=pipLocalActions',\n            globalActions: '=pipGlobalActions'\n        },\n        replace: false,\n        templateUrl: 'actions/PrimaryActions.html',\n        controller: PrimaryActionsController\n    };\n}\n\n\nangular\n    .module('pipActions')\n    .directive('pipPrimaryActions', primaryActionsDirective);\n\n})();","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction SecondaryActionsController(\n    $scope, $element, $attrs, $rootScope, $window, $location, $injector, pipActions) {\n\n    // Apply class and call resize\n    $element.addClass('pip-secondary-actions');\n\n    if ($scope.localActions) \n        pipActions.secondaryLocalActions = $scope.localActions;\n\n    if ($scope.globalActions) \n        pipActions.secondaryGlobalActions = $scope.globalActions;\n\n    $scope.config = pipActions.config;\n\n    $rootScope.$on('pipActionsChanged', onActionsChanged);\n\n    $scope.isHidden = isHidden;\n    $scope.actionCount = actionCount;\n    $scope.secondaryActionsVisible = secondaryActionsVisible;\n    $scope.secondaryDividerVisible = secondaryDividerVisible;\n\n    $scope.clickAction = clickAction;\n\n    $scope.openMenu = openMenu;\n\n    return;\n    /////////////////////\n\n    function openMenu($mdOpenMenu, ev) {\n        $scope.originatorEv = ev;\n        $mdOpenMenu(ev);\n    }\n\n    function onActionsChanged(event, config) {\n        $scope.config = config;\n\n    }\n\n    function isHidden(action) {\n        return action.access && !action.access(action);\n    }\n\n    function actionCount(action) {\n        if (action.count === null || action.count <= 0) {\n            return '';\n        }\n        if (action.count > 99) {\n            return '!';\n        }\n\n        return action.count;\n    }\n\n    function calcActions(actions) {\n        var count = 0;\n\n        _.each(actions, function (action) {\n            if (!isHidden(action)) {\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    function secondaryActionsVisible() {\n        return calcActions($scope.config.secondaryGlobalActions) > 0 ||\n            calcActions($scope.config.secondaryLocalActions) > 0;\n    }\n\n    function secondaryDividerVisible() {\n        return calcActions($scope.config.secondaryGlobalActions) > 0 &&\n            calcActions($scope.config.secondaryLocalActions) > 0;\n    }\n\n    function clickAction(action, $mdOpenMenu) {\n        if (!action || action.divider) {\n            return;\n        }\n\n        if (action.close) {\n            $scope.originatorEv = null;\n        }\n\n        if (action.menu) {\n            $mdOpenMenu($scope.originatorEv);\n            return;\n        }\n\n        if (action.click) {\n            action.click();\n            return;\n        }\n\n        if (action.href) {\n            $window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            $location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if ($injector.has('$state')) {\n                var $state = $injector.get('$state');\n                $state.go(action.state, action.stateParams);\n            }\n            return;\n        }\n\n        if (action.event) {\n            $rootScope.$broadcast(action.event);\n        } else {\n            // Otherwise raise notification\n            $rootScope.$broadcast('pipActionClicked', action.name);\n        }\n    }\n\n}\n\nfunction secondaryActionsDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            localActions: '=pipLocalActions',\n            globalActions: '=pipGlobalActions'\n        },\n        replace: false,\n        templateUrl: 'actions/SecondaryActions.html',\n        controller: SecondaryActionsController\n    };\n}\n\nangular\n    .module('pipActions')\n    .directive('pipSecondaryActions', secondaryActionsDirective);\n\n})();","'use strict';\n\nangular.module('pipActions', ['ngMaterial', 'pipNav.Templates', 'ui.router']);\n\nimport './ActionsService';\nimport './PrimaryActionsDirective';\nimport './SecondaryActionsDirective';\n\nexport * from './ActionsService';","﻿'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction AppBarDirectiveController($scope, $element, $rootScope, pipAppBar) {\n    \"ngInject\";\n\n    // Apply class and call resize\n    $element.addClass('pip-appbar');\n    $element.addClass('color-primary-bg');\n    \n    //$scope.$emit('pipResizeWindow');\n\n    $scope.config = pipAppBar.config;\n\n    $rootScope.$on('pipAppBarChanged', onAppBarChanged);\n\n    function onAppBarChanged(event, config) {\n        $scope.config = config;\n    }\n}\n\nfunction appbarDirective() {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: true,\n        templateUrl: 'appbar/AppBar.html',\n        controller: AppBarDirectiveController\n    };\n}\n\nangular\n    .module('pipAppBar')\n    .directive('pipAppbar', appbarDirective);\n\n})();","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction AppBarPartDirectiveController($scope, $element, $attrs, $rootScope, pipAppBar) {\n    \"ngInject\";\n\n    var partName = '' + $attrs.pipAppbarPart;\n    var partValue = null;\n\n    // Break part apart\n    var pos = partName.indexOf(':');\n    if (pos > 0) {\n        partValue = partName.substr(pos + 1);\n        partName = partName.substr(0, pos);\n    }\n\n    onAppBarChanged(null, pipAppBar.config);\n\n    $rootScope.$on('pipAppBarChanged', onAppBarChanged);\n\n    function onAppBarChanged(event, config) {\n        var parts = config.parts || {};\n        var currentPartValue = parts[partName];\n\n        // Set visible variable to switch ngIf\n        var visible = !!(partValue ? currentPartValue == partValue : currentPartValue);\n\n        if (visible != $scope.visible)\n            $scope.visible = visible;\n    }\n\n}\n\n// Example is taken from here: http://stackoverflow.com/questions/20325480/angularjs-whats-the-best-practice-to-add-ngif-to-a-directive-programmatically\nfunction appbarPartDirective(ngIfDirective) {\n    \"ngInject\";\n\n    var ngIf = ngIfDirective[0];\n\n    return {\n        transclude: ngIf.transclude,\n        priority: ngIf.priority,\n        terminal: ngIf.terminal,\n        restrict: ngIf.restrict,\n        scope: true,\n        link: function linkFunction($scope: any, $element, $attrs: any) {\n            // Visualize based on visible variable in scope\n            $attrs.ngIf = function () {\n                return $scope.visible;\n            };\n            ngIf.link.apply(ngIf, arguments);\n        },\n        controller: AppBarPartDirectiveController\n    };\n}\n\nangular.module('pipAppBar')\n    .directive('pipAppbarPart', appbarPartDirective);\n\n})();","'use strict';\n\nexport let AppBarChangedEvent = 'pipAppBarChanged';\n\nexport class AppBarConfig {\n    visible: boolean;\n    parts: any;\n    classes: string[];\n} \n\nexport interface IAppBarService {\n    readonly config: AppBarConfig;\n    readonly classes: string[];\n    parts: any;\n\n    show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void;\n    hide(): void;\n \n    addShadow(...breakpoints: string[]): void;\n    removeShadow(): void;\n \n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n \n    part(part: string, value: any): void;\n}\n\nexport interface IAppBarProvider extends ng.IServiceProvider {\n    config: AppBarConfig;\n    parts: any;\n    classes: string[];\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}\n\nclass AppBarService implements IAppBarService {\n    private _config: AppBarConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(config: AppBarConfig, $rootScope: ng.IRootScopeService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): AppBarConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void {\n        this._config.visible = true;\n        this._config.parts = parts || this._config.parts || {};\n        this._config.classes = classes || this._config.classes || [];\n        if (shadowBreakpoints) this.setShadow(shadowBreakpoints);\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.visible = false;\n        this.sendConfigEvent();\n    }\n\n    private hideShadow(): void {\n        this._config.classes = _.reject(this._config.classes, (c) => c.startsWith('pip-shadow'));\n    }\n\n    private setShadow(breakpoints: string[]): void {\n        this.hideShadow();\n\n        if (breakpoints != null && breakpoints.length > 0) {\n            _.each(breakpoints, (bp) => {\n                this._config.classes.push('pip-shadow-' + bp);\n            });\n        } else {\n            this._config.classes.push('pip-shadow');\n        }\n    }\n\n    public addShadow(...breakpoints: string[]): void {\n        this.setShadow(breakpoints);\n        this.sendConfigEvent();\n    }\n\n    public removeShadow(): void {\n        this.hideShadow();\n        this.sendConfigEvent();\n    }\n \n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$broadcast(AppBarChangedEvent, this._config);\n    }\n}\n\nclass AppBarProvider implements IAppBarProvider {\n    private _config: AppBarConfig = {\n        visible: true,\n        parts: {},\n        classes: []\n    };\n    private _service: AppBarService;\n\n    public get config(): AppBarConfig {\n        return this._config;\n    }\n\n    public set config(value: AppBarConfig) {\n        this._config = value || new AppBarConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new AppBarService(this._config, $rootScope);\n\n        return this._service;\n    }     \n}\n\nangular\n    .module('pipAppBar')\n    .provider('pipAppBar', AppBarProvider);\n","'use strict';\n\nangular\n    .module('pipAppBar', ['ngMaterial', 'pipNav.Templates']);\n\nimport './AppBarService';\nimport './AppBarDirective';\nimport './AppBarPartDirective';\n\nexport * from './AppBarService';\n","'use strict';\n\nimport { SimpleActionItem } from '../actions/ActionsService';\nimport { BreadcrumbItem } from './BreadcrumbService';\nimport { BreadcrumbConfig } from './BreadcrumbService';\nimport { IBreadcrumbService } from './BreadcrumbService';\nimport { BreadcrumbChangedEvent } from './BreadcrumbService';\nimport { BreadcrumbBackEvent } from './BreadcrumbService';\nimport { OpenSearchEvent } from '../search/SearchService'\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nclass BreadcrumbController {\n    private _rootScope: ng.IRootScopeService;\n    private _window: ng.IWindowService;\n    private _location: ng.ILocationService;\n    private _injector: ng.auto.IInjectorService;\n    private originatorEv: Event;\n    \n    public config: BreadcrumbConfig;\n\n    public constructor(\n        $element: any, \n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService,\n        $state: ng.ui.IStateService,\n        $location: ng.ILocationService,\n        $injector: ng.auto.IInjectorService,\n        pipBreadcrumb: IBreadcrumbService\n    ) {\n        \"ngInject\";\n\n        this._rootScope = $rootScope;\n        this._window = $window;\n        this._location = $location;\n        this._injector = $injector;\n\n        // Apply class and call resize\n        $element.addClass('pip-breadcrumb');\n\n        this.config = pipBreadcrumb.config;\n\n        $rootScope.$on(BreadcrumbChangedEvent, (event, config) => { this.onBreadcrumbChanged(event, config); });\n        $rootScope.$on(BreadcrumbBackEvent, () => { this.onBreadcrumbBack(); });\n    }\n\n    private onBreadcrumbChanged(event, config) {\n        this.config = config;\n    }\n\n    private onBreadcrumbBack() {\n        let items = this.config.items;\n        // Go to the last breadcrumb item\n        if (_.isArray(items) && items.length > 0) {\n            let item = items[items.length - 1];\n            let backCallback = item.click;\n            if (_.isFunction(backCallback)) \n                backCallback(item);\n            else\n                this._window.history.back();\n        } else\n            this._window.history.back();\n    }\n\n    public onClick(item: BreadcrumbItem) {\n        if (_.isFunction(item.click))\n            item.click(item);\n    }\n\n    public openSearch() {\n        this._rootScope.$broadcast(OpenSearchEvent);\n    }\n    \n    public actionsVisible(item: BreadcrumbItem): boolean {\n\n        return angular.isArray(item.subActions) && item.subActions.length > 1;\n    }\n\n    public onOpenMenu($mdOpenMenu, event: Event) {\n        this.originatorEv = event;\n        $mdOpenMenu(this.originatorEv);\n    }\n\n    public onSubActionClick(action: SimpleActionItem): void { \n        if (!action || action.divider) {\n            return;\n        }\n\n        if (action.click) {\n            action.click(action);\n            return;\n        }\n\n        if (action.href) {\n            this._window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            this._location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if (this._injector.has('$state')) {\n                let $state = this._injector.get('$state') as ng.ui.IStateService\n                $state.go(action.state, action.stateParams);\n            }\n            return;\n        }\n\n        if (action.event) {\n            this._rootScope.$broadcast(action.event);\n            this.originatorEv = null;\n        } else {\n            // Otherwise raise notification\n            this._rootScope.$broadcast('pipActionClicked', action.name);\n            this.originatorEv = null;\n        }\n    }\n}\n\n\nfunction breadcrumbDirective() {\n    return {\n        restrict: 'E',\n        scope: {},\n        replace: false,\n        templateUrl: 'breadcrumb/Breadcrumb.html',\n        controller: BreadcrumbController,\n        controllerAs: 'vm'\n    };\n}\n\n\nangular.module('pipBreadcrumb')\n    .directive('pipBreadcrumb', breadcrumbDirective);\n\n})();","'use strict';\n\nimport { SimpleActionItem } from '../actions/ActionsService';\nexport let BreadcrumbChangedEvent = \"pipBreadcrumbChanged\";\nexport let BreadcrumbBackEvent = \"pipBreadcrumbBack\";\n\nexport class BreadcrumbItem {\n    title: string;\n    click?: (item: BreadcrumbItem) => void;   \n    subActions?: SimpleActionItem[]; \n}\n\nexport class BreadcrumbConfig {\n    text: string;\n    items: BreadcrumbItem[];\n    criteria: string;\n}\n\nexport interface IBreadcrumbService {\n    config: BreadcrumbConfig;\n    text: string;\n    items: BreadcrumbItem[];\n    criteria: string;\n\n    showText(text: string, criteria?: string);\n    showItems(items: BreadcrumbItem[], criteria?: string);\n}\n\nexport interface IBreadcrumbProvider extends ng.IServiceProvider {\n    text: string;\n}\n\n\nclass BreadcrumbService implements IBreadcrumbService {\n    private _config: BreadcrumbConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: BreadcrumbConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config() {\n        return this._config;\n    }\n\n    public get text(): string {\n        return this._config.text;\n    }\n\n    public set text(value: string) {\n        this._config.text = value;\n        this._config.items = null;\n\n        this.sendConfigEvent();\n    }\n\n    public get items(): BreadcrumbItem[] {\n        return this._config.items;\n    }\n\n    public set items(value: BreadcrumbItem[]) {\n        this._config.text = null;\n        this._config.items = value;\n\n        this.sendConfigEvent();\n    }\n\n    public get criteria(): string {\n        return this._config.criteria;\n    }\n\n    public set criteria(value: string) {\n        this._config.criteria = value;\n        this.sendConfigEvent();\n    }\n\n    public showText(text: string, criteria?: string) {\n        this._config.text = text;\n        this._config.items = null;\n        this._config.criteria = criteria;\n        this.sendConfigEvent();\n    }\n\n    public showItems(items: BreadcrumbItem[], criteria?: string) {\n        this._config.items = items || [];\n        this._config.text = null;\n        this._config.criteria = criteria;\n        this.sendConfigEvent();\n    }\n\n    public sendConfigEvent() {\n        this._rootScope.$broadcast(BreadcrumbChangedEvent, this._config);\n    }\n}\n\n\nclass BreadcrumbProvider implements IBreadcrumbProvider {\n    private _config: BreadcrumbConfig = { \n        text: null,\n        items: null,\n        criteria: null\n    };\n    private _service: BreadcrumbService;\n\n    public get text(): string {\n        return this._config.text;\n    }\n\n    public set text(value: string) {\n        this._config.text = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService): any {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new BreadcrumbService(this._config, $rootScope);\n\n        return this._service;\n    }\n}\n\n\nangular.module('pipBreadcrumb')\n    .provider('pipBreadcrumb', BreadcrumbProvider);\n","'use strict';\n\nangular.module('pipBreadcrumb', ['ngMaterial', 'pipNav.Templates', 'pipNav.Translate']);\n\nimport './BreadcrumbDirective';\nimport './BreadcrumbService';\n\nexport * from './BreadcrumbService';\n\n\n","'use strict';\n\nimport { INavIconService } from '../icon/NavIconService';\nimport { INavMenuService } from '../menu/NavMenuService';\nimport { INavHeaderService } from '../header/NavHeaderService';\nimport { IBreadcrumbService } from '../breadcrumb/BreadcrumbService';\nimport { ISearchService } from '../search/SearchService';\nimport { IActionsService } from '../actions/ActionsService';\nimport { IAppBarService } from '../appbar/AppBarService';\nimport { ISideNavService } from '../sidenav/SideNavService';\n\nexport interface INavService {\n    appbar: IAppBarService;\n    icon: INavIconService; \n    breadcrumb: IBreadcrumbService;\n    actions: IActionsService;\n    search: ISearchService;\n    sidenav: ISideNavService;\n    header: INavHeaderService;\n    menu: INavMenuService;   \n\n    reset(): void;\n}\n\nclass NavService implements INavService {\n\n    public constructor($injector) {\n        \"ngInject\";\n\n        this.appbar = $injector.has('pipAppBar') ? $injector.get('pipAppBar') : null;\n        this.icon = $injector.has('pipNavIcon') ? $injector.get('pipNavIcon') : null;\n        this.breadcrumb = $injector.has('pipBreadcrumb') ? $injector.get('pipBreadcrumb') : null;\n        this.actions = $injector.has('pipActions') ? $injector.get('pipActions') : null;\n        this.search = $injector.has('pipSearch') ? $injector.get('pipSearch') : null;\n        this.sidenav = $injector.has('pipSideNav') ? $injector.get('pipSideNav') : null;\n        this.header = $injector.has('pipNavHeader') ? $injector.get('pipNavHeader') : null;\n        this.menu = $injector.has('pipNavMenu') ? $injector.get('pipNavMenu') : null;    \n    }\n\n    public appbar: IAppBarService;\n    public icon: INavIconService;\n    public breadcrumb: IBreadcrumbService;\n    public actions: IActionsService;\n    public search: ISearchService;\n    public sidenav: ISideNavService;        \n    public header: INavHeaderService;\n    public menu: INavMenuService;    \n\n    public reset() {\n        // Reset appbar\n        if (this.appbar) \n            this.appbar.show();\n\n        // Reset icon\n        if (this.icon)\n            this.icon.showMenu();\n\n        // Reset breadcrumb\n        if (this.breadcrumb)\n            this.breadcrumb.showText(null);\n\n        // Reset actions\n        if (this.actions)\n            this.actions.show();\n\n        // Reset search\n        if (this.search)\n            this.search.set(null);\n\n        if (this.sidenav)\n            this.sidenav.show();\n    }\n}\n\nangular\n    .module('pipNavService', [])\n    .service('pipNavService', NavService);","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction translateFilter($injector) {\n    \"ngInject\";\n\n    let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n    return function (key) {\n        return pipTranslate  ? pipTranslate.translate(key) || key : key;\n    }\n}\n\nangular\n    .module('pipNav.Translate', [])\n    .filter('translate', translateFilter);\n\n})();","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction DropdownDirectiveController($scope, $element, $attrs, $injector, $rootScope, $mdMedia, $timeout) {\n    \"ngInject\";\n\n    let pipTheme = $injector.has('pipTheme') ? $injector.get('pipTheme') : null; \n    let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n    let currentTheme = 'default';\n\n    if (pipTheme)\n        currentTheme = pipTheme.use();\n    else if ($rootScope.$theme)\n        currentTheme = $rootScope.$theme;\n\n    $scope.class = ($attrs.class || '') + ' md-' + currentTheme + '-theme';\n\n    //pipAssert.isArray($scope.actions, 'pipDropdown: pip-actions attribute should take an array, but take ' + typeof $scope.actions);\n    $scope.media = pipMedia !== undefined ? pipMedia : $mdMedia;\n    $scope.actions = ($scope.actions && _.isArray($scope.actions)) ? $scope.actions : [];\n    $scope.activeIndex = $scope.activeIndex || 0;\n\n    $scope.disabled = function () {\n        if ($scope.ngDisabled()) {\n            return $scope.ngDisabled();\n        } else {\n            return false;\n        }\n    };\n\n    $scope.onSelect = function (index) {\n        $scope.activeIndex = index;\n        if ($scope.select) {\n            $scope.select($scope.actions[index], $scope.activeIndex);\n        }\n\n        if ($scope.pipChange) {\n            $timeout(function() {\n                $scope.pipChange();\n            });\n        }\n    };\n\n    $scope.show = function () {\n        if ($scope.showDropdown()) {\n            return $scope.showDropdown();\n        } else {\n            return true;\n        }\n    };\n\n}\n\nfunction dropdownDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            ngDisabled: '&',\n            actions: '=pipActions',\n            showDropdown: '&pipShow',\n            activeIndex: '=pipActiveIndex',\n            select: '=pipDropdownSelect',\n            pipChange: '&'\n        },\n        templateUrl: 'dropdown/Dropdown.html',\n        controller: DropdownDirectiveController\n    };\n}\n\nangular\n    .module('pipDropdown', ['pipNav.Templates'])\n    .directive('pipDropdown', dropdownDirective);\n\n})();","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\n    function NavHeaderDirectiveController($scope, $element, $rootScope, $timeout, pipNavHeader) {\n        \"ngInject\";\n\n        var\n            image = null,\n            imageBlock = $element.find('.pip-sticky-nav-header-user'),\n            $image,\n            currentState,\n            loadedDefaultImage = false;\n\n        // Apply class and call resize\n        $element.addClass('pip-sticky-nav-header');\n\n        $scope.onUserClick = onUserClick;\n        $scope.onImageError = onImageError;\n        $scope.onImageLoad = onImageLoad;\n\n        $timeout(function () {\n            $image = $element.find('.pip-sticky-nav-header-user-image');\n\n            if ($image[0]) {\n                $image[0].onload = onImageLoad;\n                $image[0].onerror = onImageError;\n            } else {\n                $image.onload = onImageLoad;\n                $image.onerror = onImageError;\n            }\n\n            onNavHeaderChanged(null, pipNavHeader.config);\n        }, 20);\n\n        $rootScope.$on('pipNavHeaderChanged', onNavHeaderChanged);\n        $rootScope.$on('pipSideNavStateChanged', onStateChanged);\n\n        return;\n\n        function initHeader() {\n            if (!pipNavHeader.config) return;\n\n            $scope.title = pipNavHeader.config.title;\n            $scope.subtitle = pipNavHeader.config.subtitle;\n            $scope.imageUrl = pipNavHeader.config.imageUrl;\n            $scope.imageCss = pipNavHeader.config.imageCss;\n        }\n\n        // When image is loaded resize/reposition it\n        function onImageLoad($event) {\n            var image = $($event.target);\n            setImageMarginCSS(imageBlock, image);\n        };\n\n        function onImageError($event) {\n            if (loadedDefaultImage) return;\n            $scope.$apply(function () {\n                setImage(pipNavHeader.config, true);\n            });\n        };\n\n        function onStateChanged(event, state) {\n            if (state === undefined) return;\n            currentState = state;\n\n            if (state.id == 'toggle') {\n                $timeout(function () {\n                    $scope.showHeader = currentState && currentState.id == 'toggle';\n                }, 400);\n            } else {\n                $scope.showHeader = false;\n            }\n        }\n\n        function setImageMarginCSS(container, image) {\n            var cssParams = {},\n                containerWidth = container.width ? container.width() : container.clientWidth,\n                containerHeight = container.height ? container.height() : container.clientHeight,\n                imageWidth = image[0].naturalWidth || image.width,\n                imageHeight = image[0].naturalHeight || image.height,\n                margin = 0;\n\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n                cssParams['margin-left'] = '' + margin + 'px';\n                cssParams['height'] = '' + containerHeight + 'px';\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px';\n                cssParams['margin-top'] = '';\n            } else {\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n                cssParams['margin-top'] = '' + margin + 'px';\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px';\n                cssParams['width'] = '' + containerWidth + 'px';\n                cssParams['margin-left'] = '';\n            }\n\n            image.css(cssParams);\n        };\n\n        function setImage(config, loadError: boolean) {\n            if (!config) return;\n\n            var url: string;\n\n            if (!loadError && !!config.imageUrl && !loadedDefaultImage) {\n                url = config.imageUrl;\n            } else {\n                loadedDefaultImage = true;\n                url = config.defaultImageUrl;\n            }\n\n            if (url && $image) {\n                $image.attr('src', url);\n            } else {\n                imageBlock.css('display', 'none');\n            }\n        }\n\n        function onNavHeaderChanged($event, config) {\n            if (!config) return;\n            setImage(config, false)\n\n            $scope.title = config.title;\n            $scope.subtitle = config.subtitle;\n            $scope.imageUrl = config.imageUrl;\n            $scope.imageCss = config.imageCss;\n        }\n\n        function onUserClick() {\n            $rootScope.$broadcast('pipNavUserClicked');\n        }\n\n    }\n\n    function navHeaderDirective() {\n        return {\n            restrict: 'EA',\n            scope: {\n\n            },\n            replace: false,\n            templateUrl: 'header/NavHeader.html',\n            controller: NavHeaderDirectiveController\n        };\n    }\n\n    angular\n        .module('pipNavHeader')\n        .directive('pipNavHeader', navHeaderDirective);\n\n})();","'use strict';\n\nexport let NavHeaderChangedEvent = 'pipNavHeaderChanged';\n\nexport class NavHeaderConfig {\n    // Image url\n    public imageUrl: string;\n    // Image url\n    public defaultImageUrl: string;\n    // Title\n    public title: string;\n    // Subtitle\n    public subtitle: string;\n    // Handle header click event\n    click: () => void;\n    // Event name\n    event: string\n};\n\nexport interface INavHeaderService {\n    readonly config: NavHeaderConfig;\n    imageUrl: string;\n    title: string;\n    subtitle: string;\n    click: () => void;\n    event: string;\n\n    show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\n    hide(): void;\n}\n\nexport interface INavHeaderProvider extends ng.IServiceProvider {\n    config: NavHeaderConfig;\n    defaultImageUrl: string;\n    imageUrl: string;\n    title: string;\n    subtitle: string;\n    click: () => void;\n    event: string;\n\n    set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\n    clear(): void;\n}\n\nclass NavHeaderService {\n    private _config: NavHeaderConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(config: NavHeaderConfig, $rootScope: ng.IRootScopeService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): NavHeaderConfig {\n        return this._config;\n    }\n\n    public get title(): string {\n        return this._config.title;\n    }\n\n    public set title(value: string) {\n        this._config.title = value;\n        this.sendConfigEvent();\n    }\n\n    public get subtitle(): string {\n        return this._config.subtitle;\n    }\n\n    public set subtitle(value: string) {\n        this._config.subtitle = value;\n        this.sendConfigEvent();\n    }\n\n    public get imageUrl(): string {\n        return this._config.imageUrl;\n    }\n\n    public set imageUrl(value: string) {\n        this._config.imageUrl = value;\n        this.sendConfigEvent();\n    }\n\n    public get click(): () => void {\n        return this._config.click;\n    }\n\n    public set click(value: () => void) {\n        this._config.click = value;\n        this.sendConfigEvent();\n    }\n\n    public get event(): string {\n        return this._config.event;\n    }\n\n    public set event(value: string) {\n        this._config.event = value;\n        this.sendConfigEvent();\n    }\n\n    public show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\n        this._config.title = title;\n        this._config.subtitle = subtitle;\n        this._config.imageUrl = imageUrl;\n\n        if (_.isFunction(callbackOrEvent))\n            this._config.click = callbackOrEvent;\n        else this._config.click = null;\n\n        if (_.isString(callbackOrEvent))\n            this._config.event = callbackOrEvent;\n        else this._config.event = null;\n\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.title = null;\n        this._config.subtitle = null;\n        this._config.imageUrl = null;\n        this._config.click = null;\n        this._config.event = null;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n       this._rootScope.$emit(NavHeaderChangedEvent, this._config);\n    }\n}\n\nclass NavHeaderProvider implements INavHeaderProvider {\n    private _config: NavHeaderConfig = new NavHeaderConfig();\n    private _service: NavHeaderService;\n\n    public get config(): NavHeaderConfig {\n        return this._config;\n    }\n\n    public set config(value: NavHeaderConfig) {\n        this._config = value || new NavHeaderConfig();\n    }\n\n    public get defaultImageUrl(): string {\n        return this._config.defaultImageUrl;\n    }\n\n    public set defaultImageUrl(value: string) {\n        this._config.defaultImageUrl = value;\n    }\n\n    public get title(): string {\n        return this._config.title;\n    }\n\n    public set title(value: string) {\n        this._config.title = value;\n    }\n\n    public get subtitle(): string {\n        return this._config.subtitle;\n    }\n\n    public set subtitle(value: string) {\n        this._config.subtitle = value;\n    }\n\n    public get imageUrl(): string {\n        return this._config.imageUrl;\n    }\n\n    public set imageUrl(value: string) {\n        this._config.imageUrl = value;\n    }\n\n    public get click(): () => void {\n        return this._config.click;\n    }\n\n    public set click(value: () => void) {\n        this._config.click = value;\n    }\n\n    public get event(): string {\n        return this._config.event;\n    }\n\n    public set event(value: string) {\n        this._config.event = value;\n    }\n\n    public set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\n        this._config.title = title;\n        this._config.subtitle = subtitle;\n        this._config.imageUrl = imageUrl;\n\n        if (_.isFunction(callbackOrEvent))\n            this._config.click = callbackOrEvent;\n        else this._config.click = null;\n\n        if (_.isString(callbackOrEvent))\n            this._config.event = callbackOrEvent;\n        else this._config.event = null;\n    }\n\n    public clear(): void {\n        this._config.title = null;\n        this._config.subtitle = null;\n        this._config.imageUrl = null;\n        this._config.click = null;\n        this._config.event = null;\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavHeaderService(this._config, $rootScope);\n\n        return this._service;\n    }\n     \n}\n\n\nangular\n    .module('pipNavHeader')\n    .provider('pipNavHeader', NavHeaderProvider);\n","'use strict';\n\nangular.module('pipNavHeader', ['ngMaterial', 'pipNav.Templates']);\n\nimport './NavHeaderService';\nimport './NavHeaderDirective';\n\nexport * from './NavHeaderService';","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction NavIconDirectiveController($scope, $element, $attrs, $rootScope, $window, pipNavIcon) {\n    \"ngInject\";\n\n    // Apply class and call resize\n    $element.addClass('pip-nav-icon');\n\n    $scope.config = pipNavIcon.config;\n\n    $rootScope.$on('pipNavIconChanged', onNavIconChanged);\n\n    $scope.onNavIconClick = onNavIconClick;\n\n    function onNavIconChanged(event, config) {\n        $scope.config = config;\n    }\n\n    function onNavIconClick() {\n        var breadcrumb, backCallback;\n\n        if (_.isFunction($scope.config.click)) {\n            // Execute nav icon callback\n            $scope.config.click();\n        } else if ($scope.config.event) {\n            $rootScope.$broadcast($scope.config.event);\n        } else if ($scope.config.type == 'menu') {\n            $rootScope.$broadcast('pipOpenSideNav');\n        } else if ($scope.config.type == 'back') {\n            $window.history.back();\n        } else {\n            $rootScope.$broadcast('pipNavIconClicked');\n        }\n    }\n\n}\n\nfunction navIconDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            type: '=pipType',\n            imageUrl: '=pipImageUrl',\n            icon: '=pipIcon'\n        },\n        replace: false,\n        templateUrl: 'icon/NavIcon.html',\n        controller: NavIconDirectiveController\n    };\n}\n\n\nangular\n    .module('pipNavIcon')\n    .directive('pipNavIcon', navIconDirective);\n\n})();","'use strict';\n\nexport let NavIconChangedEvent = 'pipNavIconChanged';\n\nexport class NavIconConfig {\n    // Type of nav icon: 'back', 'menu', 'image' or 'none'\n    public type: string;\n    // Image url\n    public imageUrl: string;\n    // Icon name\n    public icon: string;\n    // Handle nav icon click event\n    click: () => void;\n    // Event name\n    event: string\n};\n\nexport interface INavIconService {\n    readonly config: NavIconConfig;\n\n    showMenu(callbackOrEvent?: any): void;\n    showIcon(icon: string, callbackOrEvent?: any): void;\n    showBack(callbackOrEvent?: any): void;\n    showImage(imageUrl: string, callbackOrEvent?: any): void;\n    hide(): void;\n}\n\nexport interface INavIconProvider extends ng.IServiceProvider {\n    config: NavIconConfig;\n\n    setMenu(callbackOrEvent?: any): void;\n    setIcon(icon: string, callbackOrEvent?: any): void;\n    setBack(callbackOrEvent?: any): void;\n    setImage(imageUrl: string, callbackOrEvent?: any): void;\n    clear(): void;\n}\n\nclass NavIconService implements INavIconService {\n    private _config: NavIconConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(config: NavIconConfig, $rootScope: ng.IRootScopeService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): NavIconConfig {\n        return this._config;\n    }\n\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\n        if (_.isFunction(callbackOrEvent)) {\n            this._config.click = callbackOrEvent;\n            this._config.event = null;\n        } else if (_.isString(callbackOrEvent)) {\n            this._config.click = null;\n            this._config.event = callbackOrEvent;\n        } else {\n            this._config.click = null;\n            this._config.event = null;\n        }\n    }\n\n    public showMenu(callbackOrEvent?: any): void {\n        this._config.type = 'menu';\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showIcon(icon: string, callbackOrEvent?: any): void {\n        this._config.type = 'icon';\n        this._config.icon = icon;\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showBack(callbackOrEvent?: any): void {\n        this._config.type = 'back';\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showImage(imageUrl: string, callbackOrEvent?: any): void {\n        this._config.type = 'image';\n        this._config.imageUrl = imageUrl;\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.type = 'none';\n        this.setCallbackOrEvent(null);\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$broadcast(NavIconChangedEvent, this._config);\n    }\n}\n\nclass NavIconProvider implements INavIconProvider {\n    private _config: NavIconConfig = new NavIconConfig();\n    private _service: NavIconService;\n\n    public get config(): NavIconConfig {\n        return this._config;\n    }\n\n    public set config(value: NavIconConfig) {\n        this._config = value || new NavIconConfig();\n    }\n\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\n        if (_.isFunction(callbackOrEvent))\n            this._config.click = callbackOrEvent;\n        else this._config.click = null;\n\n        if (_.isString(callbackOrEvent))\n            this._config.event = callbackOrEvent;\n        else this._config.event = null;\n    }\n\n    public setMenu(callbackOrEvent?: any): void {\n        this._config.type = 'menu';\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setIcon(icon: string, callbackOrEvent?: any): void {\n        this._config.type = 'icon';\n        this._config.icon = icon;\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setBack(callbackOrEvent?: any): void {\n        this._config.type = 'back';\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setImage(imageUrl: string, callbackOrEvent?: any): void {\n        this._config.type = 'image';\n        this._config.imageUrl = imageUrl;\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public clear(): void {\n        this._config.type = 'none';\n        this.setCallbackOrEvent(null);\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavIconService(this._config, $rootScope);\n\n        return this._service;\n    }\n     \n}\n\n\nangular\n    .module('pipNavIcon')\n    .provider('pipNavIcon', NavIconProvider);\n","'use strict';\n\nangular.module('pipNavIcon', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './NavIconService';\nimport './NavIconDirective';\n\nexport * from './NavIconService';\n","﻿'use strict';\n\nimport './dependencies/TranslateFilter';\nimport './language/LanguagePickerDirective';\nimport './dropdown/DropdownDirective';\nimport './tabs/TabsDirective';\nimport './actions';\nimport './appbar';\nimport './search';\nimport './breadcrumb';\nimport './sidenav';\nimport './header';\nimport './menu';\nimport './icon';\nimport './common/NavService';\n\nangular\n    .module('pipNav', [\n        'pipNavService',\n        'pipDropdown',\n        'pipTabs',\n        'pipAppBar',\n        'pipSearchBar',\n        'pipNavIcon',\n        'pipBreadcrumb',\n        'pipActions', \n        'pipSideNav',\n        'pipNavMenu',\n        'pipNavHeader'\n    ]);\n\nexport * from './actions';\nexport * from './appbar';\nexport * from './breadcrumb';\nexport * from './search';\nexport * from './sidenav';\nexport * from './icon';\nexport * from './menu';\nexport * from './header';\nexport * from './common/NavService';\n","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nclass LanguagePickerDirectiveController {\n    private _translate: any;\n    private _timeout: ng.ITimeoutService;\n\n    public constructor(\n        $scope: any, \n        $element: any, \n        $attrs: any, \n        $rootScope: ng.IRootScopeService, \n        $timeout: ng.ITimeoutService,\n        $injector: any\n    ) {\n        \"ngInject\";\n\n        this._timeout = $timeout;\n        this._translate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        // Apply class and call resize\n        $element.addClass('pip-language-picker');\n\n        this.languages = $scope.languages;\n\n        // Todo: Where is this event coming from? Why not through service or attribute?\n        $rootScope.$on('pipSetLanguages', this.setLanguages);\n    }\n\n    public languages: string[] = ['en', 'ru'];\n\n    public get language() {\n        return this._translate ? this._translate.language : null;\n    }\n\n    public setLanguages(lang) {\n        this.languages = lang.length > 0 ? lang : ['en', 'ru'];\n    }\n\n    public onLanguageClick(language) {\n        if (this._translate != null) {\n            this._timeout(() => {\n                this._translate.language = this.language;\n            }, 0);\n        }\n    }\n\n}\n\nfunction languagePickerDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            languages: '=languages',\n        },\n        replace: false,\n        templateUrl: function (element, attr) {\n            return 'language/LanguagePicker.html';\n        },\n        controller: LanguagePickerDirectiveController,\n        controllerAs: 'vm'\n    };\n}\n\nangular\n    .module('pipLanguagePicker', [\n        'ngMaterial', 'pipNav.Translate', 'pipNav.Templates'\n    ])\n    .directive('pipLanguagePicker', languagePickerDirective);\n\n})();","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\n    function NavMenuDirectiveController($scope, $element, $rootScope, $window, $location, $timeout, $injector, pipSideNav, pipNavMenu) {\n        \"ngInject\";\n\n        var animationDuration = 450,\n            pipSideNavElement = $element.parent().parent();\n        // Apply class and call resize\n        $element.addClass('pip-sticky-nav-menu');\n\n        $scope.sections = $scope.sections || pipNavMenu.sections;\n        // $scope.showTooltip = true;\n        // pipNavMenu.sections = $scope.sections;\n        setCollapsible();\n        // todo set from services\n        $scope.defaultIcon = pipNavMenu.defaultIcon;\n\n        onStateChanged(null, pipSideNav.state);\n\n        $rootScope.$on('pipNavMenuChanged', onConfigChanged);\n        $rootScope.$on('pipSideNavStateChanged', onStateChanged);\n\n        $scope.itemVisible = isHidden;\n        $scope.clickLink = clickLink;\n        $scope.isSectionEmpty = isSectionEmpty;\n        $scope.onExpand = onExpand;\n        $scope.isActive = isActive;\n\n        return;\n\n        function setCollapsible() {\n            var collapsed;\n            if (angular.isFunction($scope.collapsed)) {\n                collapsed = $scope.collapsed();\n            } else {\n                collapsed = $scope.collapsed !== false && $scope.collapsed !== 'false';\n            }\n\n            $scope.isCollapsed = collapsed;\n        }\n\n        function onExpand() {\n            if (!$scope.isCollapsed) { return }\n\n            $scope.expanded = !$scope.expanded;\n\n            if ($scope.expanded) {\n                pipSideNavElement.removeClass('pip-sticky-nav-small');\n            } else {\n                pipSideNavElement.addClass('pip-sticky-nav-small');\n            }\n            $rootScope.$emit('pipNavExpanded', $scope.expanded);\n        }\n\n        function isHidden(item) {\n            return item && item.access && !item.access(item);\n        }\n\n        function isSectionEmpty(linkCollection) {\n            var result = true;\n            _.each(linkCollection, function (link) {\n                if (!isHidden(link))\n                    result = false;\n            });\n            return result;\n        }\n\n        function onConfigChanged(event, config) {\n            if (!config) return;\n\n            $scope.sections = config.sections;\n        }\n\n        function onStateChanged(event, state) {\n            // SS> You shall not set it into the menu state. Instead it shall be controlled by the state of Sidenav\n            //pipNavMenu.collapsed(state.expand);\n            if (!state) return;\n\n            $scope.isCollapsed = state.expand;\n            $scope.expanded = state.isExpanded;\n            $scope.expandedButton = state.expandedButton;\n\n            $scope.sideNavState = state;\n        }\n\n        function isActive(link) {\n            if (link.parentState) {\n                var $state = $injector.has('$state') ? $injector.get('$state') : null;\n                if ($state != null && $state.includes(link.parentState)) {\n                    return true;\n                }\n            } else if (link.state) {\n                var $state = $injector.has('$state') ? $injector.get('$state') : null;\n                if ($state != null && $state.includes(link.state)) {\n                    return true;\n                }\n            } else if (link.href) {\n                if (link.href.split('?')[0] === $window.location.href.split('?')[0]) {\n                    return true;\n                }\n            } else if (link.url) {\n                if (link.url.split(/[\\s/?]+/)[1] === $location.url().split(/[\\s/?]+/)[1]) {\n                    return true;\n                }\n            }\n\n\n            return false;\n        }\n\n        function clickLink(event, link) {\n            event.stopPropagation();\n\n            if (!link) {\n                pipSideNav.close();\n                return;\n            }\n\n            if (link.href) {\n                if (link.href.split('?')[0] === $window.location.href.split('?')[0]) {\n                    pipSideNav.close();\n                    return;\n                }\n\n                pipSideNav.close();\n                $timeout(function () {\n                    $window.location.href = link.href;\n                }, animationDuration);\n\n                return;\n            }\n            else if (link.url) {\n                if (link.url.split(/[\\s/?]+/)[1] === $location.url().split(/[\\s/?]+/)[1]) {\n                    pipSideNav.close();\n                    return;\n                }\n\n                pipSideNav.close();\n                $timeout(function () {\n                    $location.url(link.url);\n                }, animationDuration);\n\n                return;\n            }\n            else if (link.state) {\n                var $state = $injector.has('$state') ? $injector.get('$state') : null;\n\n                if ($state != null && $state.current.name === link.state) {\n                    pipSideNav.close();\n                    return;\n                }\n\n                pipSideNav.close();\n                $timeout(function () {\n                    if ($injector.has('$state')) {\n                        var $state = $injector.get('$state');\n                        $state.go(link.state, link.stateParams);\n                    }\n                }, animationDuration);\n\n                return;\n            }\n            else if (link.event)\n                $rootScope.$broadcast(link.event, link);\n\n            pipSideNav.close();\n        }\n    }\n\n    function navMenuDirective() {\n        return {\n            restrict: 'EA',\n            scope: {\n                // sections: '?=pipSections',\n                // collapsed: '=pipCollapsed'\n            },\n            replace: false,\n            templateUrl: 'menu/NavMenu.html',\n            controller: NavMenuDirectiveController\n        };\n    }\n\n    angular\n        .module('pipNavMenu')\n        .directive('pipNavMenu', navMenuDirective);\n\n})();","'use strict';\n\nexport let NavMenuChangedEvent = 'pipNavMenuChanged';\n\nexport class NavMenuLink {\n    // Name to refer to the item\n    public name: string;\n    // Link visible title\n    public title: string;\n    // Icon name from $iconProvider\n    public icon?: string;\n    // Counter badge\n    public count?: number;\n    // class for badge style\n    public badgeStyle?: string;\n    // Access function\n    public access?: (link: NavMenuLink) => boolean;\n    // window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // parent state or parent state for selection item \n    public parentState?: string;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public click?: (link: NavMenuLink) => void;\n}\n\nexport class NavMenuSection {\n    // Name to refer to the section\n    public name: string;\n    // Section visible title\n    public title?: string;\n    // Icon name from $iconProvider\n    public icon?: string;\n    // Links shown in the section\n    public links: NavMenuLink[];\n    // Access function\n    public access?: (section: NavMenuSection) => boolean;\n}\n\nexport class NavMenuConfig {\n    sections: NavMenuSection[];\n    defaultIcon: string;\n}\n\nexport interface INavMenuService {\n    sections: NavMenuSection[];\n    defaultIcon: string;\n    updateCount(link: string, count: number): void; \n    updateBadgeStyle(link: string, style: string): void;\n    clearCounts(): void;\n}\n\nexport interface INavMenuProvider extends ng.IServiceProvider {\n    sections: NavMenuSection[];\n    defaultIcon: string;\n}\n\nclass NavMenuService implements INavMenuService {\n    private _config: NavMenuConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: NavMenuConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get sections(): NavMenuSection[] {\n        return this._config.sections;\n    }\n\n    public set sections(value: NavMenuSection[]) {\n        this._config.sections = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get defaultIcon(): string {\n        return this._config.defaultIcon;\n    }\n\n    public updateBadgeStyle(link: string, style: string): void {\n        if (link == null || !_.isString(style)) return;\n\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                if (l.name == link)\n                    l.badgeStyle = style;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public set defaultIcon(value: string) {\n        this._config.defaultIcon = value;\n        this.sendChangeEvent();\n    }\n\n    public updateCount(link: string, count: number): void {\n        if (link == null || !_.isNumber(count)) return;\n\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                if (l.name == link)\n                    l.count = count;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public clearCounts(): void {\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                l.count = null;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    private sendChangeEvent() {\n        this._rootScope.$emit(NavMenuChangedEvent, this._config);\n    }\n}\n\nclass NavMenuProvider implements INavMenuProvider {\n    private _config: NavMenuConfig = {\n        sections: [],\n        defaultIcon: 'icons:folder'\n    };\n    private _service: NavMenuService;\n\n    public get sections(): NavMenuSection[] {\n        return this._config.sections;\n    }\n\n    public set sections(value: NavMenuSection[]) {\n        this._config.sections = value || [];\n    }\n\n    public get defaultIcon(): string {\n        return this._config.defaultIcon;\n    }\n\n    public set defaultIcon(value: string) {\n        this._config.defaultIcon = value;\n    }\n\n    public $get($rootScope) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavMenuService(this._config, $rootScope);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipNavMenu')\n    .provider('pipNavMenu', NavMenuProvider);\n","'use strict';\n\nangular.module('pipNavMenu', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './NavMenuService';\nimport './NavMenuDirective';\n\nexport * from './NavMenuService';","'use strict';\n\nimport { SearchConfig } from './SearchService';\nimport { ISearchService } from './SearchService';\nimport { SearchChangedEvent } from './SearchService';\nimport { SearchActivatedEvent } from './SearchService';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nclass SearchBarController {\n    private _rootScope: ng.IRootScopeService;\n    private _element: any;\n\n    public config: SearchConfig;\n    public enabled: boolean = false;\n    public search: any = { text: '' };\n\n    public constructor (\n        $element, \n        $rootScope: ng.IRootScopeService, \n        pipSearch: ISearchService\n    ) {\n        \"ngInject\";\n\n        this._rootScope = $rootScope;\n        this._element = $element;\n\n        // Apply class and call resize\n        $element.addClass('pip-search-bar');\n\n        this.config = pipSearch.config;\n        this.stateChange();\n        $rootScope.$on(SearchChangedEvent, (event, config) => { \n            this.onSearchChanged(event, config); \n        });\n    }\n\n    private stateChange() {\n        if (this.enabled) {\n            // this._element.addClass('w-stretch');\n            this._element.addClass('w-stretch');\n            this._element.parent().addClass('pip-search-active');\n\n        } else {\n            // this._element.removeClass('w-stretch');\n            this._element.removeClass('w-stretch');\n            this._element.parent().removeClass('pip-search-active');\n        }\n    }\n\n    private onSearchChanged(event, config) {\n        this.config = config;\n        this.enabled = false;\n        this.search.text = '';\n        this.stateChange();\n    }\n\n    private focusText() {\n        setTimeout(() => {\n            let element = $('.pip-search-text');\n            if (element.length > 0)\n                element.focus();\n        }, 0);\n    }\n\n    public enable() {\n        this.search.text = this.config.criteria;\n        this.enabled = true;\n        this.focusText();\n        this.stateChange();\n    }\n\n    public onClick() {\n        let search = this.search.text;\n\n        this.search.text = '';\n        this.enabled = false;\n        this.stateChange();\n\n        if (this.config.callback)\n            this.config.callback(search);\n        else\n            this._rootScope.$broadcast(SearchActivatedEvent, search);\n    }\n\n    public clear() {\n        if (this.search.text) {\n            this.search.text = '';\n            this.focusText();\n        } else {\n            this.enabled = false;\n            this.stateChange();\n            this.onClick();\n        }\n    }\n\n    public onKeyDown(event: any) {\n        // Enter pressed\n        if (event.keyCode === 13)\n            this.onClick();\n        // ESC pressed\n        else if (event.keyCode === 27) {\n            this.enabled = false;\n            this.stateChange();\n        }\n    }\n}\n\n\nfunction searchBarDirective() {\n    return {\n        restrict: 'E',\n        scope: {},\n        replace: false,\n        templateUrl: 'search/SearchBar.html',\n        controller: SearchBarController,\n        controllerAs: 'vm'\n    };\n}\n\nangular.module('pipSearchBar')\n    .directive('pipSearchBar', searchBarDirective);\n\n})();","'use strict';\n\nexport let OpenSearchEvent = 'pipOpenSearch';\nexport let CloseSearchEvent = 'pipCloseSearch';\nexport let SearchChangedEvent = 'pipSearchChanged';\nexport let SearchActivatedEvent = 'pipSearchActivated';\n\nexport class SearchConfig {\n    // Search visible\n    public visible: boolean;\n    // Search criteria\n    public criteria: string;\n    // Custom search parameters\n    public params: any;\n    // History for search autocomplete\n    public history: string[];\n    // Callback for search\n    callback: (criteria: string) => void;\n}\n\nexport interface ISearchService {\n    config: SearchConfig;\n    criteria: string;\n    params: any;\n    history: string[];\n    callback: (criteria: string) => void;\n\n    set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void;\n    clear(): void;\n    open(): void;\n    close(): void;\n    toggle(): void;\n}\n\nexport interface ISearchProvider extends ng.IServiceProvider {    \n}\n\n\nclass SearchService implements ISearchService {\n    private _config: SearchConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: SearchConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n\n        $rootScope.$on(OpenSearchEvent, () => { this.open });\n        $rootScope.$on(CloseSearchEvent, () => { this.close });\n    }\n\n    public get config(): SearchConfig {\n        return this._config;\n    }\n\n    public get criteria(): string {\n        return this._config.criteria;\n    }\n\n    public set criteria(value: string) {\n        this._config.criteria = value;\n        this.sendConfigEvent();\n    }\n\n    public get params(): any {\n        return this._config.params;\n    }\n\n    public set params(value: any) {\n        this._config.params = value;\n        this.sendConfigEvent();\n    }\n\n    public get history(): string[] {\n        return this._config.history;\n    }\n\n    public set history(value: string[]) {\n        this._config.history = value;\n        this.sendConfigEvent();\n    }\n\n    public get callback(): (criteria: string) => void {\n        return this._config.callback;\n    }\n\n    public set callback(value: (criteria: string) => void) {\n        this._config.callback = value;\n        this.sendConfigEvent();\n    }\n\n    public set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void {\n        this._config.callback = callback;\n        this._config.criteria = criteria;\n        this._config.params = params;\n        this._config.history = history;\n        this.sendConfigEvent();\n    }\n\n    public clear(): void {\n        this._config.callback = null;\n        this._config.criteria = null;\n        this._config.params = null;\n        this.sendConfigEvent();\n    }\n\n    public open(): void {\n        this._config.visible = true;\n        this.sendConfigEvent();                \n    }\n            \n    public close(): void {\n        this._config.visible = false;        \n        this.sendConfigEvent();                \n    }                \n\n    public toggle(): void {\n        this._config.visible = !this._config.visible;\n        this.sendConfigEvent();                \n    }                   \n\n    private sendConfigEvent(): void {\n        this._rootScope.$broadcast(SearchChangedEvent, this._config);\n    }\n}\n\nclass SearchProvider implements ISearchProvider {\n    private _config: SearchConfig = new SearchConfig();\n    private _service: SearchService = null;\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SearchService(this._config, $rootScope);\n\n        return this._service;\n    } \n}\n\n\nangular.module('pipSearchBar')\n    .provider('pipSearch', SearchProvider);\n","'use strict';\n\nangular.module('pipSearchBar', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './SearchService';\nimport './SearchBarDirective';\n\nexport * from './SearchService';","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\n    function SideNavDirectiveController($scope, $element, $rootScope, $injector, $mdMedia, $timeout, pipSideNav) {\n        \"ngInject\";\n\n        // var pipMedia = $mdMedia, \n        var pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null,\n            pipSystemInfo = $injector.has('pipSystemInfo') ? $injector.get('pipSystemInfo') : null,\n            mainContainer = '.pip-main',\n            bigWidth = 320, // expanded sidenav width\n            middleWidth = 240,\n            smallWidth = 72, // shrink sidenav width\n            isResizing = false,\n            animationDuration = 600,\n            mediaBreakpoints;\n\n        pipMedia = pipMedia !== undefined ? pipMedia : $mdMedia;\n\n        $scope.navState = {\n            toggle: { // media(sm, xs)\n                id: 'toggle',\n                addClass: 'sidenav-mobile', // change size, color, selected?\n                showHeader: true,\n                isLockedOpen: false,\n                expandedButton: false,\n                isExpanded: true,\n                expand: true,\n                showIconTooltype: false\n            },\n            small: { // media(md)\n                id: 'small',\n                addClass: 'pip-sticky-nav-small sidenav-smalldesktop', // change size, color, selected?\n                showHeader: false,\n                isLockedOpen: true,\n                expandedButton: false,\n                isExpanded: false,\n                expand: false,\n                showIconTooltype: true\n            },\n            large: { // media(lg)\n                id: 'large',\n                addClass: 'sidenav-smalldesktop', // change size, color, selected?\n                showHeader: false,\n                isLockedOpen: true,\n                expandedButton: true,\n                isExpanded: true,\n                expand: true,\n                showIconTooltype: true\n            },\n            xlarge: { // media(xl)\n                id: 'xlarge',\n                addClass: 'sidenav-desktop', // change size, color, selected?\n                showHeader: false,\n                isLockedOpen: true,\n                expandedButton: false,\n                isExpanded: true,\n                expand: true,\n                showIconTooltype: false\n            }\n        };\n\n        mediaBreakpoints = setBreakpoints();\n\n        // Apply class and call resize\n        $element.addClass('pip-sticky-sidenav');\n\n        // check Safari\n        checkSafari();\n\n        if (pipSideNav.config && pipSideNav.config.type != 'popup') {\n            $timeout(function () {\n                setSideNaveState()\n            }, 100);\n\n            var windowResize = _.debounce(setSideNaveState, 10);\n            $rootScope.$on('pipMainResized', windowResize);\n            $rootScope.$on('pipSideNavState', onSideNavState);\n        } else {\n            isResizing = false;\n            $scope.sidenavState = null;\n            $timeout(function () {\n                setState('toggle');\n            }, 100);\n\n        }\n\n        $rootScope.$on('pipNavIconClicked', onNavIconClick);\n        $rootScope.$on('pipSideNavChanged', onSideNavChanged);\n\n        return;\n\n        function checkSafari() {\n            if (!pipSystemInfo || pipSystemInfo.browserName != 'safari') {\n                // $element.addClass('sidenav-animate');\n            }\n        }\n\n        //------------------------\n        function setBreakpoints() {\n            if (!pipMedia || !angular.isObject(pipMedia.breakpoints)) {\n                return { xs: 639, sm: 959, md: 1024, lg: 1919 };\n            } else {\n                return pipMedia.breakpoints;\n            }\n        }\n\n        function onSideNavChanged(event, config) {\n            var config = config || {};\n\n            if (config.visible) {\n                $element.css('display', 'block');\n            } else {\n                $element.css('display', 'none');\n            }\n        }\n\n        function onNavIconClick(event) {\n            pipSideNav.open();\n        }\n\n        function onSideNavState(event, state) {\n            if (angular.isString(state) && $scope.navState[state] !== undefined) {\n                setState(state);\n            }\n        }\n\n        function setSideNaveState() {\n            if (pipSideNav.config && pipSideNav.config.type == 'popup') { return }\n\n            if (isResizing) {\n                $timeout(setSideNaveState, animationDuration); // for \n\n                return;\n            }\n\n            let mainWidth = $(mainContainer).innerWidth();\n            let sideNavWidth = $('.pip-sticky-sidenav').innerWidth();\n            let currentWidth = sideNavWidth ? sideNavWidth + 2 : 0; // add border width\n\n            if (mainWidth + currentWidth < mediaBreakpoints.sm ) {\n                setState('toggle', );\n                return;\n            }            \n            if (mainWidth + currentWidth < mediaBreakpoints.md ) {\n                setState('small');\n                return;\n            }   \n            if (mainWidth + currentWidth < mediaBreakpoints.lg ) {\n                setState('large');\n                return;\n            }        \n            setState('xlarge');     \n        }\n\n        function setState(state: string) {\n            if (isResizing) return;\n            if ($scope.sidenavState && $scope.sidenavState.id == state) return;\n\n            if (state != 'toggle') {\n                $element.removeClass('sidenav-mobile');\n            }\n\n            if (state != 'small') {\n                $element.removeClass('pip-sticky-nav-small');\n            }\n\n            if (state != 'xlarge') {\n                $element.removeClass('sidenav-desktop');\n            }\n\n            if (state != 'large') {\n                $element.removeClass('sidenav-smalldesktop');\n            }\n\n            isResizing = true;\n            if (state == 'toggle') {\n                pipSideNav.close();\n            }\n            $scope.sidenavState = $scope.navState[state];\n            $element.addClass($scope.sidenavState.addClass);\n\n            pipSideNav.state = $scope.sidenavState;\n            // check sideNav State\n            $timeout(function () {\n                setSideNaveState()\n            }, 15);\n\n            // complete animation\n            $timeout(function () {\n                isResizing = false;\n            }, animationDuration); //animationDuration\n\n        }\n    }\n\n    function sideNavDirective() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: true,\n            templateUrl: 'sidenav/SideNav.html',\n            controller: SideNavDirectiveController\n        };\n    }\n\n    angular\n        .module('pipSideNav')\n        .directive('pipSidenav', sideNavDirective);\n\n})();","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\n    function SideNavPartDirectiveController($scope, $element, $attrs, $rootScope, pipSideNav) {\n        \"ngInject\";\n\n        var partName = '' + $attrs.pipSidenavPart;\n        var partValue = null;\n\n        // Break part apart\n        var pos = partName.indexOf(':');\n        if (pos > 0) {\n            partValue = partName.substr(pos + 1);\n            partName = partName.substr(0, pos);\n        }\n\n        onSideNavChanged(null, pipSideNav.config)\n        $rootScope.$on('pipSideNavChanged', onSideNavChanged);\n\n        function onSideNavChanged(event, config) {\n            var parts = config.parts || {};\n            var currentPartValue = parts[partName];\n            var visible = !!(partValue ? currentPartValue == partValue : currentPartValue);\n\n            if (visible != $scope.visible)\n                $scope.visible = visible;\n        }\n\n    }\n\n    function sidenavPartDirective(ngIfDirective) {\n        \"ngInject\";\n\n        var ngIf = ngIfDirective[0];\n\n        return {\n            transclude: ngIf.transclude,\n            priority: ngIf.priority,\n            terminal: ngIf.terminal,\n            restrict: ngIf.restrict,\n            scope: true,\n            link: function linkFunction($scope: any, $element, $attrs) {\n                $attrs.ngIf = function () { return $scope.visible };\n                ngIf.link.apply(ngIf, arguments);\n            },\n            controller: SideNavPartDirectiveController\n        };\n    }\n\n    angular\n        .module('pipSideNav')\n        .directive('pipSidenavPart', sidenavPartDirective);\n\n})();","'use strict';\n\nexport let SideNavChangedEvent = 'pipSideNavChanged';\nexport let SideNavStateChangedEvent = 'pipSideNavStateChanged';\nexport let OpenSideNavEvent = 'pipOpenSideNav';\nexport let CloseSideNavEvent = 'pipCloseSideNav';\n\nexport class SideNavConfig {\n    parts: any;\n    classes: string[];\n    state: any;\n    type: string;\n    visible: boolean;\n}\n\nexport interface ISideNavService {\n    readonly config: SideNavConfig;\n    readonly classes: string[];\n    parts: any;\n    state: any;\n\n    open(): void;\n    close(): void;\n    toggle(): void;\n    show(): void;\n    hide(): void;\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}\n\nexport interface ISideNavProvider extends ng.IServiceProvider {\n    config: SideNavConfig;\n    parts: any;\n    type: string;\n    visible: boolean;\n    classes: string[];\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}\n\nclass SideNavService implements ISideNavService {\n    private _config: SideNavConfig;\n    private _state: any;\n    private _rootScope: ng.IRootScopeService;\n    private _sidenav: ng.material.ISidenavService;\n\n\n    public constructor(config: SideNavConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n        this._sidenav = $mdSidenav;\n    }\n\n    public get config(): SideNavConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public get state(): any {\n        return this._state;\n    }\n\n    public set state(value: any) {\n        this._state = value || {};\n        this._rootScope.$broadcast(SideNavStateChangedEvent, value);\n    }\n\n    public open() {\n        this._sidenav('pip-sticky-sidenav').open();\n    }\n\n    public close() {\n        this._sidenav('pip-sticky-sidenav').close();\n    }\n\n    public toggle() {\n        this._sidenav('pip-sticky-sidenav').toggle();\n    }\n\n    public show() {\n        if (!this._config.visible) {\n            this._config.visible = true;\n            this.sendConfigEvent();\n        }\n    }\n\n    public hide() {\n        if (this._config.visible) {\n            this._config.visible = false;\n            this.sendConfigEvent();\n        }\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$emit(SideNavChangedEvent, this._config);\n    }\n}\n\nclass SideNavProvider implements ISideNavProvider {\n    private _config: SideNavConfig = {\n        parts: {},\n        classes: [],\n        type: 'popup',\n        state: null,\n        visible: true\n    };\n\n    private _service: SideNavService;\n\n    public get config(): SideNavConfig {\n        return this._config;\n    }\n\n    public set config(value: SideNavConfig) {\n        this._config = value || new SideNavConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n    }\n\n    public get type(): string {\n        return this._config.type;\n    }\n\n    public set type(value: string) {\n        this._config.type = value;\n    }\n\n    public get visible(): boolean {\n        return this._config.visible;\n    }\n\n    public set visible(value: boolean) {\n        this._config.visible = value;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n\n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SideNavService(this._config, $rootScope, $mdSidenav);\n\n        return this._service;\n    }\n}\n\nfunction hookSideNavEvents($rootScope: ng.IRootScopeService, pipSideNav: ISideNavService) {\n    $rootScope.$on(OpenSideNavEvent, () => { pipSideNav.open(); });\n    $rootScope.$on(CloseSideNavEvent, () => { pipSideNav.close(); });\n}\n\nangular\n    .module('pipSideNav')\n    .provider('pipSideNav', SideNavProvider)\n    .run(hookSideNavEvents);\n","'use strict';\n\nangular.module('pipSideNav', ['ngMaterial', 'pipNav.Templates']);\n\nimport './SideNavService';\nimport './SideNavPartDirective';\nimport './SideNavDirective';\n\nexport * from './SideNavService';","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\n    function TabsDirectiveController($scope, $element, $attrs, $mdMedia, $injector, $rootScope, $parse, $timeout) {\n        \"ngInject\";\n\n        var pipTheme = $injector.has('pipTheme') ? $injector.get('pipTheme') : null,\n            pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null,\n            pipTabIndex = $attrs.pipTabIndex ? parseInt($attrs.pipTabIndex) : 0,\n            currentTheme = 'default';\n\n        $scope.selected = {};\n\n        if (pipTheme)\n            currentTheme = pipTheme.use();\n        else if ($rootScope.$theme)\n            currentTheme = $rootScope.$theme;\n\n        $scope.class = ($attrs.class || '') + ' md-' + currentTheme + '-theme';\n\n        if (pipTranslate) {\n            if ($scope.tabs.length > 0 && $scope.tabs[0].title) {\n                pipTranslate.translateObjects($scope.tabs, 'title', 'nameLocal');\n            } else {\n                pipTranslate.translateObjects($scope.tabs, 'name', 'nameLocal');\n            }\n        }\n\n        if (pipTabIndex) {\n            $timeout(function () {\n                let a = $element.find('md-tabs-canvas');\n                if (a && a[0]) {\n                    angular.element(a[0]).attr('tabindex', pipTabIndex);\n                }\n                a.on('focusout', function () {\n                    angular.element(a[0]).attr('tabindex', pipTabIndex);\n                    $timeout(function () {\n                        angular.element(a[0]).attr('tabindex', pipTabIndex);\n                    }, 50);\n                });\n            }, 1000);\n        }\n        \n        $scope.media = pipMedia !== undefined ? pipMedia : $mdMedia;\n        $scope.tabs = ($scope.tabs && _.isArray($scope.tabs)) ? $scope.tabs : [];\n\n        var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n        if (pipTranslate) {\n            if ($scope.tabs.length > 0 && $scope.tabs[0].title) {\n                pipTranslate.translateObjects($scope.tabs, 'title', 'nameLocal');\n            } else {\n                pipTranslate.translateObjects($scope.tabs, 'name', 'nameLocal');\n            }\n        }\n\n        $scope.selected.activeIndex = $scope.activeIndex || 0;\n        $scope.selected.activeTab = $scope.selected.activeIndex;\n\n        $scope.disabled = disabled;\n        $scope.tabDisabled = tabDisabled;\n        $scope.onSelect = onSelect;\n        $scope.showShadow = showShadow;\n        $scope.show = show;\n\n        if (toBoolean($attrs.pipRebind)) {\n            $scope.$watch('activeIndex', function (newValue) {\n                $scope.selected.activeIndex = newValue || 0;\n                $scope.selected.activeTab = $scope.selected.activeIndex;\n            });\n        }\n\n        return;\n\n        function disabled() {\n            if ($scope.ngDisabled) {\n                return $scope.ngDisabled();\n            }\n        };\n\n        function tabDisabled(index) {\n            return ($scope.disabled() && $scope.selected.activeIndex != index);\n        };\n\n        function onSelect(index) {\n            if ($scope.disabled()) return;\n            $scope.activeIndex = index;\n            $scope.selected.activeIndex = index;\n            $scope.selected.activeTab = $scope.selected.activeIndex;\n            if ($scope.select) {\n                $scope.select($scope.tabs[$scope.selected.activeIndex], $scope.selected.activeIndex);\n            }\n        };\n\n        function showShadow() {\n            if ($scope.showTabsShadow) {\n                return $scope.showTabsShadow();\n            } else {\n                return false;\n            }\n        };\n\n        function show() {\n            if ($scope.showTabs) {\n                return $scope.showTabs();\n            } else {\n                return true;\n            }\n        };\n\n        function toBoolean(value) {\n            if (value == null) return false;\n            if (!value) return false;\n            value = value.toString().toLowerCase();\n            return value == '1' || value == 'true';\n        }\n\n    }\n\n\n    function tabsDirective() {\n        return {\n            restrict: 'E',\n            scope: {\n                ngDisabled: '&',\n                tabs: '=pipTabs',\n                showTabs: '&pipShowTabs',\n                showTabsShadow: '&pipTabsShadow',\n                activeIndex: '=pipActiveIndex',\n                select: '=pipTabsSelect'\n            },\n            templateUrl: 'tabs/Tabs.html',\n            controller: TabsDirectiveController\n        };\n    }\n\n\n    angular\n        .module(\"pipTabs\", ['pipNav.Templates'])\n        .directive('pipTabs', tabsDirective);\n\n})();","(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/PrimaryActions.html',\n    '<div pip-focused=\"\" pip-focused-tabindex=\"2\"><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in config.primaryLocalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"clickAction(action, $mdOpenMenu);\" tabindex=\"-1\" ng-hide=\"isHidden(action)\" aria-label=\"{{action.title | translate}}\"><div class=\"pip-primary-actions-badge\" ng-show=\"action.count > 0\">{{actionCount(action)}}</div><md-icon md-svg-icon=\"{{action.icon}}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"clickAction(subAction)\">{{::subAction.title | translate}}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in config.primaryGlobalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"clickAction(action, $mdOpenMenu);\" ng-hide=\"isHidden(action)\" tabindex=\"-1\" aria-label=\"{{action.title | translate}}\"><div class=\"pip-primary-actions-badge color-badge-bg\" ng-show=\"action.count > 0\">{{actionCount(action)}}</div><md-icon md-svg-icon=\"{{action.icon}}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"clickAction(subAction)\">{{subAction.title | translate}}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/SecondaryActions.html',\n    '<md-menu ng-if=\"secondaryActionsVisible()\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button\" tabindex=\"3\" ng-click=\"onSecondaryActionClick(); openMenu($mdOpenMenu, $event);\" aria-label=\"open actions\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"action in config.secondaryLocalActions\" ng-if=\"!action.divider\" ng-hide=\"isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"clickAction(action)\">{{::action.title | translate}}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider><md-menu-divider ng-if=\"secondaryDividerVisible()\"></md-menu-divider><md-menu-item ng-repeat-start=\"action in config.secondaryGlobalActions\" ng-if=\"!action.divider\" ng-hide=\"isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"clickAction(action)\">{{::action.title | translate}}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('appbar/AppBar.html',\n    '<md-toolbar class=\"{{ config.classes.join(\\' \\') }}\" ng-if=\"config.visible\" ng-transclude=\"\"></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('breadcrumb/Breadcrumb.html',\n    '<div style=\"height: 23px;\"><div class=\"hide-xs text-overflow\"><span ng-if=\"vm.config.criteria\" ng-click=\"vm.openSearch()\">{{vm.config.criteria}} -</span><span class=\"pip-breadcrumb-item {{$last ? \\'breadcrumb-accent\\' : \\'\\'}}\" ng-if=\"vm.config.items && vm.config.items.length > 0\" ng-repeat-start=\"item in vm.config.items\" ng-click=\"vm.onClick(item)\" ng-init=\"stepWidth = 100/(vm.config.items.length + 1)\" ng-class=\"{\\'cursor-pointer\\': !$last}\" ng-style=\"{\\'max-width\\': stepWidth + \\'%\\'}\"><span class=\"hide-xs\" ng-if=\"!$last || !vm.actionsVisible(item)\">{{item.title | translate}}</span><div ng-if=\"$last && vm.actionsVisible(item)\" style=\"display: inline-block; position: relative;\"><md-menu class=\"hide-xs\" md-offset=\"0 44\"><span class=\"layout-row pip-breadcrumb-item-menu cursor-pointer {{$last ? \\'breadcrumb-accent\\' : \\'\\'}}\" ng-click=\"vm.onOpenMenu($mdOpenMenu, $event)\" md-ink-ripple=\"\" aria-label=\"open breadcrumb actions\">{{item.title | translate}}<md-icon class=\"pip-triangle-down\" md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-if=\"!subItem.divider\" ng-repeat-start=\"subItem in item.subActions\"><md-button ng-click=\"vm.onSubActionClick(subItem)\" ng-hide=\"action.divider\" tabindex=\"4\"><md-icon md-menu-align-target=\"\" ng-if=\"subItem.icon\" md-svg-icon=\"{{subItem.icon}}\"></md-icon><span>{{subItem.title | translate}}</span></md-button></md-menu-item><md-menu-divider ng-if=\"subItem.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div></span><md-icon ng-repeat-end=\"\" md-svg-icon=\"icons:chevron-right\" ng-hide=\"$last\"></md-icon><span class=\"pip-title breadcrumb-accent\" ng-if=\"vm.config.text\">{{vm.config.text | translate}}</span></div><div style=\"position: relative;\" class=\"hide-gt-xs\"><md-menu md-offset=\"0 44\"><span class=\"pip-mobile-breadcrumb layout-row\" ng-click=\"vm.config.items && vm.config.items.length > 1 ? $mdOpenMenu() : return\" aria-label=\"open breadcrumb\"><span class=\"text-overflow\"><span ng-if=\"vm.config.criteria\" ng-click=\"vm.openSearch()\">{{vm.config.criteria}} -</span> <span class=\"breadcrumb-accent\" ng-if=\"vm.config.text\">{{vm.config.text | translate}}</span> <span ng-if=\"vm.config.items && vm.config.items.length > 0\" class=\"breadcrumb-accent {{(vm.config.items && vm.config.items.length > 1) ? \\'cursor-pointer\\' : \\'\\' }}\">{{vm.config.items[vm.config.items.length - 1].title | translate}}</span></span><md-icon class=\"pip-triangle-down cursor-pointer breadcrumb-accent\" md-svg-icon=\"icons:triangle-down\" ng-if=\"vm.config.items && vm.config.items.length > 1\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in vm.config.items\" ng-if=\"vm.config.items && vm.config.items.length > 0\"><md-button ng-click=\"vm.onClick(item)\" tabindex=\"5\"><md-icon md-menu-align-target=\"\" ng-if=\"item.icon\" md-svg-icon=\"{{item.icon}}\"></md-icon><span>{{item.title | translate}}</span></md-button></md-menu-item><md-menu-item ng-if=\"vm.config.text\"><md-button tabindex=\"5\"><span class=\"text-grey\">{{vm.config.text | translate}}</span></md-button></md-menu-item></md-menu-content></md-menu></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dropdown/Dropdown.html',\n    '<md-toolbar class=\"md-subhead color-primary-bg {{class}}\" ng-if=\"show()\" ng-class=\"{\\'md-whiteframe-3dp\\': media(\\'xs\\')}\"><div class=\"pip-divider\"></div><md-select ng-model=\"selectedIndex\" tabindex=\"15\" ng-disabled=\"disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"DROPDOWN\" md-ink-ripple=\"\" md-on-close=\"onSelect(selectedIndex)\"><md-option ng-repeat=\"action in actions\" value=\"{{ ::$index }}\" ng-selected=\"activeIndex == $index ? true : false\">{{ (action.title || action.name || action) | translate }}</md-option></md-select></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('header/NavHeader.html',\n    '<md-toolbar ng-show=\"showHeader\" class=\"layout-row layout-align-start-center\"><div class=\"flex-fixed pip-sticky-nav-header-user\"><md-button class=\"md-icon-button\" ng-click=\"onUserClick()\" aria-label=\"current user\"><img src=\"\" class=\"pip-sticky-nav-header-user-image\" ng-class=\"imageCss\"></md-button></div><div class=\"pip-sticky-nav-header-user-text\"><div class=\"pip-sticky-nav-header-user-pri\" ng-click=\"onUserClick()\">{{ title | translate }}</div><div class=\"pip-sticky-nav-header-user-sec\">{{ subtitle | translate }}</div></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('icon/NavIcon.html',\n    '<md-button class=\"md-icon-button pip-nav-icon\" ng-if=\"config.type != \\'none\\'\" ng-class=\"config.class\" ng-click=\"onNavIconClick()\" tabindex=\"{{config.type==\\'menu\\' || config.type==\\'back\\' ? 4 : -1 }}\" aria-label=\"menu\"><md-icon ng-if=\"config.type==\\'menu\\'\" md-svg-icon=\"icons:menu\"></md-icon><img ng-src=\"{{config.imageUrl}}\" ng-if=\"config.type==\\'image\\'\" height=\"24\" width=\"24\"><md-icon ng-if=\"config.type==\\'back\\'\" md-svg-icon=\"icons:arrow-left\"></md-icon><md-icon ng-if=\"config.type==\\'icon\\'\" md-svg-icon=\"{{config.icon}}\"></md-icon></md-button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('language/LanguagePicker.html',\n    '<md-menu md-position-mode=\"target-right target\"><span class=\"pip-language\" ng-click=\"$mdOpenMenu()\" aria-label=\"language selection\">{{vm.language | translate}}<md-icon md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"3\"><md-menu-item ng-repeat=\"language in vm.languages\"><md-button ng-click=\"vm.onLanguageClick(lang)\" tabindex=\"7\">{{language | translate}}</md-button></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu/NavMenu.html',\n    '<div pip-focused=\"\" pip-focused-tabindex=\"10\" pip-with-hidden=\"true\" ng-if=\"sections && sections.length\"><md-list class=\"sidenav-list\"><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-sticky-nav-expanded-button\" ng-click=\"onExpand()\" ng-disabled=\"!isCollapsed\" tabindex=\"-1\" ng-if=\"expandedButton\"><md-icon md-svg-icon=\"icons:chevron-left\" ng-if=\"expanded\" class=\"pip-sticky-nav-menu-icon\"></md-icon><md-icon md-svg-icon=\"icons:chevron-right\" ng-if=\"!expanded\" class=\"pip-sticky-nav-menu-icon\"></md-icon></md-list-item><md-divider ng-show=\"expandedButton\"></md-divider><div class=\"pip-section\" ng-repeat=\"section in sections\" ng-hide=\"section.access && !section.access(section)\"><md-divider ng-show=\"$index > 0 && !isSectionEmpty(section.links)\"></md-divider><md-subheader ng-show=\"section.title\" style=\"height: 48px;\"><span ng-if=\"expanded\" class=\"pip-sticky-nav-menu-title section-title\">{{::section.title | translate}}</span><md-icon md-svg-icon=\"{{section.icon}}\" ng-if=\"!sideNavState.showIconTooltype && !expanded && section.icon\" class=\"pip-sticky-nav-menu-icon section-icon\"></md-icon><md-icon md-svg-icon=\"{{section.icon}}\" ng-if=\"sideNavState.showIconTooltype && !expanded && section.icon\" class=\"pip-sticky-nav-menu-icon section-icon\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">{{::section.title | translate}}</md-tooltip></md-icon><md-icon md-svg-icon=\"{{defaultIcon}}\" ng-if=\"!sideNavState.showIconTooltype && !expanded && !section.icon\" class=\"pip-sticky-nav-menu-icon section-icon\"></md-icon><md-icon md-svg-icon=\"{{defaultIcon}}\" ng-if=\"sideNavState.showIconTooltype && !expanded && !section.icon\" class=\"pip-sticky-nav-menu-icon section-icon\"><md-tooltip md-visible=\"showTooltip\" class=\"md-secondary\">{{::section.title | translate}}</md-tooltip></md-icon></md-subheader><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-focusable\" ng-repeat=\"link in section.links\" tabindex=\"-1\" ng-class=\"{\\'active\\': isActive(link)}\" ng-hide=\"link.access && !link.access(link)\"><md-button class=\"layout-row layout-align-start-center\" tabindex=\"-1\" ng-click=\"clickLink($event, link)\"><div class=\"pip-sticky-nav-menu-icon-block\"><md-icon md-svg-icon=\"{{link.icon}}\" ng-if=\"!(sideNavState.showIconTooltype && !expanded)\" ng-hide=\"!link.icon\" class=\"pip-sticky-nav-menu-icon flex-fixed\"></md-icon><md-icon md-svg-icon=\"{{link.icon}}\" ng-hide=\"!link.icon\" ng-if=\"sideNavState.showIconTooltype && !expanded\" class=\"pip-sticky-nav-menu-icon flex-fixed\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">{{::link.title | translate}}</md-tooltip></md-icon></div><div class=\"pip-sticky-nav-menu-title\">{{::link.title | translate}}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count < 100\">{{link.count}}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count > 99\">!</div></md-button></md-list-item></div></md-list></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('search/SearchBar.html',\n    '<div class=\"md-toolbar-tools pip-search-container\" ng-if=\"vm.enabled\"><div class=\"layout-row pip-search-selected\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"start search\" ng-click=\"vm.onClick()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><input class=\"pip-search-text flex\" type=\"search\" tabindex=\"6\" ng-model=\"vm.search.text\" ng-keydown=\"vm.onKeyDown($event)\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"clear search\" ng-click=\"vm.clear()\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div><div class=\"md-toolbar-tools layout-row layout-align-end-center flex-fixed lp0 rp0\" ng-if=\"!vm.enabled\"><md-button class=\"md-icon-button\" tabindex=\"5\" aria-label=\"start search\" ng-click=\"vm.enable()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('sidenav/SideNav.html',\n    '<md-sidenav class=\"md-sidenav-left\" md-is-locked-open=\"sidenavState.isLockedOpen\" md-component-id=\"pip-sticky-sidenav\" ng-transclude=\"\"></md-sidenav>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tabs/Tabs.html',\n    '<md-toolbar class=\"pip-nav {{ class }}\" ng-class=\"{\\'pip-visible\\': show(), \\'pip-shadow\\': showShadow()}\"><md-tabs ng-if=\"media(\\'gt-xs\\')\" md-selected=\"selected.activeTab\" ng-class=\"{\\'disabled\\': disabled()}\" md-stretch-tabs=\"true\" md-dynamic-height=\"true\"><md-tab ng-repeat=\"tab in tabs track by $index\" ng-disabled=\"tabDisabled($index)\" md-on-select=\"onSelect($index)\"><md-tab-label>{{::tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ tab.newCounts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div></md-tab-label></md-tab></md-tabs><div class=\"md-subhead pip-tabs-content color-primary-bg\" ng-if=\"media(\\'xs\\')\"><div class=\"pip-divider position-top m0\"></div><md-select ng-model=\"selected.activeIndex\" ng-disabled=\"disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"SELECT\" md-ink-ripple=\"\" md-on-close=\"onSelect(selected.activeIndex)\"><md-option ng-repeat=\"tab in tabs track by $index\" class=\"pip-tab-option\" value=\"{{ ::$index }}\">{{ ::tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ tab.newCounts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div></md-option></md-select></div></md-toolbar>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-nav-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}