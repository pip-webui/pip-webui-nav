{"version":3,"sources":["pip-webui-nav-html.js","nav.js","appbar/appbar.js","appbar/appbar_service.js","dropdown/dropdown.js","sidenav/sidenav.js","sidenav/sidenav_service.js","tabs/tabs.js"],"names":[],"mappingspYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACntrvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-nav.js","sourcesContent":["(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dropdown/dropdown.html',\n    '<md-content class=\"md-subhead color-primary-bg {{class}}\" ng-if=\"show()\" ng-class=\"{\\'md-whiteframe-3dp\\': $mdMedia(\\'xs\\')}\">\\n' +\n    '    <div class=\"pip-divider position-top m0\"></div>\\n' +\n    '        <md-select ng-model=\"selectedIndex\" ng-disabled=\"disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"DROPDOWN\" md-ink-ripple md-on-close=\"onSelect(selectedIndex)\">\\n' +\n    '            <md-option ng-repeat=\"action in actions\" value=\"{{ ::$index }}\" ng-selected=\"activeIndex == $index ? true : false\">\\n' +\n    '                {{ (action.title || action.name) | translate }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '</md-content>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('appbar/appbar.html',\n    '<!--\\n' +\n    '@file App Bar component\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<md-toolbar md-theme-watch=\"true\" ng-if=\"!$partialReset\" ng-class=\"config.ngClasses\"\\n' +\n    '            class=\"{{ config.cssClass }} color-primary-bg\">\\n' +\n    '\\n' +\n    '    <div class=\"md-toolbar-tools rp24-flex lp24-flex\" ng-if=\"!searchEnabled\">\\n' +\n    '        <!-- Navigation Icon -->\\n' +\n    '        <md-button class=\"md-icon-button flex-fixed p0\"\\n' +\n    '                   ng-if=\"config.navIconType != \\'none\\'\"\\n' +\n    '                   ng-class=\"{ \\'pip-third-party\\': getParty() && !getUser(\\'owner\\') }\"\\n' +\n    '                   ng-click=\"onNavIconClick()\"\\n' +\n    '                   aria-label=\"menu\">\\n' +\n    '            <!-- Menu icon -->\\n' +\n    '            <md-icon ng-if=\"config.navIconType==\\'menu\\' && (!getParty() || getUser(\\'owner\\'))\"\\n' +\n    '                md-svg-icon=\"icons:menu\"></md-icon>\\n' +\n    '            <!-- Party avatar -->\\n' +\n    '            <!--<pip-avatar ng-if=\"config.navIconType==\\'menu\\' && (getParty() && !getUser(\\'owner\\'))\"\\n' +\n    '                        pip-rebind-avatar=\"true\"\\n' +\n    '                        pip-rebind=\"true\"\\n' +\n    '                        pip-image-url=\"partyAvatarUrl\"\\n' +\n    '                        pip-party-id=\"getParty(\\'id\\')\" class=\"pip-face\"\\n' +\n    '                        pip-party-name=\"getParty(\\'name\\')\">\\n' +\n    '            </pip-avatar>-->\\n' +\n    '            <!-- Back icon -->\\n' +\n    '            <md-icon ng-if=\"config.navIconType==\\'back\\'\"\\n' +\n    '                md-svg-icon=\"icons:arrow-left\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '        \\n' +\n    '        <!-- Title -->            \\n' +\n    '        <div class=\"flex-var text-overflow\">\\n' +\n    '            <!-- Logo -->\\n' +\n    '            <img class=\"pip-appbar-logo\"\\n' +\n    '                 ng-click=\"onLogoState(config.logoState)\"\\n' +\n    '                ng-if=\"config.titleType == \\'logo\\'\"\\n' +\n    '                ng-src=\"{{config.titleLogo}}\"/>\\n' +\n    '                \\n' +\n    '            <!-- Title --> \\n' +\n    '            <div ng-if=\"config.titleType == \\'text\\'\" class=\"text-overflow pip-appbar-text\">\\n' +\n    '                <!-- Search criteria -->\\n' +\n    '                <span ng-if=\"config.searchCriteria\"\\n' +\n    '                    ng-click=\"onSearchEnable()\">{{config.searchCriteria}} -</span>\\n' +\n    '                <!-- Text title -->\\n' +\n    '                <span class=\"text-overflow\">{{config.titleText | translate}}</span>\\n' +\n    '            </div>\\n' +\n    '\\n' +\n    '            <!-- Title with or without breadcrumb -->\\n' +\n    '            <div ng-if=\"config.titleType==\\'breadcrumb\\'\">\\n' +\n    '                <div class=\"hide-xs text-overflow\">\\n' +\n    '                    <!-- Search criteria -->\\n' +\n    '                    <span ng-if=\"config.searchCriteria\"\\n' +\n    '                      ng-click=\"onSearchEnable()\">{{config.searchCriteria}} -</span>\\n' +\n    '                    <!-- Breadcrumb navigation -->\\n' +\n    '                    <span class=\"pip-appbar-breadcrumb\"\\n' +\n    '                        ng-repeat-start=\"item in config.titleBreadcrumb\"\\n' +\n    '                        ng-click=\"onBreadcrumbClick(item)\"\\n' +\n    '                        ng-init=\"stepWidth = 100/(config.titleBreadcrumb.length + 1)\"\\n' +\n    '                        ng-style=\"{\\'max-width\\': stepWidth + \\'%\\'}\">\\n' +\n    '                        {{item.title | translate}}\\n' +\n    '                    </span>\\n' +\n    '                    <md-icon ng-repeat-end md-svg-icon=\"icons:chevron-right\"></md-icon>\\n' +\n    '                    <!-- Text title -->\\n' +\n    '                    <span class=\"pip-title\">{{config.titleText | translate}}</span>\\n' +\n    '                </div>\\n' +\n    '\\n' +\n    '                <!-- Mobile breadcrumb dropdown -->\\n' +\n    '                <md-menu xmd-offset=\"0 48\" class=\"hide-gt-xs\">\\n' +\n    '                    <span class=\"pip-appbar-mobile-breadcrumb layout-row\"\\n' +\n    '                        ng-click=\"$mdOpenMenu()\"\\n' +\n    '                        md-ink-ripple\\n' +\n    '                        aria-label=\"open breadcrumb\">\\n' +\n    '                        <span class=\"text-overflow\">\\n' +\n    '                            <!-- Search criteria -->\\n' +\n    '                            <span ng-if=\"config.searchCriteria\"\\n' +\n    '                                ng-click=\"onSearchEnable()\">{{config.searchCriteria}} -</span>\\n' +\n    '                            {{config.titleText | translate}}\\n' +\n    '                        </span>\\n' +\n    '                        <md-icon class=\"m0 flex-none\" md-svg-icon=\"icons:triangle-down\"></md-icon>\\n' +\n    '                    </span>\\n' +\n    '                    <md-menu-content width=\"3\">\\n' +\n    '                        <md-menu-item  ng-repeat=\"item in config.titleBreadcrumb\" >\\n' +\n    '                            <md-button ng-click=\"onBreadcrumbClick(item)\"><span>{{item.title | translate}}</span></md-button>\\n' +\n    '                        </md-menu-item>\\n' +\n    '                        <md-menu-item  >\\n' +\n    '                            <md-button><span class=\"text-grey\">{{config.titleText | translate}}</span></md-button>\\n' +\n    '                        </md-menu-item>\\n' +\n    '                    </md-menu-content>\\n' +\n    '                </md-menu>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '\\n' +\n    '\\n' +\n    '        <div class=\"flex-fixed pip-appbar-actions layout-row\"\\n' +\n    '             ng-class=\"{ \\'pip-language-action\\': config.actionsType==\\'language\\' }\">\\n' +\n    '            <!-- Laguage picker -->\\n' +\n    '            <md-menu ng-if=\"config.actionsType==\\'language\\'\"\\n' +\n    '                md-position-mode=\"target-right target\">\\n' +\n    '                <span class=\"pip-appbar-language\"\\n' +\n    '                    ng-click=\"$mdOpenMenu()\"\\n' +\n    '                    aria-label=\"language selection\">\\n' +\n    '                    {{language() | translate}}\\n' +\n    '                    <md-icon md-svg-icon=\"icons:triangle-down\"></md-icon>\\n' +\n    '                </span>\\n' +\n    '                <md-menu-content width=\"3\">\\n' +\n    '                    <md-menu-item ng-repeat=\"lang in config.languages\">\\n' +\n    '                        <md-button ng-click=\"onLanguageClick(lang)\">{{lang | translate}}</md-button>\\n' +\n    '                    </md-menu-item>\\n' +\n    '                </md-menu-content>\\n' +\n    '            </md-menu>\\n' +\n    '\\n' +\n    '            <!-- Search toggle -->\\n' +\n    '            <md-button class=\"md-icon-button m0\"\\n' +\n    '                       ng-if=\"config.searchVisible\"\\n' +\n    '                       ng-click=\"onSearchEnable()\"\\n' +\n    '                       aria-label=\"open search\">\\n' +\n    '                <!--<md-tooltip>{{::\\'APPBAR_SEARCH\\' | translate}}</md-tooltip>-->\\n' +\n    '                <md-icon md-svg-icon=\"icons:search\"></md-icon>\\n' +\n    '            </md-button>\\n' +\n    '\\n' +\n    '            <!-- Actions -->\\n' +\n    '            <div ng-if=\"config.actionsType==\\'list\\'\">\\n' +\n    '\\n' +\n    '                <!-- Global primary actions -->\\n' +\n    '                <md-menu md-position-mode=\"target-right target\" ng-repeat=\"action in config.primaryGlobalActions\">\\n' +\n    '                    <md-button class=\"pip-appbar-action md-icon-button m0\"\\n' +\n    '                               ng-class=\"{ \\'pip-appbar-hide-sm\\': action.hideSmall }\"\\n' +\n    '                               ng-click=\"onActionClick(action, $mdOpenMenu);\"\\n' +\n    '                               ng-hide=\"actionHidden(action)\"\\n' +\n    '                               aria-label=\"{{action.tooltip | translate}}\">\\n' +\n    '                        <!--<md-tooltip ng-if=\"action.tooltip\">{{action.tooltip | translate}}</md-tooltip>-->\\n' +\n    '                        <div class=\"pip-appbar-badge color-badge-bg\" ng-if=\"action.count > 0\">\\n' +\n    '                            {{actionCount(action)}}\\n' +\n    '                        </div>\\n' +\n    '                        <md-icon md-svg-icon=\"{{action.icon}}\"></md-icon>\\n' +\n    '                    </md-button>\\n' +\n    '                    <md-menu-content width=\"3\" ng-show=\"action.menu\">\\n' +\n    '                        <md-menu-item ng-repeat-start=\"subAction in action.subActions\"\\n' +\n    '                                      ng-if=\"!subAction.divider\"\\n' +\n    '                                      ng-hide=\"actionHidden(subAction)\">\\n' +\n    '                            <md-button ng-hide=\"subAction.divider\"\\n' +\n    '                                       ng-click=\"onActionClick(subAction)\">\\n' +\n    '                                {{subAction.title | translate}}\\n' +\n    '                            </md-button>\\n' +\n    '                        </md-menu-item>\\n' +\n    '                        <md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end></md-menu-divider>\\n' +\n    '                    </md-menu-content>\\n' +\n    '                </md-menu>\\n' +\n    '\\n' +\n    '                <!-- Local primary actions -->\\n' +\n    '                <md-menu md-position-mode=\"target-right target\" ng-repeat=\"action in config.primaryLocalActions\">\\n' +\n    '                    <md-button class=\"pip-appbar-action md-icon-button m0\"\\n' +\n    '                               ng-class=\"{ \\'pip-appbar-hide-sm\\': action.hideSmall,\\n' +\n    '                                            \\'pip-appbar-show-sm\\': action.showSmall,}\"\\n' +\n    '                               ng-click=\"onActionClick(action, $mdOpenMenu);\"\\n' +\n    '                               ng-hide=\"actionHidden(action)\"\\n' +\n    '                               aria-label=\"{{action.tooltip | translate}}\">\\n' +\n    '                        <!--<md-tooltip ng-if=\"action.tooltip\">{{action.tooltip | translate}}</md-tooltip>-->\\n' +\n    '                        <div class=\"pip-appbar-badge\" ng-show=\"action.count > 0\">\\n' +\n    '                            {{actionCount(action)}}\\n' +\n    '                        </div>\\n' +\n    '                        <md-icon md-svg-icon=\"{{action.icon}}\"></md-icon>\\n' +\n    '                    </md-button>\\n' +\n    '                    <md-menu-content width=\"3\" >\\n' +\n    '                        <md-menu-item ng-repeat-start=\"subAction in action.subActions\"\\n' +\n    '                                      ng-if=\"!subAction.divider\"\\n' +\n    '                                      ng-hide=\"actionHidden(subAction)\">\\n' +\n    '                            <md-button ng-hide=\"subAction.divider\"\\n' +\n    '                                       ng-click=\"onActionClick(subAction)\">\\n' +\n    '                                {{subAction.title | translate}}\\n' +\n    '                            </md-button>\\n' +\n    '                        </md-menu-item>\\n' +\n    '                        <md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end></md-menu-divider>\\n' +\n    '                    </md-menu-content>\\n' +\n    '                </md-menu>\\n' +\n    '\\n' +\n    '                <!-- Secondary actions dropdown -->\\n' +\n    '                <md-menu ng-if=\"secondaryActionsVisible()\"\\n' +\n    '                    md-position-mode=\"target-right target\">\\n' +\n    '                    <md-button class=\"md-icon-button m0\"\\n' +\n    '                        ng-click=\"onSecondaryActionClick(); openMenu($mdOpenMenu, $event);\"\\n' +\n    '                        aria-label=\"open actions\">\\n' +\n    '                        <md-icon md-svg-icon=\"icons:vdots\"></md-icon>\\n' +\n    '                    </md-button>\\n' +\n    '                    <md-menu-content width=\"3\">\\n' +\n    '                        <!-- Local secondary actions -->\\n' +\n    '                        <md-menu-item ng-repeat-start=\"action in config.secondaryLocalActions\"\\n' +\n    '                            ng-if=\"!action.divider\"\\n' +\n    '                            ng-hide=\"actionHidden(action)\">\\n' +\n    '                            <md-button ng-hide=\"action.divider\"\\n' +\n    '                                ng-click=\"onActionClick(action)\">\\n' +\n    '                                {{action.title | translate}}\\n' +\n    '                            </md-button>\\n' +\n    '                        </md-menu-item>\\n' +\n    '                        <md-menu-divider ng-if=\"action.divider\" ng-repeat-end></md-menu-divider>\\n' +\n    '\\n' +\n    '                        <md-menu-divider ng-if=\"secondaryDividerVisible()\" >\\n' +\n    '\\n' +\n    '                        </md-menu-divider>\\n' +\n    '                        <!-- Global secondary actions -->\\n' +\n    '                        <md-menu-item ng-repeat-start=\"action in config.secondaryGlobalActions\"\\n' +\n    '                            ng-if=\"!action.divider\"\\n' +\n    '                            ng-hide=\"actionHidden(action)\">\\n' +\n    '                            <md-button ng-hide=\"action.divider\"\\n' +\n    '                                ng-click=\"onActionClick(action)\">\\n' +\n    '                                {{action.title | translate}}\\n' +\n    '                            </md-button>                    \\n' +\n    '                        </md-menu-item>\\n' +\n    '                        <md-menu-divider ng-if=\"action.divider\" ng-repeat-end>\\n' +\n    '                        </md-menu-divider>                        \\n' +\n    '                    </md-menu-content>\\n' +\n    '                </md-menu>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <div class=\"md-toolbar-tools layout-row\" ng-if=\"searchEnabled\">\\n' +\n    '        <md-button class=\"md-icon-button\" \\n' +\n    '            aria-label=\"start search\" \\n' +\n    '            ng-click=\"onSearchClick()\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:search\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '        <input class=\"pip-search-text flex\"\\n' +\n    '            type=\"search\"\\n' +\n    '            ng-model=\"search.text\" \\n' +\n    '            ng-keydown=\"onSearchKeyDown($event)\" />\\n' +\n    '        <md-button class=\"md-icon-button\" \\n' +\n    '            aria-label=\"clear search\" \\n' +\n    '            ng-click=\"onSearchClear()\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:cross-circle\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '</md-toolbar>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('sidenav/sidenav.html',\n    '<!--\\n' +\n    '@file Side Nav component\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<md-sidenav class=\"md-sidenav-left md-whiteframe-z2 pip-sidenav color-content-bg\"\\n' +\n    '    md-component-id=\"pip-sidenav\" \\n' +\n    '    ng-if=\"!$partialReset\" \\n' +\n    '    pip-focused>\\n' +\n    '\\n' +\n    '    <md-toolbar class=\"pip-sidenav-header\"\\n' +\n    '                ng-class=\"{\\'pip-sidenav-owner\\': getUser(\\'owner\\')}\"\\n' +\n    '                md-theme=\"{{ $theme|| getUser(\\'theme\\') || config.theme }}\"\\n' +\n    '                ng-hide=\"!getParty() && !primaryPartyAvatar && !secondaryPartyAvatar\">\\n' +\n    '\\n' +\n    '            <md-button class=\"pip-sidenav-party md-icon-button\"\\n' +\n    '                       ng-click=\"onPartyClick()\"\\n' +\n    '                       aria-label=\"current party\">\\n' +\n    '                <!--<pip-avatar ng-if=\"!$avatarReset\"\\n' +\n    '                            pip-party-id=\"getParty(\\'id\\')\"\\n' +\n    '                            pip-default-icon=\"icon-person\"\\n' +\n    '                            pip-party-name=\"getParty(\\'name\\')\"\\n' +\n    '                            pip-image-url=\"primaryPartyAvatar\"\\n' +\n    '                            pip-rebind-avatar=\"true\"\\n' +\n    '                            pip-rebind=\"true\">\\n' +\n    '                </pip-avatar>-->\\n' +\n    '            </md-button>\\n' +\n    '\\n' +\n    '            <md-button class=\"pip-sidenav-user md-icon-button\"\\n' +\n    '                       ng-click=\"onUserClick()\"\\n' +\n    '                       ng-hide=\"getUser(\\'owner\\')\"\\n' +\n    '                       aria-label=\"current user\">\\n' +\n    '                <!--<pip-avatar class=\"pic-pic pip-face-ld\"\\n' +\n    '                            ng-if=\"!$avatarReset\"\\n' +\n    '                            pip-default-icon=\"icon-person\"\\n' +\n    '                            pip-rebind=\"true\"\\n' +\n    '                            pip-rebind-avatar=\"true\"\\n' +\n    '                            pip-party-id=\"getUser(\\'id\\')\"\\n' +\n    '                            pip-party-name=\"getUser(\\'name\\')\"\\n' +\n    '                            pip-image-url=\"secondaryPartyAvatar\">\\n' +\n    '                </pip-avatar>-->\\n' +\n    '            </md-button>\\n' +\n    '        \\n' +\n    '        <div class=\"pip-sidenav-party-text\">\\n' +\n    '            <a class=\"pip-sidenav-party-pri cursor-pointer\"\\n' +\n    '                ng-click=\"onPartyClick()\">{{ partyName || getParty(\\'name\\')}}</a>\\n' +\n    '            <div class=\"pip-sidenav-party-sec\"\\n' +\n    '                ng-show=\"getConnection() && !getUser(\\'owner\\')\">\\n' +\n    '                {{getConnection(\\'relation\\') | translate}}\\n' +\n    '                <span ng-show=\"getConnection(\\'relation_since\\')\">\\n' +\n    '                    {{::\\'SIDENAV_SINCE\\' | translate}}\\n' +\n    '                    {{getConnection(\\'relation_since\\') | formatLongDate}}\\n' +\n    '                </span>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </md-toolbar>\\n' +\n    '\\n' +\n    '    <md-list>\\n' +\n    '        <div class=\"pip-section\" ng-repeat=\"section in config.sections\"\\n' +\n    '            ng-hide=\"section.access && !section.access(getParty(), getUser(), section)\">\\n' +\n    '            \\n' +\n    '            <md-divider ng-show=\"$index > 0 && !isSectionEmpty(section.links)\"></md-divider>\\n' +\n    '            <md-subheader ng-show=\"section.title\">{{::section.title | translate}}</md-subheader>\\n' +\n    '            \\n' +\n    '            <md-list-item class=\"pip-focusable no-border\" \\n' +\n    '                ng-repeat=\"link in section.links\"\\n' +\n    '                ng-click=\"onLinkClick($event, link)\"\\n' +\n    '                ng-hide=\"link.access && !link.access(getParty(), getUser(), link)\">\\n' +\n    '                <md-icon md-svg-icon=\"{{link.icon}}\" \\n' +\n    '                    ng-hide=\"!link.icon\" \\n' +\n    '                    class=\"tm0 bm0\"></md-icon>\\n' +\n    '                <p>{{::link.title | translate}}</p>\\n' +\n    '            </md-list-item>\\n' +\n    '        </div>\\n' +\n    '    </md-list>\\n' +\n    '\\n' +\n    '</md-sidenav>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tabs/tabs.html',\n    '<md-toolbar class=\"pip-nav {{ class }}\" ng-class=\"{\\'pip-visible\\': show(), \\'pip-shadow\\': showShadow()}\">\\n' +\n    '    <md-tabs ng-if=\"$mdMedia(\\'gt-xs\\')\" md-selected=\"activeTab\" ng-class=\"{\\'disabled\\': disabled()}\" md-stretch-tabs=\"true\" md-dynamic-height=\"true\">\\n' +\n    '        <md-tab ng-repeat=\"tab in tabs track by $index\"  ng-disabled=\"tabDisabled($index)\" md-on-select=\"onSelect($index)\">\\n' +\n    '            <md-tab-label>\\n' +\n    '                {{ ::tab.nameLocal }}\\n' +\n    '                <div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ ::tab.newCounts }}</div>\\n' +\n    '                <div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div>\\n' +\n    '            </md-tab-label>\\n' +\n    '        </md-tab>\\n' +\n    '    </md-tabs>\\n' +\n    '    <md-content class=\"md-subhead color-primary-bg md-hue-1 \" ng-if=\"$mdMedia(\\'xs\\')\">\\n' +\n    '        <div class=\"pip-divider position-top m0\"></div>\\n' +\n    '        <md-select ng-model=\"activeIndex\" ng-disabled=\"disabled()\"\\n' +\n    '                   md-container-class=\"pip-full-width-dropdown\" aria-label=\"SELECT\" md-ink-ripple md-on-close=\"onSelect(activeIndex)\">\\n' +\n    '            <md-option ng-repeat=\"tab in tabs track by $index\" value=\"{{ ::$index }}\" >\\n' +\n    '                {{ ::tab.nameLocal }}\\n' +\n    '                <div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ ::tab.newCounts }}</div>\\n' +\n    '                <div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div>\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-content>\\n' +\n    '</md-toolbar>\\n' +\n    '');\n}]);\n})();\n","/**\r\n * @file Registration of navigation WebUI controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipNav', [        \r\n        'pipDropdown',\r\n        'pipTabs',\r\n\r\n        'pipAppBar',\r\n        'pipSideNav'\r\n    ]);\r\n    \r\n})();\r\n\r\n\r\n","/**\r\n * @file Application App Bar component\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function (angular, _, $) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipAppBar',\r\n        ['ngMaterial', 'pipTranslate', 'pipNav.Templates', 'pipAppBar.Service']);\r\n\r\n    thisModule.config(['pipTranslateProvider', function (pipTranslateProvider) {\r\n\r\n        pipTranslateProvider.translations('en', {\r\n            'APPBAR_SEARCH': 'Search'\r\n        });\r\n\r\n        pipTranslateProvider.translations('ru', {\r\n            'APPBAR_SEARCH': 'Поиск'\r\n        });\r\n\r\n    }]);\r\n\r\n    // Main application header directive\r\n    thisModule.directive('pipAppbar', function () {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                title: '=pipTitle',\r\n                showMenu: '=pipShowMenu',\r\n                localActions: '=pipLocalActions',\r\n                globalActions: '=pipGlobalActions',\r\n                partyAvatarUrl: '=pipPartyAvatarUrl'\r\n            },\r\n            replace: false,\r\n            templateUrl: function (element, attr) {\r\n                return 'appbar/appbar.html';\r\n            },\r\n            controller: 'pipAppBarController'\r\n        };\r\n    });\r\n\r\n    thisModule.controller('pipAppBarController',\r\n        ['$scope', '$element', '$attrs', '$rootScope', '$window', '$state', '$location', 'pipTranslate', 'pipAppBar', function ($scope, $element, $attrs, $rootScope, $window, $state, $location, pipTranslate, pipAppBar) {\r\n            // Initialize default application title\r\n            if ($scope.title) {\r\n                pipAppBar.showTitleText($scope.title);\r\n            }\r\n            if ($scope.showMenu) {\r\n                pipAppBar.showMenuNavIcon();\r\n            }\r\n            // Apply class and call resize\r\n            $element.addClass('pip-appbar');\r\n            $scope.$emit('pipResizeWindow');\r\n\r\n            $scope.config = pipAppBar.config();\r\n\r\n            if ($scope.localActions) {\r\n                pipAppBar.showLocalActions();\r\n                $scope.config.primaryLocalActions = $scope.localActions[0];\r\n                $scope.config.secondaryLocalActions = $scope.localActions[1];\r\n            }\r\n\r\n            if ($scope.globalActions) {\r\n                pipAppBar.showLocalActions();\r\n                $scope.config.primaryGlobalActions = $scope.globalActions[0];\r\n                $scope.config.secondaryGlobalActions = $scope.globalActions[0];\r\n            }\r\n\r\n            $scope.searchEnabled = false;\r\n            $scope.search = {text: ''};\r\n\r\n            $rootScope.$on('pipAppBarChanged', onAppBarChanged);\r\n\r\n            $scope.language = getLanguage;\r\n            $scope.actionHidden = actionHidden;\r\n            $scope.actionCount = actionCount;\r\n            $scope.secondaryActionsVisible = secondaryActionsVisible;\r\n            $scope.secondaryDividerVisible = secondaryDividerVisible;\r\n\r\n            $scope.onNavIconClick = onNavIconClick;\r\n            $scope.onBreadcrumbClick = onBreadcrumbClick;\r\n            $scope.onLanguageClick = onLanguageClick;\r\n            $scope.onActionClick = onActionClick;\r\n\r\n            $scope.onSearchEnable = onSearchEnable;\r\n            $scope.onSearchClick = onSearchClick;\r\n            $scope.onSearchClear = onSearchClear;\r\n            $scope.onSearchKeyDown = onSearchKeyDown;\r\n            $scope.onLogoState = onLogoState;\r\n\r\n            $scope.getParty = getParty;\r\n            $scope.getUser = getUser;\r\n\r\n            $scope.openMenu = openMenu;\r\n\r\n            function onLogoState(state) {\r\n                if(state)\r\n                $state.go(state);\r\n            }\r\n            \r\n            function openMenu($mdOpenMenu, ev) {\r\n                $scope.originatorEv = ev;\r\n                $mdOpenMenu(ev);\r\n            }\r\n\r\n            function getParty(prop) {\r\n                if (!$rootScope.$party) {\r\n                    return;\r\n                }\r\n                if (prop) {\r\n                    return $rootScope.$party[prop];\r\n                }\r\n\r\n                return $rootScope.$party;\r\n            }\r\n\r\n            function getUser(prop) {\r\n                if (!$rootScope.$user) {\r\n                    return;\r\n                }\r\n                if (prop) {\r\n                    return $rootScope.$user[prop];\r\n                }\r\n\r\n                return $rootScope.$user;\r\n            }\r\n\r\n            function onAppBarChanged(event, config) {\r\n                $scope.config = config;\r\n                $scope.searchEnabled = false;\r\n                $scope.search.text = '';\r\n            }\r\n\r\n            function getLanguage() {\r\n                return pipTranslate.use();\r\n            }\r\n\r\n            function actionHidden(action) {\r\n                return action.access && !action.access($rootScope.$party, $rootScope.$user, action);\r\n            }\r\n\r\n            function actionCount(action) {\r\n                if (action.count === null || action.count <= 0) {\r\n                    return '';\r\n                }\r\n                if (action.count > 99) {\r\n                    return '!';\r\n                }\r\n\r\n                return action.count;\r\n            }\r\n\r\n            function calcActions(actions) {\r\n                var count = 0;\r\n\r\n                _.each(actions, function (action) {\r\n                    if (!actionHidden(action)) {\r\n                        count++;\r\n                    }\r\n                });\r\n\r\n                return count;\r\n            }\r\n\r\n            function secondaryActionsVisible() {\r\n                return calcActions($scope.config.secondaryGlobalActions) > 0 ||\r\n                    calcActions($scope.config.secondaryLocalActions) > 0;\r\n            }\r\n\r\n            function secondaryDividerVisible() {\r\n                return calcActions($scope.config.secondaryGlobalActions) > 0 &&\r\n                    calcActions($scope.config.secondaryLocalActions) > 0;\r\n            }\r\n\r\n            function onNavIconClick() {\r\n                var breadcrumb, backCallback;\r\n\r\n                if (_.isFunction($scope.config.navIconCallback)) {\r\n                    // Execute nav icon callback\r\n                    $scope.config.navIconCallback();\r\n\r\n                    return;\r\n                }\r\n                if ($scope.config.navIconType !== 'back') {\r\n                    // Raise an event\r\n                    $rootScope.$broadcast('pipAppBarNavIconClicked');\r\n\r\n                    return;\r\n                }\r\n                if ($scope.config.titleType === 'breadcrumb') {\r\n                    breadcrumb = $scope.config.titleBreadcrumb;\r\n                    // Go to the last breadcrumb item\r\n                    if (_.isArray(breadcrumb) && breadcrumb.length > 0) {\r\n                        backCallback = breadcrumb[breadcrumb.length - 1].click;\r\n                        if (_.isFunction(backCallback)) {\r\n                            backCallback();\r\n                        } else {\r\n                            $window.history.back();\r\n                        }\r\n                    } else {\r\n                        $window.history.back();\r\n                    }\r\n                } else {\r\n                    // Go back in history\r\n                    $window.history.back();\r\n                }\r\n            }\r\n\r\n            function onBreadcrumbClick(item) {\r\n                if (_.isFunction(item.click)) {\r\n                    item.click(item);\r\n                }\r\n            }\r\n\r\n            function onLanguageClick(language) {\r\n                setTimeout(function () {\r\n                    pipTranslate.use(language);\r\n                    $rootScope.$apply();\r\n                }, 0);\r\n            }\r\n\r\n            function processStateParams(params) {\r\n                var result = {}, prop;\r\n\r\n                if (params === null) {\r\n                    return null;\r\n                }\r\n                for (prop in params) {\r\n                    if (params.hasOwnProperty(prop)) {\r\n                        if (params[prop] === ':party_id') {\r\n                            result[prop] = $rootScope.$party ? $rootScope.$party.id : null;\r\n                        } else if (params[prop] === ':user_id') {\r\n                            result[prop] = $rootScope.$user ? $rootScope.$user.id : null;\r\n                        } else {\r\n                            result[prop] = params[prop];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function processUrlParams(url) {\r\n                var result;\r\n\r\n                if (url === null) {\r\n                    return null;\r\n                }\r\n                result = url.replace(':party_id', $rootScope.$party ? $rootScope.$party.id : '');\r\n                result = result.replace(':user_id', $rootScope.user ? $rootScope.$user.id : '');\r\n\r\n                return result;\r\n            }\r\n\r\n            function focusSearchText() {\r\n                var element;\r\n\r\n                setTimeout(function () {\r\n                    element = $('.pip-search-text');\r\n                    if (element.length > 0) {\r\n                        element.focus();\r\n                    }\r\n                }, 0);\r\n            }\r\n\r\n            function onActionClick(action, $mdOpenMenu) {\r\n                if (!action || action.divider) {\r\n                    return;\r\n                }\r\n\r\n                if (action.close) {\r\n                    $scope.originatorEv = null;\r\n                }\r\n\r\n                if (action.menu) {\r\n                    $mdOpenMenu($scope.originatorEv);\r\n\r\n                    return;\r\n                }\r\n\r\n                if (action.callback) {\r\n                    action.callback();\r\n\r\n                    return;\r\n                }\r\n                if (action.href) {\r\n                    $window.location.href = processUrlParams(action.href);\r\n\r\n                    return;\r\n                }\r\n                if (action.url) {\r\n                    $location.url(processUrlParams(action.url));\r\n\r\n                    return;\r\n                }\r\n                if (action.state) {\r\n                    $state.go(action.state, processStateParams(action.stateParams));\r\n\r\n                    return;\r\n                }\r\n                if (action.event) {\r\n                    $rootScope.$broadcast(action.event);\r\n                } else {\r\n                    // Otherwise raise notification\r\n                    $rootScope.$broadcast('pipAppBarActionClicked', action.name);\r\n                }\r\n            }\r\n\r\n            function onSearchEnable() {\r\n                $scope.search.text = $scope.config.searchCriteria;\r\n                $scope.searchEnabled = true;\r\n                focusSearchText();\r\n            }\r\n\r\n            function onSearchClick() {\r\n                var searchText = $scope.search.text;\r\n\r\n                $scope.search.text = '';\r\n                $scope.searchEnabled = false;\r\n\r\n                if ($scope.config.searchCallback) {\r\n                    $scope.config.searchCallback(searchText);\r\n                } else {\r\n                    $rootScope.$broadcast('pipAppBarSearchClicked', searchText);\r\n                }\r\n            }\r\n\r\n            function onSearchClear() {\r\n                if ($scope.search.text) {\r\n                    $scope.search.text = '';\r\n\r\n                    focusSearchText();\r\n                } else {\r\n                    $scope.searchEnabled = false;\r\n                    onSearchClick();\r\n                }\r\n            }\r\n\r\n            function onSearchKeyDown(event) {\r\n                // Enter pressed\r\n                if (event.keyCode === 13) {\r\n                    $scope.onSearchClick();\r\n\r\n                    return;\r\n                }\r\n                // ESC pressed\r\n                if (event.keyCode === 27) {\r\n                    $scope.searchEnabled = false;\r\n                }\r\n            }\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._, window.jQuery);\r\n","/**\r\n * @file Application App Bar service\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipAppBar.Service', []);\r\n\r\n    thisModule.provider('pipAppBar', function () {\r\n        var config = {\r\n            appTitleText: null,\r\n            appTitleLogo: 'images/piplife_logo.svg',\r\n\r\n            // Theme to be applied to the header\r\n            theme: 'blue',\r\n            cssClass: '',\r\n            ngClasses: {},\r\n            logoState: null,\r\n\r\n            // Type of nav icon: 'back', 'menu' or 'none'\r\n            navIconType: 'none',\r\n            // Handle nav icon click event\r\n            navIconCallback: false,\r\n\r\n            // Type of title: 'logo', 'text', 'breadcrumb' or 'none'\r\n            titleType: 'none',\r\n            // URL to logo\r\n            titleLogo: null,\r\n            // Title text\r\n            titleText: null,\r\n            // Navigation breadcrumb [{ title, click }],\r\n            titleBreadcrumb: null,\r\n\r\n            // Type of actions: 'language', 'list' or 'none'\r\n            actionsType: 'none',\r\n\r\n            // Language options\r\n            languages: ['en', 'ru'],\r\n\r\n            // Search visible\r\n            searchVisible: false,\r\n            // Search criteria\r\n            searchCriteria: '',\r\n            // History for search autocomplete\r\n            searchHistory: [],\r\n            // Callback for search\r\n            searchCallback: null,\r\n\r\n            // Primary global actions visible on the screen\r\n            primaryGlobalActions: [],\r\n            // Primary local actions visible on the screen\r\n            primaryLocalActions: [],\r\n\r\n            // Secondary global actions available in popup\r\n            secondaryGlobalActions: [],\r\n            // Secondary local actions available in popup\r\n            secondaryLocalActions: []\r\n        };\r\n\r\n        // Configure global parameters\r\n        this.appTitleText = appTitleText;\r\n        this.appTitleLogo = appTitleLogo;\r\n        this.theme = theme;\r\n        this.globalActions = globalActions;\r\n        this.globalPrimaryActions = globalPrimaryActions;\r\n        this.globalSecondaryActions = globalSecondaryActions;\r\n\r\n        // Get the service instance\r\n        this.$get = ['$rootScope', function ($rootScope) {\r\n            return {\r\n                config: getConfig,\r\n                cssClass: cssClass,\r\n                \r\n                logoState:logoState,\r\n                setLogoState: setLogoState,\r\n\r\n                hideNavIcon: hideNavIcon,\r\n                showMenuNavIcon: showMenuNavIcon,\r\n                showBackNavIcon: showBackNavIcon,\r\n\r\n                showAppTitleLogo: showAppTitleLogo,\r\n                showAppTitleText: showAppTitleText,\r\n                showTitleLogo: showTitleLogo,\r\n                showTitleText: showTitleText,\r\n                showTitleBreadcrumb: showTitleBreadcrumb,\r\n                hideTitle: hideTitle,\r\n\r\n                showLanguage: showLanguage,\r\n                showLocalActions: showLocalActions,\r\n                hideLocalActions: hideLocalActions,\r\n                updateActionCount: updateActionCount,\r\n\r\n                showSearch: showSearch,\r\n                hideSearch: hideSearch,\r\n                updateSearchCriteria: updateSearchCriteria,\r\n                updateSearchHistory: updateSearchHistory,\r\n\r\n                showShadow: showShadow,\r\n                showShadowSm: showShadowSm,\r\n                showShadowSmXs: showShadowSmXs,\r\n                hideShadow: hideShadow\r\n            };\r\n            // ----------------------\r\n\r\n            function setLogoState(logoState) {\r\n                config.logoState = logoState;\r\n                return config.logoState;\r\n            }\r\n            \r\n            function logoState() {\r\n                return config.logoState;\r\n            }\r\n            \r\n            function getConfig() {\r\n                return config;\r\n            }\r\n\r\n            function cssClass(newCssClass) {\r\n                if (newCssClass != undefined) {\r\n                    config.cssClass = newCssClass;\r\n                    sendConfigEvent();\r\n                }\r\n\r\n                return config.cssClass;\r\n            }\r\n\r\n            // Show, hide appbar shadow\r\n            function showShadowSm() {\r\n                config.ngClasses['pip-shadow'] = false;\r\n                config.ngClasses['pip-shadow-sm'] = true;\r\n                config.ngClasses['pip-shadow-xs'] = false;\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showShadowSmXs() {\r\n                config.ngClasses['pip-shadow'] = false;\r\n                config.ngClasses['pip-shadow-sm'] = true;\r\n                config.ngClasses['pip-shadow-xs'] = true;\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showShadow() {\r\n                config.ngClasses['pip-shadow'] = true;\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function hideShadow() {\r\n                config.ngClasses['pip-shadow'] = false;\r\n                config.ngClasses['pip-shadow-sm'] = false;\r\n                config.ngClasses['pip-shadow-xs'] = false;\r\n                sendConfigEvent();\r\n            }\r\n\r\n            // Show navigation icon\r\n            function hideNavIcon() {\r\n                config.navIconType = 'none';\r\n                config.navIconCallback = null;\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showMenuNavIcon(click) {\r\n                config.navIconType = 'menu';\r\n                config.navIconCallback = click;\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showBackNavIcon(click) {\r\n                config.navIconType = 'back';\r\n                config.navIconCallback = click;\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            // Show title\r\n            function hideTitle() {\r\n                config.titleType = 'none';\r\n                config.titleLogo = null;\r\n                config.titleText = null;\r\n                config.titleBreadcrumb = null;\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showTitleLogo(titleLogo) {\r\n                config.titleType = 'logo';\r\n                config.titleLogo = titleLogo;\r\n                config.titleText = null;\r\n                config.titleBreadcrumb = null;\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showTitleText(titleText) {\r\n                config.titleType = 'text';\r\n                config.titleLogo = null;\r\n                config.titleText = titleText;\r\n                config.titleBreadcrumb = null;\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showTitleBreadcrumb(titleText, titleBreadcrumb) {\r\n                if (_.isArray(titleText)) {\r\n                    titleBreadcrumb = titleText;\r\n                    titleText = titleBreadcrumb[titleBreadcrumb.length - 1].title;\r\n                    titleBreadcrumb.splice(titleBreadcrumb.length - 1, 1);\r\n                }\r\n                config.titleType = 'breadcrumb';\r\n                config.titleLogo = null;\r\n                config.titleText = titleText;\r\n                config.titleBreadcrumb = titleBreadcrumb;\r\n                if (titleBreadcrumb.length > 0) {\r\n                    config.navIconType = config.navIconType === 'none' ? 'none' : config.navIconType;\r\n                    config.navIconCallback = titleBreadcrumb[titleBreadcrumb.length - 1];\r\n                } else {\r\n                    config.navIconType = 'menu';\r\n                    config.navIconCallback = null;\r\n                }\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showAppTitleLogo() {\r\n                showTitleLogo(config.appTitleLogo);\r\n            }\r\n\r\n            function showAppTitleText() {\r\n                showTitleText(config.appTitleText);\r\n            }\r\n\r\n            // Show actions\r\n            function hideLocalActions() {\r\n                config.actionsType = 'none';\r\n                config.primaryLocalActions = [];\r\n                config.secondaryLocalActions = [];\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showLanguage(languages) {\r\n                config.actionsType = 'language';\r\n                config.languages = languages || config.languages;\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function showLocalActions(primaryActions, secondaryActions) {\r\n                config.actionsType = 'list';\r\n                config.primaryLocalActions = primaryActions || [];\r\n                config.secondaryLocalActions = secondaryActions || [];\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function updateActionCount(actionName, count) {\r\n                // Update global actions\r\n                _.each(config.primaryGlobalActions, function (action) {\r\n                    if (action.name === actionName) {\r\n                        action.count = count;\r\n                    }\r\n                });\r\n                // Update local action\r\n                _.each(config.primaryLocalActions, function (action) {\r\n                    if (action.name === actionName) {\r\n                        action.count = count;\r\n                    }\r\n                });\r\n                sendConfigEvent();\r\n            }\r\n\r\n            // Show actions\r\n            function showSearch(callback, criteria, history) {\r\n                config.searchVisible = true;\r\n                config.searchCallback = callback;\r\n                config.searchCriteria = criteria;\r\n                config.searchHistory = history;\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function hideSearch() {\r\n                config.searchVisible = false;\r\n                config.searchCallback = null;\r\n                config.searchCriteria = null;\r\n\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function updateSearchCriteria(criteria) {\r\n                config.searchCriteria = criteria;\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function updateSearchHistory(history) {\r\n                config.searchHistory = history;\r\n                sendConfigEvent();\r\n            }\r\n\r\n            function sendConfigEvent() {\r\n                $rootScope.$broadcast('pipAppBarChanged', config);\r\n            }\r\n        }];\r\n        function appTitleText(newTitleText) {\r\n            if (newTitleText) {\r\n                config.appTitleText = newTitleText;\r\n            }\r\n\r\n            return config.appTitleText;\r\n        }\r\n\r\n        function appTitleLogo(newTitleLogo) {\r\n            if (newTitleLogo) {\r\n                config.appTitleLogo = newTitleLogo;\r\n            }\r\n\r\n            return config.appTitleLogo;\r\n        }\r\n\r\n        function theme(theme) {\r\n            config.theme = theme || config.theme;\r\n\r\n            return config.theme;\r\n        }\r\n\r\n        function globalActions(primaryActions, secondaryActions) {\r\n            config.primaryGlobalActions = primaryActions || [];\r\n            config.secondaryGlobalActions = secondaryActions || [];\r\n        }\r\n\r\n        function globalPrimaryActions(primaryActions) {\r\n            config.primaryGlobalActions = primaryActions || [];\r\n        }\r\n\r\n        function globalSecondaryActions(secondaryActions) {\r\n            config.secondaryGlobalActions = secondaryActions || [];\r\n        }\r\n\r\n    });\r\n\r\n})(window.angular, window._);\r\n","/**\r\n * @file Dropdown control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n *\r\n */\r\n\r\n/* global _, angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipDropdown\", ['pipAssert', 'pipNav.Templates']);\r\n\r\n    thisModule.directive('pipDropdown',\r\n        ['$mdMedia', 'pipAssert', function ($mdMedia, pipAssert) {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    ngDisabled: '&',\r\n                    actions: '=pipActions',\r\n                    showDropdown: '&pipShow',\r\n                    activeIndex: '=pipActiveIndex',\r\n                    select: '=pipDropdownSelect'\r\n                },\r\n                templateUrl: 'dropdown/dropdown.html',\r\n                controller:\r\n                    ['$scope', '$element', '$attrs', 'localStorageService', function ($scope, $element, $attrs, localStorageService) {\r\n                        $scope.class = ($attrs.class || '') + ' md-' + localStorageService.get('theme') + '-theme';\r\n                        pipAssert.isArray($scope.actions, 'pipDropdown: pip-actions attribute should take an array, but take ' + typeof $scope.actions);\r\n                        $scope.$mdMedia = $mdMedia;\r\n                        $scope.actions = ($scope.actions && _.isArray($scope.actions)) ? $scope.actions : [];\r\n                        $scope.activeIndex = $scope.activeIndex || 0;\r\n\r\n                        $scope.disabled = function () {\r\n                            if ($scope.ngDisabled()) {\r\n                                return $scope.ngDisabled();\r\n                            } else {\r\n                                return false;\r\n                            }\r\n                        };\r\n\r\n                        $scope.onSelect = function (index) {\r\n                            $scope.activeIndex = index;\r\n                            if ($scope.select) {\r\n                                $scope.select($scope.actions[index], $scope.activeIndex);\r\n                            }\r\n                        };\r\n\r\n                        $scope.show = function () {\r\n                            if ($scope.showDropdown()) {\r\n                                return $scope.showDropdown();\r\n                            } else {\r\n                                return true;\r\n                            }\r\n                        };\r\n\r\n                    }]\r\n            };\r\n        }]\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Application Side Nav component\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSideNav', \r\n        ['ngMaterial', 'pipTranslate', 'pipFocused', 'pipNav.Templates', 'pipSideNav.Service']);\r\n\r\n    thisModule.config(['pipTranslateProvider', function(pipTranslateProvider) {\r\n\r\n        pipTranslateProvider.translations('en', {\r\n            'SIDENAV_SINCE': 'since'\r\n        });\r\n\r\n        pipTranslateProvider.translations('ru', {\r\n            'SIDENAV_SINCE': 'с'\r\n        });\r\n\r\n    }]);\r\n\r\n    // Main application sidenav directive\r\n    thisModule.directive('pipSidenav', function() {\r\n       return {\r\n           restrict: 'EA',\r\n           scope: {\r\n               primaryPartyAvatar: '=pipPrimaryAvatar',\r\n               secondaryPartyAvatar: '=pipSecondaryAvatar',\r\n               partyName: '=pipName'\r\n           },\r\n           replace: false,\r\n           templateUrl: 'sidenav/sidenav.html',\r\n           controller: 'pipSideNavController'\r\n       };\r\n    });\r\n\r\n    thisModule.controller('pipSideNavController', \r\n        ['$scope', '$element', '$state', '$rootScope', '$window', '$location', '$timeout', 'pipState', 'pipTranslate', 'pipSideNav', function ($scope, $element, $state, $rootScope, $window, $location, $timeout, pipState, pipTranslate, pipSideNav) {\r\n\r\n            // Apply class and call resize\r\n            $element.addClass('pip-sidenav');\r\n\r\n            $scope.config = pipSideNav.config();\r\n            $scope.$avatarReset = false;\r\n\r\n            $rootScope.$on('pipAppBarNavIconClicked', onAppBarNavIconClick);\r\n            $rootScope.$on('pipSideNavChanged', onConfigChanged);\r\n\r\n            $scope.itemVisible = itemVisible;\r\n            $scope.onUserClick = onUserClick;\r\n            $scope.onPartyClick = onPartyClick;\r\n            $scope.onLinkClick = onLinkClick;\r\n            $scope.isSectionEmpty = isSectionEmpty;\r\n\r\n            $scope.getParty = getParty;\r\n            $scope.getUser = getUser;\r\n            $scope.getConnection = getConnection;\r\n            \r\n            return;\r\n            \r\n            //------------------------\r\n\r\n            function getParty(prop) {\r\n                if (!$rootScope.$party) {\r\n                    return;\r\n                }\r\n                if (prop) {\r\n                    return $rootScope.$party[prop];\r\n                }\r\n\r\n                return $rootScope.$party;\r\n            }\r\n\r\n            function getUser(prop) {\r\n                if (!$rootScope.$user) {\r\n                    return;\r\n                }\r\n                if (prop) {\r\n                    return $rootScope.$user[prop];\r\n                }\r\n\r\n                return $rootScope.$user;\r\n            }\r\n            \r\n            function getConnection(prop) {\r\n                if (!$rootScope.$connection) {\r\n                    return;\r\n                }\r\n                if (prop) {\r\n                    return $rootScope.$connection[prop];\r\n                }\r\n\r\n                return $rootScope.$connection;\r\n            }\r\n            \r\n            function itemVisible(item) {\r\n                return item && item.access && !item.access($rootScope.$party, $rootScope.$user, item);\r\n            }\r\n\r\n            function isSectionEmpty(linkCollection) {\r\n                var result = true;\r\n                _.each(linkCollection, function(link){\r\n                    if (!itemVisible(link))\r\n                        result = false;\r\n                });\r\n                return result;\r\n            }\r\n\r\n            function onAppBarNavIconClick(event) {\r\n                pipSideNav.open();\r\n            }\r\n\r\n            function onConfigChanged(event, config) {\r\n                $scope.config = config;\r\n            }\r\n\r\n            function onUserClick() {\r\n                $rootScope.$broadcast('pipSideNavUserClicked');\r\n                pipSideNav.close();\r\n            }\r\n\r\n            function onPartyClick() {\r\n                $rootScope.$broadcast('pipSideNavPartyClicked');\r\n                pipSideNav.close();\r\n            }\r\n\r\n            function processStateParams(params) {\r\n                if (params == null) return null;\r\n\r\n                var result = {};\r\n                for (var prop in params) {\r\n                    if (params.hasOwnProperty(prop)) {\r\n                        if (params[prop] == ':party_id') {\r\n                            result[prop] = $rootScope.$party ? $rootScope.$party.id : null;\r\n                        } else if (params[prop] == ':user_id') {\r\n                            result[prop] = $rootScope.$user ? $rootScope.$user.id : null;\r\n                        } else {\r\n                            result[prop] = params[prop];   \r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function processUrlParams(url) {\r\n                if (url == null) return null;\r\n\r\n                var result = url.replace(':party_id', $rootScope.$party ? $rootScope.$party.id : '');\r\n                result = result.replace(':user_id', $rootScope.$user ? $rootScope.$user.id : '');\r\n\r\n                return result;\r\n            }\r\n\r\n            function onLinkClick(event, link) {\r\n                event.stopPropagation();\r\n\r\n                if (!link) {\r\n                    pipSideNav.close();\r\n                    return;\r\n                }\r\n\r\n                if (link.href) {\r\n                    if (link.href.split('?')[0] === $window.location.href.split('?')[0]) {\r\n                        pipSideNav.close();\r\n                        return;\r\n                    }\r\n\r\n                    pipSideNav.close();\r\n                    $timeout(function() {\r\n                        $window.location.href = processUrlParams(link.href);\r\n                    }, 300);\r\n\r\n                    return;\r\n                }\r\n                else if (link.url) {\r\n                    if (link.url.split(/[\\s/?]+/)[1] === $location.url().split(/[\\s/?]+/)[1]) {\r\n                        pipSideNav.close();\r\n                        return;\r\n                    }\r\n\r\n                    pipSideNav.close();\r\n                    $timeout(function() {\r\n                        $location.url(processUrlParams(link.url));\r\n                    }, 300);\r\n\r\n                    return;\r\n                }\r\n                else if (link.state) {\r\n                    if ($state.current.name === link.state) {\r\n                        pipSideNav.close();\r\n                        return;\r\n                    }\r\n\r\n                    pipSideNav.close();\r\n                    $timeout(function() {\r\n                        pipState.go(link.state, processStateParams(link.stateParams));\r\n                    }, 300);\r\n\r\n                    return;\r\n                }\r\n                else if (link.event)\r\n                    $rootScope.$broadcast('pipSideNavLinkClicked', link.event);\r\n\r\n                pipSideNav.close();\r\n            }\r\n        }]\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Application Side Nav service\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipSideNav.Service', ['pipAssert', 'pipDebug']);\r\n\r\n    thisModule.provider('pipSideNav', ['pipAssertProvider', 'pipDebugProvider', function (pipAssertProvider, pipDebugProvider) {\r\n        var config = {\r\n            // Theme to be applied to the header\r\n            theme: 'blue',\r\n            // Sections with navigation links\r\n            sections: []\r\n        };\r\n\r\n        this.theme = theme;\r\n        this.sections = sections;\r\n\r\n        this.$get = ['$rootScope', '$mdSidenav', function ($rootScope, $mdSidenav) {\r\n            $rootScope.$on('pipSideNavOpen', open);\r\n            $rootScope.$on('pipSideNavClose', close);\r\n\r\n            return {\r\n                config: getConfig,\r\n                theme: setTheme,\r\n                sections: setSections,\r\n                open: open,\r\n                close: close,\r\n                toggle: toggle\r\n            };\r\n            //---------------------\r\n\r\n            function getConfig() {\r\n                return config;  \r\n            };\r\n                            \r\n            function setTheme(newTheme) {\r\n                theme(newTheme);\r\n                sendConfigEvent();  \r\n                return config.theme;\r\n            };\r\n                            \r\n            function setSections(newSections) {\r\n                sections(newSections);\r\n                sendConfigEvent();\r\n                return config.sections;  \r\n            };\r\n                            \r\n            function sendConfigEvent() {\r\n                $rootScope.$broadcast('pipSideNavChanged', config);\r\n            };\r\n\r\n            function open(event) {\r\n                $mdSidenav('pip-sidenav').open();\r\n            };\r\n                 \r\n            function close(event) {\r\n                $mdSidenav('pip-sidenav').close();   \r\n            };                \r\n\r\n            function toggle() {\r\n                $mdSidenav('pip-sidenav').toggle();   \r\n            };                   \r\n        }];\r\n\r\n        function theme(newTheme) {\r\n            config.theme = newTheme || config.theme;\r\n            return config.theme;            \r\n        };\r\n\r\n        function validateSections(sections) {\r\n            pipAssertProvider.isArray(sections, 'pipSideNavProvider.sections or pipSideNav.sections: sections should be an array');\r\n            _.each(sections, function (section, number) {\r\n                if (section.access) {\r\n                    pipAssertProvider.isFunction(section.access, 'pipSideNavProvider.sections or pipSideNav.sections: in section number '\r\n                        + number + \" with title \" + section.title + ' access should be a function');\r\n                }\r\n                if (section.links) {\r\n                    pipAssertProvider.isArray(section.links, 'pipSideNavProvider.sections or pipSideNav.sections: in section number '\r\n                        + number + \" with title \" + section.title + ' links should be an array');\r\n                    _.each(section.links, function (link) {\r\n                        if (link.access) pipAssertProvider.isFunction(link.access, 'pipSideNavProvider.sections or pipSideNav.sections: in section number '\r\n                            + number + \" with title \" + section.title + ' in link with title ' + link.title + ' access should be a function');\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        function sections(newSections) {\r\n            if (pipDebugProvider.enabled()) validateSections(newSections);\r\n\r\n            if (_.isArray(newSections))\r\n                config.sections = newSections;\r\n            return config.sections;\r\n        };\r\n    }]);\r\n\r\n})();\r\n","/**\r\n * @file Tabs control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * \r\n */\r\n\r\n/* global _, angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipTabs\", ['pipAssert', 'pipNav.Templates']);\r\n\r\n    thisModule.directive('pipTabs',\r\n        ['$mdMedia', 'pipAssert', function ($mdMedia, pipAssert) {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    ngDisabled: '&',\r\n                    tabs: '=pipTabs',\r\n                    showTabs: '&pipShowTabs',\r\n                    showTabsShadow: '&pipTabsShadow',\r\n                    activeIndex: '=pipActiveIndex',\r\n                    select: '=pipTabsSelect'\r\n                },\r\n                templateUrl: 'tabs/tabs.html',\r\n                controller:\r\n                    ['$scope', '$element', '$attrs', '$mdMedia', 'localStorageService', 'pipTranslate', function ($scope, $element, $attrs, $mdMedia, localStorageService, pipTranslate) {\r\n                        $scope.class = ($attrs.class || '') + ' md-' + localStorageService.get('theme') + '-theme';\r\n                        pipAssert.isArray($scope.tabs, 'pipTabs: pipTabs attribute should take an array');\r\n                        $scope.$mdMedia = $mdMedia;\r\n                        $scope.tabs = ($scope.tabs && _.isArray($scope.tabs)) ? $scope.tabs : [];\r\n                        if ($scope.tabs.length > 0 && $scope.tabs[0].title) {\r\n                            pipTranslate.translateObjects($scope.tabs, 'title', 'nameLocal');\r\n                        } else {\r\n                            pipTranslate.translateObjects($scope.tabs, 'name', 'nameLocal');\r\n                        }\r\n                        $scope.activeIndex = $scope.activeIndex || 0;\r\n                        $scope.activeTab = $scope.activeIndex;\r\n\r\n                        $scope.disabled = function () {\r\n                            if ($scope.ngDisabled) {\r\n                                return $scope.ngDisabled();\r\n                            }\r\n                        };\r\n\r\n                        $scope.tabDisabled = function (index) {\r\n                            return ($scope.disabled() && $scope.activeIndex != index);\r\n                        };\r\n\r\n                        $scope.onSelect = function (index) {\r\n                            if ($scope.disabled()) return;\r\n\r\n                            $scope.activeIndex = index;\r\n                            $scope.activeTab = $scope.activeIndex;\r\n                            if ($scope.select) {\r\n                                $scope.select($scope.tabs[$scope.activeIndex], $scope.activeIndex);\r\n                            }\r\n                        };\r\n\r\n                        $scope.showShadow = function () {\r\n                            if ($scope.showTabsShadow) {\r\n                                return $scope.showTabsShadow();\r\n                            } else {\r\n                                return false;\r\n                            }\r\n                        };\r\n\r\n                        $scope.show = function () {\r\n                            if ($scope.showTabs) {\r\n                                return $scope.showTabs();\r\n                            } else {\r\n                                return true;\r\n                            }\r\n                        };\r\n                    }]\r\n            };\r\n        }]\r\n    );\r\n\r\n})();\r\n"]}