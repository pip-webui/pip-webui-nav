{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/actions/ActionsService.ts","src/actions/PrimaryActionsDirective.ts","src/actions/SecondaryActionsDirective.ts","src/actions/index.ts","src/appbar/AppBarDirective.ts","src/appbar/AppBarPartDirective.ts","src/appbar/AppBarService.ts","src/appbar/index.ts","src/breadcrumb/BreadcrumbDirective.ts","src/breadcrumb/BreadcrumbService.ts","src/breadcrumb/index.ts","src/common/NavService.ts","src/dependencies/TranslateFilter.ts","src/dropdown/DropdownDirective.ts","src/header/NavHeaderDirective.ts","src/header/NavHeaderService.ts","src/header/index.ts","src/icon/NavIcon.ts","src/icon/NavIconAngularEvents.ts","src/icon/NavIconConfig.ts","src/icon/NavIconService.ts","src/icon/index.ts","src/index.ts","src/language/LanguagePickerDirective.ts","src/menu/NavMenuDirective.ts","src/menu/NavMenuService.ts","src/menu/index.ts","src/search/SearchAngularEvents.ts","src/search/SearchBar.ts","src/search/SearchConfig.ts","src/search/SearchService.ts","src/search/index.ts","src/sidenav/SideNavDirective.ts","src/sidenav/SideNavEvents.ts","src/sidenav/SideNavPartDirective.ts","src/sidenav/SideNavService.ts","src/sidenav/SideNavState.ts","src/sidenav/index.ts","src/tabs/Tabs.ts","temp/pip-webui-nav-html.min.js"],"names":[],"mappings":"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":"pip-webui-nav.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export let ActionsChangedEvent = 'pipActionsChanged';\r\nexport let SecondaryActionsOpenEvent = 'pipSecondaryActionsOpen';\r\n\r\nexport class SimpleActionItem {\r\n    // Name to refer to the item\r\n    public name: string;\r\n    // Link visible title\r\n    public title?: string;\r\n    // Show divider instead of title\r\n    public divider?: boolean;\r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Counter badge\r\n    public count?: number;\r\n    // Access function\r\n    public access?: (action: SimpleActionItem) => boolean;\r\n    // Show on specified breakpoints\r\n    public breakpoints?: string[];\r\n    // window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public click?: (action: SimpleActionItem) => void;\r\n}\r\n\r\nexport class ActionItem extends SimpleActionItem {\r\n    public subActions: SimpleActionItem[];\r\n}\r\n\r\nexport class ActionsConfig {\r\n    // Primary global actions visible on the screen\r\n    public primaryGlobalActions: ActionItem[] = [];\r\n    // Primary local actions visible on the screen\r\n    public primaryLocalActions: ActionItem[] = [];\r\n\r\n    // Secondary global actions available in popup\r\n    public secondaryGlobalActions: ActionItem[] = [];\r\n    // Secondary local actions available in popup\r\n    public secondaryLocalActions: ActionItem[]= [];\r\n}\r\n\r\nexport interface IActionsService {\r\n    readonly config: ActionsConfig;\r\n\r\n    primaryGlobalActions: ActionItem[];\r\n    primaryLocalActions: ActionItem[];\r\n    secondaryGlobalActions: ActionItem[];\r\n    secondaryLocalActions: ActionItem[];    \r\n\r\n    show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void;\r\n    hide(): void;\r\n    updateCount(link: string, count: number): void; \r\n    clearCounts(): void;\r\n    openMenuEvent(): void;\r\n}\r\n\r\nexport interface IActionsProvider extends ng.IServiceProvider {\r\n    config: ActionsConfig;\r\n    \r\n    primaryGlobalActions: ActionItem[];\r\n    primaryLocalActions: ActionItem[];\r\n    secondaryGlobalActions: ActionItem[];\r\n    secondaryLocalActions: ActionItem[];    \r\n}\r\n\r\nclass ActionsService implements IActionsService {\r\n    private _config: ActionsConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: ActionsConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): ActionsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get primaryGlobalActions(): ActionItem[] {\r\n        return this._config.primaryGlobalActions;\r\n    }\r\n\r\n    public set primaryGlobalActions(value: ActionItem[]) {\r\n        this._config.primaryGlobalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get secondaryGlobalActions(): ActionItem[] {\r\n        return this._config.secondaryGlobalActions;\r\n    }\r\n\r\n    public set secondaryGlobalActions(value: ActionItem[]) {\r\n        this._config.secondaryGlobalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get primaryLocalActions(): ActionItem[] {\r\n        return this._config.primaryLocalActions;\r\n    }\r\n\r\n    public set primaryLocalActions(value: ActionItem[]) {\r\n        this._config.primaryLocalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get secondaryLocalActions(): ActionItem[] {\r\n        return this._config.secondaryLocalActions;\r\n    }\r\n\r\n    public set secondaryLocalActions(value: ActionItem[]) {\r\n        this._config.secondaryLocalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void {\r\n        this._config.primaryLocalActions = primaryActions || [];\r\n        this._config.secondaryLocalActions = secondaryActions || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.primaryLocalActions = [];\r\n        this._config.secondaryLocalActions = [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public updateCount(action: string, count: number) {\r\n        if (action == null || !_.isNumber(count)) return;\r\n\r\n        _.each(this._config.primaryGlobalActions, (a) => {\r\n            if (a.name == action)\r\n                a.count = count;\r\n        });\r\n        _.each(this._config.primaryLocalActions, (a) => {\r\n            if (a.name == action)\r\n                a.count = count;\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public clearCounts(): void {\r\n        _.each(this._config.primaryGlobalActions, (a) => {\r\n            a.count = null;\r\n        });\r\n        _.each(this._config.primaryLocalActions, (a) => {\r\n            a.count = null;\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    private sendChangeEvent() {\r\n        this._rootScope.$emit(ActionsChangedEvent, this._config);\r\n    }\r\n\r\n    public openMenuEvent(): void {\r\n        this._rootScope.$emit(SecondaryActionsOpenEvent);\r\n    }\r\n}\r\n\r\nclass ActionsProvider implements IActionsProvider {\r\n    private _config: ActionsConfig = new ActionsConfig();\r\n    private _service: ActionsService;\r\n\r\n    public get config(): ActionsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ActionsConfig) {\r\n        this._config = value || new ActionsConfig();\r\n    }\r\n\r\n    public get primaryGlobalActions(): ActionItem[] {\r\n        return this._config.primaryGlobalActions;\r\n    }\r\n\r\n    public set primaryGlobalActions(value: ActionItem[]) {\r\n        this._config.primaryGlobalActions = value || [];\r\n    }\r\n\r\n    public get secondaryGlobalActions(): ActionItem[] {\r\n        return this._config.secondaryGlobalActions;\r\n    }\r\n\r\n    public set secondaryGlobalActions(value: ActionItem[]) {\r\n        this._config.secondaryGlobalActions = value || [];\r\n    }\r\n\r\n    public get primaryLocalActions(): ActionItem[] {\r\n        return this._config.primaryLocalActions;\r\n    }\r\n\r\n    public set primaryLocalActions(value: ActionItem[]) {\r\n        this._config.primaryLocalActions = value || [];\r\n    }\r\n\r\n    public get secondaryLocalActions(): ActionItem[] {\r\n        return this._config.secondaryLocalActions;\r\n    }\r\n\r\n    public set secondaryLocalActions(value: ActionItem[]) {\r\n        this._config.secondaryLocalActions = value || [];\r\n    }\r\n\r\n    public $get($rootScope) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ActionsService(this._config, $rootScope);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipActions')\r\n    .provider('pipActions', ActionsProvider);\r\n\r\n","import { IActionsService, ActionItem, ActionsConfig } from \"./ActionsService\";\r\n\r\nclass PrimaryActionsController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _pipActions: IActionsService;\r\n    private _pipTranslate: pip.services.ITranslateService\r\n\r\n    public config: ActionsConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $location: ng.ILocationService,\r\n        pipActions: IActionsService\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._pipActions = pipActions;\r\n\r\n\r\n        this._pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n        if (this._pipTranslate && this._pipTranslate.setTranslations) {\r\n            this._pipTranslate.setTranslations('en', {\r\n                DOCUMENTS_ATTACHED: 'document(s) attached',\r\n                ERROR_DOCUMENTS_LOADED: 'Error: <%= error_number %> document(s) are not loaded'\r\n            });\r\n            this._pipTranslate.setTranslations('ru', {\r\n                DOCUMENTS_ATTACHED: 'документов добавлено',\r\n                ERROR_DOCUMENTS_LOADED: 'Ошибка: <%= error_number %> документ(ов) не загружено'\r\n\r\n            });\r\n        }\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-primary-actions');\r\n\r\n        if (this._scope.localActions) {\r\n            pipActions.primaryLocalActions = this._scope.localActions;\r\n        }\r\n\r\n        if (this._scope.globalActions) {\r\n            pipActions.primaryGlobalActions = this._scope.globalActions;\r\n        }\r\n\r\n        this.config = pipActions.config;\r\n\r\n        this._rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\r\n            this.onActionsChanged(event, config);\r\n        });\r\n\r\n    }\r\n\r\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\r\n        this.config = config;\r\n    }\r\n\r\n    public isHidden(action: ActionItem): boolean {\r\n        // Todo: Check breakpoints here\r\n        return action.access && !action.access(action);\r\n    }\r\n\r\n    public actionCount(action: ActionItem): string {\r\n        if (action.count === null || action.count <= 0) {\r\n            return '';\r\n        }\r\n        if (action.count > 99) {\r\n            return '!';\r\n        }\r\n\r\n        return String(action.count);\r\n    }\r\n\r\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        if (action.subActions) {\r\n            $mdOpenMenu(this._scope.originatorEv);\r\n            return;\r\n        }\r\n\r\n        if (_.isFunction(action.click)) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('this._state')) {\r\n                let _state: angular.ui.IStateService = this._injector.has('pipTranslate') ? <angular.ui.IStateService>this._injector.get('$state') : null ;\r\n                if (_state) {\r\n                    _state.go(action.state, action.stateParams);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function primaryActionsDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                localActions: '=pipLocalActions',\r\n                globalActions: '=pipGlobalActions'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'actions/PrimaryActions.html',\r\n            controller: PrimaryActionsController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipActions')\r\n        .directive('pipPrimaryActions', primaryActionsDirective);\r\n\r\n})();","import { IActionsService, ActionItem, ActionsConfig } from \"./ActionsService\";\r\n\r\nclass SecondaryActionsController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _pipActions: IActionsService;\r\n    private _pipTranslate: pip.services.ITranslateService\r\n    private _menuFn: Function;\r\n    public config: ActionsConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $location: ng.ILocationService,\r\n        pipActions: IActionsService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._pipActions = pipActions;\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-secondary-actions');\r\n\r\n        if (this._scope.localActions) {\r\n            pipActions.secondaryLocalActions = this._scope.localActions;\r\n        }\r\n\r\n        if (this._scope.globalActions) {\r\n            pipActions.secondaryGlobalActions = this._scope.globalActions;\r\n        }\r\n\r\n        this.config = pipActions.config;\r\n\r\n        this._rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\r\n            this.onActionsChanged(event, config);\r\n        });\r\n\r\n        this._rootScope.$on('pipSecondaryActionsOpen', () => {\r\n            this.onActionsMenuOpen();\r\n        });\r\n\r\n    }\r\n\r\n    public getMenu(menuFn: Function): void {\r\n         this._menuFn = menuFn;\r\n    }\r\n\r\n    public onActionsMenuOpen(): void {\r\n        this._menuFn();\r\n    }\r\n\r\n    public openMenu($mdOpenMenu: Function, ev: ng.IAngularEvent): void {\r\n        this._scope.originatorEv = ev;\r\n        $mdOpenMenu(ev);\r\n    }\r\n\r\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\r\n        this.config = config;\r\n    }\r\n\r\n    public isHidden(action: ActionItem): boolean {\r\n        // Todo: Check breakpoints here\r\n        return action.access && !action.access(action);\r\n    }\r\n\r\n    public actionCount(action: ActionItem): string {\r\n        if (action.count === null || action.count <= 0) {\r\n            return '';\r\n        }\r\n        if (action.count > 99) {\r\n            return '!';\r\n        }\r\n\r\n        return String(action.count);\r\n    }\r\n\r\n\r\n    private calcActions(actions: ActionItem[]): number {\r\n        let count: number = 0;\r\n\r\n        _.each(actions, (action: ActionItem) => {\r\n            if (!this.isHidden(action)) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    public secondaryActionsVisible() {\r\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 ||\r\n            this.calcActions(this.config.secondaryLocalActions) > 0;\r\n    }\r\n\r\n    public secondaryDividerVisible() {\r\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 &&\r\n            this.calcActions(this.config.secondaryLocalActions) > 0;\r\n    }\r\n\r\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        // todo: do not supported into ActionItem\r\n        // if (action.close) {\r\n        //     this._scope.originatorEv = null;\r\n        // }\r\n\r\n        if (action.subActions) {\r\n            $mdOpenMenu(this._scope.originatorEv);\r\n            return;\r\n        }\r\n\r\n        if (action.click) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('this._state')) {\r\n                let _state: angular.ui.IStateService = this._injector.has('pipTranslate') ? <angular.ui.IStateService>this._injector.get('$state') : null;\r\n                if (_state) {\r\n                    _state.go(action.state, action.stateParams);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function secondaryActionsDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                localActions: '=pipLocalActions',\r\n                globalActions: '=pipGlobalActions'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'actions/SecondaryActions.html',\r\n            controller: SecondaryActionsController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipActions')\r\n        .directive('pipSecondaryActions', secondaryActionsDirective);\r\n\r\n})();\r\n","angular.module('pipActions', ['ngMaterial', 'pipNav.Templates', 'ui.router']);\r\n\r\nimport './ActionsService';\r\nimport './PrimaryActionsDirective';\r\nimport './SecondaryActionsDirective';\r\n\r\nexport * from './ActionsService';","﻿import { IAppBarService, AppBarConfig } from \"./AppBarService\";\r\n\r\nclass AppBarDirectiveController {\r\n    public config: AppBarConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipAppBar: IAppBarService\r\n    ) {\r\n        \"ngInject\";\r\n        // Apply class and call resize\r\n        $element.addClass('pip-appbar');\r\n        $element.addClass('color-primary-bg');\r\n\r\n        $scope.config = pipAppBar.config;\r\n\r\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\r\n            this.onAppBarChanged(event, config)\r\n        });\r\n    }\r\n\r\n    public onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\r\n        this.config = config;\r\n    }\r\n    \r\n}\r\n\r\n(() => {\r\n    function appbarDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: true,\r\n            templateUrl: 'appbar/AppBar.html',\r\n            controller: AppBarDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipAppBar')\r\n        .directive('pipAppbar', appbarDirective);\r\n\r\n})();","import { AppBarConfig, IAppBarService } from \"./AppBarService\";\r\n\r\nclass AppBarPartDirectiveController {\r\n    private _scope: ng.IScope;\r\n    private _partName: string;\r\n    private _partValue: string;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipAppBar: IAppBarService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._scope = $scope;\r\n        this._partName = String($attrs.pipAppbarPart);\r\n        this._partValue = null;\r\n\r\n        // Break part apart\r\n        let pos: number = this._partName.indexOf(':');\r\n        if (pos > 0) {\r\n            this._partValue = this._partName.substr(pos + 1);\r\n            this._partName = this._partName.substr(0, pos);\r\n        }\r\n\r\n        // onAppBarChanged(null, pipAppBar.config);\r\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\r\n            this.onAppBarChanged(null, config)\r\n        });\r\n\r\n    }\r\n\r\n    private onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\r\n        let parts: any = config.parts || {};\r\n        let currentPartValue = parts[this._partName];\r\n\r\n        // Set visible variable to switch ngIf\r\n        let visible: boolean = !!(this._partValue ? currentPartValue == this._partValue : currentPartValue);\r\n\r\n        if (visible != this._scope['visible'])\r\n            this._scope['visible'] = visible;\r\n    }\r\n\r\n}\r\n\r\n// Example is taken from here: http://stackoverflow.com/questions/20325480/angularjs-whats-the-best-practice-to-add-ngif-to-a-directive-programmatically\r\n(() => {\r\n    function appbarPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        var ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function linkFunction($scope: ng.IScope, $element: ng.IAugmentedJQuery, $attrs: ng.IAttributes) {\r\n                // Visualize based on visible variable in scope\r\n                $attrs.ngIf = function () {\r\n                    return $scope.visible;\r\n                };\r\n                ngIf.link.apply(ngIf, arguments);\r\n            },\r\n            controller: AppBarPartDirectiveController\r\n        };\r\n    }\r\n\r\n    angular.module('pipAppBar')\r\n        .directive('pipAppbarPart', appbarPartDirective);\r\n\r\n})();","export let AppBarChangedEvent = 'pipAppBarChanged';\r\n\r\nexport class AppBarConfig {\r\n    visible: boolean;\r\n    parts: any;\r\n    classes: string[];\r\n} \r\n\r\nexport interface IAppBarService {\r\n    readonly config: AppBarConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n\r\n    show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void;\r\n    hide(): void;\r\n \r\n    addShadow(...breakpoints: string[]): void;\r\n    removeShadow(): void;\r\n \r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n \r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface IAppBarProvider extends ng.IServiceProvider {\r\n    config: AppBarConfig;\r\n    parts: any;\r\n    classes: string[];\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nclass AppBarService implements IAppBarService {\r\n    private _config: AppBarConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: AppBarConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): AppBarConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void {\r\n        this._config.visible = true;\r\n        this._config.parts = parts || this._config.parts || {};\r\n        this._config.classes = classes || this._config.classes || [];\r\n        if (shadowBreakpoints) {\r\n            this.setShadow(shadowBreakpoints); \r\n        }\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.visible = false;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private hideShadow(): void {\r\n        this._config.classes = _.reject(this._config.classes, (c) => c.startsWith('pip-shadow'));\r\n    }\r\n\r\n    private setShadow(breakpoints: string[]): void {\r\n        this.hideShadow();\r\n\r\n        if (breakpoints != null && breakpoints.length > 0) {\r\n            _.each(breakpoints, (bp) => {\r\n                this._config.classes.push('pip-shadow-' + bp);\r\n            });\r\n        } else {\r\n            this._config.classes.push('pip-shadow');\r\n        }\r\n    }\r\n\r\n    public addShadow(...breakpoints: string[]): void {\r\n        this.setShadow(breakpoints);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeShadow(): void {\r\n        this.hideShadow();\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$broadcast(AppBarChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass AppBarProvider implements IAppBarProvider {\r\n    private _config: AppBarConfig = {\r\n        visible: true,\r\n        parts: {},\r\n        classes: []\r\n    };\r\n    private _service: AppBarService;\r\n\r\n    public get config(): AppBarConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: AppBarConfig) {\r\n        this._config = value || new AppBarConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AppBarService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }     \r\n}\r\n\r\nangular\r\n    .module('pipAppBar')\r\n    .provider('pipAppBar', AppBarProvider);\r\n","angular\r\n    .module('pipAppBar', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './AppBarService';\r\nimport './AppBarDirective';\r\nimport './AppBarPartDirective';\r\n\r\nexport * from './AppBarService';\r\n","import { SimpleActionItem } from '../actions/ActionsService';\r\nimport { BreadcrumbItem } from './BreadcrumbService';\r\nimport { BreadcrumbConfig } from './BreadcrumbService';\r\nimport { IBreadcrumbService } from './BreadcrumbService';\r\nimport { BreadcrumbChangedEvent } from './BreadcrumbService';\r\nimport { BreadcrumbBackEvent } from './BreadcrumbService';\r\nimport { OpenSearchEvent } from '../search/SearchAngularEvents'\r\n\r\nclass BreadcrumbController {\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private originatorEv: Event;\r\n    private _media: any;\r\n\r\n    public config: BreadcrumbConfig;\r\n\r\n    public constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $state: ng.ui.IStateService,\r\n        $location: ng.ILocationService,\r\n        $injector: ng.auto.IInjectorService,\r\n        pipBreadcrumb: IBreadcrumbService,\r\n        $mdMedia: angular.material.IMedia\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._injector = $injector;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-breadcrumb');\r\n\r\n        this.config = pipBreadcrumb.config;\r\n\r\n        $rootScope.$on(BreadcrumbChangedEvent, (event: ng.IAngularEvent, config: BreadcrumbConfig) => {\r\n            this.onBreadcrumbChanged(event, config);\r\n        });\r\n        $rootScope.$on(BreadcrumbBackEvent, () => { this.onBreadcrumbBack(); });\r\n\r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this._media = pipMedia !== undefined ? pipMedia : $mdMedia;\r\n    }\r\n\r\n    private onBreadcrumbChanged(event: ng.IAngularEvent, config: BreadcrumbConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    private onBreadcrumbBack(): void {\r\n        let items: BreadcrumbItem[] = this.config.items;\r\n        // Go to the last breadcrumb item\r\n        if (_.isArray(items) && items.length > 0) {\r\n            let item: BreadcrumbItem = items[items.length - 1];\r\n            if (_.isFunction(item.click)) {\r\n                item.click(item);\r\n            } else {\r\n                this._window.history.back();\r\n            }\r\n        } else {\r\n            this._window.history.back();\r\n        }\r\n    }\r\n\r\n    public onClick(item: BreadcrumbItem): void {\r\n        if (_.isFunction(item.click)) {\r\n            item.click(item);\r\n        }\r\n    }\r\n\r\n    public openSearch(): void {\r\n        this._rootScope.$broadcast(OpenSearchEvent);\r\n    }\r\n\r\n    public actionsVisible(item: BreadcrumbItem): boolean {\r\n\r\n        return angular.isArray(item.subActions) && item.subActions.length > 1;\r\n    }\r\n\r\n    public onOpenMenu($mdOpenMenu: Function, event: Event): void {\r\n        this.originatorEv = event;\r\n        $mdOpenMenu(this.originatorEv);\r\n    }\r\n\r\n    public onSubActionClick(action: SimpleActionItem): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        if (_.isFunction(action.click)) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('$state')) {\r\n                let _state: angular.ui.IStateService = this._injector.get('$state') as ng.ui.IStateService\r\n                _state.go(action.state, action.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n            this.originatorEv = null;\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n            this.originatorEv = null;\r\n        }\r\n    }\r\n}\r\n\r\n(() => {\r\n    function breadcrumbDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {},\r\n            replace: false,\r\n            templateUrl: 'breadcrumb/Breadcrumb.html',\r\n            controller: BreadcrumbController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n\r\n    angular.module('pipBreadcrumb')\r\n        .directive('pipBreadcrumb', breadcrumbDirective);\r\n\r\n})();","import { SimpleActionItem } from '../actions/ActionsService';\r\nexport let BreadcrumbChangedEvent = \"pipBreadcrumbChanged\";\r\nexport let BreadcrumbBackEvent = \"pipBreadcrumbBack\";\r\n\r\nexport class BreadcrumbItem {\r\n    title: string;\r\n    click?: (item: BreadcrumbItem) => void;   \r\n    subActions?: SimpleActionItem[]; \r\n}\r\n\r\nexport class BreadcrumbConfig {\r\n    text: string;\r\n    items: BreadcrumbItem[];\r\n    criteria: string;\r\n}\r\n\r\nexport interface IBreadcrumbService {\r\n    config: BreadcrumbConfig;\r\n    text: string;\r\n    items: BreadcrumbItem[];\r\n    criteria: string;\r\n\r\n    showText(text: string, criteria?: string): void;\r\n    showItems(items: BreadcrumbItem[], criteria?: string): void;\r\n}\r\n\r\nexport interface IBreadcrumbProvider extends ng.IServiceProvider {\r\n    text: string;\r\n}\r\n\r\nclass BreadcrumbService implements IBreadcrumbService {\r\n    private _config: BreadcrumbConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: BreadcrumbConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config() {\r\n        return this._config;\r\n    }\r\n\r\n    public get text(): string {\r\n        return this._config.text;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._config.text = value;\r\n        this._config.items = null;\r\n\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get items(): BreadcrumbItem[] {\r\n        return this._config.items;\r\n    }\r\n\r\n    public set items(value: BreadcrumbItem[]) {\r\n        this._config.text = null;\r\n        this._config.items = value;\r\n\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get criteria(): string {\r\n        return this._config.criteria;\r\n    }\r\n\r\n    public set criteria(value: string) {\r\n        this._config.criteria = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showText(text: string, criteria?: string): void {\r\n        this._config.text = text;\r\n        this._config.items = null;\r\n        this._config.criteria = criteria;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showItems(items: BreadcrumbItem[], criteria?: string): void {\r\n        this._config.items = items || [];\r\n        this._config.text = null;\r\n        this._config.criteria = criteria;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public sendConfigEvent() {\r\n        this._rootScope.$broadcast(BreadcrumbChangedEvent, this._config);\r\n    }\r\n}\r\n\r\n\r\nclass BreadcrumbProvider implements IBreadcrumbProvider {\r\n    private _config: BreadcrumbConfig = { \r\n        text: null,\r\n        items: null,\r\n        criteria: null\r\n    };\r\n    private _service: BreadcrumbService;\r\n\r\n    public get text(): string {\r\n        return this._config.text;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._config.text = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService): any {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new BreadcrumbService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\n\r\nangular.module('pipBreadcrumb')\r\n    .provider('pipBreadcrumb', BreadcrumbProvider);\r\n","angular.module('pipBreadcrumb', ['ngMaterial', 'pipNav.Templates', 'pipNav.Translate']);\r\n\r\nimport './BreadcrumbDirective';\r\nimport './BreadcrumbService';\r\n\r\nexport * from './BreadcrumbService';\r\n\r\n\r\n","import { INavIconService } from '../icon/INavIconService';\r\nimport { INavMenuService } from '../menu/NavMenuService';\r\nimport { INavHeaderService } from '../header/NavHeaderService';\r\nimport { IBreadcrumbService } from '../breadcrumb/BreadcrumbService';\r\nimport { ISearchService } from '../search/ISearchService';\r\nimport { IActionsService } from '../actions/ActionsService';\r\nimport { IAppBarService } from '../appbar/AppBarService';\r\nimport { ISideNavService } from '../sidenav/SideNavService';\r\n\r\nexport interface INavService {\r\n    appbar: IAppBarService;\r\n    icon: INavIconService;\r\n    breadcrumb: IBreadcrumbService;\r\n    actions: IActionsService;\r\n    search: ISearchService;\r\n    sidenav: ISideNavService;\r\n    header: INavHeaderService;\r\n    menu: INavMenuService;\r\n\r\n    reset(): void;\r\n}\r\n\r\nclass NavService implements INavService {\r\n\r\n    public constructor($injector: ng.auto.IInjectorService) {\r\n        \"ngInject\";\r\n\r\n        this.appbar = $injector.has('pipAppBar') ? <IAppBarService>$injector.get('pipAppBar') : null;\r\n        this.icon = $injector.has('pipNavIcon') ? <INavIconService>$injector.get('pipNavIcon') : null;\r\n        this.breadcrumb = $injector.has('pipBreadcrumb') ? <IBreadcrumbService>$injector.get('pipBreadcrumb') : null;\r\n        this.actions = $injector.has('pipActions') ? <IActionsService>$injector.get('pipActions') : null;\r\n        this.search = $injector.has('pipSearch') ? <ISearchService>$injector.get('pipSearch') : null;\r\n        this.sidenav = $injector.has('pipSideNav') ? <ISideNavService>$injector.get('pipSideNav') : null;\r\n        this.header = $injector.has('pipNavHeader') ? <INavHeaderService>$injector.get('pipNavHeader') : null;\r\n        this.menu = $injector.has('pipNavMenu') ? <INavMenuService>$injector.get('pipNavMenu') : null;\r\n    }\r\n\r\n    public appbar: IAppBarService;\r\n    public icon: INavIconService;\r\n    public breadcrumb: IBreadcrumbService;\r\n    public actions: IActionsService;\r\n    public search: ISearchService;\r\n    public sidenav: ISideNavService;\r\n    public header: INavHeaderService;\r\n    public menu: INavMenuService;\r\n\r\n    public reset() {\r\n        // Reset appbar\r\n        if (this.appbar) {\r\n            this.appbar.show();\r\n        }\r\n\r\n        // Reset icon\r\n        if (this.icon) {\r\n            this.icon.showMenu();\r\n        }\r\n\r\n        // Reset breadcrumb\r\n        if (this.breadcrumb) {\r\n            this.breadcrumb.showText(null);\r\n        }\r\n\r\n        // Reset actions\r\n        if (this.actions) {\r\n            this.actions.show();\r\n        }\r\n\r\n        // Reset search\r\n        if (this.search) {\r\n            this.search.set(null);\r\n        }\r\n\r\n        if (this.sidenav) {\r\n            this.sidenav.show();\r\n        }\r\n\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNavService', [])\r\n    .service('pipNavService', NavService);","(() => {\r\n\r\nfunction translateFilter($injector: ng.auto.IInjectorService) {\r\n    \"ngInject\";\r\n\r\n    let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n    return function (key: string) {\r\n        return pipTranslate ? pipTranslate.translate(key) || key : key;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNav.Translate', [])\r\n    .filter('translate', translateFilter);\r\n\r\n})();\r\n\r\n","(() => {\r\n    class DropdownDirectiveController {\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _attrs: ng.IAttributes;\r\n        private _injector: ng.auto.IInjectorService;\r\n        private _scope: angular.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _pipTranslate: pip.services.ITranslateService;\r\n\r\n        private _pipTheme: pip.themes.IThemeService;\r\n        private _pipMedia: pip.layouts.IMediaService;\r\n        private _timeout: ng.ITimeoutService;\r\n\r\n        public themeClass: string;\r\n        public media: any;\r\n        public actions: any; // string or array\r\n        public activeIndex: number;\r\n        public selectedIndex: number;\r\n        public currentTheme: string;\r\n\r\n        constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $attrs: ng.IAttributes,\r\n            $injector: ng.auto.IInjectorService,\r\n            $scope: angular.IScope,\r\n            $log: ng.ILogService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $mdMedia: angular.material.IMedia,\r\n            $timeout: ng.ITimeoutService\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._attrs = $attrs;\r\n            this._scope = $scope;\r\n            this._injector = $injector;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n\r\n            this._pipTheme = $injector.has('pipTheme') ? <pip.themes.IThemeService>$injector.get('pipTheme') : null;\r\n            this._pipMedia = $injector.has('pipMedia') ? <pip.layouts.IMediaService>$injector.get('pipMedia') : null;\r\n\r\n            if (this._pipTheme) {\r\n                this.currentTheme = this._pipTheme.theme;\r\n            } else if (this._rootScope['$theme']) {\r\n                this.currentTheme = this._rootScope['$theme'];\r\n            }\r\n\r\n            this.themeClass = ($attrs.class || '') + ' md-' + this.currentTheme + '-theme';\r\n\r\n            //pipAssert.isArray($scope.actions, 'pipDropdown: pip-actions attribute should take an array, but take ' + typeof $scope.actions);\r\n            this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\r\n            this.actions = ($scope['actions'] && _.isArray($scope['actions'])) ? $scope['actions'] : [];\r\n            this.activeIndex = $scope['activeIndex'] || 0;\r\n        }\r\n\r\n\r\n        public disabled(): boolean {\r\n            if (this._scope['ngDisabled']) {\r\n                return this._scope['ngDisabled']();\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public onSelect(index: number): void {\r\n            this.activeIndex = index;\r\n            this._scope['activeIndex'] = index;\r\n            if (this._scope['select']) {\r\n                this._scope['select'](this.actions[index], this.activeIndex);\r\n            }\r\n\r\n            if (this._scope['pipChange']) {\r\n                this._timeout(() => {\r\n                    this._scope['pipChange']();\r\n                });\r\n            }\r\n        }\r\n\r\n        public show(): boolean {\r\n            let result: boolean;\r\n            if (this._scope['showDropdown']()) {\r\n                return !!this._scope['showDropdown']();\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function dropdownDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                ngDisabled: '&',\r\n                actions: '=pipActions',\r\n                showDropdown: '&pipShow',\r\n                activeIndex: '=pipActiveIndex',\r\n                select: '=pipDropdownSelect',\r\n                pipChange: '&'\r\n            },\r\n            templateUrl: 'dropdown/Dropdown.html',\r\n            controller: DropdownDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipDropdown', ['pipNav.Templates'])\r\n        .directive('pipDropdown', dropdownDirective);\r\n\r\n})();","import { INavHeaderService, NavHeaderConfig } from \"./NavHeaderService\";\r\n\r\n(() => {\r\n    class NavHeaderDirectiveController {\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _scope: angular.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _timeout: ng.ITimeoutService;\r\n        private _pipNavHeader: INavHeaderService;\r\n\r\n        public title: string;\r\n        public subtitle: string;\r\n        public imageUrl: string;\r\n        public imageCss: string;\r\n        public image: ng.IAugmentedJQuery;\r\n        public imageBlock: ng.IAugmentedJQuery;\r\n        public loadedDefaultImage: boolean;\r\n        public showHeader: boolean;\r\n\r\n        constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $scope: angular.IScope,\r\n            $log: ng.ILogService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: ng.ITimeoutService,\r\n            pipNavHeader: INavHeaderService,\r\n            navConstant: any\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._scope = $scope;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n            this._pipNavHeader = pipNavHeader;\r\n\r\n            // Apply class and call resize\r\n            this._element.addClass('pip-sticky-nav-header');\r\n\r\n\r\n            this.initImage();\r\n\r\n            let cleanupNavHeaderChanged: Function = this._rootScope.$on('pipNavHeaderChanged', ($event: ng.IAngularEvent, config: NavHeaderConfig) => {\r\n                this.onNavHeaderChanged($event, config)\r\n            });\r\n            let cleanupSideNavStateChanged: Function = this._rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: any) => { //navState\r\n                this.onStateChanged($event, state)\r\n            });\r\n\r\n            $scope.$on('$destroy', () => {\r\n                if (angular.isFunction(cleanupNavHeaderChanged)) {\r\n                    cleanupNavHeaderChanged();\r\n                }\r\n                if (angular.isFunction(cleanupSideNavStateChanged)) {\r\n                    cleanupSideNavStateChanged();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        private initImage() {\r\n            this.imageBlock = this._element.find('.pip-sticky-nav-header-user')\r\n\r\n            this._timeout(() => {\r\n                this.image = this._element.find('.pip-sticky-nav-header-user-image');\r\n\r\n                if (this.image[0]) {\r\n                    this.image[0].onload = (() => this.onImageLoad());\r\n\r\n                    // ($event: HTMLElement, erroev: Event): any =>  {\r\n                    //     this.onImageLoad($event);\r\n                    //     return null;\r\n                    // }\r\n                    this.image[0].onerror = (() => this.onImageError());\r\n                    // ($event: ng.IAngularEvent) => {\r\n                    //     this.onImageError($event);\r\n                    // }\r\n                } else {\r\n                    this.image.onload = (() => this.onImageLoad());\r\n                    this.image.onerror = (() => this.onImageError());\r\n                }\r\n\r\n                this.onNavHeaderChanged(null, this._pipNavHeader.config);\r\n            }, 20);\r\n        }\r\n\r\n        private initHeader() {\r\n            if (!this._pipNavHeader.config) return;\r\n\r\n            this.title = this._pipNavHeader.config.title;\r\n            this.subtitle = this._pipNavHeader.config.subtitle;\r\n            this.imageUrl = this._pipNavHeader.config.imageUrl;\r\n            this.imageCss = this._pipNavHeader.config.imageCss;\r\n        }\r\n\r\n        // // When image is loaded resize/reposition it\r\n        // private onImageLoad($event) {\r\n        //     let image: ng.IAugmentedJQuery = $($event.target);\r\n        //     this.setImageMarginCSS(image);\r\n        // };\r\n\r\n        // private onImageError($event) {\r\n        //     if (this.loadedDefaultImage) return;\r\n        //     this._scope.$apply(() => {\r\n        //         this.setImage(this._pipNavHeader.config, true);\r\n        //     });\r\n        // };\r\n        // When image is loaded resize/reposition it\r\n        private onImageLoad() {\r\n            this.setImageMarginCSS(this.image);\r\n        };\r\n\r\n        private onImageError() {\r\n            if (this.loadedDefaultImage) return;\r\n            this._scope.$apply(() => {\r\n                this.setImage(this._pipNavHeader.config, true);\r\n            });\r\n        };\r\n\r\n        private onStateChanged(event: ng.IAngularEvent, state: any) { // navState\r\n            if (state === undefined) return;\r\n\r\n            if (state.id == 'toggle') {\r\n                this._timeout(() => {\r\n                    this.showHeader = state && state.id == 'toggle';\r\n                }, 400);\r\n            } else {\r\n                this.showHeader = false;\r\n            }\r\n        }\r\n\r\n        private setImageMarginCSS(image: ng.IAugmentedJQuery) { //image[0]\r\n            var cssParams = {},\r\n                containerWidth = this.imageBlock.width ? this.imageBlock.width() : this.imageBlock.clientWidth,\r\n                containerHeight = this.imageBlock.height ? this.imageBlock.height() : this.imageBlock.clientHeight,\r\n                imageWidth = image[0]['naturalWidth'] || image.width,\r\n                imageHeight = image[0]['naturalHeight'] || image.height,\r\n                margin = 0;\r\n\r\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n                cssParams['margin-left'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + containerHeight + 'px';\r\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px';\r\n                cssParams['margin-top'] = '';\r\n            } else {\r\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n                cssParams['margin-top'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px';\r\n                cssParams['width'] = '' + containerWidth + 'px';\r\n                cssParams['margin-left'] = '';\r\n            }\r\n\r\n            image.css(cssParams);\r\n        };\r\n\r\n        private setImage(config, loadError: boolean) {\r\n            if (!config) return;\r\n\r\n            var url: string;\r\n\r\n            if (!loadError && !!config.imageUrl && !this.loadedDefaultImage) {\r\n                url = config.imageUrl;\r\n            } else {\r\n                this.loadedDefaultImage = true;\r\n                url = config.defaultImageUrl;\r\n            }\r\n\r\n            if (url && this.image) {\r\n                this.image.attr('src', url);\r\n            } else {\r\n                this.imageBlock.css('display', 'none');\r\n            }\r\n        }\r\n\r\n        private onNavHeaderChanged($event: ng.IAngularEvent, config: NavHeaderConfig) {\r\n            if (!config) return;\r\n            this.setImage(config, false)\r\n\r\n            this.title = config.title;\r\n            this.subtitle = config.subtitle;\r\n            this.imageUrl = config.imageUrl;\r\n            this.imageCss = config.imageCss;\r\n        }\r\n\r\n        public onUserClick() {\r\n            this._rootScope.$broadcast('pipNavUserClicked'); // todo\r\n        }\r\n\r\n    }\r\n\r\n    function navHeaderDirective() {\r\n        return {\r\n            restrict: 'EA',\r\n            replace: false,\r\n            templateUrl: 'header/NavHeader.html',\r\n            controller: NavHeaderDirectiveController,\r\n            controllerAs: '$ctrl'\r\n\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipNavHeader')\r\n        .directive('pipNavHeader', navHeaderDirective);\r\n\r\n})();","export let NavHeaderChangedEvent = 'pipNavHeaderChanged';\r\n\r\nexport class NavHeaderConfig {\r\n    // Image url\r\n    public imageUrl: string;\r\n    // Image url\r\n    public defaultImageUrl: string;\r\n    // Title\r\n    public title: string;\r\n    // Subtitle\r\n    public subtitle: string;\r\n    // image styles\r\n    public imageCss: string;\r\n    // Handle header click event\r\n    click: () => void;\r\n    // Event name\r\n    event: string\r\n};\r\n\r\nexport interface INavHeaderService {\r\n    readonly config: NavHeaderConfig;\r\n    imageUrl: string;\r\n    title: string;\r\n    subtitle: string;\r\n    event: string;\r\n\r\n    show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\r\n    hide(): void;\r\n    click: () => void;\r\n}\r\n\r\nexport interface INavHeaderProvider extends ng.IServiceProvider {\r\n    config: NavHeaderConfig;\r\n    defaultImageUrl: string;\r\n    imageUrl: string;\r\n    title: string;\r\n    subtitle: string;\r\n    event: string;\r\n\r\n    set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\r\n    clear(): void;\r\n    click: () => void;\r\n}\r\n\r\nclass NavHeaderService {\r\n    private _config: NavHeaderConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: NavHeaderConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): NavHeaderConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get title(): string {\r\n        return this._config.title;\r\n    }\r\n\r\n    public set title(value: string) {\r\n        this._config.title = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get subtitle(): string {\r\n        return this._config.subtitle;\r\n    }\r\n\r\n    public set subtitle(value: string) {\r\n        this._config.subtitle = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get imageUrl(): string {\r\n        return this._config.imageUrl;\r\n    }\r\n\r\n    public set imageUrl(value: string) {\r\n        this._config.imageUrl = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get click(): () => void {\r\n        return this._config.click;\r\n    }\r\n\r\n    public set click(value: () => void) {\r\n        this._config.click = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get event(): string {\r\n        return this._config.event;\r\n    }\r\n\r\n    public set event(value: string) {\r\n        this._config.event = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.title = title;\r\n        this._config.subtitle = subtitle;\r\n        this._config.imageUrl = imageUrl;\r\n\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n        }\r\n        if (_.isString(callbackOrEvent)) {\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.event = null;\r\n        }\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.title = null;\r\n        this._config.subtitle = null;\r\n        this._config.imageUrl = null;\r\n        this._config.click = null;\r\n        this._config.event = null;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(NavHeaderChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavHeaderProvider implements INavHeaderProvider {\r\n    private _config: NavHeaderConfig = new NavHeaderConfig();\r\n    private _service: NavHeaderService;\r\n\r\n    public get config(): NavHeaderConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: NavHeaderConfig) {\r\n        this._config = value || new NavHeaderConfig();\r\n    }\r\n\r\n    public get defaultImageUrl(): string {\r\n        return this._config.defaultImageUrl;\r\n    }\r\n\r\n    public set defaultImageUrl(value: string) {\r\n        this._config.defaultImageUrl = value;\r\n    }\r\n\r\n    public get title(): string {\r\n        return this._config.title;\r\n    }\r\n\r\n    public set title(value: string) {\r\n        this._config.title = value;\r\n    }\r\n\r\n    public get subtitle(): string {\r\n        return this._config.subtitle;\r\n    }\r\n\r\n    public set subtitle(value: string) {\r\n        this._config.subtitle = value;\r\n    }\r\n\r\n    public get imageUrl(): string {\r\n        return this._config.imageUrl;\r\n    }\r\n\r\n    public set imageUrl(value: string) {\r\n        this._config.imageUrl = value;\r\n    }\r\n\r\n    public get click(): () => void {\r\n        return this._config.click;\r\n    }\r\n\r\n    public set click(value: () => void) {\r\n        this._config.click = value;\r\n    }\r\n\r\n    public get event(): string {\r\n        return this._config.event;\r\n    }\r\n\r\n    public set event(value: string) {\r\n        this._config.event = value;\r\n    }\r\n\r\n    public set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.title = title;\r\n        this._config.subtitle = subtitle;\r\n        this._config.imageUrl = imageUrl;\r\n\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n        }\r\n        if (_.isString(callbackOrEvent)) {\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.event = null;\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.title = null;\r\n        this._config.subtitle = null;\r\n        this._config.imageUrl = null;\r\n        this._config.click = null;\r\n        this._config.event = null;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavHeaderService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n\r\n}\r\n\r\n\r\nangular\r\n    .module('pipNavHeader')\r\n    .provider('pipNavHeader', NavHeaderProvider);\r\n","angular.module('pipNavHeader', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './NavHeaderService';\r\nimport './NavHeaderDirective';\r\n\r\nexport * from './NavHeaderService';","import { OpenSideNavEvent } from '../sidenav/SideNavEvents';\r\nimport { NavIconConfig } from './NavIconConfig';\r\nimport { INavIconService } from './INavIconService';\r\nimport { INavIconBindings } from './INavIconBindings';\r\nimport { NavIconClickedEvent, NavIconChangedEvent } from './NavIconAngularEvents';\r\n\r\nconst NavIconBindings: INavIconBindings = {\r\n    type: '<?pipType',\r\n    imageUrl: '<?pipImageUrl',\r\n    icon: '<?pipIcon'\r\n}\r\n\r\nclass NavIconChanges implements ng.IOnChangesObject, INavIconBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n    // Not one way bindings\r\n\r\n    type: ng.IChangesObject<string>;\r\n    imageUrl: ng.IChangesObject<string>;\r\n    icon: ng.IChangesObject<string>;\r\n}\r\n\r\nclass NavIconController implements INavIconBindings {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n\r\n    private clearFn: Function;\r\n\r\n    public config: NavIconConfig;\r\n\r\n    public type: string;\r\n    public imageUrl: string;\r\n    public icon: string;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        pipNavIcon: INavIconService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._scope = $scope;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-nav-icon');\r\n\r\n        this.config = pipNavIcon.config;\r\n\r\n        this.clearFn = $rootScope.$on('pipNavIconChanged', (event: ng.IAngularEvent, config: NavIconConfig) => {\r\n            this.onNavIconChanged(event, config)\r\n        });\r\n\r\n    }\r\n\r\n    public $onInit() {\r\n        if (this.type) {\r\n            this.config.type = this.type;\r\n        }\r\n        if (this.imageUrl) {\r\n            this.config.imageUrl = this.imageUrl;\r\n        }\r\n        if (this.icon) {\r\n            this.config.icon = this.icon;\r\n        }        \r\n    }\r\n\r\n    public $onDestroy() {\r\n        if (_.isFunction(this.clearFn)) {\r\n            this.clearFn();\r\n        }\r\n    }\r\n\r\n    public onNavIconChanged(event: ng.IAngularEvent, config: NavIconConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    public onNavIconClick(): void {\r\n        if (_.isFunction(this.config.click)) {\r\n            // Execute nav icon callback\r\n            this.config.click();\r\n        } else if (this.config.event) {\r\n            this._rootScope.$broadcast(this.config.event);\r\n        } else if (this.config.type == 'menu') {\r\n            this._rootScope.$broadcast(OpenSideNavEvent);\r\n        } else if (this.config.type == 'back') {\r\n            this._window.history.back();\r\n        } else {\r\n            this._rootScope.$broadcast(NavIconClickedEvent);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst NavIcon: ng.IComponentOptions = {\r\n    bindings: NavIconBindings,\r\n    templateUrl: 'icon/NavIcon.html',\r\n    controller: NavIconController\r\n}\r\n\r\nangular\r\n    .module('pipNavIcon')\r\n    .component('pipNavIcon', NavIcon);\r\n","export let NavIconClickedEvent = 'pipNavIconClicked';\r\nexport let NavIconChangedEvent = 'pipNavIconChanged';","export class NavIconConfig {\r\n    // Type of nav icon: 'back', 'menu', 'image' or 'none'\r\n    public type: string;\r\n    // Image url\r\n    public imageUrl: string;\r\n    // Icon name\r\n    public icon: string;\r\n    // Handle nav icon click event\r\n    click: () => void;\r\n    // Event name\r\n    event: string\r\n};","import { NavIconConfig } from './NavIconConfig';\r\nimport { INavIconService, INavIconProvider } from './INavIconService';\r\nimport { NavIconChangedEvent } from './NavIconAngularEvents';\r\n\r\nclass NavIconService implements INavIconService {\r\n    private _config: NavIconConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: NavIconConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): NavIconConfig {\r\n        return this._config;\r\n    }\r\n\r\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n            this._config.event = null;\r\n        } else if (_.isString(callbackOrEvent)) {\r\n            this._config.click = null;\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n            this._config.event = null;\r\n        }\r\n    }\r\n\r\n    public showMenu(callbackOrEvent?: any): void {\r\n        this._config.type = 'menu';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showIcon(icon: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'icon';\r\n        this._config.icon = icon;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showBack(callbackOrEvent?: any): void {\r\n        this._config.type = 'back';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showImage(imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'image';\r\n        this._config.imageUrl = imageUrl;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.type = 'none';\r\n        this.setCallbackOrEvent(null);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$broadcast(NavIconChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavIconProvider implements INavIconProvider {\r\n    private _config: NavIconConfig = new NavIconConfig();\r\n    private _service: NavIconService;\r\n\r\n    public get config(): NavIconConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: NavIconConfig) {\r\n        this._config = value || new NavIconConfig();\r\n    }\r\n\r\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\r\n        if (_.isFunction(callbackOrEvent))\r\n            this._config.click = callbackOrEvent;\r\n        else this._config.click = null;\r\n\r\n        if (_.isString(callbackOrEvent))\r\n            this._config.event = callbackOrEvent;\r\n        else this._config.event = null;\r\n    }\r\n\r\n    public setMenu(callbackOrEvent?: any): void {\r\n        this._config.type = 'menu';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setIcon(icon: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'icon';\r\n        this._config.icon = icon;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setBack(callbackOrEvent?: any): void {\r\n        this._config.type = 'back';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setImage(imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'image';\r\n        this._config.imageUrl = imageUrl;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.type = 'none';\r\n        this.setCallbackOrEvent(null);\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavIconService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n     \r\n}\r\n\r\n\r\nangular\r\n    .module('pipNavIcon')\r\n    .provider('pipNavIcon', NavIconProvider);\r\n","angular.module('pipNavIcon', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './NavIconConfig';\r\nimport './NavIconAngularEvents';\r\nimport './INavIconBindings';\r\nimport './INavIconService';\r\nimport './NavIconService';\r\nimport './NavIcon';\r\n\r\n\r\nexport * from './NavIconConfig';\r\nexport * from './INavIconService';\r\nexport * from './INavIconBindings';\r\nexport * from './NavIconService';\r\n","﻿import './dependencies/TranslateFilter';\r\nimport './language/LanguagePickerDirective';\r\nimport './dropdown/DropdownDirective';\r\nimport './tabs/Tabs';\r\nimport './actions';\r\nimport './appbar';\r\nimport './search';\r\nimport './breadcrumb';\r\nimport './sidenav';\r\nimport './header';\r\nimport './menu';\r\nimport './icon';\r\nimport './common/NavService';\r\n\r\nangular\r\n    .module('pipNav', [\r\n        'pipNavService',\r\n        'pipDropdown',\r\n        'pipTabs',\r\n        'pipAppBar',\r\n        'pipSearchBar',\r\n        'pipNavIcon',\r\n        'pipBreadcrumb',\r\n        'pipLanguagePicker',\r\n        'pipActions', \r\n        'pipSideNav',\r\n        'pipNavMenu',\r\n        'pipNavHeader'\r\n    ])\r\n    .constant('navConstant', {\r\n        'TAB_BREAKPOINT': 'gt-sm',\r\n        'SIDENAV_CONTAINER': '.pip-main',\r\n        'SIDENAV_LARGE_WIDTH': 320,\r\n        'SIDENAV_MIDDLE_WIDTH': 240,\r\n        'SIDENAV_SMALL_WIDTH': 72,\r\n        'SIDENAV_ANIMATION_DURATION': 600\r\n\r\n    })\r\n\r\nexport * from './actions';\r\nexport * from './appbar';\r\nexport * from './breadcrumb';\r\nexport * from './search';\r\nexport * from './sidenav';\r\nexport * from './icon';\r\nexport * from './menu';\r\nexport * from './header';\r\nexport * from './common/NavService';\r\n","(() => {\r\n    class LanguagePickerDirectiveController {\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _attrs: ng.IAttributes;\r\n        private _injector: ng.auto.IInjectorService;\r\n        private _scope: ng.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _translate: pip.services.ITranslateService;\r\n        private _timeout: ng.ITimeoutService;\r\n\r\n        public languages: string[] = ['en', 'ru'];\r\n        public selectedLanguage: string;\r\n\r\n        public constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $attrs: ng.IAttributes,\r\n            $injector: ng.auto.IInjectorService,\r\n            $scope: ng.IScope,\r\n            $log: ng.ILogService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: ng.ITimeoutService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._attrs = $attrs;\r\n            this._scope = $scope;\r\n            this._injector = $injector;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n            this._translate = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n            // Apply class and call resize\r\n            $element.addClass('pip-language-picker');\r\n\r\n            this.setLanguages($scope['languages']);\r\n\r\n            this.selectedLanguage = $scope['value'] || this.languages[0];\r\n        }\r\n\r\n        public get language() {\r\n            return this._translate ? this._translate.language : null;\r\n        }\r\n\r\n        public setLanguages(languages: string[]): void {\r\n            this.languages = languages.length > 0 ? languages : ['en', 'ru'];\r\n        }\r\n\r\n        public onLanguageClick(language: string) {\r\n            if (this._translate != null) {\r\n                this.selectedLanguage = language;\r\n                // this._timeout(() => {\r\n                this._translate.language = this.selectedLanguage;\r\n                // }, 0);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function languagePickerDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                languages: '=languages',\r\n                value: '=value'\r\n            },\r\n            replace: false,\r\n            templateUrl: function (element, attr) {\r\n                return 'language/LanguagePicker.html';\r\n            },\r\n            controller: LanguagePickerDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipLanguagePicker', [\r\n            'ngMaterial', 'pipNav.Translate', 'pipNav.Templates'\r\n        ])\r\n        .directive('pipLanguagePicker', languagePickerDirective);\r\n\r\n})();","import { ISideNavService, SideNavConfig } from '../sidenav/SideNavService';\r\nimport { NavMenuConfig, NavMenuSection, INavMenuService, NavMenuLink } from './NavMenuService';\r\nimport { SideNavStateNames, SideNavState } from '../sidenav/SideNavState';\r\n\r\n(() => {\r\n    class NavMenuDirectiveController {\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _attrs: ng.IAttributes;\r\n        private _injector: ng.auto.IInjectorService;\r\n        private _scope: angular.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _pipSideNav: ISideNavService;\r\n        private _pipNavMenu: INavMenuService;\r\n        private _state: angular.ui.IStateService;\r\n        private _window: ng.IWindowService;\r\n        private _location: ng.ILocationService;\r\n        private _pipMedia: pip.layouts.IMediaService;\r\n        private _timeout: ng.ITimeoutService;\r\n        private _animationDuration;\r\n        private _pipSideNavElement: ng.IAugmentedJQuery;\r\n\r\n        public sections: NavMenuSection[];\r\n        public defaultIcon: string;\r\n        public isCollapsed: boolean;\r\n        public expanded: boolean;\r\n        public expandedButton: boolean;\r\n        public sideNavState: SideNavState;\r\n\r\n        constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $attrs: ng.IAttributes,\r\n            $injector: ng.auto.IInjectorService,\r\n            $scope: angular.IScope,\r\n            $log: ng.ILogService,\r\n            $window: ng.IWindowService,\r\n            $location: ng.ILocationService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: ng.ITimeoutService,\r\n            pipSideNav: ISideNavService,\r\n            pipNavMenu: INavMenuService,\r\n            navConstant: any\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._attrs = $attrs;\r\n            this._scope = $scope;\r\n            this._injector = $injector;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n            this._window = $window;\r\n            this._location = $location;\r\n            this._pipSideNav = pipSideNav;\r\n            this._pipNavMenu = pipNavMenu;\r\n\r\n            this._state = this._injector.has('$state') ? <angular.ui.IStateService>this._injector.get('$state') : null;\r\n\r\n            this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION,\r\n                this._pipSideNavElement = $element.parent().parent();\r\n            // Apply class and call resize\r\n            this._element.addClass('pip-sticky-nav-menu');\r\n\r\n            this.sections = this._scope['sections'] || this._pipNavMenu.sections;\r\n\r\n            this.setCollapsible();\r\n\r\n            this.defaultIcon = this._pipNavMenu.defaultIcon;\r\n\r\n            this.onStateChanged(null, this._pipSideNav.state);\r\n\r\n            let cleanupNavMenuChanged: Function = this._rootScope.$on('pipNavMenuChanged', ($event: ng.IAngularEvent, config: NavMenuConfig) => { //navState\r\n                this.onConfigChanged($event, config)\r\n            });\r\n            let cleanupSideNavStateChanged: Function = this._rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: SideNavState) => { //navState\r\n                this.onStateChanged($event, state)\r\n            });\r\n\r\n            this._scope.$on('$destroy', () => {\r\n                if (angular.isFunction(cleanupNavMenuChanged)) {\r\n                    cleanupNavMenuChanged();\r\n                }\r\n                if (angular.isFunction(cleanupSideNavStateChanged)) {\r\n                    cleanupSideNavStateChanged();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        private setCollapsible(): void {\r\n            var collapsed: boolean;\r\n            if (angular.isFunction(this._scope['collapsed'])) {\r\n                collapsed = this._scope['collapsed']();\r\n            } else {\r\n                collapsed = this._scope['collapsed'] !== false && this._scope['collapsed'] !== 'false';\r\n            }\r\n\r\n            this.isCollapsed = collapsed;\r\n        }\r\n\r\n        public onExpand(): void {\r\n            if (!this.isCollapsed) { return }\r\n\r\n            this.expanded = !this.expanded;\r\n\r\n            if (this.expanded) {\r\n                this._pipSideNavElement.removeClass('pip-sticky-nav-small');\r\n            } else {\r\n                this._pipSideNavElement.addClass('pip-sticky-nav-small');\r\n            }\r\n            this._rootScope.$emit('pipNavExpanded', this.expanded);\r\n        }\r\n\r\n        public isHidden(item: NavMenuLink): boolean {\r\n            return item && item.access && !item.access(item);\r\n        }\r\n\r\n        public isSectionEmpty(linkCollection: NavMenuLink[]): boolean {\r\n            var result = true;\r\n            _.each(linkCollection, (link: NavMenuLink) => {\r\n                if (!this.isHidden(link)) {\r\n                    result = false;\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        private onConfigChanged($event: ng.IAngularEvent, config: NavMenuConfig): void {\r\n            if (!config) return;\r\n            this.sections = config.sections;\r\n        }\r\n\r\n        private onStateChanged(event: ng.IAngularEvent, state: SideNavState): void {\r\n            // SS> You shall not set it into the menu state. Instead it shall be controlled by the state of Sidenav\r\n            if (!state) return;\r\n\r\n            this.isCollapsed = state.expand;\r\n            this.expanded = state.isExpanded;\r\n            this.expandedButton = state.expandedButton;\r\n\r\n            this.sideNavState = state;\r\n        }\r\n\r\n        public isActive(link: NavMenuLink): boolean {\r\n            if (link.parentState) {\r\n\r\n                if (this._state != null && this._state.includes(link.parentState)) {\r\n                    return true;\r\n                }\r\n            } else if (link.state) {\r\n                if (this._state != null && this._state.includes(link.state)) {\r\n                    return true;\r\n                }\r\n            } else if (link.href) {\r\n                if (link.href.split('?')[0] === this._window.location.href.split('?')[0]) {\r\n                    return true;\r\n                }\r\n            } else if (link.url) {\r\n                if (link.url.split(/[\\s/?]+/)[1] === this._location.url().split(/[\\s/?]+/)[1]) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        public clickLink(event: ng.IAngularEvent, link: NavMenuLink): void {\r\n            event.stopPropagation();\r\n\r\n            if (!link) {\r\n                this._pipSideNav.close();\r\n\r\n                return;\r\n            }\r\n\r\n            if (link.href) {\r\n                if (link.href.split('?')[0] === this._window.location.href.split('?')[0]) {\r\n                    this._pipSideNav.close();\r\n\r\n                    return;\r\n                }\r\n\r\n                this._pipSideNav.close();\r\n                this._timeout(() => {\r\n                    this._window.location.href = link.href;\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.url) {\r\n                if (link.url.split(/[\\s/?]+/)[1] === this._location.url().split(/[\\s/?]+/)[1]) {\r\n                    this._pipSideNav.close();\r\n                    return;\r\n                }\r\n\r\n                this._pipSideNav.close();\r\n                this._timeout(() => {\r\n                    this._location.url(link.url);\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.state) {\r\n                if (this._state != null && this._state.current.name === link.state) {\r\n                    this._pipSideNav.close();\r\n\r\n                    return;\r\n                }\r\n\r\n                this._pipSideNav.close();\r\n                this._timeout(() => {\r\n                    this._state.go(link.state, link.stateParams);\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.event) {\r\n                this._rootScope.$broadcast(link.event, link);\r\n            }\r\n\r\n\r\n            this._pipSideNav.close();\r\n        }\r\n    }\r\n\r\n\r\n    function navMenuDirective() {\r\n        return {\r\n            restrict: 'EA',\r\n            scope: {\r\n                sections: '=?pipSections',\r\n                collapsed: '=?pipCollapsed'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'menu/NavMenu.html',\r\n            controller: NavMenuDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipNavMenu')\r\n        .directive('pipNavMenu', navMenuDirective);\r\n\r\n})();","export let NavMenuChangedEvent = 'pipNavMenuChanged';\r\n\r\nexport class NavMenuLink {\r\n    // Name to refer to the item\r\n    public name: string;\r\n    // Link visible title\r\n    public title: string;\r\n    // Tooltip text\r\n    public tooltipText?: string;\r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Counter badge\r\n    public count?: number;\r\n    // class for badge style\r\n    public badgeStyle?: string;\r\n    // Access function\r\n    public access?: (link: NavMenuLink) => boolean;\r\n    // window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // parent state or parent state for selection item \r\n    public parentState?: string;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public click?: (link: NavMenuLink) => void;\r\n}\r\n\r\nexport class NavMenuSection {\r\n    // Name to refer to the section\r\n    public name: string;\r\n    // Section visible title\r\n    public title?: string;\r\n    // Tooltip text\r\n    public tooltipText?: string;\r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Links shown in the section\r\n    public links: NavMenuLink[];\r\n    // Access function\r\n    public access?: (section: NavMenuSection) => boolean;\r\n}\r\n\r\nexport class NavMenuConfig {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n}\r\n\r\nexport interface INavMenuService {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n    updateCount(link: string, count: number): void;\r\n    updateBadgeStyle(link: string, style: string): void;\r\n    clearCounts(): void;\r\n}\r\n\r\nexport interface INavMenuProvider extends ng.IServiceProvider {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n}\r\n\r\nclass NavMenuService implements INavMenuService {\r\n    private _config: NavMenuConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: NavMenuConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get sections(): NavMenuSection[] {\r\n        return this._config.sections;\r\n    }\r\n\r\n    public set sections(value: NavMenuSection[]) {\r\n        this._config.sections = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get defaultIcon(): string {\r\n        return this._config.defaultIcon;\r\n    }\r\n\r\n    public updateBadgeStyle(link: string, style: string): void {\r\n        if (link == null || !_.isString(style)) return;\r\n\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                if (l.name == link)\r\n                    l.badgeStyle = style;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public set defaultIcon(value: string) {\r\n        this._config.defaultIcon = value;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public updateCount(link: string, count: number): void {\r\n        if (link == null || !_.isNumber(count)) return;\r\n\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                if (l.name == link)\r\n                    l.count = count;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public clearCounts(): void {\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                l.count = null;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    private sendChangeEvent() {\r\n        this._rootScope.$emit(NavMenuChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavMenuProvider implements INavMenuProvider {\r\n    private _config: NavMenuConfig = {\r\n        sections: [],\r\n        defaultIcon: 'icons:folder'\r\n    };\r\n    private _service: NavMenuService;\r\n\r\n    public get sections(): NavMenuSection[] {\r\n        return this._config.sections;\r\n    }\r\n\r\n    public set sections(value: NavMenuSection[]) {\r\n        this._config.sections = value || [];\r\n    }\r\n\r\n    public get defaultIcon(): string {\r\n        return this._config.defaultIcon;\r\n    }\r\n\r\n    public set defaultIcon(value: string) {\r\n        this._config.defaultIcon = value;\r\n    }\r\n\r\n    public $get($rootScope) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavMenuService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNavMenu')\r\n    .provider('pipNavMenu', NavMenuProvider);\r\n","angular.module('pipNavMenu', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './NavMenuService';\r\nimport './NavMenuDirective';\r\n\r\nexport * from './NavMenuService';","export let OpenSearchEvent = 'pipOpenSearch';\r\nexport let CloseSearchEvent = 'pipCloseSearch';\r\nexport let SearchChangedEvent = 'pipSearchChanged';\r\nexport let SearchActivatedEvent = 'pipSearchActivated';","import { SearchConfig } from './SearchConfig';\r\nimport { ISearchService } from './ISearchService';\r\nimport { OpenSearchEvent, CloseSearchEvent, SearchChangedEvent, SearchActivatedEvent } from './SearchAngularEvents';\r\n\r\nclass SearchBarController {\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _element: any;\r\n    private clearFn: Function;\r\n\r\n    public config: SearchConfig;\r\n    public enabled: boolean = false;\r\n    public search: any = { text: '' };\r\n\r\n    public constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipSearch: ISearchService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._rootScope = $rootScope;\r\n        this._element = $element;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-search-bar');\r\n\r\n        this.config = pipSearch.config;\r\n        this.stateChange();\r\n        this.clearFn = $rootScope.$on(SearchChangedEvent, (event: ng.IAngularEvent, config: SearchConfig) => {\r\n            this.onSearchChanged(event, config);\r\n        });\r\n    }\r\n\r\n    public $onDestroy() {\r\n        if (_.isFunction(this.clearFn)) {\r\n            this.clearFn();\r\n        }\r\n    }\r\n\r\n    private stateChange(): void {\r\n        if (this.enabled) {\r\n            this._element.addClass('w-stretch');\r\n            this._element.parent().addClass('pip-search-active');\r\n\r\n        } else {\r\n            this._element.removeClass('w-stretch');\r\n            this._element.parent().removeClass('pip-search-active');\r\n        }\r\n    }\r\n\r\n    private onSearchChanged(event: ng.IAngularEvent, config: SearchConfig): void {\r\n        this.config = config;\r\n        this.enabled = false;\r\n        this.search.text = '';\r\n        this.stateChange();\r\n    }\r\n\r\n    private focusText(): void {\r\n        setTimeout(() => {\r\n            let element: JQuery = $('.pip-search-text');\r\n            if (element.length > 0)\r\n                element.focus();\r\n        }, 0);\r\n    }\r\n\r\n    public enable(): void {\r\n        this.search.text = this.config.criteria;\r\n        this.enabled = true;\r\n        this.focusText();\r\n        this.stateChange();\r\n    }\r\n\r\n    public onClick(): void {\r\n        let search = this.search.text;\r\n\r\n        this.search.text = '';\r\n        this.enabled = false;\r\n        this.stateChange();\r\n\r\n        if (this.config.callback) {\r\n            this.config.callback(search);\r\n        } else {\r\n            this._rootScope.$broadcast(SearchActivatedEvent, search);\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        if (this.search.text) {\r\n            this.search.text = '';\r\n            this.focusText();\r\n        } else {\r\n            this.enabled = false;\r\n            this.stateChange();\r\n            this.onClick();\r\n        }\r\n    }\r\n\r\n    public onKeyDown(event: KeyboardEvent): void {\r\n        // Enter pressed\r\n        if (event.keyCode === 13)\r\n            this.onClick();\r\n        // ESC pressed\r\n        else if (event.keyCode === 27) {\r\n            this.enabled = false;\r\n            this.stateChange();\r\n        }\r\n    }\r\n}\r\n\r\nconst SearchBar: ng.IComponentOptions = {\r\n    templateUrl: 'search/SearchBar.html',\r\n    controller: SearchBarController\r\n}\r\n\r\nangular\r\n    .module('pipSearchBar')\r\n    .component('pipSearchBar', SearchBar);\r\n","export class SearchConfig {\r\n    // Search visible\r\n    public visible: boolean;\r\n    // Search criteria\r\n    public criteria: string;\r\n    // Custom search parameters\r\n    public params: any;\r\n    // History for search autocomplete\r\n    public history: string[];\r\n    // Callback for search\r\n    callback: (criteria: string) => void;\r\n}","import { SearchConfig } from './SearchConfig';\r\nimport { ISearchProvider, ISearchService } from './ISearchService';\r\nimport { OpenSearchEvent, CloseSearchEvent, SearchChangedEvent, SearchActivatedEvent } from './SearchAngularEvents';\r\n\r\nclass SearchService implements ISearchService {\r\n    private _config: SearchConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: SearchConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n\r\n        $rootScope.$on(OpenSearchEvent, () => { this.open });\r\n        $rootScope.$on(CloseSearchEvent, () => { this.close });\r\n    }\r\n\r\n    public get config(): SearchConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get criteria(): string {\r\n        return this._config.criteria;\r\n    }\r\n\r\n    public set criteria(value: string) {\r\n        this._config.criteria = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get params(): any {\r\n        return this._config.params;\r\n    }\r\n\r\n    public set params(value: any) {\r\n        this._config.params = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get history(): string[] {\r\n        return this._config.history;\r\n    }\r\n\r\n    public set history(value: string[]) {\r\n        this._config.history = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get callback(): (criteria: string) => void {\r\n        return this._config.callback;\r\n    }\r\n\r\n    public set callback(value: (criteria: string) => void) {\r\n        this._config.callback = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void {\r\n        this._config.callback = callback;\r\n        this._config.criteria = criteria;\r\n        this._config.params = params;\r\n        this._config.history = history;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.callback = null;\r\n        this._config.criteria = null;\r\n        this._config.params = null;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public open(): void {\r\n        this._config.visible = true;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public close(): void {\r\n        this._config.visible = false;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public toggle(): void {\r\n        this._config.visible = !this._config.visible;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent(): void {\r\n        this._rootScope.$broadcast(SearchChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass SearchProvider implements ISearchProvider {\r\n    private _config: SearchConfig = new SearchConfig();\r\n    private _service: SearchService = null;\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SearchService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\n\r\nangular.module('pipSearchBar')\r\n    .provider('pipSearch', SearchProvider);\r\n","angular.module('pipSearchBar', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './SearchConfig';\r\nimport './SearchAngularEvents';\r\nimport './ISearchService';\r\nimport './SearchService';\r\nimport './SearchBar';\r\n\r\nexport * from './ISearchService';\r\n","import { ISideNavService, SideNavConfig } from './SideNavService';\r\nimport { SideNavStateNames, SideNavState, SideNavStateConfig } from './SideNavState';\r\n\r\nclass SideNavDirectiveController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _pipSideNav: ISideNavService;\r\n\r\n    private _pipMedia: pip.layouts.IMediaService;\r\n    private _timeout: ng.ITimeoutService;\r\n\r\n    private _isResizing: boolean;\r\n    private _animationDuration: number;\r\n    private _mainContainer: string; // todo add  to config\r\n    private _bigWidth: number;\r\n\r\n    private _middleWidth: number;\r\n    private _smallWidth: number;\r\n    private _mediaBreakpoints: pip.layouts.MediaBreakpoints;\r\n    private _navState: SideNavStateConfig;\r\n\r\n    private windowResize: Function;\r\n\r\n    public sidenavState: SideNavState;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $timeout: ng.ITimeoutService,\r\n        pipSideNav: ISideNavService,\r\n        navConstant: any\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n        this._pipSideNav = pipSideNav;\r\n\r\n        this._pipMedia = this._injector.has('pipMedia') ? <pip.layouts.IMediaService>this._injector.get('pipMedia') : null;\r\n\r\n        this._mainContainer = navConstant.SIDENAV_CONTAINER;\r\n        this._bigWidth = navConstant.SIDENAV_LARGE_WIDTH;\r\n        this._middleWidth = navConstant.SIDENAV_MIDDLE_WIDTH;\r\n        this._smallWidth = navConstant.SIDENAV_SMALL_WIDTH;\r\n        this._isResizing = false;\r\n        this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION;\r\n        this._navState = new SideNavStateConfig();\r\n        this._mediaBreakpoints = this.setBreakpoints();\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-sticky-sidenav');\r\n\r\n        let cleanupMainResized;\r\n        let cleanupSideNavState;\r\n\r\n        if (this._pipSideNav.config && this._pipSideNav.config.type != 'popup') {\r\n            this._timeout(() => {\r\n                this.setSideNaveState()\r\n            }, 100);\r\n\r\n            this.windowResize = _.debounce(() => { this.setSideNaveState(); }, 10);\r\n            cleanupMainResized = this._rootScope.$on('pipMainResized', () => {\r\n                this.windowResize();\r\n            });\r\n            cleanupSideNavState = this._rootScope.$on('pipSideNavState', ($event: ng.IAngularEvent, state: SideNavStateNames) => {\r\n                this.onSideNavState($event, state)\r\n            });\r\n        } else {\r\n            this._isResizing = false;\r\n            this.sidenavState = null;\r\n            this._timeout(() => {\r\n                this.setState(SideNavStateNames.Toggle);\r\n            }, 100);\r\n        }\r\n\r\n        let cleanupNavHeaderChanged: Function = this._rootScope.$on('pipNavIconClicked', () => {\r\n            this.onNavIconClick();\r\n        });\r\n        let cleanupSideNavChanged: Function = this._rootScope.$on('pipSideNavChanged', ($event: ng.IAngularEvent, config: SideNavConfig) => { //navState\r\n            this.onSideNavChanged($event, config)\r\n        });\r\n\r\n        this._scope.$on('$destroy', () => {\r\n            if (angular.isFunction(cleanupNavHeaderChanged)) {\r\n                cleanupNavHeaderChanged();\r\n            }\r\n            if (angular.isFunction(cleanupSideNavChanged)) {\r\n                cleanupSideNavChanged();\r\n            }\r\n            if (angular.isFunction(cleanupMainResized)) {\r\n                cleanupMainResized();\r\n            }\r\n            if (angular.isFunction(cleanupSideNavState)) {\r\n                cleanupSideNavState();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private setBreakpoints(): pip.layouts.MediaBreakpoints {\r\n        if (!this._pipMedia || !angular.isObject(this._pipMedia.breakpoints)) {\r\n            return { xs: 639, sm: 959, md: 1024, lg: 1919 };\r\n        } else {\r\n            return this._pipMedia.breakpoints;\r\n        }\r\n    }\r\n\r\n    private onSideNavChanged($event: ng.IAngularEvent, config: SideNavConfig): void {\r\n        if (config && config.visible) {\r\n            this._element.css('display', 'block');\r\n        } else {\r\n            this._element.css('display', 'none');\r\n        }\r\n    }\r\n\r\n    private onNavIconClick(): void {\r\n        this._pipSideNav.open();\r\n    }\r\n\r\n    private onSideNavState($event: ng.IAngularEvent, stateName: SideNavStateNames): void {\r\n        if (angular.isString(stateName) && this._navState[stateName] !== undefined) {\r\n            this.setState(stateName);\r\n        }\r\n    }\r\n\r\n    private setSideNaveState(): void {\r\n        if (this._pipSideNav.config && this._pipSideNav.config.type == 'popup') { return }\r\n\r\n        if (this._isResizing) {\r\n            this._timeout(() => { this.setSideNaveState() }, this._animationDuration);\r\n\r\n            return;\r\n        }\r\n\r\n        let mainWidth: number = $(this._mainContainer).innerWidth();\r\n        let sideNavWidth: number = $('.pip-sticky-sidenav').innerWidth();\r\n        let currentWidth: number = sideNavWidth ? sideNavWidth + 2 : 0; // add border width\r\n\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.sm) {\r\n            this.setState(SideNavStateNames.Toggle);\r\n            return;\r\n        }\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.md) {\r\n            this.setState(SideNavStateNames.Small);\r\n            return;\r\n        }\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.lg) {\r\n            this.setState(SideNavStateNames.Large);\r\n            return;\r\n        }\r\n        this.setState(SideNavStateNames.XLarge);\r\n    }\r\n\r\n    private setState(stateName: SideNavStateNames) {\r\n        if (this._isResizing) return;\r\n        if (this.sidenavState && this.sidenavState.id == stateName) return;\r\n\r\n        if (stateName != SideNavStateNames.Toggle) {\r\n            this._element.removeClass('sidenav-mobile');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.Small) {\r\n            this._element.removeClass('pip-sticky-nav-small');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.XLarge) {\r\n            this._element.removeClass('sidenav-desktop');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.Large) {\r\n            this._element.removeClass('sidenav-smalldesktop');\r\n        }\r\n\r\n        this._isResizing = true;\r\n        if (stateName == SideNavStateNames.Toggle) {\r\n            this._pipSideNav.close();\r\n        }\r\n        this.sidenavState = this._navState[String(stateName)];\r\n        this._element.addClass(this.sidenavState.addClass);\r\n\r\n        this._pipSideNav.state = this.sidenavState;\r\n\r\n        // check sideNav State\r\n        this._timeout(() => {\r\n            this.setSideNaveState()\r\n        }, 15);\r\n\r\n        // complete animation\r\n        this._timeout(() => {\r\n            this._isResizing = false;\r\n        }, this._animationDuration); //animationDuration\r\n\r\n    }\r\n}\r\n\r\n(() => {\r\n    function sideNavDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: true,\r\n            templateUrl: 'sidenav/SideNav.html',\r\n            controller: SideNavDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipSideNav')\r\n        .directive('pipSidenav', sideNavDirective);\r\n\r\n})();","export let SideNavChangedEvent = 'pipSideNavChanged';\r\nexport let SideNavStateChangedEvent = 'pipSideNavStateChanged';\r\nexport let OpenSideNavEvent = 'pipOpenSideNav';\r\nexport let CloseSideNavEvent = 'pipCloseSideNav';","(() => {\r\n\r\n    function SideNavPartDirectiveController($scope, $element, $attrs, $rootScope, pipSideNav) {\r\n        \"ngInject\";\r\n\r\n        var partName = '' + $attrs.pipSidenavPart;\r\n        var partValue = null;\r\n\r\n        // Break part apart\r\n        var pos = partName.indexOf(':');\r\n        if (pos > 0) {\r\n            partValue = partName.substr(pos + 1);\r\n            partName = partName.substr(0, pos);\r\n        }\r\n\r\n        onSideNavChanged(null, pipSideNav.config)\r\n        $rootScope.$on('pipSideNavChanged', onSideNavChanged);\r\n\r\n        function onSideNavChanged(event, config) {\r\n            var parts = config.parts || {};\r\n            var currentPartValue = parts[partName];\r\n            var visible = !!(partValue ? currentPartValue == partValue : currentPartValue);\r\n\r\n            if (visible != $scope.visible)\r\n                $scope.visible = visible;\r\n        }\r\n\r\n    }\r\n\r\n    function sidenavPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        var ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function linkFunction($scope: any, $element, $attrs) {\r\n                $attrs.ngIf = function () { return $scope.visible };\r\n                ngIf.link.apply(ngIf, arguments);\r\n            },\r\n            controller: SideNavPartDirectiveController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipSideNav')\r\n        .directive('pipSidenavPart', sidenavPartDirective);\r\n\r\n})();","import { SideNavChangedEvent, SideNavStateChangedEvent, OpenSideNavEvent, CloseSideNavEvent } from './SideNavEvents';\r\n\r\nexport class SideNavConfig {\r\n    parts: any;\r\n    classes: string[];\r\n    state: any;\r\n    type: string;\r\n    visible: boolean;\r\n}\r\n\r\nexport interface ISideNavService {\r\n    readonly config: SideNavConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n    state: any;\r\n\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n    show(): void;\r\n    hide(): void;\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface ISideNavProvider extends ng.IServiceProvider {\r\n    config: SideNavConfig;\r\n    parts: any;\r\n    type: string;\r\n    visible: boolean;\r\n    classes: string[];\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nclass SideNavService implements ISideNavService {\r\n    private _config: SideNavConfig;\r\n    private _state: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _sidenav: ng.material.ISidenavService;\r\n\r\n\r\n    public constructor(config: SideNavConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n        this._sidenav = $mdSidenav;\r\n    }\r\n\r\n    public get config(): SideNavConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: any) {\r\n        this._state = value || {};\r\n        this._rootScope.$broadcast(SideNavStateChangedEvent, value);\r\n    }\r\n\r\n    public open() {\r\n        this._sidenav('pip-sticky-sidenav').open();\r\n    }\r\n\r\n    public close() {\r\n        this._sidenav('pip-sticky-sidenav').close();\r\n    }\r\n\r\n    public toggle() {\r\n        this._sidenav('pip-sticky-sidenav').toggle();\r\n    }\r\n\r\n    public show() {\r\n        if (!this._config.visible) {\r\n            this._config.visible = true;\r\n            this.sendConfigEvent();\r\n        }\r\n    }\r\n\r\n    public hide() {\r\n        if (this._config.visible) {\r\n            this._config.visible = false;\r\n            this.sendConfigEvent();\r\n        }\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(SideNavChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass SideNavProvider implements ISideNavProvider {\r\n    private _config: SideNavConfig = {\r\n        parts: {},\r\n        classes: [],\r\n        type: 'popup',\r\n        state: null,\r\n        visible: true\r\n    };\r\n\r\n    private _service: SideNavService;\r\n\r\n    public get config(): SideNavConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: SideNavConfig) {\r\n        this._config = value || new SideNavConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get visible(): boolean {\r\n        return this._config.visible;\r\n    }\r\n\r\n    public set visible(value: boolean) {\r\n        this._config.visible = value;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SideNavService(this._config, $rootScope, $mdSidenav);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nfunction hookSideNavEvents($rootScope: ng.IRootScopeService, pipSideNav: ISideNavService) {\r\n    $rootScope.$on(OpenSideNavEvent, () => { pipSideNav.open(); });\r\n    $rootScope.$on(CloseSideNavEvent, () => { pipSideNav.close(); });\r\n}\r\n\r\nangular\r\n    .module('pipSideNav')\r\n    .provider('pipSideNav', SideNavProvider)\r\n    .run(hookSideNavEvents);\r\n","export class SideNavStateNames {\r\n    static Toggle: string = 'toggle';\r\n    static Small: string = 'small';\r\n    static Large: string = 'large';\r\n    static XLarge: string = 'xlarge';\r\n}\r\n\r\nexport class SideNavState {\r\n    id: SideNavStateNames;\r\n    // Class which added to sidenav in this state\r\n    addClass: string;\r\n    // Side nav always open\r\n    isLockedOpen: boolean;\r\n    // Show SideNav header \r\n    showHeader: boolean;\r\n    // Show expanded button\r\n    expandedButton: boolean;\r\n    // SideNav has expand\r\n    isExpanded: boolean;\r\n    // SideNav is Expanded in this state by default\r\n    expand: boolean;\r\n    // Tooltype is show\r\n    showIconTooltype: boolean;\r\n}\r\n\r\nexport class SideNavStateConfig {\r\n    toggle: SideNavState = { // media(sm, xs)\r\n        id: SideNavStateNames.Toggle,\r\n        addClass: 'sidenav-mobile',\r\n        showHeader: true,\r\n        isLockedOpen: false,\r\n        expandedButton: false,\r\n        isExpanded: true,\r\n        expand: true,\r\n        showIconTooltype: false\r\n    };\r\n    small: SideNavState = { // media(md)\r\n        id: SideNavStateNames.Small,\r\n        addClass: 'pip-sticky-nav-small sidenav-smalldesktop',\r\n        showHeader: false,\r\n        isLockedOpen: true,\r\n        expandedButton: false,\r\n        isExpanded: false,\r\n        expand: false,\r\n        showIconTooltype: true\r\n    };\r\n    large: SideNavState = { // media(lg)\r\n        id: SideNavStateNames.Large,\r\n        addClass: 'sidenav-smalldesktop',\r\n        showHeader: false,\r\n        isLockedOpen: true,\r\n        expandedButton: true,\r\n        isExpanded: true,\r\n        expand: true,\r\n        showIconTooltype: true\r\n    };\r\n    xlarge: SideNavState = { // media(xl)\r\n        id: SideNavStateNames.XLarge,\r\n        addClass: 'sidenav-desktop',\r\n        showHeader: false,\r\n        isLockedOpen: true,\r\n        expandedButton: false,\r\n        isExpanded: true,\r\n        expand: true,\r\n        showIconTooltype: false\r\n    };\r\n}","angular.module('pipSideNav', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './SideNavEvents';\r\nimport './SideNavState';\r\nimport './SideNavService';\r\nimport './SideNavPartDirective';\r\nimport './SideNavDirective';\r\n\r\nexport * from './SideNavService';","import { ITabsBindings } from './ITabsBindings';\r\n\r\nclass PipTab {\r\n    id: string;\r\n    name?: string;\r\n    count: number;\r\n    title: string;\r\n}\r\n\r\nconst TabsBindings: ITabsBindings = {\r\n    ngDisabled: '&?', // function\r\n    tabs: '<pipTabs', // PipTab[]\r\n    showTabs: '&pipShowTabs', // function\r\n    showTabsShadow: '&pipTabsShadow', // function\r\n    activeIndex: '<?pipActiveIndex', // number\r\n    select: '=pipTabsSelect', // function\r\n    breakpoints: '<?pipBreakpoints', // string\r\n    themeClass: '<?themeClass', // string\r\n}\r\n\r\nclass TabsChanges implements ng.IOnChangesObject, ITabsBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n    // Not one way bindings\r\n    ngDisabled: ng.IChangesObject<() => ng.IPromise<void>>;\r\n    tabs: ng.IChangesObject<PipTab[]>;\r\n    showTabs: ng.IChangesObject<() => ng.IPromise<void>>;\r\n    showTabsShadow: ng.IChangesObject<() => ng.IPromise<void>>;\r\n    activeIndex: ng.IChangesObject<number>;\r\n    select: ng.IChangesObject<() => ng.IPromise<void>>;\r\n    breakpoints: ng.IChangesObject<string>;\r\n    themeClass: ng.IChangesObject<string>;\r\n}\r\n\r\nclass TabsDirectiveController implements ITabsBindings {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _pipTranslate: pip.services.ITranslateService;\r\n    private _pipTheme: pip.themes.IThemeService;\r\n    private _pipMedia: pip.layouts.IMediaService;\r\n    private _timeout: ng.ITimeoutService;\r\n    private _navConstant: any;\r\n    private selectedTabId: string;\r\n\r\n    public ngDisabled: Function;\r\n    public tabs: PipTab[];\r\n    public activeIndex: number;\r\n    public breakpoints: string;\r\n    public showTabs: Function;\r\n    public showTabsShadow: Function;\r\n    public select: Function;\r\n    public themeClass: string;\r\n    \r\n    public media: any;\r\n    public currentTheme: string;\r\n\r\n    public change: () => ng.IPromise<any>;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $injector: ng.auto.IInjectorService,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $mdMedia: angular.material.IMedia,\r\n        $timeout: ng.ITimeoutService,\r\n        navConstant: any\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n        this._navConstant = navConstant;\r\n        this.setTheme();\r\n        this.setMedia($mdMedia);\r\n    }\r\n\r\n    private setTheme(): void {\r\n        this._pipTheme = this._injector.has('pipTheme') ? <pip.themes.IThemeService>this._injector.get('pipTheme') : null;\r\n        if (this._pipTheme) {\r\n            this.currentTheme = this._pipTheme.theme;\r\n        } else if (this._rootScope['$theme']) {\r\n            this.currentTheme = this._rootScope['$theme'];\r\n        }\r\n\r\n        this.themeClass = (this.themeClass || '') + ' md-' + this.currentTheme + '-theme';\r\n    }\r\n\r\n    private setMedia($mdMedia: angular.material.IMedia): void {\r\n        this._pipMedia = this._injector.has('pipMedia') ? <pip.layouts.IMediaService>this._injector.get('pipMedia') : null;\r\n        this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\r\n    }\r\n\r\n    private setTranslate(): void {\r\n        this._pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n        if (this._pipTranslate) {\r\n            if (this.tabs.length > 0 && this.tabs[0].title) {\r\n                this._pipTranslate.translateObjects(this.tabs, 'title', 'nameLocal');\r\n            } else {\r\n                this._pipTranslate.translateObjects(this.tabs, 'name', 'nameLocal');\r\n            }\r\n        }\r\n    }\r\n\r\n    public isDisabled(): boolean {\r\n        if (_.isFunction(this.ngDisabled)) {\r\n            return this.ngDisabled();\r\n        } else {\r\n            return this.toBoolean(this.ngDisabled);\r\n        }\r\n    };\r\n\r\n    public tabDisabled(index: number): boolean {\r\n        return (this.isDisabled() && this.activeIndex != index);\r\n    };\r\n\r\n    public onSelect(index: number): void {\r\n        if (this.isDisabled()) return;\r\n        this.activeIndex = index;\r\n        this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\r\n        this._timeout(() => {\r\n            if (this.select) {\r\n                this.select(this.tabs[this.activeIndex], this.activeIndex);\r\n            }\r\n        }, 0);\r\n\r\n    };\r\n\r\n    public showShadow(): boolean {\r\n        if (_.isFunction(this.showTabsShadow)) {\r\n            return this.showTabsShadow();\r\n        } else {\r\n            return this.toBoolean(this.showTabsShadow);\r\n        }\r\n    };\r\n\r\n    public show(): boolean {\r\n        if (_.isFunction(this.showTabs)) {\r\n            return this.showTabs();\r\n        } else {\r\n            return this.toBoolean(this.showTabs);\r\n        }\r\n    };\r\n\r\n    public toBoolean(value: any): boolean {\r\n        if (value == null) return false;\r\n        if (!value) return false;\r\n        value = value.toString().toLowerCase();\r\n        return value == '1' || value == 'true';\r\n    }\r\n\r\n    public $onChanges(changes: TabsChanges) {\r\n        if (changes.activeIndex === undefined) {\r\n            if (!this.activeIndex) {\r\n                this.activeIndex = 0;\r\n            }\r\n        } else {\r\n            this.activeIndex = changes.activeIndex.currentValue || 0;\r\n            if (this._timeout && this.activeIndex !== changes.activeIndex.previousValue) {\r\n                this._timeout(() => {\r\n                    let a = this._element.find('md-tabs-canvas');\r\n                    if (a && a[0]) {\r\n                        angular.element(a[0]).attr('activeIndex', this.activeIndex);\r\n                    }\r\n                    a.on('focusout', () => {\r\n                        angular.element(a[0]).attr('activeIndex', this.activeIndex);\r\n                        this._timeout(() => {\r\n                            angular.element(a[0]).attr('activeIndex', this.activeIndex);\r\n                        }, 50);\r\n                    });\r\n                }, 1000);\r\n            }\r\n        }\r\n\r\n        if (changes.breakpoints === undefined) {\r\n            if (!this.breakpoints) {\r\n                this.breakpoints = this._navConstant.TAB_BREAKPOINT;\r\n            }\r\n        } else {\r\n            this.breakpoints = changes.breakpoints.currentValue ? changes.breakpoints.currentValue : this._navConstant.TAB_BREAKPOINT\r\n        }\r\n\r\n        if (changes.tabs === undefined || !_.isArray(changes.tabs.currentValue)) {\r\n            if (!this.tabs) {\r\n                this.tabs = [];\r\n            }\r\n        } else {\r\n            this.tabs = changes.tabs.currentValue;\r\n            this.setTranslate();\r\n        }\r\n\r\n        if (!changes.activeIndex && changes.tabs && this.selectedTabId !== undefined) {\r\n            const index = _.indexOf(this.tabs, _.find(this.tabs, {\r\n                id: this.selectedTabId\r\n            }));\r\n            if (index < 0) {\r\n                this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\r\n            } else if (this.tabs.length > 0 && this.activeIndex) {\r\n                this.onSelect(index);\r\n            }\r\n        } else {\r\n            this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst Tabs: ng.IComponentOptions = {\r\n    bindings: TabsBindings,\r\n    templateUrl: 'tabs/Tabs.html',\r\n    controller: TabsDirectiveController\r\n}\r\n\r\nangular\r\n    .module('pipTabs', ['pipNav.Templates'])\r\n    .component('pipTabs', Tabs);\r\n\r\n","(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/PrimaryActions.html',\n    '<div pip-focused=\"\" pip-focused-tabindex=\"2\"><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in $ctrl.config.primaryLocalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"$ctrl.clickAction(action, $mdOpenMenu);\" tabindex=\"-1\" ng-hide=\"$ctrl.isHidden(action)\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge\" ng-show=\"action.count > 0\">{{ $ctrl.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon}}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"$ctrl.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"$ctrl.clickAction(subAction)\">{{ ::subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in $ctrl.config.primaryGlobalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"$ctrl.clickAction(action, $mdOpenMenu);\" ng-hide=\"$ctrl.isHidden(action)\" tabindex=\"-1\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge color-badge-bg\" ng-show=\"action.count > 0\">{{ $ctrl.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon }}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"$ctrl.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"$ctrl.clickAction(subAction)\">{{ subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/SecondaryActions.html',\n    '<md-menu ng-if=\"$ctrl.secondaryActionsVisible()\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button\" tabindex=\"3\" ng-init=\"$ctrl.getMenu($mdOpenMenu)\" ng-click=\"$ctrl.onSecondaryActionClick(); $ctrl.openMenu($mdOpenMenu, $event);\" aria-label=\"open actions\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"action in $ctrl.config.secondaryLocalActions\" ng-if=\"!action.divider\" ng-hide=\"$ctrl.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"$ctrl.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider><md-menu-divider ng-if=\"$ctrl.secondaryDividerVisible()\"></md-menu-divider><md-menu-item ng-repeat-start=\"action in $ctrl.config.secondaryGlobalActions\" ng-if=\"!action.divider\" ng-hide=\"$ctrl.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"$ctrl.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('appbar/AppBar.html',\n    '<md-toolbar class=\"{{ $ctrl.config.classes.join(\\' \\') }}\" ng-if=\"$ctrl.config.visible\" ng-transclude=\"\"></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('breadcrumb/Breadcrumb.html',\n    '<div class=\"pip-breadcrumb-block\"><div class=\"text-overflow\" ng-if=\"!$ctrl._media(\\'xs\\')\"><span ng-if=\"$ctrl.config.criteria\" ng-click=\"$ctrl.openSearch()\">{{ $ctrl.config.criteria }} -</span><span class=\"pip-breadcrumb-item {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\" ng-repeat-start=\"item in $ctrl.config.items\" ng-click=\"$ctrl.onClick(item)\" ng-init=\"stepWidth = 100/($ctrl.config.items.length + 1)\" ng-class=\"{\\'cursor-pointer\\': !$last}\" ng-style=\"{\\'max-width\\': stepWidth + \\'%\\'}\"><span ng-if=\"!$last || !$ctrl.actionsVisible(item)\">{{ item.title | translate }}</span><div ng-if=\"$last && $ctrl.actionsVisible(item)\" style=\"display: inline-block; position: relative;\"><md-menu md-offset=\"0 44\"><span class=\"layout-row pip-breadcrumb-item-menu cursor-pointer {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-click=\"$ctrl.onOpenMenu($mdOpenMenu, $event)\" md-ink-ripple=\"\" aria-label=\"open breadcrumb actions\">{{ item.title | translate }}<md-icon class=\"pip-triangle-down\" md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-if=\"!subItem.divider\" ng-repeat-start=\"subItem in item.subActions\"><md-button ng-click=\"$ctrl.onSubActionClick(subItem)\" ng-if=\"!action.divider\" tabindex=\"4\"><md-icon md-menu-align-target=\"\" ng-if=\"subItem.icon\" md-svg-icon=\"{{ subItem.icon }}\"></md-icon><span>{{ subItem.title | translate }}</span></md-button></md-menu-item><md-menu-divider ng-if=\"subItem.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div></span><md-icon ng-repeat-end=\"\" md-svg-icon=\"icons:chevron-right\" ng-hide=\"$last\"></md-icon><span class=\"pip-title breadcrumb-accent\" ng-if=\"$ctrl.config.text\">{{ $ctrl.config.text | translate }}</span></div><div style=\"position: relative;\" ng-if=\"$ctrl._media(\\'xs\\')\"><md-menu md-offset=\"0 44\"><span class=\"pip-mobile-breadcrumb layout-row\" ng-click=\"$ctrl.config.items && $ctrl.config.items.length > 1 ? $mdOpenMenu() : return\"><span class=\"text-overflow\"><span ng-if=\"$ctrl.config.criteria\" ng-click=\"$ctrl.openSearch()\">{{ $ctrl.config.criteria }} -</span> <span class=\"breadcrumb-accent\" ng-if=\"$ctrl.config.text\">{{ $ctrl.config.text | translate }}</span> <span ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\" class=\"breadcrumb-accent {{ ($ctrl.config.items && $ctrl.config.items.length > 1) ? \\'cursor-pointer\\' : \\'\\' }}\">{{ $ctrl.config.items[$ctrl.config.items.length - 1].title | translate }}</span></span><md-icon class=\"pip-triangle-down cursor-pointer breadcrumb-accent\" md-svg-icon=\"icons:triangle-down\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 1\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.config.items\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\"><md-button ng-click=\"$ctrl.onClick(item)\" tabindex=\"5\"><md-icon md-menu-align-target=\"\" ng-if=\"item.icon\" md-svg-icon=\"{{ item.icon }}\"></md-icon><span>{{ item.title | translate }}</span></md-button></md-menu-item><md-menu-item ng-if=\"$ctrl.config.text\"><md-button tabindex=\"5\"><span class=\"text-grey\">{{ $ctrl.config.text | translate }}</span></md-button></md-menu-item></md-menu-content></md-menu></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dropdown/Dropdown.html',\n    '<md-toolbar class=\"md-subhead color-primary-bg {{ $ctrl.themeClass}}\" ng-if=\"$ctrl.show()\" ng-class=\"{\\'md-whiteframe-3dp\\': $ctrl.media(\\'xs\\')}\"><div class=\"pip-divider\"></div><md-select ng-model=\"$ctrl.selectedIndex\" tabindex=\"15\" ng-disabled=\"$ctrl.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"DROPDOWN\" md-ink-ripple=\"\" md-on-close=\"$ctrl.onSelect($ctrl.selectedIndex)\"><md-option ng-repeat=\"action in $ctrl.actions\" value=\"{{ ::$index }}\" ng-selected=\"$ctrl.activeIndex == $index ? true : false\">{{ (action.title || action.name || action) | translate }}</md-option></md-select></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('header/NavHeader.html',\n    '<md-toolbar ng-show=\"showHeader\" class=\"layout-row layout-align-start-center\"><div class=\"flex-fixed pip-sticky-nav-header-user\"><md-button class=\"md-icon-button\" ng-click=\"onUserClick()\" aria-label=\"current user\" tabindex=\"-1\"><img src=\"\" class=\"pip-sticky-nav-header-user-image\" ng-class=\"imageCss\"></md-button></div><div class=\"pip-sticky-nav-header-user-text\"><div class=\"pip-sticky-nav-header-user-pri\" ng-click=\"onUserClick()\" tabindex=\"-1\">{{ title | translate }}</div><div class=\"pip-sticky-nav-header-user-sec\">{{ subtitle | translate }}</div></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('icon/NavIcon.html',\n    '<md-button class=\"md-icon-button pip-nav-icon\" ng-if=\"$ctrl.config.type != \\'none\\'\" ng-class=\"$ctrl.config.class\" ng-click=\"$ctrl.onNavIconClick()\" tabindex=\"{{ $ctrl.config.type==\\'menu\\' || $ctrl.config.type==\\'back\\' ? 4 : -1 }}\" aria-label=\"menu\"><md-icon ng-if=\"$ctrl.config.type==\\'menu\\'\" md-svg-icon=\"icons:menu\"></md-icon><img ng-src=\"{{ $ctrl.config.imageUrl }}\" ng-if=\"$ctrl.config.type==\\'image\\'\" height=\"24\" width=\"24\"><md-icon ng-if=\"$ctrl.config.type==\\'back\\'\" md-svg-icon=\"icons:arrow-left\"></md-icon><md-icon ng-if=\"$ctrl.config.type==\\'icon\\'\" md-svg-icon=\"{{ $ctrl.config.icon }}\"></md-icon></md-button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('language/LanguagePicker.html',\n    '<md-menu md-position-mode=\"target-right target\"><span class=\"pip-language\" ng-click=\"$mdOpenMenu()\" aria-label=\"language selection\">{{ $ctrl.selectedLanguage | translate }}<md-icon md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"3\"><md-menu-item ng-repeat=\"language in $ctrl.languages\"><md-button ng-click=\"$ctrl.onLanguageClick(language)\" tabindex=\"7\">{{ language | translate }}</md-button></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('search/SearchBar.html',\n    '<div class=\"md-toolbar-tools pip-search-container\" ng-if=\"$ctrl.enabled\"><div class=\"layout-row pip-search-selected\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"start search\" ng-click=\"$ctrl.onClick()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><input class=\"pip-search-text flex\" type=\"search\" tabindex=\"6\" ng-model=\"$ctrl.search.text\" ng-keydown=\"$ctrl.onKeyDown($event)\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"clear search\" ng-click=\"$ctrl.clear()\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div><div class=\"md-toolbar-tools layout-row layout-align-end-center flex-fixed lp0 rp0\" ng-if=\"!$ctrl.enabled\"><md-button class=\"md-icon-button\" tabindex=\"5\" aria-label=\"start search\" ng-click=\"$ctrl.enable()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu/NavMenu.html',\n    '<div ng-if=\"$ctrl.sections && $ctrl.sections.length\"><md-list class=\"sidenav-list\" pip-focused=\"\" pip-focused-tabindex=\"10\" pip-with-hidden=\"true\"><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-sticky-nav-expanded-button\" ng-click=\"$ctrl.onExpand()\" ng-disabled=\"!$ctrl.isCollapsed\" tabindex=\"-1\" ng-if=\"$ctrl.expandedButton\"><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-left\" ng-if=\"$ctrl.expanded\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-right\" ng-if=\"!$ctrl.expanded\"></md-icon></md-list-item><md-divider ng-show=\"$ctrl.expandedButton\"></md-divider><div class=\"pip-section\" ng-repeat=\"section in $ctrl.sections\" ng-hide=\"section.access && !section.access(section)\"><md-divider ng-show=\"$index > 0 && !$ctrl.isSectionEmpty(section.links)\"></md-divider><md-subheader ng-show=\"section.title\" style=\"height: 48px;\"><span ng-if=\"$ctrl.expanded\" class=\"pip-sticky-nav-menu-title section-title\">{{ ::section.title | translate }}</span><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && section.icon\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ $ctrl.defaultIcon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && !section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ $ctrl.defaultIcon }}\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && !section.icon\"><md-tooltip md-visible=\"showTooltip\" class=\"md-secondary\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon></md-subheader><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-focusable\" tabindex=\"-1\" ng-repeat=\"link in section.links\" ng-class=\"{\\'active\\': $ctrl.isActive(link)}\" ng-hide=\"link.access && !link.access(link)\"><md-button class=\"layout-row layout-align-start-center pip-button-block\" tabindex=\"-1\" ng-click=\"$ctrl.clickLink($event, link)\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">{{ ::link.tooltipText | translate }}</md-tooltip><div class=\"pip-sticky-nav-menu-icon-block\"><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-if=\"!($ctrl.sideNavState.showIconTooltype && !link.tooltipText && !$ctrl.expanded)\" ng-hide=\"!link.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-hide=\"!link.icon\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !link.tooltipText && !$ctrl.expanded\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::link.tooltipText || link.title | translate }}</md-tooltip></md-icon></div><div class=\"pip-sticky-nav-menu-title\">{{ ::link.title | translate }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count < 100\">{{ link.count }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count > 99\">!</div></md-button></md-list-item></div></md-list></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tabs/Tabs.html',\n    '<md-toolbar class=\"pip-nav color-primary-bg {{ $ctrl.themeClass }}\" ng-class=\"{\\'pip-visible\\': $ctrl.show(), \\'pip-shadow\\': $ctrl.showShadow()}\"><md-tabs class=\"color-primary-bg\" \"=\"\" ng-if=\"$ctrl.media($ctrl.breakpoints)\" md-selected=\"$ctrl.activeIndex\" ng-class=\"{\\'disabled\\': $ctrl.isDisabled()}\" md-stretch-tabs=\"true\" md-dynamic-height=\"true\"><md-tab ng-repeat=\"tab in $ctrl.tabs track by $index\" ng-disabled=\"$ctrl.tabDisabled($index)\" md-on-select=\"$ctrl.onSelect($index)\"><md-tab-label>{{:: tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 0 && tab.counts <= 99\">{{ tab.counts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 99\">!</div></md-tab-label></md-tab></md-tabs><div class=\"md-subhead pip-tabs-content color-primary-bg\" ng-if=\"!$ctrl.media($ctrl.breakpoints)\"><div class=\"pip-divider position-top m0\"></div><md-select ng-model=\"$ctrl.activeIndex\" ng-disabled=\"$ctrl.isDisabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"SELECT\" md-ink-ripple=\"\" md-on-close=\"$ctrl.onSelect($ctrl.activeIndex)\"><md-option ng-repeat=\"tab in $ctrl.tabs track by $index\" class=\"pip-tab-option\" value=\"{{ ::$index }}\">{{ ::tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 0 && tab.counts <= 99\">{{ tab.counts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 99\">!</div></md-option></md-select></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('sidenav/SideNav.html',\n    '<md-sidenav class=\"md-sidenav-left\" md-is-locked-open=\"$ctrl.sidenavState.isLockedOpen\" md-component-id=\"pip-sticky-sidenav\" ng-transclude=\"\"></md-sidenav>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-nav-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvYWN0aW9ucy9BY3Rpb25zU2VydmljZS50cyIsInNyYy9hY3Rpb25zL1ByaW1hcnlBY3Rpb25zRGlyZWN0aXZlLnRzIiwic3JjL2FjdGlvbnMvU2Vjb25kYXJ5QWN0aW9uc0RpcmVjdGl2ZS50cyIsInNyYy9hY3Rpb25zL2luZGV4LnRzIiwic3JjL2FwcGJhci9BcHBCYXJEaXJlY3RpdmUudHMiLCJzcmMvYXBwYmFyL0FwcEJhclBhcnREaXJlY3RpdmUudHMiLCJzcmMvYXBwYmFyL0FwcEJhclNlcnZpY2UudHMiLCJzcmMvYXBwYmFyL2luZGV4LnRzIiwic3JjL2JyZWFkY3J1bWIvQnJlYWRjcnVtYkRpcmVjdGl2ZS50cyIsInNyYy9icmVhZGNydW1iL0JyZWFkY3J1bWJTZXJ2aWNlLnRzIiwic3JjL2JyZWFkY3J1bWIvaW5kZXgudHMiLCJzcmMvY29tbW9uL05hdlNlcnZpY2UudHMiLCJzcmMvZGVwZW5kZW5jaWVzL1RyYW5zbGF0ZUZpbHRlci50cyIsInNyYy9kcm9wZG93bi9Ecm9wZG93bkRpcmVjdGl2ZS50cyIsInNyYy9oZWFkZXIvTmF2SGVhZGVyRGlyZWN0aXZlLnRzIiwic3JjL2hlYWRlci9OYXZIZWFkZXJTZXJ2aWNlLnRzIiwic3JjL2hlYWRlci9pbmRleC50cyIsInNyYy9pY29uL05hdkljb24udHMiLCJzcmMvaWNvbi9OYXZJY29uQW5ndWxhckV2ZW50cy50cyIsInNyYy9pY29uL05hdkljb25Db25maWcudHMiLCJzcmMvaWNvbi9OYXZJY29uU2VydmljZS50cyIsInNyYy9pY29uL2luZGV4LnRzIiwic3JjL2luZGV4LnRzIiwic3JjL2xhbmd1YWdlL0xhbmd1YWdlUGlja2VyRGlyZWN0aXZlLnRzIiwic3JjL21lbnUvTmF2TWVudURpcmVjdGl2ZS50cyIsInNyYy9tZW51L05hdk1lbnVTZXJ2aWNlLnRzIiwic3JjL21lbnUvaW5kZXgudHMiLCJzcmMvc2VhcmNoL1NlYXJjaEFuZ3VsYXJFdmVudHMudHMiLCJzcmMvc2VhcmNoL1NlYXJjaEJhci50cyIsInNyYy9zZWFyY2gvU2VhcmNoQ29uZmlnLnRzIiwic3JjL3NlYXJjaC9TZWFyY2hTZXJ2aWNlLnRzIiwic3JjL3NlYXJjaC9pbmRleC50cyIsInNyYy9zaWRlbmF2L1NpZGVOYXZEaXJlY3RpdmUudHMiLCJzcmMvc2lkZW5hdi9TaWRlTmF2RXZlbnRzLnRzIiwic3JjL3NpZGVuYXYvU2lkZU5hdlBhcnREaXJlY3RpdmUudHMiLCJzcmMvc2lkZW5hdi9TaWRlTmF2U2VydmljZS50cyIsInNyYy9zaWRlbmF2L1NpZGVOYXZTdGF0ZS50cyIsInNyYy9zaWRlbmF2L2luZGV4LnRzIiwic3JjL3RhYnMvVGFicy50cyIsInRlbXAvcGlwLXdlYnVpLW5hdi1odG1sLm1pbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztBQ0FXLFFBQUEsbUJBQW1CLEdBQUcsbUJBQW1CLENBQUM7QUFDMUMsUUFBQSx5QkFBeUIsR0FBRyx5QkFBeUIsQ0FBQztBQUVqRTtJQUFBO0lBMkJBLENBQUM7SUFBRCx1QkFBQztBQUFELENBM0JBLEFBMkJDLElBQUE7QUEzQlksNENBQWdCO0FBNkI3QjtJQUFnQyw4QkFBZ0I7SUFBaEQ7O0lBRUEsQ0FBQztJQUFELGlCQUFDO0FBQUQsQ0FGQSxBQUVDLENBRitCLGdCQUFnQixHQUUvQztBQUZZLGdDQUFVO0FBSXZCO0lBQUE7UUFFVyx5QkFBb0IsR0FBaUIsRUFBRSxDQUFDO1FBRXhDLHdCQUFtQixHQUFpQixFQUFFLENBQUM7UUFHdkMsMkJBQXNCLEdBQWlCLEVBQUUsQ0FBQztRQUUxQywwQkFBcUIsR0FBZ0IsRUFBRSxDQUFDO0lBQ25ELENBQUM7SUFBRCxvQkFBQztBQUFELENBVkEsQUFVQyxJQUFBO0FBVlksc0NBQWE7QUFvQzFCO0lBSUksd0JBQ0ksTUFBcUIsRUFDckIsVUFBZ0M7UUFFaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7SUFDakMsQ0FBQztJQUVELHNCQUFXLGtDQUFNO2FBQWpCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDeEIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyxnREFBb0I7YUFBL0I7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztRQUM3QyxDQUFDO2FBRUQsVUFBZ0MsS0FBbUI7WUFDL0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1lBQ2hELElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTtJQU9ELHNCQUFXLGtEQUFzQjthQUFqQztZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDO1FBQy9DLENBQUM7YUFFRCxVQUFrQyxLQUFtQjtZQUNqRCxJQUFJLENBQUMsT0FBTyxDQUFDLHNCQUFzQixHQUFHLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDbEQsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsK0NBQW1CO2FBQTlCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUM7UUFDNUMsQ0FBQzthQUVELFVBQStCLEtBQW1CO1lBQzlDLElBQUksQ0FBQyxPQUFPLENBQUMsbUJBQW1CLEdBQUcsS0FBSyxJQUFJLEVBQUUsQ0FBQztZQUMvQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDM0IsQ0FBQzs7O09BTEE7SUFPRCxzQkFBVyxpREFBcUI7YUFBaEM7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztRQUM5QyxDQUFDO2FBRUQsVUFBaUMsS0FBbUI7WUFDaEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1lBQ2pELElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTtJQU9NLDZCQUFJLEdBQVgsVUFBWSxjQUE2QixFQUFFLGdCQUErQjtRQUN0RSxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLGNBQWMsSUFBSSxFQUFFLENBQUM7UUFDeEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsR0FBRyxnQkFBZ0IsSUFBSSxFQUFFLENBQUM7UUFDNUQsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSw2QkFBSSxHQUFYO1FBQ0ksSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsR0FBRyxFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsR0FBRyxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxvQ0FBVyxHQUFsQixVQUFtQixNQUFjLEVBQUUsS0FBYTtRQUM1QyxFQUFFLENBQUMsQ0FBQyxNQUFNLElBQUksSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUFDLE1BQU0sQ0FBQztRQUVqRCxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsb0JBQW9CLEVBQUUsVUFBQyxDQUFDO1lBQ3hDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDO2dCQUNqQixDQUFDLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztRQUNILENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsRUFBRSxVQUFDLENBQUM7WUFDdkMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxNQUFNLENBQUM7Z0JBQ2pCLENBQUMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxvQ0FBVyxHQUFsQjtRQUNJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsRUFBRSxVQUFDLENBQUM7WUFDeEMsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDbkIsQ0FBQyxDQUFDLENBQUM7UUFDSCxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsbUJBQW1CLEVBQUUsVUFBQyxDQUFDO1lBQ3ZDLENBQUMsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ25CLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTyx3Q0FBZSxHQUF2QjtRQUNJLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLDJCQUFtQixFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBRU0sc0NBQWEsR0FBcEI7UUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxpQ0FBeUIsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFDTCxxQkFBQztBQUFELENBakdBLEFBaUdDLElBQUE7QUFFRDtJQUFBO1FBQ1ksWUFBTyxHQUFrQixJQUFJLGFBQWEsRUFBRSxDQUFDO0lBbUR6RCxDQUFDO0lBaERHLHNCQUFXLG1DQUFNO2FBQWpCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDeEIsQ0FBQzthQUVELFVBQWtCLEtBQW9CO1lBQ2xDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxJQUFJLElBQUksYUFBYSxFQUFFLENBQUM7UUFDaEQsQ0FBQzs7O09BSkE7SUFNRCxzQkFBVyxpREFBb0I7YUFBL0I7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztRQUM3QyxDQUFDO2FBRUQsVUFBZ0MsS0FBbUI7WUFDL0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ3BELENBQUM7OztPQUpBO0lBTUQsc0JBQVcsbURBQXNCO2FBQWpDO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUM7UUFDL0MsQ0FBQzthQUVELFVBQWtDLEtBQW1CO1lBQ2pELElBQUksQ0FBQyxPQUFPLENBQUMsc0JBQXNCLEdBQUcsS0FBSyxJQUFJLEVBQUUsQ0FBQztRQUN0RCxDQUFDOzs7T0FKQTtJQU1ELHNCQUFXLGdEQUFtQjthQUE5QjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDO1FBQzVDLENBQUM7YUFFRCxVQUErQixLQUFtQjtZQUM5QyxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDbkQsQ0FBQzs7O09BSkE7SUFNRCxzQkFBVyxrREFBcUI7YUFBaEM7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztRQUM5QyxDQUFDO2FBRUQsVUFBaUMsS0FBbUI7WUFDaEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ3JELENBQUM7OztPQUpBO0lBTU0sOEJBQUksR0FBWCxVQUFZLFVBQVU7UUFDbEIsVUFBVSxDQUFDO1FBRVgsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRWpFLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFDTCxzQkFBQztBQUFELENBcERBLEFBb0RDLElBQUE7QUFFRCxPQUFPO0tBQ0YsTUFBTSxDQUFDLFlBQVksQ0FBQztLQUNwQixRQUFRLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQyxDQUFDOzs7O0FDak83QztJQWNJLGtDQUNJLFFBQTZCLEVBQzdCLE1BQXNCLEVBQ3RCLFNBQW1DLEVBQ25DLE1BQXNCLEVBQ3RCLElBQW9CLEVBQ3BCLFVBQWdDLEVBQ2hDLE9BQTBCLEVBQzFCLFNBQThCLEVBQzlCLFVBQTJCO1FBRzNCLFVBQVUsQ0FBQztRQVpmLGlCQXVEQztRQXpDRyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztRQUc5QixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFtQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDcEksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7WUFDM0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFO2dCQUNyQyxrQkFBa0IsRUFBRSxzQkFBc0I7Z0JBQzFDLHNCQUFzQixFQUFFLHVEQUF1RDthQUNsRixDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUU7Z0JBQ3JDLGtCQUFrQixFQUFFLHNCQUFzQjtnQkFDMUMsc0JBQXNCLEVBQUUsdURBQXVEO2FBRWxGLENBQUMsQ0FBQztRQUNQLENBQUM7UUFHRCxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBRTlDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztZQUMzQixVQUFVLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDOUQsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUM1QixVQUFVLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFDaEUsQ0FBQztRQUVELElBQUksQ0FBQyxNQUFNLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQUVoQyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxVQUFDLEtBQXVCLEVBQUUsTUFBcUI7WUFDcEYsS0FBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6QyxDQUFDLENBQUMsQ0FBQztJQUVQLENBQUM7SUFFTyxtREFBZ0IsR0FBeEIsVUFBeUIsS0FBdUIsRUFBRSxNQUFxQjtRQUNuRSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBRU0sMkNBQVEsR0FBZixVQUFnQixNQUFrQjtRQUU5QixNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVNLDhDQUFXLEdBQWxCLFVBQW1CLE1BQWtCO1FBQ2pDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEtBQUssSUFBSSxJQUFJLE1BQU0sQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3QyxNQUFNLENBQUMsRUFBRSxDQUFDO1FBQ2QsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNwQixNQUFNLENBQUMsR0FBRyxDQUFDO1FBQ2YsQ0FBQztRQUVELE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFTSw4Q0FBVyxHQUFsQixVQUFtQixNQUFrQixFQUFFLFdBQXFCO1FBQ3hELEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzVCLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNwQixXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUN0QyxNQUFNLENBQUM7UUFDWCxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdCLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDckIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDekMsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ2IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQy9CLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNmLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDcEMsSUFBSSxNQUFNLEdBQTZCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUE2QixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUU7Z0JBQzNJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7b0JBQ1QsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDaEQsQ0FBQztZQUNMLENBQUM7WUFDRCxNQUFNLENBQUM7UUFDWCxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0MsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBRUosSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsa0JBQWtCLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hFLENBQUM7SUFDTCxDQUFDO0lBRUwsK0JBQUM7QUFBRCxDQXRJQSxBQXNJQyxJQUFBO0FBRUQsQ0FBQztJQUNHO1FBQ0ksTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixLQUFLLEVBQUU7Z0JBQ0gsWUFBWSxFQUFFLGtCQUFrQjtnQkFDaEMsYUFBYSxFQUFFLG1CQUFtQjthQUNyQztZQUNELE9BQU8sRUFBRSxLQUFLO1lBQ2QsV0FBVyxFQUFFLDZCQUE2QjtZQUMxQyxVQUFVLEVBQUUsd0JBQXdCO1lBQ3BDLFlBQVksRUFBRSxPQUFPO1NBQ3hCLENBQUM7SUFDTixDQUFDO0lBR0QsT0FBTztTQUNGLE1BQU0sQ0FBQyxZQUFZLENBQUM7U0FDcEIsU0FBUyxDQUFDLG1CQUFtQixFQUFFLHVCQUF1QixDQUFDLENBQUM7QUFFakUsQ0FBQyxDQUFDLEVBQUUsQ0FBQzs7OztBQzVKTDtJQWNJLG9DQUNJLFFBQTZCLEVBQzdCLE1BQXNCLEVBQ3RCLFNBQW1DLEVBQ25DLE1BQXNCLEVBQ3RCLElBQW9CLEVBQ3BCLFVBQWdDLEVBQ2hDLE9BQTBCLEVBQzFCLFNBQThCLEVBQzlCLFVBQTJCO1FBRTNCLFVBQVUsQ0FBQztRQVhmLGlCQTRDQztRQS9CRyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztRQUc5QixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBRWhELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztZQUMzQixVQUFVLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDaEUsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUM1QixVQUFVLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFDbEUsQ0FBQztRQUVELElBQUksQ0FBQyxNQUFNLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQUVoQyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxVQUFDLEtBQXVCLEVBQUUsTUFBcUI7WUFDcEYsS0FBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6QyxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLHlCQUF5QixFQUFFO1lBQzNDLEtBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDO0lBRVAsQ0FBQztJQUVNLDRDQUFPLEdBQWQsVUFBZSxNQUFnQjtRQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztJQUMzQixDQUFDO0lBRU0sc0RBQWlCLEdBQXhCO1FBQ0ksSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFFTSw2Q0FBUSxHQUFmLFVBQWdCLFdBQXFCLEVBQUUsRUFBb0I7UUFDdkQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQzlCLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNwQixDQUFDO0lBRU8scURBQWdCLEdBQXhCLFVBQXlCLEtBQXVCLEVBQUUsTUFBcUI7UUFDbkUsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDekIsQ0FBQztJQUVNLDZDQUFRLEdBQWYsVUFBZ0IsTUFBa0I7UUFFOUIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFTSxnREFBVyxHQUFsQixVQUFtQixNQUFrQjtRQUNqQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxLQUFLLElBQUksSUFBSSxNQUFNLENBQUMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0MsTUFBTSxDQUFDLEVBQUUsQ0FBQztRQUNkLENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDcEIsTUFBTSxDQUFDLEdBQUcsQ0FBQztRQUNmLENBQUM7UUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBR08sZ0RBQVcsR0FBbkIsVUFBb0IsT0FBcUI7UUFBekMsaUJBVUM7UUFURyxJQUFJLEtBQUssR0FBVyxDQUFDLENBQUM7UUFFdEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBQyxNQUFrQjtZQUMvQixFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN6QixLQUFLLEVBQUUsQ0FBQztZQUNaLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUVILE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVNLDREQUF1QixHQUE5QjtRQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsR0FBRyxDQUFDO1lBQzNELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBRU0sNERBQXVCLEdBQTlCO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUM7WUFDM0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFFTSxnREFBVyxHQUFsQixVQUFtQixNQUFrQixFQUFFLFdBQXFCO1FBQ3hELEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzVCLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFPRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNwQixXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUN0QyxNQUFNLENBQUM7UUFDWCxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDZixNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3JCLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ3pDLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMvQixNQUFNLENBQUM7UUFDWCxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDZixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BDLElBQUksTUFBTSxHQUE2QixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsR0FBNkIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDO2dCQUMxSSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO29CQUNULE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQ2hELENBQUM7WUFDTCxDQUFDO1lBQ0QsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ2YsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUVKLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLGtCQUFrQixFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoRSxDQUFDO0lBQ0wsQ0FBQztJQUVMLGlDQUFDO0FBQUQsQ0FwS0EsQUFvS0MsSUFBQTtBQUVELENBQUM7SUFDRztRQUNJLE1BQU0sQ0FBQztZQUNILFFBQVEsRUFBRSxHQUFHO1lBQ2IsS0FBSyxFQUFFO2dCQUNILFlBQVksRUFBRSxrQkFBa0I7Z0JBQ2hDLGFBQWEsRUFBRSxtQkFBbUI7YUFDckM7WUFDRCxPQUFPLEVBQUUsS0FBSztZQUNkLFdBQVcsRUFBRSwrQkFBK0I7WUFDNUMsVUFBVSxFQUFFLDBCQUEwQjtZQUN0QyxZQUFZLEVBQUUsT0FBTztTQUN4QixDQUFDO0lBQ04sQ0FBQztJQUVELE9BQU87U0FDRixNQUFNLENBQUMsWUFBWSxDQUFDO1NBQ3BCLFNBQVMsQ0FBQyxxQkFBcUIsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO0FBRXJFLENBQUMsQ0FBQyxFQUFFLENBQUM7Ozs7Ozs7QUMzTEwsT0FBTyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQyxZQUFZLEVBQUUsa0JBQWtCLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUU5RSw0QkFBMEI7QUFDMUIscUNBQW1DO0FBQ25DLHVDQUFxQztBQUVyQyxzQ0FBaUM7Ozs7QUNKakM7SUFHSSxtQ0FDSSxRQUE2QixFQUM3QixNQUFzQixFQUN0QixJQUFvQixFQUNwQixVQUFnQyxFQUNoQyxTQUF5QjtRQUV6QixVQUFVLENBQUM7UUFQZixpQkFpQkM7UUFSRyxRQUFRLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2hDLFFBQVEsQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUV0QyxNQUFNLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUM7UUFFakMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxVQUFDLEtBQXVCLEVBQUUsTUFBb0I7WUFDN0UsS0FBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUE7UUFDdkMsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRU0sbURBQWUsR0FBdEIsVUFBdUIsS0FBdUIsRUFBRSxNQUFvQjtRQUNoRSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN6QixDQUFDO0lBRUwsZ0NBQUM7QUFBRCxDQTFCQSxBQTBCQyxJQUFBO0FBRUQsQ0FBQztJQUNHO1FBQ0ksTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixVQUFVLEVBQUUsSUFBSTtZQUNoQixLQUFLLEVBQUUsSUFBSTtZQUNYLFdBQVcsRUFBRSxvQkFBb0I7WUFDakMsVUFBVSxFQUFFLHlCQUF5QjtZQUNyQyxZQUFZLEVBQUUsT0FBTztTQUN4QixDQUFDO0lBQ04sQ0FBQztJQUVELE9BQU87U0FDRixNQUFNLENBQUMsV0FBVyxDQUFDO1NBQ25CLFNBQVMsQ0FBQyxXQUFXLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFFakQsQ0FBQyxDQUFDLEVBQUUsQ0FBQzs7OztBQzVDTDtJQUtJLHVDQUNJLFFBQTZCLEVBQzdCLE1BQXNCLEVBQ3RCLE1BQWlCLEVBQ2pCLElBQW9CLEVBQ3BCLFVBQWdDLEVBQ2hDLFNBQXlCO1FBRXpCLFVBQVUsQ0FBQztRQVJmLGlCQTBCQztRQWhCRyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFHdkIsSUFBSSxHQUFHLEdBQVcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUMsRUFBRSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDVixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNuRCxDQUFDO1FBR0QsVUFBVSxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxVQUFDLEtBQXVCLEVBQUUsTUFBb0I7WUFDN0UsS0FBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUE7UUFDdEMsQ0FBQyxDQUFDLENBQUM7SUFFUCxDQUFDO0lBRU8sdURBQWUsR0FBdkIsVUFBd0IsS0FBdUIsRUFBRSxNQUFvQjtRQUNqRSxJQUFJLEtBQUssR0FBUSxNQUFNLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQztRQUNwQyxJQUFJLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFHN0MsSUFBSSxPQUFPLEdBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLGdCQUFnQixDQUFDLENBQUM7UUFFcEcsRUFBRSxDQUFDLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDbEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxPQUFPLENBQUM7SUFDekMsQ0FBQztJQUVMLG9DQUFDO0FBQUQsQ0E1Q0EsQUE0Q0MsSUFBQTtBQUdELENBQUM7SUFDRyw2QkFBNkIsYUFBYTtRQUN0QyxVQUFVLENBQUM7UUFFWCxJQUFJLElBQUksR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFNUIsTUFBTSxDQUFDO1lBQ0gsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVO1lBQzNCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLEtBQUssRUFBRSxJQUFJO1lBQ1gsSUFBSSxFQUFFLHNCQUFzQixNQUFpQixFQUFFLFFBQTZCLEVBQUUsTUFBc0I7Z0JBRWhHLE1BQU0sQ0FBQyxJQUFJLEdBQUc7b0JBQ1YsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7Z0JBQzFCLENBQUMsQ0FBQztnQkFDRixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFDckMsQ0FBQztZQUNELFVBQVUsRUFBRSw2QkFBNkI7U0FDNUMsQ0FBQztJQUNOLENBQUM7SUFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQztTQUN0QixTQUFTLENBQUMsZUFBZSxFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFFekQsQ0FBQyxDQUFDLEVBQUUsQ0FBQzs7OztBQzNFTSxRQUFBLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO0FBRW5EO0lBQUE7SUFJQSxDQUFDO0lBQUQsbUJBQUM7QUFBRCxDQUpBLEFBSUMsSUFBQTtBQUpZLG9DQUFZO0FBa0N6QjtJQUlJLHVCQUFtQixNQUFvQixFQUFFLFVBQWdDO1FBQ3JFLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxzQkFBVyxpQ0FBTTthQUFqQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3hCLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsa0NBQU87YUFBbEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDaEMsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyxnQ0FBSzthQUFoQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUM5QixDQUFDO2FBRUQsVUFBaUIsS0FBVTtZQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1lBQ2pDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTtJQU9NLDRCQUFJLEdBQVgsVUFBWSxLQUFXLEVBQUUsT0FBa0IsRUFBRSxpQkFBNEI7UUFDckUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDdkQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUM3RCxFQUFFLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3RDLENBQUM7UUFDRCxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLDRCQUFJLEdBQVg7UUFDSSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDN0IsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTyxrQ0FBVSxHQUFsQjtRQUNJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsVUFBQyxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUExQixDQUEwQixDQUFDLENBQUM7SUFDN0YsQ0FBQztJQUVPLGlDQUFTLEdBQWpCLFVBQWtCLFdBQXFCO1FBQXZDLGlCQVVDO1FBVEcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBRWxCLEVBQUUsQ0FBQyxDQUFDLFdBQVcsSUFBSSxJQUFJLElBQUksV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hELENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFVBQUMsRUFBRTtnQkFDbkIsS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxFQUFFLENBQUMsQ0FBQztZQUNsRCxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1QyxDQUFDO0lBQ0wsQ0FBQztJQUVNLGlDQUFTLEdBQWhCO1FBQWlCLHFCQUF3QjthQUF4QixVQUF3QixFQUF4QixxQkFBd0IsRUFBeEIsSUFBd0I7WUFBeEIsZ0NBQXdCOztRQUNyQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU0sb0NBQVksR0FBbkI7UUFDSSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDbEIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxnQ0FBUSxHQUFmO1FBQUEsaUJBS0M7UUFMZSxpQkFBb0I7YUFBcEIsVUFBb0IsRUFBcEIscUJBQW9CLEVBQXBCLElBQW9CO1lBQXBCLDRCQUFvQjs7UUFDaEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBQyxDQUFDO1lBQ2QsS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxtQ0FBVyxHQUFsQjtRQUFBLGlCQUtDO1FBTGtCLGlCQUFvQjthQUFwQixVQUFvQixFQUFwQixxQkFBb0IsRUFBcEIsSUFBb0I7WUFBcEIsNEJBQW9COztRQUNuQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxVQUFDLENBQUM7WUFDZCxLQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLFVBQUMsRUFBRSxJQUFLLE9BQUEsRUFBRSxJQUFJLENBQUMsRUFBUCxDQUFPLENBQUMsQ0FBQztRQUMzRSxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU0sNEJBQUksR0FBWCxVQUFZLElBQVksRUFBRSxLQUFVO1FBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUNqQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVPLHVDQUFlLEdBQXZCO1FBQ0ksSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsMEJBQWtCLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFDTCxvQkFBQztBQUFELENBekZBLEFBeUZDLElBQUE7QUFFRDtJQUFBO1FBQ1ksWUFBTyxHQUFpQjtZQUM1QixPQUFPLEVBQUUsSUFBSTtZQUNiLEtBQUssRUFBRSxFQUFFO1lBQ1QsT0FBTyxFQUFFLEVBQUU7U0FDZCxDQUFDO0lBb0ROLENBQUM7SUFqREcsc0JBQVcsa0NBQU07YUFBakI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QixDQUFDO2FBRUQsVUFBa0IsS0FBbUI7WUFDakMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLElBQUksSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMvQyxDQUFDOzs7T0FKQTtJQU1ELHNCQUFXLGlDQUFLO2FBQWhCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQzlCLENBQUM7YUFFRCxVQUFpQixLQUFVO1lBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssSUFBSSxFQUFFLENBQUM7UUFFckMsQ0FBQzs7O09BTEE7SUFPRCxzQkFBVyxtQ0FBTzthQUFsQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNoQyxDQUFDO2FBRUQsVUFBbUIsS0FBZTtZQUM5QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ3ZDLENBQUM7OztPQUpBO0lBTU0saUNBQVEsR0FBZjtRQUFBLGlCQUlDO1FBSmUsaUJBQW9CO2FBQXBCLFVBQW9CLEVBQXBCLHFCQUFvQixFQUFwQixJQUFvQjtZQUFwQiw0QkFBb0I7O1FBQ2hDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQUMsQ0FBQztZQUNkLEtBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxvQ0FBVyxHQUFsQjtRQUFBLGlCQUlDO1FBSmtCLGlCQUFvQjthQUFwQixVQUFvQixFQUFwQixxQkFBb0IsRUFBcEIsSUFBb0I7WUFBcEIsNEJBQW9COztRQUNuQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxVQUFDLENBQUM7WUFDZCxLQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLFVBQUMsRUFBRSxJQUFLLE9BQUEsRUFBRSxJQUFJLENBQUMsRUFBUCxDQUFPLENBQUMsQ0FBQztRQUMzRSxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSw2QkFBSSxHQUFYLFVBQVksSUFBWSxFQUFFLEtBQVU7UUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3JDLENBQUM7SUFFTSw2QkFBSSxHQUFYLFVBQVksVUFBZ0M7UUFDeEMsVUFBVSxDQUFDO1FBRVgsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLGFBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRWhFLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFDTCxxQkFBQztBQUFELENBekRBLEFBeURDLElBQUE7QUFFRCxPQUFPO0tBQ0YsTUFBTSxDQUFDLFdBQVcsQ0FBQztLQUNuQixRQUFRLENBQUMsV0FBVyxFQUFFLGNBQWMsQ0FBQyxDQUFDOzs7Ozs7O0FDNUwzQyxPQUFPO0tBQ0YsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDLFlBQVksRUFBRSxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7QUFFN0QsMkJBQXlCO0FBQ3pCLDZCQUEyQjtBQUMzQixpQ0FBK0I7QUFFL0IscUNBQWdDOzs7O0FDSGhDLHlEQUE2RDtBQUM3RCx5REFBMEQ7QUFDMUQscUVBQStEO0FBRS9EO0lBVUksOEJBQ0ksUUFBNkIsRUFDN0IsVUFBZ0MsRUFDaEMsT0FBMEIsRUFDMUIsTUFBMkIsRUFDM0IsU0FBOEIsRUFDOUIsU0FBbUMsRUFDbkMsYUFBaUMsRUFDakMsUUFBaUM7UUFFakMsVUFBVSxDQUFDO1FBVmYsaUJBNkJDO1FBakJHLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBRzNCLFFBQVEsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUVwQyxJQUFJLENBQUMsTUFBTSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7UUFFbkMsVUFBVSxDQUFDLEdBQUcsQ0FBQywwQ0FBc0IsRUFBRSxVQUFDLEtBQXVCLEVBQUUsTUFBd0I7WUFDckYsS0FBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUMsQ0FBQztRQUNILFVBQVUsQ0FBQyxHQUFHLENBQUMsdUNBQW1CLEVBQUUsY0FBUSxLQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXhFLElBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDNUUsSUFBSSxDQUFDLE1BQU0sR0FBRyxRQUFRLEtBQUssU0FBUyxHQUFHLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDL0QsQ0FBQztJQUVPLGtEQUFtQixHQUEzQixVQUE0QixLQUF1QixFQUFFLE1BQXdCO1FBQ3pFLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7SUFFTywrQ0FBZ0IsR0FBeEI7UUFDSSxJQUFJLEtBQUssR0FBcUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFFaEQsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkMsSUFBSSxJQUFJLEdBQW1CLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ25ELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDM0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNyQixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDaEMsQ0FBQztRQUNMLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2hDLENBQUM7SUFDTCxDQUFDO0lBRU0sc0NBQU8sR0FBZCxVQUFlLElBQW9CO1FBQy9CLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JCLENBQUM7SUFDTCxDQUFDO0lBRU0seUNBQVUsR0FBakI7UUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxxQ0FBZSxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVNLDZDQUFjLEdBQXJCLFVBQXNCLElBQW9CO1FBRXRDLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUVNLHlDQUFVLEdBQWpCLFVBQWtCLFdBQXFCLEVBQUUsS0FBWTtRQUNqRCxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUMxQixXQUFXLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFTSwrQ0FBZ0IsR0FBdkIsVUFBd0IsTUFBd0I7UUFDNUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDNUIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3QixNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3JCLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ3pDLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMvQixNQUFNLENBQUM7UUFDWCxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDZixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQy9CLElBQUksTUFBTSxHQUE2QixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQXdCLENBQUE7Z0JBQzFGLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDaEQsQ0FBQztZQUNELE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNmLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6QyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUM3QixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFFSixJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDNUQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDN0IsQ0FBQztJQUNMLENBQUM7SUFDTCwyQkFBQztBQUFELENBckhBLEFBcUhDLElBQUE7QUFFRCxDQUFDO0lBQ0c7UUFDSSxNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsR0FBRztZQUNiLEtBQUssRUFBRSxFQUFFO1lBQ1QsT0FBTyxFQUFFLEtBQUs7WUFDZCxXQUFXLEVBQUUsNEJBQTRCO1lBQ3pDLFVBQVUsRUFBRSxvQkFBb0I7WUFDaEMsWUFBWSxFQUFFLE9BQU87U0FDeEIsQ0FBQztJQUNOLENBQUM7SUFHRCxPQUFPLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQztTQUMxQixTQUFTLENBQUMsZUFBZSxFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFFekQsQ0FBQyxDQUFDLEVBQUUsQ0FBQzs7OztBQzlJTSxRQUFBLHNCQUFzQixHQUFHLHNCQUFzQixDQUFDO0FBQ2hELFFBQUEsbUJBQW1CLEdBQUcsbUJBQW1CLENBQUM7QUFFckQ7SUFBQTtJQUlBLENBQUM7SUFBRCxxQkFBQztBQUFELENBSkEsQUFJQyxJQUFBO0FBSlksd0NBQWM7QUFNM0I7SUFBQTtJQUlBLENBQUM7SUFBRCx1QkFBQztBQUFELENBSkEsQUFJQyxJQUFBO0FBSlksNENBQWdCO0FBb0I3QjtJQUlJLDJCQUNJLE1BQXdCLEVBQ3hCLFVBQWdDO1FBRWhDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxzQkFBVyxxQ0FBTTthQUFqQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3hCLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsbUNBQUk7YUFBZjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUM3QixDQUFDO2FBRUQsVUFBZ0IsS0FBYTtZQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7WUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1lBRTFCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FQQTtJQVNELHNCQUFXLG9DQUFLO2FBQWhCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQzlCLENBQUM7YUFFRCxVQUFpQixLQUF1QjtZQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7WUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBRTNCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FQQTtJQVNELHNCQUFXLHVDQUFRO2FBQW5CO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ2pDLENBQUM7YUFFRCxVQUFvQixLQUFhO1lBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztZQUM5QixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDM0IsQ0FBQzs7O09BTEE7SUFPTSxvQ0FBUSxHQUFmLFVBQWdCLElBQVksRUFBRSxRQUFpQjtRQUMzQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUNqQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLHFDQUFTLEdBQWhCLFVBQWlCLEtBQXVCLEVBQUUsUUFBaUI7UUFDdkQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsS0FBSyxJQUFJLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU0sMkNBQWUsR0FBdEI7UUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyw4QkFBc0IsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUNMLHdCQUFDO0FBQUQsQ0FoRUEsQUFnRUMsSUFBQTtBQUdEO0lBQUE7UUFDWSxZQUFPLEdBQXFCO1lBQ2hDLElBQUksRUFBRSxJQUFJO1lBQ1YsS0FBSyxFQUFFLElBQUk7WUFDWCxRQUFRLEVBQUUsSUFBSTtTQUNqQixDQUFDO0lBbUJOLENBQUM7SUFoQkcsc0JBQVcsb0NBQUk7YUFBZjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUM3QixDQUFDO2FBRUQsVUFBZ0IsS0FBYTtZQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7UUFDOUIsQ0FBQzs7O09BSkE7SUFNTSxpQ0FBSSxHQUFYLFVBQVksVUFBZ0M7UUFDeEMsVUFBVSxDQUFDO1FBRVgsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLGlCQUFpQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFFcEUsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUNMLHlCQUFDO0FBQUQsQ0F4QkEsQUF3QkMsSUFBQTtBQUdELE9BQU8sQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDO0tBQzFCLFFBQVEsQ0FBQyxlQUFlLEVBQUUsa0JBQWtCLENBQUMsQ0FBQzs7Ozs7OztBQzdIbkQsT0FBTyxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQyxZQUFZLEVBQUUsa0JBQWtCLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0FBRXhGLGlDQUErQjtBQUMvQiwrQkFBNkI7QUFFN0IseUNBQW9DOzs7O0FDaUJwQztJQUVJLG9CQUFtQixTQUFtQztRQUNsRCxVQUFVLENBQUM7UUFFWCxJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEdBQW1CLFNBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQzdGLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBb0IsU0FBUyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDOUYsSUFBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxHQUF1QixTQUFTLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUM3RyxJQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEdBQW9CLFNBQVMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ2pHLElBQUksQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBbUIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDN0YsSUFBSSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxHQUFvQixTQUFTLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNqRyxJQUFJLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQXNCLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ3RHLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBb0IsU0FBUyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDbEcsQ0FBQztJQVdNLDBCQUFLLEdBQVo7UUFFSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNkLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdkIsQ0FBQztRQUdELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN6QixDQUFDO1FBR0QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDbEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbkMsQ0FBQztRQUdELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN4QixDQUFDO1FBR0QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDZCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQixDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3hCLENBQUM7SUFFTCxDQUFDO0lBQ0wsaUJBQUM7QUFBRCxDQXZEQSxBQXVEQyxJQUFBO0FBRUQsT0FBTztLQUNGLE1BQU0sQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUFDO0tBQzNCLE9BQU8sQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7O0FDakYxQyxDQUFDO0lBRUQseUJBQXlCLFNBQW1DO1FBQ3hELFVBQVUsQ0FBQztRQUVYLElBQUksWUFBWSxHQUFtQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFtQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUV4SixNQUFNLENBQUMsVUFBVSxHQUFXO1lBQ3hCLE1BQU0sQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ25FLENBQUMsQ0FBQTtJQUNMLENBQUM7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLGtCQUFrQixFQUFFLEVBQUUsQ0FBQztTQUM5QixNQUFNLENBQUMsV0FBVyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0FBRTFDLENBQUMsQ0FBQyxFQUFFLENBQUM7O0FDaEJMLENBQUM7SUFDRztRQW9CSSxxQ0FDSSxRQUE2QixFQUM3QixNQUFzQixFQUN0QixTQUFtQyxFQUNuQyxNQUFzQixFQUN0QixJQUFvQixFQUNwQixVQUFnQyxFQUNoQyxRQUFpQyxFQUNqQyxRQUE0QjtZQUc1QixVQUFVLENBQUM7WUFFWCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztZQUMzQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztZQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztZQUM3QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUV6QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQTZCLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3hHLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBOEIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUM7WUFFekcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7WUFDN0MsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDbkMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2xELENBQUM7WUFFRCxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUM7WUFHL0UsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsU0FBUyxLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztZQUN0RSxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQzVGLElBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsRCxDQUFDO1FBR00sOENBQVEsR0FBZjtZQUNJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUM1QixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDO1lBQ3ZDLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2pCLENBQUM7UUFDTCxDQUFDO1FBRU0sOENBQVEsR0FBZixVQUFnQixLQUFhO1lBQTdCLGlCQVlDO1lBWEcsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7WUFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxLQUFLLENBQUM7WUFDbkMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3hCLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDakUsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDO29CQUNWLEtBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQztnQkFDL0IsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDO1FBQ0wsQ0FBQztRQUVNLDBDQUFJLEdBQVg7WUFDSSxJQUFJLE1BQWUsQ0FBQztZQUNwQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQztZQUMzQyxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxDQUFDLElBQUksQ0FBQztZQUNoQixDQUFDO1FBQ0wsQ0FBQztRQUVMLGtDQUFDO0lBQUQsQ0ExRkEsQUEwRkMsSUFBQTtJQUVEO1FBQ0ksTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixLQUFLLEVBQUU7Z0JBQ0gsVUFBVSxFQUFFLEdBQUc7Z0JBQ2YsT0FBTyxFQUFFLGFBQWE7Z0JBQ3RCLFlBQVksRUFBRSxVQUFVO2dCQUN4QixXQUFXLEVBQUUsaUJBQWlCO2dCQUM5QixNQUFNLEVBQUUsb0JBQW9CO2dCQUM1QixTQUFTLEVBQUUsR0FBRzthQUNqQjtZQUNELFdBQVcsRUFBRSx3QkFBd0I7WUFDckMsVUFBVSxFQUFFLDJCQUEyQjtZQUN2QyxZQUFZLEVBQUUsT0FBTztTQUN4QixDQUFDO0lBQ04sQ0FBQztJQUVELE9BQU87U0FDRixNQUFNLENBQUMsYUFBYSxFQUFFLENBQUMsa0JBQWtCLENBQUMsQ0FBQztTQUMzQyxTQUFTLENBQUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLENBQUM7QUFFckQsQ0FBQyxDQUFDLEVBQUUsQ0FBQzs7OztBQ2hITCxDQUFDO0lBQ0c7UUFpQkksc0NBQ0ksUUFBNkIsRUFDN0IsTUFBc0IsRUFDdEIsSUFBb0IsRUFDcEIsVUFBZ0MsRUFDaEMsUUFBNEIsRUFDNUIsWUFBK0IsRUFDL0IsV0FBZ0I7WUFHaEIsVUFBVSxDQUFDO1lBVmYsaUJBeUNDO1lBN0JHLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1lBQ2pCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1lBQzdCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxhQUFhLEdBQUcsWUFBWSxDQUFDO1lBR2xDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLHVCQUF1QixDQUFDLENBQUM7WUFHaEQsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBRWpCLElBQUksdUJBQXVCLEdBQWEsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUUsVUFBQyxNQUF3QixFQUFFLE1BQXVCO2dCQUNqSSxLQUFJLENBQUMsa0JBQWtCLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFBO1lBQzNDLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSwwQkFBMEIsR0FBYSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsRUFBRSxVQUFDLE1BQXdCLEVBQUUsS0FBVTtnQkFDMUgsS0FBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUE7WUFDdEMsQ0FBQyxDQUFDLENBQUM7WUFFSCxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRTtnQkFDbkIsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDOUMsdUJBQXVCLEVBQUUsQ0FBQztnQkFDOUIsQ0FBQztnQkFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLDBCQUEwQixDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNqRCwwQkFBMEIsRUFBRSxDQUFDO2dCQUNqQyxDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7UUFFUCxDQUFDO1FBRU8sZ0RBQVMsR0FBakI7WUFBQSxpQkF3QkM7WUF2QkcsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxDQUFBO1lBRW5FLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsS0FBSSxDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO2dCQUVyRSxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDaEIsS0FBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLFdBQVcsRUFBRSxFQUFsQixDQUFrQixDQUFDLENBQUM7b0JBTWxELEtBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxZQUFZLEVBQUUsRUFBbkIsQ0FBbUIsQ0FBQyxDQUFDO2dCQUl4RCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLEtBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxXQUFXLEVBQUUsRUFBbEIsQ0FBa0IsQ0FBQyxDQUFDO29CQUMvQyxLQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsWUFBWSxFQUFFLEVBQW5CLENBQW1CLENBQUMsQ0FBQztnQkFDckQsQ0FBQztnQkFFRCxLQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLEtBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDN0QsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ1gsQ0FBQztRQUVPLGlEQUFVLEdBQWxCO1lBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQztnQkFBQyxNQUFNLENBQUM7WUFFdkMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDN0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7WUFDbkQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7WUFDbkQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDdkQsQ0FBQztRQWVPLGtEQUFXLEdBQW5CO1lBQ0ksSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QyxDQUFDO1FBQUEsQ0FBQztRQUVNLG1EQUFZLEdBQXBCO1lBQUEsaUJBS0M7WUFKRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBQ3BDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO2dCQUNmLEtBQUksQ0FBQyxRQUFRLENBQUMsS0FBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDbkQsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDO1FBQUEsQ0FBQztRQUVNLHFEQUFjLEdBQXRCLFVBQXVCLEtBQXVCLEVBQUUsS0FBVTtZQUExRCxpQkFVQztZQVRHLEVBQUUsQ0FBQyxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBRWhDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDVixLQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssSUFBSSxLQUFLLENBQUMsRUFBRSxJQUFJLFFBQVEsQ0FBQztnQkFDcEQsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ1osQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1lBQzVCLENBQUM7UUFDTCxDQUFDO1FBRU8sd0RBQWlCLEdBQXpCLFVBQTBCLEtBQTBCO1lBQ2hELElBQUksU0FBUyxHQUFHLEVBQUUsRUFDZCxjQUFjLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFDOUYsZUFBZSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEVBQ2xHLFVBQVUsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLElBQUksS0FBSyxDQUFDLEtBQUssRUFDcEQsV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxFQUN2RCxNQUFNLEdBQUcsQ0FBQyxDQUFDO1lBRWYsRUFBRSxDQUFDLENBQUMsQ0FBQyxVQUFVLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNsRSxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxHQUFHLFdBQVcsR0FBRyxlQUFlLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQzlFLFNBQVMsQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLEdBQUcsTUFBTSxHQUFHLElBQUksQ0FBQztnQkFDOUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxlQUFlLEdBQUcsSUFBSSxDQUFDO2dCQUNsRCxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLFVBQVUsR0FBRyxlQUFlLEdBQUcsV0FBVyxHQUFHLElBQUksQ0FBQztnQkFDNUUsU0FBUyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUNqQyxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLFdBQVcsR0FBRyxVQUFVLEdBQUcsY0FBYyxHQUFHLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUM5RSxTQUFTLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUM7Z0JBQzdDLFNBQVMsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEdBQUcsV0FBVyxHQUFHLGNBQWMsR0FBRyxVQUFVLEdBQUcsSUFBSSxDQUFDO2dCQUM1RSxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLGNBQWMsR0FBRyxJQUFJLENBQUM7Z0JBQ2hELFNBQVMsQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDbEMsQ0FBQztZQUVELEtBQUssQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDekIsQ0FBQztRQUFBLENBQUM7UUFFTSwrQ0FBUSxHQUFoQixVQUFpQixNQUFNLEVBQUUsU0FBa0I7WUFDdkMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBRXBCLElBQUksR0FBVyxDQUFDO1lBRWhCLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztnQkFDOUQsR0FBRyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7WUFDMUIsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7Z0JBQy9CLEdBQUcsR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDO1lBQ2pDLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztZQUNoQyxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQzNDLENBQUM7UUFDTCxDQUFDO1FBRU8seURBQWtCLEdBQTFCLFVBQTJCLE1BQXdCLEVBQUUsTUFBdUI7WUFDeEUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFBO1lBRTVCLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUMxQixJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7WUFDaEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1lBQ2hDLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUNwQyxDQUFDO1FBRU0sa0RBQVcsR0FBbEI7WUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQ3BELENBQUM7UUFFTCxtQ0FBQztJQUFELENBN0xBLEFBNkxDLElBQUE7SUFFRDtRQUNJLE1BQU0sQ0FBQztZQUNILFFBQVEsRUFBRSxJQUFJO1lBQ2QsT0FBTyxFQUFFLEtBQUs7WUFDZCxXQUFXLEVBQUUsdUJBQXVCO1lBQ3BDLFVBQVUsRUFBRSw0QkFBNEI7WUFDeEMsWUFBWSxFQUFFLE9BQU87U0FFeEIsQ0FBQztJQUNOLENBQUM7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLGNBQWMsQ0FBQztTQUN0QixTQUFTLENBQUMsY0FBYyxFQUFFLGtCQUFrQixDQUFDLENBQUM7QUFFdkQsQ0FBQyxDQUFDLEVBQUUsQ0FBQzs7OztBQ2pOTSxRQUFBLHFCQUFxQixHQUFHLHFCQUFxQixDQUFDO0FBRXpEO0lBQUE7SUFlQSxDQUFDO0lBQUQsc0JBQUM7QUFBRCxDQWZBLEFBZUMsSUFBQTtBQWZZLDBDQUFlO0FBZTNCLENBQUM7QUEyQkY7SUFJSSwwQkFBbUIsTUFBdUIsRUFBRSxVQUFnQztRQUN4RSxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztJQUNqQyxDQUFDO0lBRUQsc0JBQVcsb0NBQU07YUFBakI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QixDQUFDOzs7T0FBQTtJQUVELHNCQUFXLG1DQUFLO2FBQWhCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQzlCLENBQUM7YUFFRCxVQUFpQixLQUFhO1lBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUMzQixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDM0IsQ0FBQzs7O09BTEE7SUFPRCxzQkFBVyxzQ0FBUTthQUFuQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztRQUNqQyxDQUFDO2FBRUQsVUFBb0IsS0FBYTtZQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7WUFDOUIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsc0NBQVE7YUFBbkI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDakMsQ0FBQzthQUVELFVBQW9CLEtBQWE7WUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1lBQzlCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTtJQU9ELHNCQUFXLG1DQUFLO2FBQWhCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQzlCLENBQUM7YUFFRCxVQUFpQixLQUFpQjtZQUM5QixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDM0IsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsbUNBQUs7YUFBaEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDOUIsQ0FBQzthQUVELFVBQWlCLEtBQWE7WUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQzNCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTtJQU9NLCtCQUFJLEdBQVgsVUFBWSxLQUFhLEVBQUUsUUFBZ0IsRUFBRSxRQUFnQixFQUFFLGVBQXFCO1FBQ2hGLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBRWpDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQztRQUN6QyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDOUIsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzlCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQztRQUN6QyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDOUIsQ0FBQztRQUNELElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU0sK0JBQUksR0FBWDtRQUNJLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDMUIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTywwQ0FBZSxHQUF2QjtRQUNJLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLDZCQUFxQixFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBQ0wsdUJBQUM7QUFBRCxDQXhGQSxBQXdGQyxJQUFBO0FBRUQ7SUFBQTtRQUNZLFlBQU8sR0FBb0IsSUFBSSxlQUFlLEVBQUUsQ0FBQztJQTZGN0QsQ0FBQztJQTFGRyxzQkFBVyxxQ0FBTTthQUFqQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3hCLENBQUM7YUFFRCxVQUFrQixLQUFzQjtZQUNwQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssSUFBSSxJQUFJLGVBQWUsRUFBRSxDQUFDO1FBQ2xELENBQUM7OztPQUpBO0lBTUQsc0JBQVcsOENBQWU7YUFBMUI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUM7UUFDeEMsQ0FBQzthQUVELFVBQTJCLEtBQWE7WUFDcEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO1FBQ3pDLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsb0NBQUs7YUFBaEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDOUIsQ0FBQzthQUVELFVBQWlCLEtBQWE7WUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQy9CLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsdUNBQVE7YUFBbkI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDakMsQ0FBQzthQUVELFVBQW9CLEtBQWE7WUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsdUNBQVE7YUFBbkI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDakMsQ0FBQzthQUVELFVBQW9CLEtBQWE7WUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsb0NBQUs7YUFBaEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDOUIsQ0FBQzthQUVELFVBQWlCLEtBQWlCO1lBQzlCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUMvQixDQUFDOzs7T0FKQTtJQU1ELHNCQUFXLG9DQUFLO2FBQWhCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQzlCLENBQUM7YUFFRCxVQUFpQixLQUFhO1lBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUMvQixDQUFDOzs7T0FKQTtJQU1NLCtCQUFHLEdBQVYsVUFBVyxLQUFhLEVBQUUsUUFBZ0IsRUFBRSxRQUFnQixFQUFFLGVBQXFCO1FBQy9FLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBRWpDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQztRQUN6QyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDOUIsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzlCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQztRQUN6QyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDOUIsQ0FBQztJQUNMLENBQUM7SUFFTSxpQ0FBSyxHQUFaO1FBQ0ksSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUM5QixDQUFDO0lBRU0sZ0NBQUksR0FBWCxVQUFZLFVBQWdDO1FBQ3hDLFVBQVUsQ0FBQztRQUVYLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRW5FLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFFTCx3QkFBQztBQUFELENBOUZBLEFBOEZDLElBQUE7QUFHRCxPQUFPO0tBQ0YsTUFBTSxDQUFDLGNBQWMsQ0FBQztLQUN0QixRQUFRLENBQUMsY0FBYyxFQUFFLGlCQUFpQixDQUFDLENBQUM7Ozs7Ozs7QUN6T2pELE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLENBQUMsWUFBWSxFQUFFLGtCQUFrQixDQUFDLENBQUMsQ0FBQztBQUVuRSw4QkFBNEI7QUFDNUIsZ0NBQThCO0FBRTlCLHdDQUFtQzs7Ozs7Ozs7OztBQ0xuQywwREFBNEQ7QUFJNUQsK0RBQWtGO0FBRWxGLElBQU0sZUFBZSxHQUFxQjtJQUN0QyxJQUFJLEVBQUUsV0FBVztJQUNqQixRQUFRLEVBQUUsZUFBZTtJQUN6QixJQUFJLEVBQUUsV0FBVztDQUNwQixDQUFBO0FBRUQ7SUFBQTtJQU9BLENBQUM7SUFBRCxxQkFBQztBQUFELENBUEEsQUFPQyxJQUFBO0FBRUQ7SUFlSSwyQkFDSSxRQUE2QixFQUM3QixNQUFzQixFQUN0QixJQUFvQixFQUNwQixVQUFnQyxFQUNoQyxPQUEwQixFQUMxQixVQUEyQjtRQUUzQixVQUFVLENBQUM7UUFSZixpQkF5QkM7UUFmRyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUd2QixRQUFRLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRWxDLElBQUksQ0FBQyxNQUFNLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQUVoQyxJQUFJLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsVUFBQyxLQUF1QixFQUFFLE1BQXFCO1lBQzlGLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUE7UUFDeEMsQ0FBQyxDQUFDLENBQUM7SUFFUCxDQUFDO0lBRU0sbUNBQU8sR0FBZDtRQUNJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNqQyxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDaEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN6QyxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDWixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ2pDLENBQUM7SUFDTCxDQUFDO0lBRU0sc0NBQVUsR0FBakI7UUFDSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0IsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ25CLENBQUM7SUFDTCxDQUFDO0lBRU0sNENBQWdCLEdBQXZCLFVBQXdCLEtBQXVCLEVBQUUsTUFBcUI7UUFDbEUsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDekIsQ0FBQztJQUVNLDBDQUFjLEdBQXJCO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUVsQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3hCLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQzNCLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEQsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLGdDQUFnQixDQUFDLENBQUM7UUFDakQsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2hDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLDBDQUFtQixDQUFDLENBQUM7UUFDcEQsQ0FBQztJQUNMLENBQUM7SUFFTCx3QkFBQztBQUFELENBL0VBLEFBK0VDLElBQUE7QUFFRCxJQUFNLE9BQU8sR0FBeUI7SUFDbEMsUUFBUSxFQUFFLGVBQWU7SUFDekIsV0FBVyxFQUFFLG1CQUFtQjtJQUNoQyxVQUFVLEVBQUUsaUJBQWlCO0NBQ2hDLENBQUE7QUFFRCxPQUFPO0tBQ0YsTUFBTSxDQUFDLFlBQVksQ0FBQztLQUNwQixTQUFTLENBQUMsWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFDOzs7O0FDOUczQixRQUFBLG1CQUFtQixHQUFHLG1CQUFtQixDQUFDO0FBQzFDLFFBQUEsbUJBQW1CLEdBQUcsbUJBQW1CLENBQUM7Ozs7QUNEckQ7SUFBQTtJQVdBLENBQUM7SUFBRCxvQkFBQztBQUFELENBWEEsQUFXQyxJQUFBO0FBWFksc0NBQWE7QUFXekIsQ0FBQzs7OztBQ1hGLGlEQUFnRDtBQUVoRCwrREFBNkQ7QUFFN0Q7SUFJSSx3QkFBbUIsTUFBcUIsRUFBRSxVQUFnQztRQUN0RSxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztJQUNqQyxDQUFDO0lBRUQsc0JBQVcsa0NBQU07YUFBakI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QixDQUFDOzs7T0FBQTtJQUVPLDJDQUFrQixHQUExQixVQUEyQixlQUFxQjtRQUM1QyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUM7WUFDckMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQzlCLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1lBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQztRQUN6QyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7WUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQzlCLENBQUM7SUFDTCxDQUFDO0lBRU0saUNBQVEsR0FBZixVQUFnQixlQUFxQjtRQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7UUFDM0IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU0saUNBQVEsR0FBZixVQUFnQixJQUFZLEVBQUUsZUFBcUI7UUFDL0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO1FBQzNCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxpQ0FBUSxHQUFmLFVBQWdCLGVBQXFCO1FBQ2pDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztRQUMzQixJQUFJLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxrQ0FBUyxHQUFoQixVQUFpQixRQUFnQixFQUFFLGVBQXFCO1FBQ3BELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDakMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU0sNkJBQUksR0FBWDtRQUNJLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztRQUMzQixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTyx3Q0FBZSxHQUF2QjtRQUNJLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLDBDQUFtQixFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBQ0wscUJBQUM7QUFBRCxDQTdEQSxBQTZEQyxJQUFBO0FBRUQ7SUFBQTtRQUNZLFlBQU8sR0FBa0IsSUFBSSw2QkFBYSxFQUFFLENBQUM7SUF5RHpELENBQUM7SUF0REcsc0JBQVcsbUNBQU07YUFBakI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QixDQUFDO2FBRUQsVUFBa0IsS0FBb0I7WUFDbEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLElBQUksSUFBSSw2QkFBYSxFQUFFLENBQUM7UUFDaEQsQ0FBQzs7O09BSkE7SUFNTyw0Q0FBa0IsR0FBMUIsVUFBMkIsZUFBcUI7UUFDNUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUM5QixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUM7UUFDekMsSUFBSTtZQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUUvQixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLGVBQWUsQ0FBQztRQUN6QyxJQUFJO1lBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ25DLENBQUM7SUFFTSxpQ0FBTyxHQUFkLFVBQWUsZUFBcUI7UUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO1FBQzNCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0saUNBQU8sR0FBZCxVQUFlLElBQVksRUFBRSxlQUFxQjtRQUM5QyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7UUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0saUNBQU8sR0FBZCxVQUFlLGVBQXFCO1FBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztRQUMzQixJQUFJLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVNLGtDQUFRLEdBQWYsVUFBZ0IsUUFBZ0IsRUFBRSxlQUFxQjtRQUNuRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7UUFDNUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sK0JBQUssR0FBWjtRQUNJLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztRQUMzQixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLDhCQUFJLEdBQVgsVUFBWSxVQUFnQztRQUN4QyxVQUFVLENBQUM7UUFFWCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFFakUsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUVMLHNCQUFDO0FBQUQsQ0ExREEsQUEwREMsSUFBQTtBQUdELE9BQU87S0FDRixNQUFNLENBQUMsWUFBWSxDQUFDO0tBQ3BCLFFBQVEsQ0FBQyxZQUFZLEVBQUUsZUFBZSxDQUFDLENBQUM7Ozs7Ozs7QUNsSTdDLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLENBQUMsWUFBWSxFQUFFLGtCQUFrQixFQUFFLGtCQUFrQixDQUFDLENBQUMsQ0FBQztBQUVyRiwyQkFBeUI7QUFDekIsa0NBQWdDO0FBQ2hDLDhCQUE0QjtBQUM1Qiw2QkFBMkI7QUFDM0IsNEJBQTBCO0FBQzFCLHFCQUFtQjtBQUduQixxQ0FBZ0M7Ozs7Ozs7QUNWL0IsMENBQXdDO0FBQ3pDLDhDQUE0QztBQUM1Qyx3Q0FBc0M7QUFDdEMsdUJBQXFCO0FBQ3JCLHFCQUFtQjtBQUNuQixvQkFBa0I7QUFDbEIsb0JBQWtCO0FBQ2xCLHdCQUFzQjtBQUN0QixxQkFBbUI7QUFDbkIsb0JBQWtCO0FBQ2xCLGtCQUFnQjtBQUNoQixrQkFBZ0I7QUFDaEIsK0JBQTZCO0FBRTdCLE9BQU87S0FDRixNQUFNLENBQUMsUUFBUSxFQUFFO0lBQ2QsZUFBZTtJQUNmLGFBQWE7SUFDYixTQUFTO0lBQ1QsV0FBVztJQUNYLGNBQWM7SUFDZCxZQUFZO0lBQ1osZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixjQUFjO0NBQ2pCLENBQUM7S0FDRCxRQUFRLENBQUMsYUFBYSxFQUFFO0lBQ3JCLGdCQUFnQixFQUFFLE9BQU87SUFDekIsbUJBQW1CLEVBQUUsV0FBVztJQUNoQyxxQkFBcUIsRUFBRSxHQUFHO0lBQzFCLHNCQUFzQixFQUFFLEdBQUc7SUFDM0IscUJBQXFCLEVBQUUsRUFBRTtJQUN6Qiw0QkFBNEIsRUFBRSxHQUFHO0NBRXBDLENBQUMsQ0FBQTtBQUVOLCtCQUEwQjtBQUMxQiw4QkFBeUI7QUFDekIsa0NBQTZCO0FBRTdCLCtCQUEwQjtBQUMxQiw0QkFBdUI7QUFDdkIsNEJBQXVCO0FBQ3ZCLDhCQUF5Qjs7QUM5Q3pCLENBQUM7SUFDRztRQWFJLDJDQUNJLFFBQTZCLEVBQzdCLE1BQXNCLEVBQ3RCLFNBQW1DLEVBQ25DLE1BQWlCLEVBQ2pCLElBQW9CLEVBQ3BCLFVBQWdDLEVBQ2hDLFFBQTRCO1lBRTVCLFVBQVUsQ0FBQztZQVpSLGNBQVMsR0FBYSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztZQWN0QyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztZQUMzQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztZQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztZQUM3QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUN6QixJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQW1DLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBR3ZILFFBQVEsQ0FBQyxRQUFRLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUV6QyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBRXZDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRSxDQUFDO1FBRUQsc0JBQVcsdURBQVE7aUJBQW5CO2dCQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUM3RCxDQUFDOzs7V0FBQTtRQUVNLHdEQUFZLEdBQW5CLFVBQW9CLFNBQW1CO1lBQ25DLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsU0FBUyxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3JFLENBQUM7UUFFTSwyREFBZSxHQUF0QixVQUF1QixRQUFnQjtZQUNuQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQzFCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxRQUFRLENBQUM7Z0JBRWpDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztZQUVyRCxDQUFDO1FBQ0wsQ0FBQztRQUVMLHdDQUFDO0lBQUQsQ0ExREEsQUEwREMsSUFBQTtJQUVEO1FBQ0ksTUFBTSxDQUFDO1lBQ0gsUUFBUSxFQUFFLEdBQUc7WUFDYixLQUFLLEVBQUU7Z0JBQ0gsU0FBUyxFQUFFLFlBQVk7Z0JBQ3ZCLEtBQUssRUFBRSxRQUFRO2FBQ2xCO1lBQ0QsT0FBTyxFQUFFLEtBQUs7WUFDZCxXQUFXLEVBQUUsVUFBVSxPQUFPLEVBQUUsSUFBSTtnQkFDaEMsTUFBTSxDQUFDLDhCQUE4QixDQUFDO1lBQzFDLENBQUM7WUFDRCxVQUFVLEVBQUUsaUNBQWlDO1lBQzdDLFlBQVksRUFBRSxPQUFPO1NBQ3hCLENBQUM7SUFDTixDQUFDO0lBRUQsT0FBTztTQUNGLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRTtRQUN6QixZQUFZLEVBQUUsa0JBQWtCLEVBQUUsa0JBQWtCO0tBQ3ZELENBQUM7U0FDRCxTQUFTLENBQUMsbUJBQW1CLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztBQUVqRSxDQUFDLENBQUMsRUFBRSxDQUFDOzs7O0FDL0VMLENBQUM7SUFDRztRQXdCSSxvQ0FDSSxRQUE2QixFQUM3QixNQUFzQixFQUN0QixTQUFtQyxFQUNuQyxNQUFzQixFQUN0QixJQUFvQixFQUNwQixPQUEwQixFQUMxQixTQUE4QixFQUM5QixVQUFnQyxFQUNoQyxRQUE0QixFQUM1QixVQUEyQixFQUMzQixVQUEyQixFQUMzQixXQUFnQjtZQUdoQixVQUFVLENBQUM7WUFmZixpQkE0REM7WUEzQ0csSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7WUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7WUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7WUFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7WUFDM0IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7WUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7WUFDN0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7WUFDekIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7WUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7WUFDM0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7WUFDOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7WUFFOUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsR0FBNkIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBRTNHLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxXQUFXLENBQUMsMEJBQTBCO2dCQUM1RCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBRXpELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFFOUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDO1lBRXJFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUV0QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDO1lBRWhELElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7WUFFbEQsSUFBSSxxQkFBcUIsR0FBYSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxVQUFDLE1BQXdCLEVBQUUsTUFBcUI7Z0JBQzNILEtBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFBO1lBQ3hDLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSwwQkFBMEIsR0FBYSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsRUFBRSxVQUFDLE1BQXdCLEVBQUUsS0FBbUI7Z0JBQ25JLEtBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFBO1lBQ3RDLENBQUMsQ0FBQyxDQUFDO1lBRUgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFO2dCQUN4QixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUM1QyxxQkFBcUIsRUFBRSxDQUFDO2dCQUM1QixDQUFDO2dCQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ2pELDBCQUEwQixFQUFFLENBQUM7Z0JBQ2pDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUVQLENBQUM7UUFFTyxtREFBYyxHQUF0QjtZQUNJLElBQUksU0FBa0IsQ0FBQztZQUN2QixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQy9DLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUM7WUFDM0MsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNKLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEtBQUssSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLE9BQU8sQ0FBQztZQUMzRixDQUFDO1lBRUQsSUFBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUM7UUFDakMsQ0FBQztRQUVNLDZDQUFRLEdBQWY7WUFDSSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO2dCQUFDLE1BQU0sQ0FBQTtZQUFDLENBQUM7WUFFakMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFFL0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsc0JBQXNCLENBQUMsQ0FBQztZQUNoRSxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osSUFBSSxDQUFDLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1lBQzdELENBQUM7WUFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0QsQ0FBQztRQUVNLDZDQUFRLEdBQWYsVUFBZ0IsSUFBaUI7WUFDN0IsTUFBTSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyRCxDQUFDO1FBRU0sbURBQWMsR0FBckIsVUFBc0IsY0FBNkI7WUFBbkQsaUJBU0M7WUFSRyxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUM7WUFDbEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsVUFBQyxJQUFpQjtnQkFDckMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDdkIsTUFBTSxHQUFHLEtBQUssQ0FBQztnQkFDbkIsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1lBRUgsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNsQixDQUFDO1FBRU8sb0RBQWUsR0FBdkIsVUFBd0IsTUFBd0IsRUFBRSxNQUFxQjtZQUNuRSxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztnQkFBQyxNQUFNLENBQUM7WUFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ3BDLENBQUM7UUFFTyxtREFBYyxHQUF0QixVQUF1QixLQUF1QixFQUFFLEtBQW1CO1lBRS9ELEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUVuQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7WUFDaEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1lBQ2pDLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDLGNBQWMsQ0FBQztZQUUzQyxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUM5QixDQUFDO1FBRU0sNkNBQVEsR0FBZixVQUFnQixJQUFpQjtZQUM3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFFbkIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDaEUsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDaEIsQ0FBQztZQUNMLENBQUM7WUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzFELE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBQ2hCLENBQUM7WUFDTCxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUNuQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDdkUsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDaEIsQ0FBQztZQUNMLENBQUM7WUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDNUUsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDaEIsQ0FBQztZQUNMLENBQUM7WUFFRCxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ2pCLENBQUM7UUFFTSw4Q0FBUyxHQUFoQixVQUFpQixLQUF1QixFQUFFLElBQWlCO1lBQTNELGlCQXFEQztZQXBERyxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7WUFFeEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUNSLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBRXpCLE1BQU0sQ0FBQztZQUNYLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDWixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDdkUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQkFFekIsTUFBTSxDQUFDO2dCQUNYLENBQUM7Z0JBRUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDekIsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDVixLQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztnQkFDM0MsQ0FBQyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO2dCQUU1QixNQUFNLENBQUM7WUFDWCxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNsQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzVFLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBQ3pCLE1BQU0sQ0FBQztnQkFDWCxDQUFDO2dCQUVELElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUM7b0JBQ1YsS0FBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNqQyxDQUFDLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7Z0JBRTVCLE1BQU0sQ0FBQztZQUNYLENBQUM7WUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztvQkFDakUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQkFFekIsTUFBTSxDQUFDO2dCQUNYLENBQUM7Z0JBRUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDekIsSUFBSSxDQUFDLFFBQVEsQ0FBQztvQkFDVixLQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDakQsQ0FBQyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO2dCQUU1QixNQUFNLENBQUM7WUFDWCxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUNwQixJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2pELENBQUM7WUFHRCxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzdCLENBQUM7UUFDTCxpQ0FBQztJQUFELENBMU5BLEFBME5DLElBQUE7SUFHRDtRQUNJLE1BQU0sQ0FBQztZQUNILFFBQVEsRUFBRSxJQUFJO1lBQ2QsS0FBSyxFQUFFO2dCQUNILFFBQVEsRUFBRSxlQUFlO2dCQUN6QixTQUFTLEVBQUUsZ0JBQWdCO2FBQzlCO1lBQ0QsT0FBTyxFQUFFLEtBQUs7WUFDZCxXQUFXLEVBQUUsbUJBQW1CO1lBQ2hDLFVBQVUsRUFBRSwwQkFBMEI7WUFDdEMsWUFBWSxFQUFFLE9BQU87U0FDeEIsQ0FBQztJQUNOLENBQUM7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLFlBQVksQ0FBQztTQUNwQixTQUFTLENBQUMsWUFBWSxFQUFFLGdCQUFnQixDQUFDLENBQUM7QUFFbkQsQ0FBQyxDQUFDLEVBQUUsQ0FBQzs7OztBQ3BQTSxRQUFBLG1CQUFtQixHQUFHLG1CQUFtQixDQUFDO0FBRXJEO0lBQUE7SUE2QkEsQ0FBQztJQUFELGtCQUFDO0FBQUQsQ0E3QkEsQUE2QkMsSUFBQTtBQTdCWSxrQ0FBVztBQStCeEI7SUFBQTtJQWFBLENBQUM7SUFBRCxxQkFBQztBQUFELENBYkEsQUFhQyxJQUFBO0FBYlksd0NBQWM7QUFlM0I7SUFBQTtJQUdBLENBQUM7SUFBRCxvQkFBQztBQUFELENBSEEsQUFHQyxJQUFBO0FBSFksc0NBQWE7QUFrQjFCO0lBSUksd0JBQ0ksTUFBcUIsRUFDckIsVUFBZ0M7UUFFaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7SUFDakMsQ0FBQztJQUVELHNCQUFXLG9DQUFRO2FBQW5CO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ2pDLENBQUM7YUFFRCxVQUFvQixLQUF1QjtZQUN2QyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1lBQ3BDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTtJQU9ELHNCQUFXLHVDQUFXO2FBQXRCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO1FBQ3BDLENBQUM7YUFlRCxVQUF1QixLQUFhO1lBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztZQUNqQyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDM0IsQ0FBQzs7O09BbEJBO0lBRU0seUNBQWdCLEdBQXZCLFVBQXdCLElBQVksRUFBRSxLQUFhO1FBQy9DLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQUMsTUFBTSxDQUFDO1FBRS9DLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsVUFBQyxDQUFDO1lBQzVCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxVQUFDLENBQUM7Z0JBQ2QsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUM7b0JBQ2YsQ0FBQyxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBT00sb0NBQVcsR0FBbEIsVUFBbUIsSUFBWSxFQUFFLEtBQWE7UUFDMUMsRUFBRSxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFBQyxNQUFNLENBQUM7UUFFL0MsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFDLENBQUM7WUFDNUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLFVBQUMsQ0FBQztnQkFDZCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQztvQkFDZixDQUFDLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUN4QixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSxvQ0FBVyxHQUFsQjtRQUNJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsVUFBQyxDQUFDO1lBQzVCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxVQUFDLENBQUM7Z0JBQ2QsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7WUFDbkIsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU8sd0NBQWUsR0FBdkI7UUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQywyQkFBbUIsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUNMLHFCQUFDO0FBQUQsQ0FyRUEsQUFxRUMsSUFBQTtBQUVEO0lBQUE7UUFDWSxZQUFPLEdBQWtCO1lBQzdCLFFBQVEsRUFBRSxFQUFFO1lBQ1osV0FBVyxFQUFFLGNBQWM7U0FDOUIsQ0FBQztJQTJCTixDQUFDO0lBeEJHLHNCQUFXLHFDQUFRO2FBQW5CO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ2pDLENBQUM7YUFFRCxVQUFvQixLQUF1QjtZQUN2QyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ3hDLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsd0NBQVc7YUFBdEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDcEMsQ0FBQzthQUVELFVBQXVCLEtBQWE7WUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3JDLENBQUM7OztPQUpBO0lBTU0sOEJBQUksR0FBWCxVQUFZLFVBQVU7UUFDbEIsVUFBVSxDQUFDO1FBRVgsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7WUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRWpFLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFDTCxzQkFBQztBQUFELENBL0JBLEFBK0JDLElBQUE7QUFFRCxPQUFPO0tBQ0YsTUFBTSxDQUFDLFlBQVksQ0FBQztLQUNwQixRQUFRLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQyxDQUFDOzs7Ozs7O0FDNUs3QyxPQUFPLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDLFlBQVksRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7QUFFckYsNEJBQTBCO0FBQzFCLDhCQUE0QjtBQUU1QixzQ0FBaUM7Ozs7Ozs7QUNMdEIsUUFBQSxlQUFlLEdBQUcsZUFBZSxDQUFDO0FBQ2xDLFFBQUEsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7QUFDcEMsUUFBQSxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztBQUN4QyxRQUFBLG9CQUFvQixHQUFHLG9CQUFvQixDQUFDOzs7O0FDRHZELDZEQUFvSDtBQUVwSDtJQVNJLDZCQUNJLFFBQTZCLEVBQzdCLFVBQWdDLEVBQ2hDLFNBQXlCO1FBRXpCLFVBQVUsQ0FBQztRQUxmLGlCQWtCQztRQXJCTSxZQUFPLEdBQVksS0FBSyxDQUFDO1FBQ3pCLFdBQU0sR0FBUSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQztRQVM5QixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUd6QixRQUFRLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFcEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDO1FBQy9CLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsd0NBQWtCLEVBQUUsVUFBQyxLQUF1QixFQUFFLE1BQW9CO1lBQzVGLEtBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3hDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLHdDQUFVLEdBQWpCO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNuQixDQUFDO0lBQ0wsQ0FBQztJQUVPLHlDQUFXLEdBQW5CO1FBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNwQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBRXpELENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDNUQsQ0FBQztJQUNMLENBQUM7SUFFTyw2Q0FBZSxHQUF2QixVQUF3QixLQUF1QixFQUFFLE1BQW9CO1FBQ2pFLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVPLHVDQUFTLEdBQWpCO1FBQ0ksVUFBVSxDQUFDO1lBQ1AsSUFBSSxPQUFPLEdBQVcsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDNUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7Z0JBQ25CLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN4QixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDVixDQUFDO0lBRU0sb0NBQU0sR0FBYjtRQUNJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVNLHFDQUFPLEdBQWQ7UUFDSSxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUU5QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRW5CLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUN2QixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqQyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQywwQ0FBb0IsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUM3RCxDQUFDO0lBQ0wsQ0FBQztJQUVNLG1DQUFLLEdBQVo7UUFDSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNyQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUNyQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDbkIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ25CLENBQUM7SUFDTCxDQUFDO0lBRU0sdUNBQVMsR0FBaEIsVUFBaUIsS0FBb0I7UUFFakMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7WUFDckIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBRW5CLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7WUFDckIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7SUFDTCxDQUFDO0lBQ0wsMEJBQUM7QUFBRCxDQXZHQSxBQXVHQyxJQUFBO0FBRUQsSUFBTSxTQUFTLEdBQXlCO0lBQ3BDLFdBQVcsRUFBRSx1QkFBdUI7SUFDcEMsVUFBVSxFQUFFLG1CQUFtQjtDQUNsQyxDQUFBO0FBRUQsT0FBTztLQUNGLE1BQU0sQ0FBQyxjQUFjLENBQUM7S0FDdEIsU0FBUyxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsQ0FBQzs7OztBQ3BIMUM7SUFBQTtJQVdBLENBQUM7SUFBRCxtQkFBQztBQUFELENBWEEsQUFXQyxJQUFBO0FBWFksb0NBQVk7Ozs7QUNBekIsK0NBQThDO0FBRTlDLDZEQUFvSDtBQUVwSDtJQUlJLHVCQUNJLE1BQW9CLEVBQ3BCLFVBQWdDO1FBRnBDLGlCQVNDO1FBTEcsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFFN0IsVUFBVSxDQUFDLEdBQUcsQ0FBQyxxQ0FBZSxFQUFFLGNBQVEsS0FBSSxDQUFDLElBQUksQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFVBQVUsQ0FBQyxHQUFHLENBQUMsc0NBQWdCLEVBQUUsY0FBUSxLQUFJLENBQUMsS0FBSyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVELHNCQUFXLGlDQUFNO2FBQWpCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDeEIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyxtQ0FBUTthQUFuQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztRQUNqQyxDQUFDO2FBRUQsVUFBb0IsS0FBYTtZQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7WUFDOUIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsaUNBQU07YUFBakI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDL0IsQ0FBQzthQUVELFVBQWtCLEtBQVU7WUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQzVCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTtJQU9ELHNCQUFXLGtDQUFPO2FBQWxCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ2hDLENBQUM7YUFFRCxVQUFtQixLQUFlO1lBQzlCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUM3QixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDM0IsQ0FBQzs7O09BTEE7SUFPRCxzQkFBVyxtQ0FBUTthQUFuQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztRQUNqQyxDQUFDO2FBRUQsVUFBb0IsS0FBaUM7WUFDakQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1lBQzlCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDOzs7T0FMQTtJQU9NLDJCQUFHLEdBQVYsVUFBVyxRQUFvQyxFQUFFLFFBQWlCLEVBQUUsTUFBWSxFQUFFLE9BQWtCO1FBQ2hHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUNqQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUMvQixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLDZCQUFLLEdBQVo7UUFDSSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUMzQixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLDRCQUFJLEdBQVg7UUFDSSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDNUIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSw2QkFBSyxHQUFaO1FBQ0ksSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQzdCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU0sOEJBQU0sR0FBYjtRQUNJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDN0MsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTyx1Q0FBZSxHQUF2QjtRQUNJLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLHdDQUFrQixFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBQ0wsb0JBQUM7QUFBRCxDQXhGQSxBQXdGQyxJQUFBO0FBRUQ7SUFBQTtRQUNZLFlBQU8sR0FBaUIsSUFBSSwyQkFBWSxFQUFFLENBQUM7UUFDM0MsYUFBUSxHQUFrQixJQUFJLENBQUM7SUFVM0MsQ0FBQztJQVJVLDZCQUFJLEdBQVgsVUFBWSxVQUFnQztRQUN4QyxVQUFVLENBQUM7UUFFWCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFFaEUsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUNMLHFCQUFDO0FBQUQsQ0FaQSxBQVlDLElBQUE7QUFHRCxPQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQztLQUN6QixRQUFRLENBQUMsV0FBVyxFQUFFLGNBQWMsQ0FBQyxDQUFDOzs7O0FDOUczQyxPQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDLFlBQVksRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7QUFFdkYsMEJBQXdCO0FBQ3hCLGlDQUErQjtBQUMvQiw0QkFBMEI7QUFDMUIsMkJBQXlCO0FBQ3pCLHVCQUFxQjs7OztBQ0xyQiwrQ0FBcUY7QUFFckY7SUEwQkksb0NBQ0ksUUFBNkIsRUFDN0IsTUFBc0IsRUFDdEIsU0FBbUMsRUFDbkMsTUFBc0IsRUFDdEIsSUFBb0IsRUFDcEIsVUFBZ0MsRUFDaEMsUUFBNEIsRUFDNUIsVUFBMkIsRUFDM0IsV0FBZ0I7UUFHaEIsVUFBVSxDQUFDO1FBWmYsaUJBa0ZDO1FBcEVHLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO1FBRTlCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQThCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUVuSCxJQUFJLENBQUMsY0FBYyxHQUFHLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQztRQUNwRCxJQUFJLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQztRQUNqRCxJQUFJLENBQUMsWUFBWSxHQUFHLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQztRQUNyRCxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQztRQUNuRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsV0FBVyxDQUFDLDBCQUEwQixDQUFDO1FBQ2pFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxpQ0FBa0IsRUFBRSxDQUFDO1FBQzFDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFHL0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUU3QyxJQUFJLGtCQUFrQixDQUFDO1FBQ3ZCLElBQUksbUJBQW1CLENBQUM7UUFFeEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDckUsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDVixLQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQTtZQUMzQixDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFFUixJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsY0FBUSxLQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUN2RSxrQkFBa0IsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRTtnQkFDdkQsS0FBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3hCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsbUJBQW1CLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsVUFBQyxNQUF3QixFQUFFLEtBQXdCO2dCQUM1RyxLQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQTtZQUN0QyxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsS0FBSSxDQUFDLFFBQVEsQ0FBQyxnQ0FBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM1QyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDWixDQUFDO1FBRUQsSUFBSSx1QkFBdUIsR0FBYSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRTtZQUM3RSxLQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLHFCQUFxQixHQUFhLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLFVBQUMsTUFBd0IsRUFBRSxNQUFxQjtZQUMzSCxLQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFBO1FBQ3pDLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFO1lBQ3hCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzlDLHVCQUF1QixFQUFFLENBQUM7WUFDOUIsQ0FBQztZQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzVDLHFCQUFxQixFQUFFLENBQUM7WUFDNUIsQ0FBQztZQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pDLGtCQUFrQixFQUFFLENBQUM7WUFDekIsQ0FBQztZQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzFDLG1CQUFtQixFQUFFLENBQUM7WUFDMUIsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBRVAsQ0FBQztJQUVPLG1EQUFjLEdBQXRCO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuRSxNQUFNLENBQUMsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFDcEQsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDO1FBQ3RDLENBQUM7SUFDTCxDQUFDO0lBRU8scURBQWdCLEdBQXhCLFVBQXlCLE1BQXdCLEVBQUUsTUFBcUI7UUFDcEUsRUFBRSxDQUFDLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQzNCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMxQyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDekMsQ0FBQztJQUNMLENBQUM7SUFFTyxtREFBYyxHQUF0QjtRQUNJLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVPLG1EQUFjLEdBQXRCLFVBQXVCLE1BQXdCLEVBQUUsU0FBNEI7UUFDekUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDekUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM3QixDQUFDO0lBQ0wsQ0FBQztJQUVPLHFEQUFnQixHQUF4QjtRQUFBLGlCQTBCQztRQXpCRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUFDLE1BQU0sQ0FBQTtRQUFDLENBQUM7UUFFbEYsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDbkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFRLEtBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFBLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBRTFFLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxJQUFJLFNBQVMsR0FBVyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzVELElBQUksWUFBWSxHQUFXLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2pFLElBQUksWUFBWSxHQUFXLFlBQVksR0FBRyxZQUFZLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUUvRCxFQUFFLENBQUMsQ0FBQyxTQUFTLEdBQUcsWUFBWSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxRQUFRLENBQUMsZ0NBQWlCLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDeEMsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLFNBQVMsR0FBRyxZQUFZLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDdkQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQ0FBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN2QyxNQUFNLENBQUM7UUFDWCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsU0FBUyxHQUFHLFlBQVksR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN2RCxJQUFJLENBQUMsUUFBUSxDQUFDLGdDQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3ZDLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLGdDQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFTyw2Q0FBUSxHQUFoQixVQUFpQixTQUE0QjtRQUE3QyxpQkF1Q0M7UUF0Q0csRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztZQUFDLE1BQU0sQ0FBQztRQUM3QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFJLFNBQVMsQ0FBQztZQUFDLE1BQU0sQ0FBQztRQUVuRSxFQUFFLENBQUMsQ0FBQyxTQUFTLElBQUksZ0NBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2hELENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxTQUFTLElBQUksZ0NBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUN2QyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ3RELENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxTQUFTLElBQUksZ0NBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2pELENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxTQUFTLElBQUksZ0NBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUN2QyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ3RELENBQUM7UUFFRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztRQUN4QixFQUFFLENBQUMsQ0FBQyxTQUFTLElBQUksZ0NBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzdCLENBQUM7UUFDRCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUVuRCxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBRzNDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDVixLQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQTtRQUMzQixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFHUCxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ1YsS0FBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDN0IsQ0FBQyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRWhDLENBQUM7SUFDTCxpQ0FBQztBQUFELENBNU1BLEFBNE1DLElBQUE7QUFFRCxDQUFDO0lBQ0c7UUFDSSxNQUFNLENBQUM7WUFDSCxRQUFRLEVBQUUsR0FBRztZQUNiLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLEtBQUssRUFBRSxJQUFJO1lBQ1gsV0FBVyxFQUFFLHNCQUFzQjtZQUNuQyxVQUFVLEVBQUUsMEJBQTBCO1lBQ3RDLFlBQVksRUFBRSxPQUFPO1NBQ3hCLENBQUM7SUFDTixDQUFDO0lBRUQsT0FBTztTQUNGLE1BQU0sQ0FBQyxZQUFZLENBQUM7U0FDcEIsU0FBUyxDQUFDLFlBQVksRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0FBRW5ELENBQUMsQ0FBQyxFQUFFLENBQUM7Ozs7QUNqT00sUUFBQSxtQkFBbUIsR0FBRyxtQkFBbUIsQ0FBQztBQUMxQyxRQUFBLHdCQUF3QixHQUFHLHdCQUF3QixDQUFDO0FBQ3BELFFBQUEsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7QUFDcEMsUUFBQSxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQzs7QUNIakQsQ0FBQztJQUVHLHdDQUF3QyxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsVUFBVTtRQUNwRixVQUFVLENBQUM7UUFFWCxJQUFJLFFBQVEsR0FBRyxFQUFFLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQztRQUMxQyxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFHckIsSUFBSSxHQUFHLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNWLFNBQVMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNyQyxRQUFRLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDdkMsQ0FBQztRQUVELGdCQUFnQixDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDekMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBRXRELDBCQUEwQixLQUFLLEVBQUUsTUFBTTtZQUNuQyxJQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQztZQUMvQixJQUFJLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN2QyxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLElBQUksU0FBUyxHQUFHLGdCQUFnQixDQUFDLENBQUM7WUFFL0UsRUFBRSxDQUFDLENBQUMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUM7Z0JBQzFCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ2pDLENBQUM7SUFFTCxDQUFDO0lBRUQsOEJBQThCLGFBQWE7UUFDdkMsVUFBVSxDQUFDO1FBRVgsSUFBSSxJQUFJLEdBQUcsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTVCLE1BQU0sQ0FBQztZQUNILFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVTtZQUMzQixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtZQUN2QixLQUFLLEVBQUUsSUFBSTtZQUNYLElBQUksRUFBRSxzQkFBc0IsTUFBVyxFQUFFLFFBQVEsRUFBRSxNQUFNO2dCQUNyRCxNQUFNLENBQUMsSUFBSSxHQUFHLGNBQWMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUEsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BELElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztZQUNyQyxDQUFDO1lBQ0QsVUFBVSxFQUFFLDhCQUE4QjtTQUM3QyxDQUFDO0lBQ04sQ0FBQztJQUVELE9BQU87U0FDRixNQUFNLENBQUMsWUFBWSxDQUFDO1NBQ3BCLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO0FBRTNELENBQUMsQ0FBQyxFQUFFLENBQUM7Ozs7QUNwREwsaURBQXFIO0FBRXJIO0lBQUE7SUFNQSxDQUFDO0lBQUQsb0JBQUM7QUFBRCxDQU5BLEFBTUMsSUFBQTtBQU5ZLHNDQUFhO0FBdUMxQjtJQU9JLHdCQUFtQixNQUFxQixFQUFFLFVBQWdDLEVBQUUsVUFBdUM7UUFDL0csSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7SUFDL0IsQ0FBQztJQUVELHNCQUFXLGtDQUFNO2FBQWpCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDeEIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyxtQ0FBTzthQUFsQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNoQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLGlDQUFLO2FBQWhCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQzlCLENBQUM7YUFFRCxVQUFpQixLQUFVO1lBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDakMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNCLENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsaUNBQUs7YUFBaEI7WUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN2QixDQUFDO2FBRUQsVUFBaUIsS0FBVTtZQUN2QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssSUFBSSxFQUFFLENBQUM7WUFDMUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsd0NBQXdCLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDaEUsQ0FBQzs7O09BTEE7SUFPTSw2QkFBSSxHQUFYO1FBQ0ksSUFBSSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQy9DLENBQUM7SUFFTSw4QkFBSyxHQUFaO1FBQ0ksSUFBSSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2hELENBQUM7SUFFTSwrQkFBTSxHQUFiO1FBQ0ksSUFBSSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2pELENBQUM7SUFFTSw2QkFBSSxHQUFYO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQzVCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDO0lBQ0wsQ0FBQztJQUVNLDZCQUFJLEdBQVg7UUFDSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQzdCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDO0lBQ0wsQ0FBQztJQUVNLGlDQUFRLEdBQWY7UUFBQSxpQkFLQztRQUxlLGlCQUFvQjthQUFwQixVQUFvQixFQUFwQixxQkFBb0IsRUFBcEIsSUFBb0I7WUFBcEIsNEJBQW9COztRQUNoQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxVQUFDLENBQUM7WUFDZCxLQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVNLG9DQUFXLEdBQWxCO1FBQUEsaUJBS0M7UUFMa0IsaUJBQW9CO2FBQXBCLFVBQW9CLEVBQXBCLHFCQUFvQixFQUFwQixJQUFvQjtZQUFwQiw0QkFBb0I7O1FBQ25DLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQUMsQ0FBQztZQUNkLEtBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsVUFBQyxFQUFFLElBQUssT0FBQSxFQUFFLElBQUksQ0FBQyxFQUFQLENBQU8sQ0FBQyxDQUFDO1FBQzNFLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFTSw2QkFBSSxHQUFYLFVBQVksSUFBWSxFQUFFLEtBQVU7UUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU8sd0NBQWUsR0FBdkI7UUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxtQ0FBbUIsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUNMLHFCQUFDO0FBQUQsQ0F2RkEsQUF1RkMsSUFBQTtBQUVEO0lBQUE7UUFDWSxZQUFPLEdBQWtCO1lBQzdCLEtBQUssRUFBRSxFQUFFO1lBQ1QsT0FBTyxFQUFFLEVBQUU7WUFDWCxJQUFJLEVBQUUsT0FBTztZQUNiLEtBQUssRUFBRSxJQUFJO1lBQ1gsT0FBTyxFQUFFLElBQUk7U0FDaEIsQ0FBQztJQW9FTixDQUFDO0lBaEVHLHNCQUFXLG1DQUFNO2FBQWpCO1lBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDeEIsQ0FBQzthQUVELFVBQWtCLEtBQW9CO1lBQ2xDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxJQUFJLElBQUksYUFBYSxFQUFFLENBQUM7UUFDaEQsQ0FBQzs7O09BSkE7SUFNRCxzQkFBVyxrQ0FBSzthQUFoQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztRQUM5QixDQUFDO2FBRUQsVUFBaUIsS0FBVTtZQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ3JDLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsaUNBQUk7YUFBZjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUM3QixDQUFDO2FBRUQsVUFBZ0IsS0FBYTtZQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7UUFDOUIsQ0FBQzs7O09BSkE7SUFNRCxzQkFBVyxvQ0FBTzthQUFsQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNoQyxDQUFDO2FBRUQsVUFBbUIsS0FBYztZQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDakMsQ0FBQzs7O09BSkE7SUFNRCxzQkFBVyxvQ0FBTzthQUFsQjtZQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNoQyxDQUFDO2FBRUQsVUFBbUIsS0FBZTtZQUM5QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ3ZDLENBQUM7OztPQUpBO0lBTU0sa0NBQVEsR0FBZjtRQUFBLGlCQUlDO1FBSmUsaUJBQW9CO2FBQXBCLFVBQW9CLEVBQXBCLHFCQUFvQixFQUFwQixJQUFvQjtZQUFwQiw0QkFBb0I7O1FBQ2hDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFVBQUMsQ0FBQztZQUNkLEtBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxxQ0FBVyxHQUFsQjtRQUFBLGlCQUlDO1FBSmtCLGlCQUFvQjthQUFwQixVQUFvQixFQUFwQixxQkFBb0IsRUFBcEIsSUFBb0I7WUFBcEIsNEJBQW9COztRQUNuQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxVQUFDLENBQUM7WUFDZCxLQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLFVBQUMsRUFBRSxJQUFLLE9BQUEsRUFBRSxJQUFJLENBQUMsRUFBUCxDQUFPLENBQUMsQ0FBQztRQUMzRSxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSw4QkFBSSxHQUFYLFVBQVksSUFBWSxFQUFFLEtBQVU7UUFDaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3JDLENBQUM7SUFFTSw4QkFBSSxHQUFYLFVBQVksVUFBZ0MsRUFBRSxVQUF1QztRQUNqRixVQUFVLENBQUM7UUFFWCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRTdFLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7SUFDTCxzQkFBQztBQUFELENBM0VBLEFBMkVDLElBQUE7QUFFRCwyQkFBMkIsVUFBZ0MsRUFBRSxVQUEyQjtJQUNwRixVQUFVLENBQUMsR0FBRyxDQUFDLGdDQUFnQixFQUFFLGNBQVEsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0QsVUFBVSxDQUFDLEdBQUcsQ0FBQyxpQ0FBaUIsRUFBRSxjQUFRLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JFLENBQUM7QUFFRCxPQUFPO0tBQ0YsTUFBTSxDQUFDLFlBQVksQ0FBQztLQUNwQixRQUFRLENBQUMsWUFBWSxFQUFFLGVBQWUsQ0FBQztLQUN2QyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQzs7OztBQ3ZONUI7SUFBQTtJQUtBLENBQUM7SUFBRCx3QkFBQztBQUFELENBTEEsQUFLQztBQUpVLHdCQUFNLEdBQVcsUUFBUSxDQUFDO0FBQzFCLHVCQUFLLEdBQVcsT0FBTyxDQUFDO0FBQ3hCLHVCQUFLLEdBQVcsT0FBTyxDQUFDO0FBQ3hCLHdCQUFNLEdBQVcsUUFBUSxDQUFDO0FBSnhCLDhDQUFpQjtBQU85QjtJQUFBO0lBZ0JBLENBQUM7SUFBRCxtQkFBQztBQUFELENBaEJBLEFBZ0JDLElBQUE7QUFoQlksb0NBQVk7QUFrQnpCO0lBQUE7UUFDSSxXQUFNLEdBQWlCO1lBQ25CLEVBQUUsRUFBRSxpQkFBaUIsQ0FBQyxNQUFNO1lBQzVCLFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsVUFBVSxFQUFFLElBQUk7WUFDaEIsWUFBWSxFQUFFLEtBQUs7WUFDbkIsY0FBYyxFQUFFLEtBQUs7WUFDckIsVUFBVSxFQUFFLElBQUk7WUFDaEIsTUFBTSxFQUFFLElBQUk7WUFDWixnQkFBZ0IsRUFBRSxLQUFLO1NBQzFCLENBQUM7UUFDRixVQUFLLEdBQWlCO1lBQ2xCLEVBQUUsRUFBRSxpQkFBaUIsQ0FBQyxLQUFLO1lBQzNCLFFBQVEsRUFBRSwyQ0FBMkM7WUFDckQsVUFBVSxFQUFFLEtBQUs7WUFDakIsWUFBWSxFQUFFLElBQUk7WUFDbEIsY0FBYyxFQUFFLEtBQUs7WUFDckIsVUFBVSxFQUFFLEtBQUs7WUFDakIsTUFBTSxFQUFFLEtBQUs7WUFDYixnQkFBZ0IsRUFBRSxJQUFJO1NBQ3pCLENBQUM7UUFDRixVQUFLLEdBQWlCO1lBQ2xCLEVBQUUsRUFBRSxpQkFBaUIsQ0FBQyxLQUFLO1lBQzNCLFFBQVEsRUFBRSxzQkFBc0I7WUFDaEMsVUFBVSxFQUFFLEtBQUs7WUFDakIsWUFBWSxFQUFFLElBQUk7WUFDbEIsY0FBYyxFQUFFLElBQUk7WUFDcEIsVUFBVSxFQUFFLElBQUk7WUFDaEIsTUFBTSxFQUFFLElBQUk7WUFDWixnQkFBZ0IsRUFBRSxJQUFJO1NBQ3pCLENBQUM7UUFDRixXQUFNLEdBQWlCO1lBQ25CLEVBQUUsRUFBRSxpQkFBaUIsQ0FBQyxNQUFNO1lBQzVCLFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsVUFBVSxFQUFFLEtBQUs7WUFDakIsWUFBWSxFQUFFLElBQUk7WUFDbEIsY0FBYyxFQUFFLEtBQUs7WUFDckIsVUFBVSxFQUFFLElBQUk7WUFDaEIsTUFBTSxFQUFFLElBQUk7WUFDWixnQkFBZ0IsRUFBRSxLQUFLO1NBQzFCLENBQUM7SUFDTixDQUFDO0lBQUQseUJBQUM7QUFBRCxDQXpDQSxBQXlDQyxJQUFBO0FBekNZLGdEQUFrQjs7Ozs7OztBQ3pCL0IsT0FBTyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQyxZQUFZLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0FBRWpFLDJCQUF5QjtBQUN6QiwwQkFBd0I7QUFDeEIsNEJBQTBCO0FBQzFCLGtDQUFnQztBQUNoQyw4QkFBNEI7QUFFNUIsc0NBQWlDOzs7O0FDTmpDO0lBQUE7SUFLQSxDQUFDO0lBQUQsYUFBQztBQUFELENBTEEsQUFLQyxJQUFBO0FBRUQsSUFBTSxZQUFZLEdBQWtCO0lBQ2hDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLElBQUksRUFBRSxVQUFVO0lBQ2hCLFFBQVEsRUFBRSxjQUFjO0lBQ3hCLGNBQWMsRUFBRSxnQkFBZ0I7SUFDaEMsV0FBVyxFQUFFLGtCQUFrQjtJQUMvQixNQUFNLEVBQUUsZ0JBQWdCO0lBQ3hCLFdBQVcsRUFBRSxrQkFBa0I7SUFDL0IsVUFBVSxFQUFFLGNBQWM7Q0FDN0IsQ0FBQTtBQUVEO0lBQUE7SUFXQSxDQUFDO0lBQUQsa0JBQUM7QUFBRCxDQVhBLEFBV0MsSUFBQTtBQUVEO0lBMEJJLGlDQUNJLFFBQTZCLEVBQzdCLFNBQW1DLEVBQ25DLElBQW9CLEVBQ3BCLFVBQWdDLEVBQ2hDLFFBQWlDLEVBQ2pDLFFBQTRCLEVBQzVCLFdBQWdCO1FBRWhCLFVBQVUsQ0FBQztRQUVYLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFTywwQ0FBUSxHQUFoQjtRQUNJLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQTZCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNsSCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNqQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO1FBQzdDLENBQUM7UUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2xELENBQUM7UUFFRCxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxFQUFFLENBQUMsR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUM7SUFDdEYsQ0FBQztJQUVPLDBDQUFRLEdBQWhCLFVBQWlCLFFBQWlDO1FBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQThCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNuSCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO0lBQzFFLENBQUM7SUFFTyw4Q0FBWSxHQUFwQjtRQUNJLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQW1DLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNwSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNyQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUM3QyxJQUFJLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQ3pFLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixJQUFJLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQ3hFLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQztJQUVNLDRDQUFVLEdBQWpCO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDN0IsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzNDLENBQUM7SUFDTCxDQUFDO0lBQUEsQ0FBQztJQUVLLDZDQUFXLEdBQWxCLFVBQW1CLEtBQWE7UUFDNUIsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLElBQUksQ0FBQyxXQUFXLElBQUksS0FBSyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUFBLENBQUM7SUFFSywwQ0FBUSxHQUFmLFVBQWdCLEtBQWE7UUFBN0IsaUJBVUM7UUFURyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFBQyxNQUFNLENBQUM7UUFDOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDbEcsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNWLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUNkLEtBQUksQ0FBQyxNQUFNLENBQUMsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQy9ELENBQUM7UUFDTCxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFVixDQUFDO0lBQUEsQ0FBQztJQUVLLDRDQUFVLEdBQWpCO1FBQ0ksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDakMsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQy9DLENBQUM7SUFDTCxDQUFDO0lBQUEsQ0FBQztJQUVLLHNDQUFJLEdBQVg7UUFDSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUIsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUMzQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDekMsQ0FBQztJQUNMLENBQUM7SUFBQSxDQUFDO0lBRUssMkNBQVMsR0FBaEIsVUFBaUIsS0FBVTtRQUN2QixFQUFFLENBQUMsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDO1lBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNoQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztZQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDekIsS0FBSyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN2QyxNQUFNLENBQUMsS0FBSyxJQUFJLEdBQUcsSUFBSSxLQUFLLElBQUksTUFBTSxDQUFDO0lBQzNDLENBQUM7SUFFTSw0Q0FBVSxHQUFqQixVQUFrQixPQUFvQjtRQUF0QyxpQkFvREM7UUFuREcsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1lBQ3pCLENBQUM7UUFDTCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsWUFBWSxJQUFJLENBQUMsQ0FBQztZQUN6RCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssT0FBTyxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO2dCQUMxRSxJQUFJLENBQUMsUUFBUSxDQUFDO29CQUNWLElBQUksQ0FBQyxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7b0JBQzdDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNaLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxLQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7b0JBQ2hFLENBQUM7b0JBQ0QsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUU7d0JBQ2IsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzt3QkFDNUQsS0FBSSxDQUFDLFFBQVEsQ0FBQzs0QkFDVixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO3dCQUNoRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBQ1gsQ0FBQyxDQUFDLENBQUM7Z0JBQ1AsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2IsQ0FBQztRQUNMLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDcEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFDcEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQztZQUN4RCxDQUFDO1FBQ0wsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQTtRQUM3SCxDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksS0FBSyxTQUFTLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RFLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7WUFDbkIsQ0FBQztRQUNMLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7WUFDdEMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3hCLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLElBQUksT0FBTyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsYUFBYSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDM0UsSUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDakQsRUFBRSxFQUFFLElBQUksQ0FBQyxhQUFhO2FBQ3pCLENBQUMsQ0FBQyxDQUFDO1lBQ0osRUFBRSxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ1osSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUM7WUFDdEcsQ0FBQztZQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xELElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDekIsQ0FBQztRQUNMLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ3RHLENBQUM7SUFDTCxDQUFDO0lBRUwsOEJBQUM7QUFBRCxDQS9LQSxBQStLQyxJQUFBO0FBRUQsSUFBTSxJQUFJLEdBQXlCO0lBQy9CLFFBQVEsRUFBRSxZQUFZO0lBQ3RCLFdBQVcsRUFBRSxnQkFBZ0I7SUFDN0IsVUFBVSxFQUFFLHVCQUF1QjtDQUN0QyxDQUFBO0FBRUQsT0FBTztLQUNGLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0tBQ3ZDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7O0FDMU5oQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImV4cG9ydCBsZXQgQWN0aW9uc0NoYW5nZWRFdmVudCA9ICdwaXBBY3Rpb25zQ2hhbmdlZCc7XHJcbmV4cG9ydCBsZXQgU2Vjb25kYXJ5QWN0aW9uc09wZW5FdmVudCA9ICdwaXBTZWNvbmRhcnlBY3Rpb25zT3Blbic7XHJcblxyXG5leHBvcnQgY2xhc3MgU2ltcGxlQWN0aW9uSXRlbSB7XHJcbiAgICAvLyBOYW1lIHRvIHJlZmVyIHRvIHRoZSBpdGVtXHJcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gICAgLy8gTGluayB2aXNpYmxlIHRpdGxlXHJcbiAgICBwdWJsaWMgdGl0bGU/OiBzdHJpbmc7XHJcbiAgICAvLyBTaG93IGRpdmlkZXIgaW5zdGVhZCBvZiB0aXRsZVxyXG4gICAgcHVibGljIGRpdmlkZXI/OiBib29sZWFuO1xyXG4gICAgLy8gSWNvbiBuYW1lIGZyb20gJGljb25Qcm92aWRlclxyXG4gICAgcHVibGljIGljb24/OiBzdHJpbmc7XHJcbiAgICAvLyBDb3VudGVyIGJhZGdlXHJcbiAgICBwdWJsaWMgY291bnQ/OiBudW1iZXI7XHJcbiAgICAvLyBBY2Nlc3MgZnVuY3Rpb25cclxuICAgIHB1YmxpYyBhY2Nlc3M/OiAoYWN0aW9uOiBTaW1wbGVBY3Rpb25JdGVtKSA9PiBib29sZWFuO1xyXG4gICAgLy8gU2hvdyBvbiBzcGVjaWZpZWQgYnJlYWtwb2ludHNcclxuICAgIHB1YmxpYyBicmVha3BvaW50cz86IHN0cmluZ1tdO1xyXG4gICAgLy8gd2luZG93LmxvY2F0aW9uLmhyZWZcclxuICAgIHB1YmxpYyBocmVmPzogc3RyaW5nO1xyXG4gICAgLy8gJGxvY2F0aW9uLnVybFxyXG4gICAgcHVibGljIHVybD86IHN0cmluZztcclxuICAgIC8vICRzdGF0ZS5nbyhzdGF0ZSwgc3RhdGVQYXJhbXMpXHJcbiAgICBwdWJsaWMgc3RhdGU/OiBzdHJpbmc7XHJcbiAgICAvLyBQYXJhbWV0ZXJzIGZvciAkc3RhdGUuZ28oc3RhdGUsIHN0YXRlUGFyYW1zKVxyXG4gICAgcHVibGljIHN0YXRlUGFyYW1zPzogYW55O1xyXG4gICAgLy8gJHJvb3RTY29wZS5icm9hZGNhc3QoZXZlbnQpXHJcbiAgICBwdWJsaWMgZXZlbnQ/OiBzdHJpbmc7XHJcbiAgICAvLyBDbGljayBjYWxsYmFja1xyXG4gICAgcHVibGljIGNsaWNrPzogKGFjdGlvbjogU2ltcGxlQWN0aW9uSXRlbSkgPT4gdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEFjdGlvbkl0ZW0gZXh0ZW5kcyBTaW1wbGVBY3Rpb25JdGVtIHtcclxuICAgIHB1YmxpYyBzdWJBY3Rpb25zOiBTaW1wbGVBY3Rpb25JdGVtW107XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBBY3Rpb25zQ29uZmlnIHtcclxuICAgIC8vIFByaW1hcnkgZ2xvYmFsIGFjdGlvbnMgdmlzaWJsZSBvbiB0aGUgc2NyZWVuXHJcbiAgICBwdWJsaWMgcHJpbWFyeUdsb2JhbEFjdGlvbnM6IEFjdGlvbkl0ZW1bXSA9IFtdO1xyXG4gICAgLy8gUHJpbWFyeSBsb2NhbCBhY3Rpb25zIHZpc2libGUgb24gdGhlIHNjcmVlblxyXG4gICAgcHVibGljIHByaW1hcnlMb2NhbEFjdGlvbnM6IEFjdGlvbkl0ZW1bXSA9IFtdO1xyXG5cclxuICAgIC8vIFNlY29uZGFyeSBnbG9iYWwgYWN0aW9ucyBhdmFpbGFibGUgaW4gcG9wdXBcclxuICAgIHB1YmxpYyBzZWNvbmRhcnlHbG9iYWxBY3Rpb25zOiBBY3Rpb25JdGVtW10gPSBbXTtcclxuICAgIC8vIFNlY29uZGFyeSBsb2NhbCBhY3Rpb25zIGF2YWlsYWJsZSBpbiBwb3B1cFxyXG4gICAgcHVibGljIHNlY29uZGFyeUxvY2FsQWN0aW9uczogQWN0aW9uSXRlbVtdPSBbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJQWN0aW9uc1NlcnZpY2Uge1xyXG4gICAgcmVhZG9ubHkgY29uZmlnOiBBY3Rpb25zQ29uZmlnO1xyXG5cclxuICAgIHByaW1hcnlHbG9iYWxBY3Rpb25zOiBBY3Rpb25JdGVtW107XHJcbiAgICBwcmltYXJ5TG9jYWxBY3Rpb25zOiBBY3Rpb25JdGVtW107XHJcbiAgICBzZWNvbmRhcnlHbG9iYWxBY3Rpb25zOiBBY3Rpb25JdGVtW107XHJcbiAgICBzZWNvbmRhcnlMb2NhbEFjdGlvbnM6IEFjdGlvbkl0ZW1bXTsgICAgXHJcblxyXG4gICAgc2hvdyhwcmltYXJ5QWN0aW9ucz86IEFjdGlvbkl0ZW1bXSwgc2Vjb25kYXJ5QWN0aW9ucz86IEFjdGlvbkl0ZW1bXSk6IHZvaWQ7XHJcbiAgICBoaWRlKCk6IHZvaWQ7XHJcbiAgICB1cGRhdGVDb3VudChsaW5rOiBzdHJpbmcsIGNvdW50OiBudW1iZXIpOiB2b2lkOyBcclxuICAgIGNsZWFyQ291bnRzKCk6IHZvaWQ7XHJcbiAgICBvcGVuTWVudUV2ZW50KCk6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUFjdGlvbnNQcm92aWRlciBleHRlbmRzIG5nLklTZXJ2aWNlUHJvdmlkZXIge1xyXG4gICAgY29uZmlnOiBBY3Rpb25zQ29uZmlnO1xyXG4gICAgXHJcbiAgICBwcmltYXJ5R2xvYmFsQWN0aW9uczogQWN0aW9uSXRlbVtdO1xyXG4gICAgcHJpbWFyeUxvY2FsQWN0aW9uczogQWN0aW9uSXRlbVtdO1xyXG4gICAgc2Vjb25kYXJ5R2xvYmFsQWN0aW9uczogQWN0aW9uSXRlbVtdO1xyXG4gICAgc2Vjb25kYXJ5TG9jYWxBY3Rpb25zOiBBY3Rpb25JdGVtW107ICAgIFxyXG59XHJcblxyXG5jbGFzcyBBY3Rpb25zU2VydmljZSBpbXBsZW1lbnRzIElBY3Rpb25zU2VydmljZSB7XHJcbiAgICBwcml2YXRlIF9jb25maWc6IEFjdGlvbnNDb25maWc7XHJcbiAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihcclxuICAgICAgICBjb25maWc6IEFjdGlvbnNDb25maWcsXHJcbiAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2VcclxuICAgICkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuICAgICAgICB0aGlzLl9yb290U2NvcGUgPSAkcm9vdFNjb3BlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgY29uZmlnKCk6IEFjdGlvbnNDb25maWcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWc7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBwcmltYXJ5R2xvYmFsQWN0aW9ucygpOiBBY3Rpb25JdGVtW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcucHJpbWFyeUdsb2JhbEFjdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBwcmltYXJ5R2xvYmFsQWN0aW9ucyh2YWx1ZTogQWN0aW9uSXRlbVtdKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnByaW1hcnlHbG9iYWxBY3Rpb25zID0gdmFsdWUgfHwgW107XHJcbiAgICAgICAgdGhpcy5zZW5kQ2hhbmdlRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IHNlY29uZGFyeUdsb2JhbEFjdGlvbnMoKTogQWN0aW9uSXRlbVtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnNlY29uZGFyeUdsb2JhbEFjdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBzZWNvbmRhcnlHbG9iYWxBY3Rpb25zKHZhbHVlOiBBY3Rpb25JdGVtW10pIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuc2Vjb25kYXJ5R2xvYmFsQWN0aW9ucyA9IHZhbHVlIHx8IFtdO1xyXG4gICAgICAgIHRoaXMuc2VuZENoYW5nZUV2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBwcmltYXJ5TG9jYWxBY3Rpb25zKCk6IEFjdGlvbkl0ZW1bXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5wcmltYXJ5TG9jYWxBY3Rpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgcHJpbWFyeUxvY2FsQWN0aW9ucyh2YWx1ZTogQWN0aW9uSXRlbVtdKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnByaW1hcnlMb2NhbEFjdGlvbnMgPSB2YWx1ZSB8fCBbXTtcclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgc2Vjb25kYXJ5TG9jYWxBY3Rpb25zKCk6IEFjdGlvbkl0ZW1bXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5zZWNvbmRhcnlMb2NhbEFjdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBzZWNvbmRhcnlMb2NhbEFjdGlvbnModmFsdWU6IEFjdGlvbkl0ZW1bXSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5zZWNvbmRhcnlMb2NhbEFjdGlvbnMgPSB2YWx1ZSB8fCBbXTtcclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzaG93KHByaW1hcnlBY3Rpb25zPzogQWN0aW9uSXRlbVtdLCBzZWNvbmRhcnlBY3Rpb25zPzogQWN0aW9uSXRlbVtdKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnByaW1hcnlMb2NhbEFjdGlvbnMgPSBwcmltYXJ5QWN0aW9ucyB8fCBbXTtcclxuICAgICAgICB0aGlzLl9jb25maWcuc2Vjb25kYXJ5TG9jYWxBY3Rpb25zID0gc2Vjb25kYXJ5QWN0aW9ucyB8fCBbXTtcclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBoaWRlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wcmltYXJ5TG9jYWxBY3Rpb25zID0gW107XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnNlY29uZGFyeUxvY2FsQWN0aW9ucyA9IFtdO1xyXG4gICAgICAgIHRoaXMuc2VuZENoYW5nZUV2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZUNvdW50KGFjdGlvbjogc3RyaW5nLCBjb3VudDogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKGFjdGlvbiA9PSBudWxsIHx8ICFfLmlzTnVtYmVyKGNvdW50KSkgcmV0dXJuO1xyXG5cclxuICAgICAgICBfLmVhY2godGhpcy5fY29uZmlnLnByaW1hcnlHbG9iYWxBY3Rpb25zLCAoYSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoYS5uYW1lID09IGFjdGlvbilcclxuICAgICAgICAgICAgICAgIGEuY291bnQgPSBjb3VudDtcclxuICAgICAgICB9KTtcclxuICAgICAgICBfLmVhY2godGhpcy5fY29uZmlnLnByaW1hcnlMb2NhbEFjdGlvbnMsIChhKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChhLm5hbWUgPT0gYWN0aW9uKVxyXG4gICAgICAgICAgICAgICAgYS5jb3VudCA9IGNvdW50O1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGVhckNvdW50cygpOiB2b2lkIHtcclxuICAgICAgICBfLmVhY2godGhpcy5fY29uZmlnLnByaW1hcnlHbG9iYWxBY3Rpb25zLCAoYSkgPT4ge1xyXG4gICAgICAgICAgICBhLmNvdW50ID0gbnVsbDtcclxuICAgICAgICB9KTtcclxuICAgICAgICBfLmVhY2godGhpcy5fY29uZmlnLnByaW1hcnlMb2NhbEFjdGlvbnMsIChhKSA9PiB7XHJcbiAgICAgICAgICAgIGEuY291bnQgPSBudWxsO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc2VuZENoYW5nZUV2ZW50KCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kZW1pdChBY3Rpb25zQ2hhbmdlZEV2ZW50LCB0aGlzLl9jb25maWcpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvcGVuTWVudUV2ZW50KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kZW1pdChTZWNvbmRhcnlBY3Rpb25zT3BlbkV2ZW50KTtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgQWN0aW9uc1Byb3ZpZGVyIGltcGxlbWVudHMgSUFjdGlvbnNQcm92aWRlciB7XHJcbiAgICBwcml2YXRlIF9jb25maWc6IEFjdGlvbnNDb25maWcgPSBuZXcgQWN0aW9uc0NvbmZpZygpO1xyXG4gICAgcHJpdmF0ZSBfc2VydmljZTogQWN0aW9uc1NlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIGdldCBjb25maWcoKTogQWN0aW9uc0NvbmZpZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IGNvbmZpZyh2YWx1ZTogQWN0aW9uc0NvbmZpZykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IHZhbHVlIHx8IG5ldyBBY3Rpb25zQ29uZmlnKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBwcmltYXJ5R2xvYmFsQWN0aW9ucygpOiBBY3Rpb25JdGVtW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcucHJpbWFyeUdsb2JhbEFjdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBwcmltYXJ5R2xvYmFsQWN0aW9ucyh2YWx1ZTogQWN0aW9uSXRlbVtdKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnByaW1hcnlHbG9iYWxBY3Rpb25zID0gdmFsdWUgfHwgW107XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBzZWNvbmRhcnlHbG9iYWxBY3Rpb25zKCk6IEFjdGlvbkl0ZW1bXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5zZWNvbmRhcnlHbG9iYWxBY3Rpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgc2Vjb25kYXJ5R2xvYmFsQWN0aW9ucyh2YWx1ZTogQWN0aW9uSXRlbVtdKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnNlY29uZGFyeUdsb2JhbEFjdGlvbnMgPSB2YWx1ZSB8fCBbXTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IHByaW1hcnlMb2NhbEFjdGlvbnMoKTogQWN0aW9uSXRlbVtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnByaW1hcnlMb2NhbEFjdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBwcmltYXJ5TG9jYWxBY3Rpb25zKHZhbHVlOiBBY3Rpb25JdGVtW10pIHtcclxuICAgICAgICB0aGlzLl9jb25maWcucHJpbWFyeUxvY2FsQWN0aW9ucyA9IHZhbHVlIHx8IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgc2Vjb25kYXJ5TG9jYWxBY3Rpb25zKCk6IEFjdGlvbkl0ZW1bXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5zZWNvbmRhcnlMb2NhbEFjdGlvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBzZWNvbmRhcnlMb2NhbEFjdGlvbnModmFsdWU6IEFjdGlvbkl0ZW1bXSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5zZWNvbmRhcnlMb2NhbEFjdGlvbnMgPSB2YWx1ZSB8fCBbXTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJGdldCgkcm9vdFNjb3BlKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5fc2VydmljZSA9PSBudWxsKVxyXG4gICAgICAgICAgICB0aGlzLl9zZXJ2aWNlID0gbmV3IEFjdGlvbnNTZXJ2aWNlKHRoaXMuX2NvbmZpZywgJHJvb3RTY29wZSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlcnZpY2U7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcEFjdGlvbnMnKVxyXG4gICAgLnByb3ZpZGVyKCdwaXBBY3Rpb25zJywgQWN0aW9uc1Byb3ZpZGVyKTtcclxuXHJcbiIsImltcG9ydCB7IElBY3Rpb25zU2VydmljZSwgQWN0aW9uSXRlbSwgQWN0aW9uc0NvbmZpZyB9IGZyb20gXCIuL0FjdGlvbnNTZXJ2aWNlXCI7XHJcblxyXG5jbGFzcyBQcmltYXJ5QWN0aW9uc0NvbnRyb2xsZXIge1xyXG4gICAgcHJpdmF0ZSBfZWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeTtcclxuICAgIHByaXZhdGUgX2F0dHJzOiBuZy5JQXR0cmlidXRlcztcclxuICAgIHByaXZhdGUgX2luamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9zY29wZTogYW5ndWxhci5JU2NvcGU7XHJcbiAgICBwcml2YXRlIF9sb2c6IG5nLklMb2dTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZTtcclxuICAgIHByaXZhdGUgX3dpbmRvdzogbmcuSVdpbmRvd1NlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9sb2NhdGlvbjogbmcuSUxvY2F0aW9uU2VydmljZTtcclxuICAgIHByaXZhdGUgX3BpcEFjdGlvbnM6IElBY3Rpb25zU2VydmljZTtcclxuICAgIHByaXZhdGUgX3BpcFRyYW5zbGF0ZTogcGlwLnNlcnZpY2VzLklUcmFuc2xhdGVTZXJ2aWNlXHJcblxyXG4gICAgcHVibGljIGNvbmZpZzogQWN0aW9uc0NvbmZpZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICAkZWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeSxcclxuICAgICAgICAkYXR0cnM6IG5nLklBdHRyaWJ1dGVzLFxyXG4gICAgICAgICRpbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlLFxyXG4gICAgICAgICRzY29wZTogYW5ndWxhci5JU2NvcGUsXHJcbiAgICAgICAgJGxvZzogbmcuSUxvZ1NlcnZpY2UsXHJcbiAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgJHdpbmRvdzogbmcuSVdpbmRvd1NlcnZpY2UsXHJcbiAgICAgICAgJGxvY2F0aW9uOiBuZy5JTG9jYXRpb25TZXJ2aWNlLFxyXG4gICAgICAgIHBpcEFjdGlvbnM6IElBY3Rpb25zU2VydmljZVxyXG5cclxuICAgICkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9ICRlbGVtZW50O1xyXG4gICAgICAgIHRoaXMuX2F0dHJzID0gJGF0dHJzO1xyXG4gICAgICAgIHRoaXMuX3Njb3BlID0gJHNjb3BlO1xyXG4gICAgICAgIHRoaXMuX2luamVjdG9yID0gJGluamVjdG9yO1xyXG4gICAgICAgIHRoaXMuX2xvZyA9ICRsb2c7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgICAgICB0aGlzLl93aW5kb3cgPSAkd2luZG93O1xyXG4gICAgICAgIHRoaXMuX2xvY2F0aW9uID0gJGxvY2F0aW9uO1xyXG4gICAgICAgIHRoaXMuX3BpcEFjdGlvbnMgPSBwaXBBY3Rpb25zO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5fcGlwVHJhbnNsYXRlID0gdGhpcy5faW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGUnKSA/IDxwaXAuc2VydmljZXMuSVRyYW5zbGF0ZVNlcnZpY2U+dGhpcy5faW5qZWN0b3IuZ2V0KCdwaXBUcmFuc2xhdGUnKSA6IG51bGw7XHJcbiAgICAgICAgaWYgKHRoaXMuX3BpcFRyYW5zbGF0ZSAmJiB0aGlzLl9waXBUcmFuc2xhdGUuc2V0VHJhbnNsYXRpb25zKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3BpcFRyYW5zbGF0ZS5zZXRUcmFuc2xhdGlvbnMoJ2VuJywge1xyXG4gICAgICAgICAgICAgICAgRE9DVU1FTlRTX0FUVEFDSEVEOiAnZG9jdW1lbnQocykgYXR0YWNoZWQnLFxyXG4gICAgICAgICAgICAgICAgRVJST1JfRE9DVU1FTlRTX0xPQURFRDogJ0Vycm9yOiA8JT0gZXJyb3JfbnVtYmVyICU+IGRvY3VtZW50KHMpIGFyZSBub3QgbG9hZGVkJ1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5fcGlwVHJhbnNsYXRlLnNldFRyYW5zbGF0aW9ucygncnUnLCB7XHJcbiAgICAgICAgICAgICAgICBET0NVTUVOVFNfQVRUQUNIRUQ6ICfQtNC+0LrRg9C80LXQvdGC0L7QsiDQtNC+0LHQsNCy0LvQtdC90L4nLFxyXG4gICAgICAgICAgICAgICAgRVJST1JfRE9DVU1FTlRTX0xPQURFRDogJ9Ce0YjQuNCx0LrQsDogPCU9IGVycm9yX251bWJlciAlPiDQtNC+0LrRg9C80LXQvdGCKNC+0LIpINC90LUg0LfQsNCz0YDRg9C20LXQvdC+J1xyXG5cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBBcHBseSBjbGFzcyBhbmQgY2FsbCByZXNpemVcclxuICAgICAgICB0aGlzLl9lbGVtZW50LmFkZENsYXNzKCdwaXAtcHJpbWFyeS1hY3Rpb25zJyk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9zY29wZS5sb2NhbEFjdGlvbnMpIHtcclxuICAgICAgICAgICAgcGlwQWN0aW9ucy5wcmltYXJ5TG9jYWxBY3Rpb25zID0gdGhpcy5fc2NvcGUubG9jYWxBY3Rpb25zO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX3Njb3BlLmdsb2JhbEFjdGlvbnMpIHtcclxuICAgICAgICAgICAgcGlwQWN0aW9ucy5wcmltYXJ5R2xvYmFsQWN0aW9ucyA9IHRoaXMuX3Njb3BlLmdsb2JhbEFjdGlvbnM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmNvbmZpZyA9IHBpcEFjdGlvbnMuY29uZmlnO1xyXG5cclxuICAgICAgICB0aGlzLl9yb290U2NvcGUuJG9uKCdwaXBBY3Rpb25zQ2hhbmdlZCcsIChldmVudDogbmcuSUFuZ3VsYXJFdmVudCwgY29uZmlnOiBBY3Rpb25zQ29uZmlnKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMub25BY3Rpb25zQ2hhbmdlZChldmVudCwgY29uZmlnKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkFjdGlvbnNDaGFuZ2VkKGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IEFjdGlvbnNDb25maWcpIHtcclxuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaXNIaWRkZW4oYWN0aW9uOiBBY3Rpb25JdGVtKTogYm9vbGVhbiB7XHJcbiAgICAgICAgLy8gVG9kbzogQ2hlY2sgYnJlYWtwb2ludHMgaGVyZVxyXG4gICAgICAgIHJldHVybiBhY3Rpb24uYWNjZXNzICYmICFhY3Rpb24uYWNjZXNzKGFjdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFjdGlvbkNvdW50KGFjdGlvbjogQWN0aW9uSXRlbSk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKGFjdGlvbi5jb3VudCA9PT0gbnVsbCB8fCBhY3Rpb24uY291bnQgPD0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJyc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChhY3Rpb24uY291bnQgPiA5OSkge1xyXG4gICAgICAgICAgICByZXR1cm4gJyEnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIFN0cmluZyhhY3Rpb24uY291bnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGlja0FjdGlvbihhY3Rpb246IEFjdGlvbkl0ZW0sICRtZE9wZW5NZW51OiBGdW5jdGlvbik6IHZvaWQge1xyXG4gICAgICAgIGlmICghYWN0aW9uIHx8IGFjdGlvbi5kaXZpZGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChhY3Rpb24uc3ViQWN0aW9ucykge1xyXG4gICAgICAgICAgICAkbWRPcGVuTWVudSh0aGlzLl9zY29wZS5vcmlnaW5hdG9yRXYpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKGFjdGlvbi5jbGljaykpIHtcclxuICAgICAgICAgICAgYWN0aW9uLmNsaWNrKGFjdGlvbik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChhY3Rpb24uaHJlZikge1xyXG4gICAgICAgICAgICB0aGlzLl93aW5kb3cubG9jYXRpb24uaHJlZiA9IGFjdGlvbi5ocmVmO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoYWN0aW9uLnVybCkge1xyXG4gICAgICAgICAgICB0aGlzLl9sb2NhdGlvbi51cmwoYWN0aW9uLnVybCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChhY3Rpb24uc3RhdGUpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2luamVjdG9yLmhhcygndGhpcy5fc3RhdGUnKSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IF9zdGF0ZTogYW5ndWxhci51aS5JU3RhdGVTZXJ2aWNlID0gdGhpcy5faW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGUnKSA/IDxhbmd1bGFyLnVpLklTdGF0ZVNlcnZpY2U+dGhpcy5faW5qZWN0b3IuZ2V0KCckc3RhdGUnKSA6IG51bGwgO1xyXG4gICAgICAgICAgICAgICAgaWYgKF9zdGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIF9zdGF0ZS5nbyhhY3Rpb24uc3RhdGUsIGFjdGlvbi5zdGF0ZVBhcmFtcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGFjdGlvbi5ldmVudCkge1xyXG4gICAgICAgICAgICB0aGlzLl9yb290U2NvcGUuJGJyb2FkY2FzdChhY3Rpb24uZXZlbnQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIE90aGVyd2lzZSByYWlzZSBub3RpZmljYXRpb25cclxuICAgICAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoJ3BpcEFjdGlvbkNsaWNrZWQnLCBhY3Rpb24ubmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuKCgpID0+IHtcclxuICAgIGZ1bmN0aW9uIHByaW1hcnlBY3Rpb25zRGlyZWN0aXZlKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgICAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgICAgICAgICBsb2NhbEFjdGlvbnM6ICc9cGlwTG9jYWxBY3Rpb25zJyxcclxuICAgICAgICAgICAgICAgIGdsb2JhbEFjdGlvbnM6ICc9cGlwR2xvYmFsQWN0aW9ucydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcmVwbGFjZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYWN0aW9ucy9QcmltYXJ5QWN0aW9ucy5odG1sJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogUHJpbWFyeUFjdGlvbnNDb250cm9sbGVyLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICckY3RybCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZSgncGlwQWN0aW9ucycpXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwUHJpbWFyeUFjdGlvbnMnLCBwcmltYXJ5QWN0aW9uc0RpcmVjdGl2ZSk7XHJcblxyXG59KSgpOyIsImltcG9ydCB7IElBY3Rpb25zU2VydmljZSwgQWN0aW9uSXRlbSwgQWN0aW9uc0NvbmZpZyB9IGZyb20gXCIuL0FjdGlvbnNTZXJ2aWNlXCI7XHJcblxyXG5jbGFzcyBTZWNvbmRhcnlBY3Rpb25zQ29udHJvbGxlciB7XHJcbiAgICBwcml2YXRlIF9lbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5O1xyXG4gICAgcHJpdmF0ZSBfYXR0cnM6IG5nLklBdHRyaWJ1dGVzO1xyXG4gICAgcHJpdmF0ZSBfaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZTtcclxuICAgIHByaXZhdGUgX3Njb3BlOiBhbmd1bGFyLklTY29wZTtcclxuICAgIHByaXZhdGUgX2xvZzogbmcuSUxvZ1NlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfd2luZG93OiBuZy5JV2luZG93U2VydmljZTtcclxuICAgIHByaXZhdGUgX2xvY2F0aW9uOiBuZy5JTG9jYXRpb25TZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfcGlwQWN0aW9uczogSUFjdGlvbnNTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfcGlwVHJhbnNsYXRlOiBwaXAuc2VydmljZXMuSVRyYW5zbGF0ZVNlcnZpY2VcclxuICAgIHByaXZhdGUgX21lbnVGbjogRnVuY3Rpb247XHJcbiAgICBwdWJsaWMgY29uZmlnOiBBY3Rpb25zQ29uZmlnO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICRhdHRyczogbmcuSUF0dHJpYnV0ZXMsXHJcbiAgICAgICAgJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UsXHJcbiAgICAgICAgJHNjb3BlOiBhbmd1bGFyLklTY29wZSxcclxuICAgICAgICAkbG9nOiBuZy5JTG9nU2VydmljZSxcclxuICAgICAgICAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSxcclxuICAgICAgICAkd2luZG93OiBuZy5JV2luZG93U2VydmljZSxcclxuICAgICAgICAkbG9jYXRpb246IG5nLklMb2NhdGlvblNlcnZpY2UsXHJcbiAgICAgICAgcGlwQWN0aW9uczogSUFjdGlvbnNTZXJ2aWNlXHJcbiAgICApIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSAkZWxlbWVudDtcclxuICAgICAgICB0aGlzLl9hdHRycyA9ICRhdHRycztcclxuICAgICAgICB0aGlzLl9zY29wZSA9ICRzY29wZTtcclxuICAgICAgICB0aGlzLl9pbmplY3RvciA9ICRpbmplY3RvcjtcclxuICAgICAgICB0aGlzLl9sb2cgPSAkbG9nO1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZSA9ICRyb290U2NvcGU7XHJcbiAgICAgICAgdGhpcy5fd2luZG93ID0gJHdpbmRvdztcclxuICAgICAgICB0aGlzLl9sb2NhdGlvbiA9ICRsb2NhdGlvbjtcclxuICAgICAgICB0aGlzLl9waXBBY3Rpb25zID0gcGlwQWN0aW9ucztcclxuXHJcbiAgICAgICAgLy8gQXBwbHkgY2xhc3MgYW5kIGNhbGwgcmVzaXplXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5hZGRDbGFzcygncGlwLXNlY29uZGFyeS1hY3Rpb25zJyk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9zY29wZS5sb2NhbEFjdGlvbnMpIHtcclxuICAgICAgICAgICAgcGlwQWN0aW9ucy5zZWNvbmRhcnlMb2NhbEFjdGlvbnMgPSB0aGlzLl9zY29wZS5sb2NhbEFjdGlvbnM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5fc2NvcGUuZ2xvYmFsQWN0aW9ucykge1xyXG4gICAgICAgICAgICBwaXBBY3Rpb25zLnNlY29uZGFyeUdsb2JhbEFjdGlvbnMgPSB0aGlzLl9zY29wZS5nbG9iYWxBY3Rpb25zO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5jb25maWcgPSBwaXBBY3Rpb25zLmNvbmZpZztcclxuXHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRvbigncGlwQWN0aW9uc0NoYW5nZWQnLCAoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogQWN0aW9uc0NvbmZpZykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uQWN0aW9uc0NoYW5nZWQoZXZlbnQsIGNvbmZpZyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kb24oJ3BpcFNlY29uZGFyeUFjdGlvbnNPcGVuJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uQWN0aW9uc01lbnVPcGVuKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRNZW51KG1lbnVGbjogRnVuY3Rpb24pOiB2b2lkIHtcclxuICAgICAgICAgdGhpcy5fbWVudUZuID0gbWVudUZuO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbkFjdGlvbnNNZW51T3BlbigpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9tZW51Rm4oKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb3Blbk1lbnUoJG1kT3Blbk1lbnU6IEZ1bmN0aW9uLCBldjogbmcuSUFuZ3VsYXJFdmVudCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX3Njb3BlLm9yaWdpbmF0b3JFdiA9IGV2O1xyXG4gICAgICAgICRtZE9wZW5NZW51KGV2KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uQWN0aW9uc0NoYW5nZWQoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogQWN0aW9uc0NvbmZpZykge1xyXG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpc0hpZGRlbihhY3Rpb246IEFjdGlvbkl0ZW0pOiBib29sZWFuIHtcclxuICAgICAgICAvLyBUb2RvOiBDaGVjayBicmVha3BvaW50cyBoZXJlXHJcbiAgICAgICAgcmV0dXJuIGFjdGlvbi5hY2Nlc3MgJiYgIWFjdGlvbi5hY2Nlc3MoYWN0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYWN0aW9uQ291bnQoYWN0aW9uOiBBY3Rpb25JdGVtKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoYWN0aW9uLmNvdW50ID09PSBudWxsIHx8IGFjdGlvbi5jb3VudCA8PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGFjdGlvbi5jb3VudCA+IDk5KSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnISc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gU3RyaW5nKGFjdGlvbi5jb3VudCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHByaXZhdGUgY2FsY0FjdGlvbnMoYWN0aW9uczogQWN0aW9uSXRlbVtdKTogbnVtYmVyIHtcclxuICAgICAgICBsZXQgY291bnQ6IG51bWJlciA9IDA7XHJcblxyXG4gICAgICAgIF8uZWFjaChhY3Rpb25zLCAoYWN0aW9uOiBBY3Rpb25JdGVtKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5pc0hpZGRlbihhY3Rpb24pKSB7XHJcbiAgICAgICAgICAgICAgICBjb3VudCsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBjb3VudDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2Vjb25kYXJ5QWN0aW9uc1Zpc2libGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FsY0FjdGlvbnModGhpcy5jb25maWcuc2Vjb25kYXJ5R2xvYmFsQWN0aW9ucykgPiAwIHx8XHJcbiAgICAgICAgICAgIHRoaXMuY2FsY0FjdGlvbnModGhpcy5jb25maWcuc2Vjb25kYXJ5TG9jYWxBY3Rpb25zKSA+IDA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNlY29uZGFyeURpdmlkZXJWaXNpYmxlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNhbGNBY3Rpb25zKHRoaXMuY29uZmlnLnNlY29uZGFyeUdsb2JhbEFjdGlvbnMpID4gMCAmJlxyXG4gICAgICAgICAgICB0aGlzLmNhbGNBY3Rpb25zKHRoaXMuY29uZmlnLnNlY29uZGFyeUxvY2FsQWN0aW9ucykgPiAwO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGlja0FjdGlvbihhY3Rpb246IEFjdGlvbkl0ZW0sICRtZE9wZW5NZW51OiBGdW5jdGlvbik6IHZvaWQge1xyXG4gICAgICAgIGlmICghYWN0aW9uIHx8IGFjdGlvbi5kaXZpZGVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIHRvZG86IGRvIG5vdCBzdXBwb3J0ZWQgaW50byBBY3Rpb25JdGVtXHJcbiAgICAgICAgLy8gaWYgKGFjdGlvbi5jbG9zZSkge1xyXG4gICAgICAgIC8vICAgICB0aGlzLl9zY29wZS5vcmlnaW5hdG9yRXYgPSBudWxsO1xyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgaWYgKGFjdGlvbi5zdWJBY3Rpb25zKSB7XHJcbiAgICAgICAgICAgICRtZE9wZW5NZW51KHRoaXMuX3Njb3BlLm9yaWdpbmF0b3JFdik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChhY3Rpb24uY2xpY2spIHtcclxuICAgICAgICAgICAgYWN0aW9uLmNsaWNrKGFjdGlvbik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChhY3Rpb24uaHJlZikge1xyXG4gICAgICAgICAgICB0aGlzLl93aW5kb3cubG9jYXRpb24uaHJlZiA9IGFjdGlvbi5ocmVmO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoYWN0aW9uLnVybCkge1xyXG4gICAgICAgICAgICB0aGlzLl9sb2NhdGlvbi51cmwoYWN0aW9uLnVybCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChhY3Rpb24uc3RhdGUpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2luamVjdG9yLmhhcygndGhpcy5fc3RhdGUnKSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IF9zdGF0ZTogYW5ndWxhci51aS5JU3RhdGVTZXJ2aWNlID0gdGhpcy5faW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGUnKSA/IDxhbmd1bGFyLnVpLklTdGF0ZVNlcnZpY2U+dGhpcy5faW5qZWN0b3IuZ2V0KCckc3RhdGUnKSA6IG51bGw7XHJcbiAgICAgICAgICAgICAgICBpZiAoX3N0YXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgX3N0YXRlLmdvKGFjdGlvbi5zdGF0ZSwgYWN0aW9uLnN0YXRlUGFyYW1zKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoYWN0aW9uLmV2ZW50KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kYnJvYWRjYXN0KGFjdGlvbi5ldmVudCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gT3RoZXJ3aXNlIHJhaXNlIG5vdGlmaWNhdGlvblxyXG4gICAgICAgICAgICB0aGlzLl9yb290U2NvcGUuJGJyb2FkY2FzdCgncGlwQWN0aW9uQ2xpY2tlZCcsIGFjdGlvbi5uYW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4oKCkgPT4ge1xyXG4gICAgZnVuY3Rpb24gc2Vjb25kYXJ5QWN0aW9uc0RpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBzY29wZToge1xyXG4gICAgICAgICAgICAgICAgbG9jYWxBY3Rpb25zOiAnPXBpcExvY2FsQWN0aW9ucycsXHJcbiAgICAgICAgICAgICAgICBnbG9iYWxBY3Rpb25zOiAnPXBpcEdsb2JhbEFjdGlvbnMnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHJlcGxhY2U6IGZhbHNlLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2FjdGlvbnMvU2Vjb25kYXJ5QWN0aW9ucy5odG1sJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogU2Vjb25kYXJ5QWN0aW9uc0NvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJyRjdHJsJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcEFjdGlvbnMnKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcFNlY29uZGFyeUFjdGlvbnMnLCBzZWNvbmRhcnlBY3Rpb25zRGlyZWN0aXZlKTtcclxuXHJcbn0pKCk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdwaXBBY3Rpb25zJywgWyduZ01hdGVyaWFsJywgJ3BpcE5hdi5UZW1wbGF0ZXMnLCAndWkucm91dGVyJ10pO1xyXG5cclxuaW1wb3J0ICcuL0FjdGlvbnNTZXJ2aWNlJztcclxuaW1wb3J0ICcuL1ByaW1hcnlBY3Rpb25zRGlyZWN0aXZlJztcclxuaW1wb3J0ICcuL1NlY29uZGFyeUFjdGlvbnNEaXJlY3RpdmUnO1xyXG5cclxuZXhwb3J0ICogZnJvbSAnLi9BY3Rpb25zU2VydmljZSc7Iiwi77u/aW1wb3J0IHsgSUFwcEJhclNlcnZpY2UsIEFwcEJhckNvbmZpZyB9IGZyb20gXCIuL0FwcEJhclNlcnZpY2VcIjtcclxuXHJcbmNsYXNzIEFwcEJhckRpcmVjdGl2ZUNvbnRyb2xsZXIge1xyXG4gICAgcHVibGljIGNvbmZpZzogQXBwQmFyQ29uZmlnO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICRzY29wZTogYW5ndWxhci5JU2NvcGUsXHJcbiAgICAgICAgJGxvZzogbmcuSUxvZ1NlcnZpY2UsXHJcbiAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgcGlwQXBwQmFyOiBJQXBwQmFyU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG4gICAgICAgIC8vIEFwcGx5IGNsYXNzIGFuZCBjYWxsIHJlc2l6ZVxyXG4gICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtYXBwYmFyJyk7XHJcbiAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ2NvbG9yLXByaW1hcnktYmcnKTtcclxuXHJcbiAgICAgICAgJHNjb3BlLmNvbmZpZyA9IHBpcEFwcEJhci5jb25maWc7XHJcblxyXG4gICAgICAgICRyb290U2NvcGUuJG9uKCdwaXBBcHBCYXJDaGFuZ2VkJywgKGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IEFwcEJhckNvbmZpZykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uQXBwQmFyQ2hhbmdlZChldmVudCwgY29uZmlnKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbkFwcEJhckNoYW5nZWQoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogQXBwQmFyQ29uZmlnKSB7XHJcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuKCgpID0+IHtcclxuICAgIGZ1bmN0aW9uIGFwcGJhckRpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICB0cmFuc2NsdWRlOiB0cnVlLFxyXG4gICAgICAgICAgICBzY29wZTogdHJ1ZSxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdhcHBiYXIvQXBwQmFyLmh0bWwnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBBcHBCYXJEaXJlY3RpdmVDb250cm9sbGVyLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICckY3RybCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXJcclxuICAgICAgICAubW9kdWxlKCdwaXBBcHBCYXInKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcEFwcGJhcicsIGFwcGJhckRpcmVjdGl2ZSk7XHJcblxyXG59KSgpOyIsImltcG9ydCB7IEFwcEJhckNvbmZpZywgSUFwcEJhclNlcnZpY2UgfSBmcm9tIFwiLi9BcHBCYXJTZXJ2aWNlXCI7XHJcblxyXG5jbGFzcyBBcHBCYXJQYXJ0RGlyZWN0aXZlQ29udHJvbGxlciB7XHJcbiAgICBwcml2YXRlIF9zY29wZTogbmcuSVNjb3BlO1xyXG4gICAgcHJpdmF0ZSBfcGFydE5hbWU6IHN0cmluZztcclxuICAgIHByaXZhdGUgX3BhcnRWYWx1ZTogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICRhdHRyczogbmcuSUF0dHJpYnV0ZXMsXHJcbiAgICAgICAgJHNjb3BlOiBuZy5JU2NvcGUsXHJcbiAgICAgICAgJGxvZzogbmcuSUxvZ1NlcnZpY2UsXHJcbiAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgcGlwQXBwQmFyOiBJQXBwQmFyU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICB0aGlzLl9zY29wZSA9ICRzY29wZTtcclxuICAgICAgICB0aGlzLl9wYXJ0TmFtZSA9IFN0cmluZygkYXR0cnMucGlwQXBwYmFyUGFydCk7XHJcbiAgICAgICAgdGhpcy5fcGFydFZhbHVlID0gbnVsbDtcclxuXHJcbiAgICAgICAgLy8gQnJlYWsgcGFydCBhcGFydFxyXG4gICAgICAgIGxldCBwb3M6IG51bWJlciA9IHRoaXMuX3BhcnROYW1lLmluZGV4T2YoJzonKTtcclxuICAgICAgICBpZiAocG9zID4gMCkge1xyXG4gICAgICAgICAgICB0aGlzLl9wYXJ0VmFsdWUgPSB0aGlzLl9wYXJ0TmFtZS5zdWJzdHIocG9zICsgMSk7XHJcbiAgICAgICAgICAgIHRoaXMuX3BhcnROYW1lID0gdGhpcy5fcGFydE5hbWUuc3Vic3RyKDAsIHBvcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBvbkFwcEJhckNoYW5nZWQobnVsbCwgcGlwQXBwQmFyLmNvbmZpZyk7XHJcbiAgICAgICAgJHJvb3RTY29wZS4kb24oJ3BpcEFwcEJhckNoYW5nZWQnLCAoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogQXBwQmFyQ29uZmlnKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMub25BcHBCYXJDaGFuZ2VkKG51bGwsIGNvbmZpZylcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvbkFwcEJhckNoYW5nZWQoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogQXBwQmFyQ29uZmlnKSB7XHJcbiAgICAgICAgbGV0IHBhcnRzOiBhbnkgPSBjb25maWcucGFydHMgfHwge307XHJcbiAgICAgICAgbGV0IGN1cnJlbnRQYXJ0VmFsdWUgPSBwYXJ0c1t0aGlzLl9wYXJ0TmFtZV07XHJcblxyXG4gICAgICAgIC8vIFNldCB2aXNpYmxlIHZhcmlhYmxlIHRvIHN3aXRjaCBuZ0lmXHJcbiAgICAgICAgbGV0IHZpc2libGU6IGJvb2xlYW4gPSAhISh0aGlzLl9wYXJ0VmFsdWUgPyBjdXJyZW50UGFydFZhbHVlID09IHRoaXMuX3BhcnRWYWx1ZSA6IGN1cnJlbnRQYXJ0VmFsdWUpO1xyXG5cclxuICAgICAgICBpZiAodmlzaWJsZSAhPSB0aGlzLl9zY29wZVsndmlzaWJsZSddKVxyXG4gICAgICAgICAgICB0aGlzLl9zY29wZVsndmlzaWJsZSddID0gdmlzaWJsZTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi8vIEV4YW1wbGUgaXMgdGFrZW4gZnJvbSBoZXJlOiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIwMzI1NDgwL2FuZ3VsYXJqcy13aGF0cy10aGUtYmVzdC1wcmFjdGljZS10by1hZGQtbmdpZi10by1hLWRpcmVjdGl2ZS1wcm9ncmFtbWF0aWNhbGx5XHJcbigoKSA9PiB7XHJcbiAgICBmdW5jdGlvbiBhcHBiYXJQYXJ0RGlyZWN0aXZlKG5nSWZEaXJlY3RpdmUpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIHZhciBuZ0lmID0gbmdJZkRpcmVjdGl2ZVswXTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHJhbnNjbHVkZTogbmdJZi50cmFuc2NsdWRlLFxyXG4gICAgICAgICAgICBwcmlvcml0eTogbmdJZi5wcmlvcml0eSxcclxuICAgICAgICAgICAgdGVybWluYWw6IG5nSWYudGVybWluYWwsXHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiBuZ0lmLnJlc3RyaWN0LFxyXG4gICAgICAgICAgICBzY29wZTogdHJ1ZSxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gbGlua0Z1bmN0aW9uKCRzY29wZTogbmcuSVNjb3BlLCAkZWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeSwgJGF0dHJzOiBuZy5JQXR0cmlidXRlcykge1xyXG4gICAgICAgICAgICAgICAgLy8gVmlzdWFsaXplIGJhc2VkIG9uIHZpc2libGUgdmFyaWFibGUgaW4gc2NvcGVcclxuICAgICAgICAgICAgICAgICRhdHRycy5uZ0lmID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAkc2NvcGUudmlzaWJsZTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBuZ0lmLmxpbmsuYXBwbHkobmdJZiwgYXJndW1lbnRzKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogQXBwQmFyUGFydERpcmVjdGl2ZUNvbnRyb2xsZXJcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdwaXBBcHBCYXInKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcEFwcGJhclBhcnQnLCBhcHBiYXJQYXJ0RGlyZWN0aXZlKTtcclxuXHJcbn0pKCk7IiwiZXhwb3J0IGxldCBBcHBCYXJDaGFuZ2VkRXZlbnQgPSAncGlwQXBwQmFyQ2hhbmdlZCc7XHJcblxyXG5leHBvcnQgY2xhc3MgQXBwQmFyQ29uZmlnIHtcclxuICAgIHZpc2libGU6IGJvb2xlYW47XHJcbiAgICBwYXJ0czogYW55O1xyXG4gICAgY2xhc3Nlczogc3RyaW5nW107XHJcbn0gXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElBcHBCYXJTZXJ2aWNlIHtcclxuICAgIHJlYWRvbmx5IGNvbmZpZzogQXBwQmFyQ29uZmlnO1xyXG4gICAgcmVhZG9ubHkgY2xhc3Nlczogc3RyaW5nW107XHJcbiAgICBwYXJ0czogYW55O1xyXG5cclxuICAgIHNob3cocGFydHM/OiBhbnksIGNsYXNzZXM/OiBzdHJpbmdbXSwgc2hhZG93QnJlYWtwb2ludHM/OiBzdHJpbmdbXSk6IHZvaWQ7XHJcbiAgICBoaWRlKCk6IHZvaWQ7XHJcbiBcclxuICAgIGFkZFNoYWRvdyguLi5icmVha3BvaW50czogc3RyaW5nW10pOiB2b2lkO1xyXG4gICAgcmVtb3ZlU2hhZG93KCk6IHZvaWQ7XHJcbiBcclxuICAgIGFkZENsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZDtcclxuICAgIHJlbW92ZUNsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZDtcclxuIFxyXG4gICAgcGFydChwYXJ0OiBzdHJpbmcsIHZhbHVlOiBhbnkpOiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElBcHBCYXJQcm92aWRlciBleHRlbmRzIG5nLklTZXJ2aWNlUHJvdmlkZXIge1xyXG4gICAgY29uZmlnOiBBcHBCYXJDb25maWc7XHJcbiAgICBwYXJ0czogYW55O1xyXG4gICAgY2xhc3Nlczogc3RyaW5nW107XHJcblxyXG4gICAgYWRkQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkO1xyXG4gICAgcmVtb3ZlQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkO1xyXG5cclxuICAgIHBhcnQocGFydDogc3RyaW5nLCB2YWx1ZTogYW55KTogdm9pZDtcclxufVxyXG5cclxuY2xhc3MgQXBwQmFyU2VydmljZSBpbXBsZW1lbnRzIElBcHBCYXJTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgX2NvbmZpZzogQXBwQmFyQ29uZmlnO1xyXG4gICAgcHJpdmF0ZSBfcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZTtcclxuXHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoY29uZmlnOiBBcHBCYXJDb25maWcsICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZSA9ICRyb290U2NvcGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBjb25maWcoKTogQXBwQmFyQ29uZmlnIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgY2xhc3NlcygpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5jbGFzc2VzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgcGFydHMoKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnBhcnRzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgcGFydHModmFsdWU6IGFueSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wYXJ0cyA9IHZhbHVlIHx8IHt9O1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNob3cocGFydHM/OiBhbnksIGNsYXNzZXM/OiBzdHJpbmdbXSwgc2hhZG93QnJlYWtwb2ludHM/OiBzdHJpbmdbXSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLl9jb25maWcucGFydHMgPSBwYXJ0cyB8fCB0aGlzLl9jb25maWcucGFydHMgfHwge307XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmNsYXNzZXMgPSBjbGFzc2VzIHx8IHRoaXMuX2NvbmZpZy5jbGFzc2VzIHx8IFtdO1xyXG4gICAgICAgIGlmIChzaGFkb3dCcmVha3BvaW50cykge1xyXG4gICAgICAgICAgICB0aGlzLnNldFNoYWRvdyhzaGFkb3dCcmVha3BvaW50cyk7IFxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBoaWRlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGhpZGVTaGFkb3coKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmNsYXNzZXMgPSBfLnJlamVjdCh0aGlzLl9jb25maWcuY2xhc3NlcywgKGMpID0+IGMuc3RhcnRzV2l0aCgncGlwLXNoYWRvdycpKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNldFNoYWRvdyhicmVha3BvaW50czogc3RyaW5nW10pOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmhpZGVTaGFkb3coKTtcclxuXHJcbiAgICAgICAgaWYgKGJyZWFrcG9pbnRzICE9IG51bGwgJiYgYnJlYWtwb2ludHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBfLmVhY2goYnJlYWtwb2ludHMsIChicCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY29uZmlnLmNsYXNzZXMucHVzaCgncGlwLXNoYWRvdy0nICsgYnApO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuY2xhc3Nlcy5wdXNoKCdwaXAtc2hhZG93Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGRTaGFkb3coLi4uYnJlYWtwb2ludHM6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZXRTaGFkb3coYnJlYWtwb2ludHMpO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZVNoYWRvdygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmhpZGVTaGFkb3coKTtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG4gXHJcbiAgICBwdWJsaWMgYWRkQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkIHtcclxuICAgICAgICBfLmVhY2goY2xhc3NlcywgKGMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fY29uZmlnLmNsYXNzZXMucHVzaChjKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyByZW1vdmVDbGFzcyguLi5jbGFzc2VzOiBzdHJpbmdbXSk6IHZvaWQge1xyXG4gICAgICAgIF8uZWFjaChjbGFzc2VzLCAoYykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuY2xhc3NlcyA9IF8ucmVqZWN0KHRoaXMuX2NvbmZpZy5jbGFzc2VzLCAoY2MpID0+IGNjID09IGMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcbiBcclxuICAgIHB1YmxpYyBwYXJ0KHBhcnQ6IHN0cmluZywgdmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wYXJ0c1twYXJ0XSA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZW5kQ29uZmlnRXZlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoQXBwQmFyQ2hhbmdlZEV2ZW50LCB0aGlzLl9jb25maWcpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBBcHBCYXJQcm92aWRlciBpbXBsZW1lbnRzIElBcHBCYXJQcm92aWRlciB7XHJcbiAgICBwcml2YXRlIF9jb25maWc6IEFwcEJhckNvbmZpZyA9IHtcclxuICAgICAgICB2aXNpYmxlOiB0cnVlLFxyXG4gICAgICAgIHBhcnRzOiB7fSxcclxuICAgICAgICBjbGFzc2VzOiBbXVxyXG4gICAgfTtcclxuICAgIHByaXZhdGUgX3NlcnZpY2U6IEFwcEJhclNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIGdldCBjb25maWcoKTogQXBwQmFyQ29uZmlnIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgY29uZmlnKHZhbHVlOiBBcHBCYXJDb25maWcpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcgPSB2YWx1ZSB8fCBuZXcgQXBwQmFyQ29uZmlnKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBwYXJ0cygpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcucGFydHM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBwYXJ0cyh2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnBhcnRzID0gdmFsdWUgfHwge307XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgY2xhc3NlcygpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5jbGFzc2VzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgY2xhc3Nlcyh2YWx1ZTogc3RyaW5nW10pIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuY2xhc3NlcyA9IHZhbHVlIHx8IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGRDbGFzcyguLi5jbGFzc2VzOiBzdHJpbmdbXSk6IHZvaWQge1xyXG4gICAgICAgIF8uZWFjaChjbGFzc2VzLCAoYykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuY2xhc3Nlcy5wdXNoKGMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyByZW1vdmVDbGFzcyguLi5jbGFzc2VzOiBzdHJpbmdbXSk6IHZvaWQge1xyXG4gICAgICAgIF8uZWFjaChjbGFzc2VzLCAoYykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuY2xhc3NlcyA9IF8ucmVqZWN0KHRoaXMuX2NvbmZpZy5jbGFzc2VzLCAoY2MpID0+IGNjID09IGMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gXHJcbiAgICBwdWJsaWMgcGFydChwYXJ0OiBzdHJpbmcsIHZhbHVlOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9jb25maWcucGFydHNbcGFydF0gPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJGdldCgkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX3NlcnZpY2UgPT0gbnVsbClcclxuICAgICAgICAgICAgdGhpcy5fc2VydmljZSA9IG5ldyBBcHBCYXJTZXJ2aWNlKHRoaXMuX2NvbmZpZywgJHJvb3RTY29wZSk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLl9zZXJ2aWNlO1xyXG4gICAgfSAgICAgXHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcEFwcEJhcicpXHJcbiAgICAucHJvdmlkZXIoJ3BpcEFwcEJhcicsIEFwcEJhclByb3ZpZGVyKTtcclxuIiwiYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwQXBwQmFyJywgWyduZ01hdGVyaWFsJywgJ3BpcE5hdi5UZW1wbGF0ZXMnXSk7XHJcblxyXG5pbXBvcnQgJy4vQXBwQmFyU2VydmljZSc7XHJcbmltcG9ydCAnLi9BcHBCYXJEaXJlY3RpdmUnO1xyXG5pbXBvcnQgJy4vQXBwQmFyUGFydERpcmVjdGl2ZSc7XHJcblxyXG5leHBvcnQgKiBmcm9tICcuL0FwcEJhclNlcnZpY2UnO1xyXG4iLCJpbXBvcnQgeyBTaW1wbGVBY3Rpb25JdGVtIH0gZnJvbSAnLi4vYWN0aW9ucy9BY3Rpb25zU2VydmljZSc7XHJcbmltcG9ydCB7IEJyZWFkY3J1bWJJdGVtIH0gZnJvbSAnLi9CcmVhZGNydW1iU2VydmljZSc7XHJcbmltcG9ydCB7IEJyZWFkY3J1bWJDb25maWcgfSBmcm9tICcuL0JyZWFkY3J1bWJTZXJ2aWNlJztcclxuaW1wb3J0IHsgSUJyZWFkY3J1bWJTZXJ2aWNlIH0gZnJvbSAnLi9CcmVhZGNydW1iU2VydmljZSc7XHJcbmltcG9ydCB7IEJyZWFkY3J1bWJDaGFuZ2VkRXZlbnQgfSBmcm9tICcuL0JyZWFkY3J1bWJTZXJ2aWNlJztcclxuaW1wb3J0IHsgQnJlYWRjcnVtYkJhY2tFdmVudCB9IGZyb20gJy4vQnJlYWRjcnVtYlNlcnZpY2UnO1xyXG5pbXBvcnQgeyBPcGVuU2VhcmNoRXZlbnQgfSBmcm9tICcuLi9zZWFyY2gvU2VhcmNoQW5ndWxhckV2ZW50cydcclxuXHJcbmNsYXNzIEJyZWFkY3J1bWJDb250cm9sbGVyIHtcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF93aW5kb3c6IG5nLklXaW5kb3dTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfbG9jYXRpb246IG5nLklMb2NhdGlvblNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9pbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBvcmlnaW5hdG9yRXY6IEV2ZW50O1xyXG4gICAgcHJpdmF0ZSBfbWVkaWE6IGFueTtcclxuXHJcbiAgICBwdWJsaWMgY29uZmlnOiBCcmVhZGNydW1iQ29uZmlnO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihcclxuICAgICAgICAkZWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeSxcclxuICAgICAgICAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSxcclxuICAgICAgICAkd2luZG93OiBuZy5JV2luZG93U2VydmljZSxcclxuICAgICAgICAkc3RhdGU6IG5nLnVpLklTdGF0ZVNlcnZpY2UsXHJcbiAgICAgICAgJGxvY2F0aW9uOiBuZy5JTG9jYXRpb25TZXJ2aWNlLFxyXG4gICAgICAgICRpbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlLFxyXG4gICAgICAgIHBpcEJyZWFkY3J1bWI6IElCcmVhZGNydW1iU2VydmljZSxcclxuICAgICAgICAkbWRNZWRpYTogYW5ndWxhci5tYXRlcmlhbC5JTWVkaWFcclxuICAgICkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgICAgICB0aGlzLl93aW5kb3cgPSAkd2luZG93O1xyXG4gICAgICAgIHRoaXMuX2xvY2F0aW9uID0gJGxvY2F0aW9uO1xyXG4gICAgICAgIHRoaXMuX2luamVjdG9yID0gJGluamVjdG9yO1xyXG5cclxuICAgICAgICAvLyBBcHBseSBjbGFzcyBhbmQgY2FsbCByZXNpemVcclxuICAgICAgICAkZWxlbWVudC5hZGRDbGFzcygncGlwLWJyZWFkY3J1bWInKTtcclxuXHJcbiAgICAgICAgdGhpcy5jb25maWcgPSBwaXBCcmVhZGNydW1iLmNvbmZpZztcclxuXHJcbiAgICAgICAgJHJvb3RTY29wZS4kb24oQnJlYWRjcnVtYkNoYW5nZWRFdmVudCwgKGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IEJyZWFkY3J1bWJDb25maWcpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5vbkJyZWFkY3J1bWJDaGFuZ2VkKGV2ZW50LCBjb25maWcpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICRyb290U2NvcGUuJG9uKEJyZWFkY3J1bWJCYWNrRXZlbnQsICgpID0+IHsgdGhpcy5vbkJyZWFkY3J1bWJCYWNrKCk7IH0pO1xyXG5cclxuICAgICAgICBsZXQgcGlwTWVkaWEgPSAkaW5qZWN0b3IuaGFzKCdwaXBNZWRpYScpID8gJGluamVjdG9yLmdldCgncGlwTWVkaWEnKSA6IG51bGw7XHJcbiAgICAgICAgdGhpcy5fbWVkaWEgPSBwaXBNZWRpYSAhPT0gdW5kZWZpbmVkID8gcGlwTWVkaWEgOiAkbWRNZWRpYTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uQnJlYWRjcnVtYkNoYW5nZWQoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogQnJlYWRjcnVtYkNvbmZpZyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25CcmVhZGNydW1iQmFjaygpOiB2b2lkIHtcclxuICAgICAgICBsZXQgaXRlbXM6IEJyZWFkY3J1bWJJdGVtW10gPSB0aGlzLmNvbmZpZy5pdGVtcztcclxuICAgICAgICAvLyBHbyB0byB0aGUgbGFzdCBicmVhZGNydW1iIGl0ZW1cclxuICAgICAgICBpZiAoXy5pc0FycmF5KGl0ZW1zKSAmJiBpdGVtcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGxldCBpdGVtOiBCcmVhZGNydW1iSXRlbSA9IGl0ZW1zW2l0ZW1zLmxlbmd0aCAtIDFdO1xyXG4gICAgICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKGl0ZW0uY2xpY2spKSB7XHJcbiAgICAgICAgICAgICAgICBpdGVtLmNsaWNrKGl0ZW0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fd2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fd2luZG93Lmhpc3RvcnkuYmFjaygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25DbGljayhpdGVtOiBCcmVhZGNydW1iSXRlbSk6IHZvaWQge1xyXG4gICAgICAgIGlmIChfLmlzRnVuY3Rpb24oaXRlbS5jbGljaykpIHtcclxuICAgICAgICAgICAgaXRlbS5jbGljayhpdGVtKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9wZW5TZWFyY2goKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoT3BlblNlYXJjaEV2ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYWN0aW9uc1Zpc2libGUoaXRlbTogQnJlYWRjcnVtYkl0ZW0pOiBib29sZWFuIHtcclxuXHJcbiAgICAgICAgcmV0dXJuIGFuZ3VsYXIuaXNBcnJheShpdGVtLnN1YkFjdGlvbnMpICYmIGl0ZW0uc3ViQWN0aW9ucy5sZW5ndGggPiAxO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbk9wZW5NZW51KCRtZE9wZW5NZW51OiBGdW5jdGlvbiwgZXZlbnQ6IEV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5vcmlnaW5hdG9yRXYgPSBldmVudDtcclxuICAgICAgICAkbWRPcGVuTWVudSh0aGlzLm9yaWdpbmF0b3JFdik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uU3ViQWN0aW9uQ2xpY2soYWN0aW9uOiBTaW1wbGVBY3Rpb25JdGVtKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCFhY3Rpb24gfHwgYWN0aW9uLmRpdmlkZXIpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKF8uaXNGdW5jdGlvbihhY3Rpb24uY2xpY2spKSB7XHJcbiAgICAgICAgICAgIGFjdGlvbi5jbGljayhhY3Rpb24pO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoYWN0aW9uLmhyZWYpIHtcclxuICAgICAgICAgICAgdGhpcy5fd2luZG93LmxvY2F0aW9uLmhyZWYgPSBhY3Rpb24uaHJlZjtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGFjdGlvbi51cmwpIHtcclxuICAgICAgICAgICAgdGhpcy5fbG9jYXRpb24udXJsKGFjdGlvbi51cmwpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoYWN0aW9uLnN0YXRlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9pbmplY3Rvci5oYXMoJyRzdGF0ZScpKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgX3N0YXRlOiBhbmd1bGFyLnVpLklTdGF0ZVNlcnZpY2UgPSB0aGlzLl9pbmplY3Rvci5nZXQoJyRzdGF0ZScpIGFzIG5nLnVpLklTdGF0ZVNlcnZpY2VcclxuICAgICAgICAgICAgICAgIF9zdGF0ZS5nbyhhY3Rpb24uc3RhdGUsIGFjdGlvbi5zdGF0ZVBhcmFtcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGFjdGlvbi5ldmVudCkge1xyXG4gICAgICAgICAgICB0aGlzLl9yb290U2NvcGUuJGJyb2FkY2FzdChhY3Rpb24uZXZlbnQpO1xyXG4gICAgICAgICAgICB0aGlzLm9yaWdpbmF0b3JFdiA9IG51bGw7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gT3RoZXJ3aXNlIHJhaXNlIG5vdGlmaWNhdGlvblxyXG4gICAgICAgICAgICB0aGlzLl9yb290U2NvcGUuJGJyb2FkY2FzdCgncGlwQWN0aW9uQ2xpY2tlZCcsIGFjdGlvbi5uYW1lKTtcclxuICAgICAgICAgICAgdGhpcy5vcmlnaW5hdG9yRXYgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuKCgpID0+IHtcclxuICAgIGZ1bmN0aW9uIGJyZWFkY3J1bWJEaXJlY3RpdmUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgc2NvcGU6IHt9LFxyXG4gICAgICAgICAgICByZXBsYWNlOiBmYWxzZSxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdicmVhZGNydW1iL0JyZWFkY3J1bWIuaHRtbCcsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IEJyZWFkY3J1bWJDb250cm9sbGVyLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICckY3RybCdcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgncGlwQnJlYWRjcnVtYicpXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwQnJlYWRjcnVtYicsIGJyZWFkY3J1bWJEaXJlY3RpdmUpO1xyXG5cclxufSkoKTsiLCJpbXBvcnQgeyBTaW1wbGVBY3Rpb25JdGVtIH0gZnJvbSAnLi4vYWN0aW9ucy9BY3Rpb25zU2VydmljZSc7XHJcbmV4cG9ydCBsZXQgQnJlYWRjcnVtYkNoYW5nZWRFdmVudCA9IFwicGlwQnJlYWRjcnVtYkNoYW5nZWRcIjtcclxuZXhwb3J0IGxldCBCcmVhZGNydW1iQmFja0V2ZW50ID0gXCJwaXBCcmVhZGNydW1iQmFja1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJyZWFkY3J1bWJJdGVtIHtcclxuICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBjbGljaz86IChpdGVtOiBCcmVhZGNydW1iSXRlbSkgPT4gdm9pZDsgICBcclxuICAgIHN1YkFjdGlvbnM/OiBTaW1wbGVBY3Rpb25JdGVtW107IFxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQnJlYWRjcnVtYkNvbmZpZyB7XHJcbiAgICB0ZXh0OiBzdHJpbmc7XHJcbiAgICBpdGVtczogQnJlYWRjcnVtYkl0ZW1bXTtcclxuICAgIGNyaXRlcmlhOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUJyZWFkY3J1bWJTZXJ2aWNlIHtcclxuICAgIGNvbmZpZzogQnJlYWRjcnVtYkNvbmZpZztcclxuICAgIHRleHQ6IHN0cmluZztcclxuICAgIGl0ZW1zOiBCcmVhZGNydW1iSXRlbVtdO1xyXG4gICAgY3JpdGVyaWE6IHN0cmluZztcclxuXHJcbiAgICBzaG93VGV4dCh0ZXh0OiBzdHJpbmcsIGNyaXRlcmlhPzogc3RyaW5nKTogdm9pZDtcclxuICAgIHNob3dJdGVtcyhpdGVtczogQnJlYWRjcnVtYkl0ZW1bXSwgY3JpdGVyaWE/OiBzdHJpbmcpOiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElCcmVhZGNydW1iUHJvdmlkZXIgZXh0ZW5kcyBuZy5JU2VydmljZVByb3ZpZGVyIHtcclxuICAgIHRleHQ6IHN0cmluZztcclxufVxyXG5cclxuY2xhc3MgQnJlYWRjcnVtYlNlcnZpY2UgaW1wbGVtZW50cyBJQnJlYWRjcnVtYlNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBCcmVhZGNydW1iQ29uZmlnO1xyXG4gICAgcHJpdmF0ZSBfcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZTtcclxuXHJcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoXHJcbiAgICAgICAgY29uZmlnOiBCcmVhZGNydW1iQ29uZmlnLFxyXG4gICAgICAgICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlXHJcbiAgICApIHtcclxuICAgICAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGNvbmZpZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgdGV4dCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcudGV4dDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IHRleHQodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50ZXh0ID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLml0ZW1zID0gbnVsbDtcclxuXHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGl0ZW1zKCk6IEJyZWFkY3J1bWJJdGVtW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuaXRlbXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBpdGVtcyh2YWx1ZTogQnJlYWRjcnVtYkl0ZW1bXSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50ZXh0ID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9jb25maWcuaXRlbXMgPSB2YWx1ZTtcclxuXHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGNyaXRlcmlhKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5jcml0ZXJpYTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IGNyaXRlcmlhKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuY3JpdGVyaWEgPSB2YWx1ZTtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzaG93VGV4dCh0ZXh0OiBzdHJpbmcsIGNyaXRlcmlhPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnRleHQgPSB0ZXh0O1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5pdGVtcyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmNyaXRlcmlhID0gY3JpdGVyaWE7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2hvd0l0ZW1zKGl0ZW1zOiBCcmVhZGNydW1iSXRlbVtdLCBjcml0ZXJpYT86IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5pdGVtcyA9IGl0ZW1zIHx8IFtdO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50ZXh0ID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9jb25maWcuY3JpdGVyaWEgPSBjcml0ZXJpYTtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZW5kQ29uZmlnRXZlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoQnJlYWRjcnVtYkNoYW5nZWRFdmVudCwgdGhpcy5fY29uZmlnKTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbmNsYXNzIEJyZWFkY3J1bWJQcm92aWRlciBpbXBsZW1lbnRzIElCcmVhZGNydW1iUHJvdmlkZXIge1xyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBCcmVhZGNydW1iQ29uZmlnID0geyBcclxuICAgICAgICB0ZXh0OiBudWxsLFxyXG4gICAgICAgIGl0ZW1zOiBudWxsLFxyXG4gICAgICAgIGNyaXRlcmlhOiBudWxsXHJcbiAgICB9O1xyXG4gICAgcHJpdmF0ZSBfc2VydmljZTogQnJlYWRjcnVtYlNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIGdldCB0ZXh0KCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy50ZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgdGV4dCh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnRleHQgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJGdldCgkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSk6IGFueSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5fc2VydmljZSA9PSBudWxsKVxyXG4gICAgICAgICAgICB0aGlzLl9zZXJ2aWNlID0gbmV3IEJyZWFkY3J1bWJTZXJ2aWNlKHRoaXMuX2NvbmZpZywgJHJvb3RTY29wZSk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLl9zZXJ2aWNlO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuYW5ndWxhci5tb2R1bGUoJ3BpcEJyZWFkY3J1bWInKVxyXG4gICAgLnByb3ZpZGVyKCdwaXBCcmVhZGNydW1iJywgQnJlYWRjcnVtYlByb3ZpZGVyKTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ3BpcEJyZWFkY3J1bWInLCBbJ25nTWF0ZXJpYWwnLCAncGlwTmF2LlRlbXBsYXRlcycsICdwaXBOYXYuVHJhbnNsYXRlJ10pO1xyXG5cclxuaW1wb3J0ICcuL0JyZWFkY3J1bWJEaXJlY3RpdmUnO1xyXG5pbXBvcnQgJy4vQnJlYWRjcnVtYlNlcnZpY2UnO1xyXG5cclxuZXhwb3J0ICogZnJvbSAnLi9CcmVhZGNydW1iU2VydmljZSc7XHJcblxyXG5cclxuIiwiaW1wb3J0IHsgSU5hdkljb25TZXJ2aWNlIH0gZnJvbSAnLi4vaWNvbi9JTmF2SWNvblNlcnZpY2UnO1xyXG5pbXBvcnQgeyBJTmF2TWVudVNlcnZpY2UgfSBmcm9tICcuLi9tZW51L05hdk1lbnVTZXJ2aWNlJztcclxuaW1wb3J0IHsgSU5hdkhlYWRlclNlcnZpY2UgfSBmcm9tICcuLi9oZWFkZXIvTmF2SGVhZGVyU2VydmljZSc7XHJcbmltcG9ydCB7IElCcmVhZGNydW1iU2VydmljZSB9IGZyb20gJy4uL2JyZWFkY3J1bWIvQnJlYWRjcnVtYlNlcnZpY2UnO1xyXG5pbXBvcnQgeyBJU2VhcmNoU2VydmljZSB9IGZyb20gJy4uL3NlYXJjaC9JU2VhcmNoU2VydmljZSc7XHJcbmltcG9ydCB7IElBY3Rpb25zU2VydmljZSB9IGZyb20gJy4uL2FjdGlvbnMvQWN0aW9uc1NlcnZpY2UnO1xyXG5pbXBvcnQgeyBJQXBwQmFyU2VydmljZSB9IGZyb20gJy4uL2FwcGJhci9BcHBCYXJTZXJ2aWNlJztcclxuaW1wb3J0IHsgSVNpZGVOYXZTZXJ2aWNlIH0gZnJvbSAnLi4vc2lkZW5hdi9TaWRlTmF2U2VydmljZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElOYXZTZXJ2aWNlIHtcclxuICAgIGFwcGJhcjogSUFwcEJhclNlcnZpY2U7XHJcbiAgICBpY29uOiBJTmF2SWNvblNlcnZpY2U7XHJcbiAgICBicmVhZGNydW1iOiBJQnJlYWRjcnVtYlNlcnZpY2U7XHJcbiAgICBhY3Rpb25zOiBJQWN0aW9uc1NlcnZpY2U7XHJcbiAgICBzZWFyY2g6IElTZWFyY2hTZXJ2aWNlO1xyXG4gICAgc2lkZW5hdjogSVNpZGVOYXZTZXJ2aWNlO1xyXG4gICAgaGVhZGVyOiBJTmF2SGVhZGVyU2VydmljZTtcclxuICAgIG1lbnU6IElOYXZNZW51U2VydmljZTtcclxuXHJcbiAgICByZXNldCgpOiB2b2lkO1xyXG59XHJcblxyXG5jbGFzcyBOYXZTZXJ2aWNlIGltcGxlbWVudHMgSU5hdlNlcnZpY2Uge1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigkaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZSkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgdGhpcy5hcHBiYXIgPSAkaW5qZWN0b3IuaGFzKCdwaXBBcHBCYXInKSA/IDxJQXBwQmFyU2VydmljZT4kaW5qZWN0b3IuZ2V0KCdwaXBBcHBCYXInKSA6IG51bGw7XHJcbiAgICAgICAgdGhpcy5pY29uID0gJGluamVjdG9yLmhhcygncGlwTmF2SWNvbicpID8gPElOYXZJY29uU2VydmljZT4kaW5qZWN0b3IuZ2V0KCdwaXBOYXZJY29uJykgOiBudWxsO1xyXG4gICAgICAgIHRoaXMuYnJlYWRjcnVtYiA9ICRpbmplY3Rvci5oYXMoJ3BpcEJyZWFkY3J1bWInKSA/IDxJQnJlYWRjcnVtYlNlcnZpY2U+JGluamVjdG9yLmdldCgncGlwQnJlYWRjcnVtYicpIDogbnVsbDtcclxuICAgICAgICB0aGlzLmFjdGlvbnMgPSAkaW5qZWN0b3IuaGFzKCdwaXBBY3Rpb25zJykgPyA8SUFjdGlvbnNTZXJ2aWNlPiRpbmplY3Rvci5nZXQoJ3BpcEFjdGlvbnMnKSA6IG51bGw7XHJcbiAgICAgICAgdGhpcy5zZWFyY2ggPSAkaW5qZWN0b3IuaGFzKCdwaXBTZWFyY2gnKSA/IDxJU2VhcmNoU2VydmljZT4kaW5qZWN0b3IuZ2V0KCdwaXBTZWFyY2gnKSA6IG51bGw7XHJcbiAgICAgICAgdGhpcy5zaWRlbmF2ID0gJGluamVjdG9yLmhhcygncGlwU2lkZU5hdicpID8gPElTaWRlTmF2U2VydmljZT4kaW5qZWN0b3IuZ2V0KCdwaXBTaWRlTmF2JykgOiBudWxsO1xyXG4gICAgICAgIHRoaXMuaGVhZGVyID0gJGluamVjdG9yLmhhcygncGlwTmF2SGVhZGVyJykgPyA8SU5hdkhlYWRlclNlcnZpY2U+JGluamVjdG9yLmdldCgncGlwTmF2SGVhZGVyJykgOiBudWxsO1xyXG4gICAgICAgIHRoaXMubWVudSA9ICRpbmplY3Rvci5oYXMoJ3BpcE5hdk1lbnUnKSA/IDxJTmF2TWVudVNlcnZpY2U+JGluamVjdG9yLmdldCgncGlwTmF2TWVudScpIDogbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXBwYmFyOiBJQXBwQmFyU2VydmljZTtcclxuICAgIHB1YmxpYyBpY29uOiBJTmF2SWNvblNlcnZpY2U7XHJcbiAgICBwdWJsaWMgYnJlYWRjcnVtYjogSUJyZWFkY3J1bWJTZXJ2aWNlO1xyXG4gICAgcHVibGljIGFjdGlvbnM6IElBY3Rpb25zU2VydmljZTtcclxuICAgIHB1YmxpYyBzZWFyY2g6IElTZWFyY2hTZXJ2aWNlO1xyXG4gICAgcHVibGljIHNpZGVuYXY6IElTaWRlTmF2U2VydmljZTtcclxuICAgIHB1YmxpYyBoZWFkZXI6IElOYXZIZWFkZXJTZXJ2aWNlO1xyXG4gICAgcHVibGljIG1lbnU6IElOYXZNZW51U2VydmljZTtcclxuXHJcbiAgICBwdWJsaWMgcmVzZXQoKSB7XHJcbiAgICAgICAgLy8gUmVzZXQgYXBwYmFyXHJcbiAgICAgICAgaWYgKHRoaXMuYXBwYmFyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwYmFyLnNob3coKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFJlc2V0IGljb25cclxuICAgICAgICBpZiAodGhpcy5pY29uKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaWNvbi5zaG93TWVudSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gUmVzZXQgYnJlYWRjcnVtYlxyXG4gICAgICAgIGlmICh0aGlzLmJyZWFkY3J1bWIpIHtcclxuICAgICAgICAgICAgdGhpcy5icmVhZGNydW1iLnNob3dUZXh0KG51bGwpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gUmVzZXQgYWN0aW9uc1xyXG4gICAgICAgIGlmICh0aGlzLmFjdGlvbnMpIHtcclxuICAgICAgICAgICAgdGhpcy5hY3Rpb25zLnNob3coKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFJlc2V0IHNlYXJjaFxyXG4gICAgICAgIGlmICh0aGlzLnNlYXJjaCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlYXJjaC5zZXQobnVsbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5zaWRlbmF2KSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2lkZW5hdi5zaG93KCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxufVxyXG5cclxuYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwTmF2U2VydmljZScsIFtdKVxyXG4gICAgLnNlcnZpY2UoJ3BpcE5hdlNlcnZpY2UnLCBOYXZTZXJ2aWNlKTsiLCIoKCkgPT4ge1xyXG5cclxuZnVuY3Rpb24gdHJhbnNsYXRlRmlsdGVyKCRpbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlKSB7XHJcbiAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgbGV0IHBpcFRyYW5zbGF0ZTogcGlwLnNlcnZpY2VzLklUcmFuc2xhdGVTZXJ2aWNlID0gJGluamVjdG9yLmhhcygncGlwVHJhbnNsYXRlJykgPyA8cGlwLnNlcnZpY2VzLklUcmFuc2xhdGVTZXJ2aWNlPiRpbmplY3Rvci5nZXQoJ3BpcFRyYW5zbGF0ZScpIDogbnVsbDtcclxuXHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGtleTogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHBpcFRyYW5zbGF0ZSA/IHBpcFRyYW5zbGF0ZS50cmFuc2xhdGUoa2V5KSB8fCBrZXkgOiBrZXk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcE5hdi5UcmFuc2xhdGUnLCBbXSlcclxuICAgIC5maWx0ZXIoJ3RyYW5zbGF0ZScsIHRyYW5zbGF0ZUZpbHRlcik7XHJcblxyXG59KSgpO1xyXG5cclxuIiwiKCgpID0+IHtcclxuICAgIGNsYXNzIERyb3Bkb3duRGlyZWN0aXZlQ29udHJvbGxlciB7XHJcbiAgICAgICAgcHJpdmF0ZSBfZWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeTtcclxuICAgICAgICBwcml2YXRlIF9hdHRyczogbmcuSUF0dHJpYnV0ZXM7XHJcbiAgICAgICAgcHJpdmF0ZSBfaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9zY29wZTogYW5ndWxhci5JU2NvcGU7XHJcbiAgICAgICAgcHJpdmF0ZSBfbG9nOiBuZy5JTG9nU2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3BpcFRyYW5zbGF0ZTogcGlwLnNlcnZpY2VzLklUcmFuc2xhdGVTZXJ2aWNlO1xyXG5cclxuICAgICAgICBwcml2YXRlIF9waXBUaGVtZTogcGlwLnRoZW1lcy5JVGhlbWVTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3BpcE1lZGlhOiBwaXAubGF5b3V0cy5JTWVkaWFTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3RpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZTtcclxuXHJcbiAgICAgICAgcHVibGljIHRoZW1lQ2xhc3M6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgbWVkaWE6IGFueTtcclxuICAgICAgICBwdWJsaWMgYWN0aW9uczogYW55OyAvLyBzdHJpbmcgb3IgYXJyYXlcclxuICAgICAgICBwdWJsaWMgYWN0aXZlSW5kZXg6IG51bWJlcjtcclxuICAgICAgICBwdWJsaWMgc2VsZWN0ZWRJbmRleDogbnVtYmVyO1xyXG4gICAgICAgIHB1YmxpYyBjdXJyZW50VGhlbWU6IHN0cmluZztcclxuXHJcbiAgICAgICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICAgICAkYXR0cnM6IG5nLklBdHRyaWJ1dGVzLFxyXG4gICAgICAgICAgICAkaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZSxcclxuICAgICAgICAgICAgJHNjb3BlOiBhbmd1bGFyLklTY29wZSxcclxuICAgICAgICAgICAgJGxvZzogbmcuSUxvZ1NlcnZpY2UsXHJcbiAgICAgICAgICAgICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLFxyXG4gICAgICAgICAgICAkbWRNZWRpYTogYW5ndWxhci5tYXRlcmlhbC5JTWVkaWEsXHJcbiAgICAgICAgICAgICR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2VcclxuXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSAkZWxlbWVudDtcclxuICAgICAgICAgICAgdGhpcy5fYXR0cnMgPSAkYXR0cnM7XHJcbiAgICAgICAgICAgIHRoaXMuX3Njb3BlID0gJHNjb3BlO1xyXG4gICAgICAgICAgICB0aGlzLl9pbmplY3RvciA9ICRpbmplY3RvcjtcclxuICAgICAgICAgICAgdGhpcy5fbG9nID0gJGxvZztcclxuICAgICAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgICAgICAgICAgdGhpcy5fdGltZW91dCA9ICR0aW1lb3V0O1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fcGlwVGhlbWUgPSAkaW5qZWN0b3IuaGFzKCdwaXBUaGVtZScpID8gPHBpcC50aGVtZXMuSVRoZW1lU2VydmljZT4kaW5qZWN0b3IuZ2V0KCdwaXBUaGVtZScpIDogbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5fcGlwTWVkaWEgPSAkaW5qZWN0b3IuaGFzKCdwaXBNZWRpYScpID8gPHBpcC5sYXlvdXRzLklNZWRpYVNlcnZpY2U+JGluamVjdG9yLmdldCgncGlwTWVkaWEnKSA6IG51bGw7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5fcGlwVGhlbWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFRoZW1lID0gdGhpcy5fcGlwVGhlbWUudGhlbWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5fcm9vdFNjb3BlWyckdGhlbWUnXSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50VGhlbWUgPSB0aGlzLl9yb290U2NvcGVbJyR0aGVtZSddO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnRoZW1lQ2xhc3MgPSAoJGF0dHJzLmNsYXNzIHx8ICcnKSArICcgbWQtJyArIHRoaXMuY3VycmVudFRoZW1lICsgJy10aGVtZSc7XHJcblxyXG4gICAgICAgICAgICAvL3BpcEFzc2VydC5pc0FycmF5KCRzY29wZS5hY3Rpb25zLCAncGlwRHJvcGRvd246IHBpcC1hY3Rpb25zIGF0dHJpYnV0ZSBzaG91bGQgdGFrZSBhbiBhcnJheSwgYnV0IHRha2UgJyArIHR5cGVvZiAkc2NvcGUuYWN0aW9ucyk7XHJcbiAgICAgICAgICAgIHRoaXMubWVkaWEgPSB0aGlzLl9waXBNZWRpYSAhPT0gdW5kZWZpbmVkID8gdGhpcy5fcGlwTWVkaWEgOiAkbWRNZWRpYTtcclxuICAgICAgICAgICAgdGhpcy5hY3Rpb25zID0gKCRzY29wZVsnYWN0aW9ucyddICYmIF8uaXNBcnJheSgkc2NvcGVbJ2FjdGlvbnMnXSkpID8gJHNjb3BlWydhY3Rpb25zJ10gOiBbXTtcclxuICAgICAgICAgICAgdGhpcy5hY3RpdmVJbmRleCA9ICRzY29wZVsnYWN0aXZlSW5kZXgnXSB8fCAwO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgIHB1YmxpYyBkaXNhYmxlZCgpOiBib29sZWFuIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3Njb3BlWyduZ0Rpc2FibGVkJ10pIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9zY29wZVsnbmdEaXNhYmxlZCddKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBvblNlbGVjdChpbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlSW5kZXggPSBpbmRleDtcclxuICAgICAgICAgICAgdGhpcy5fc2NvcGVbJ2FjdGl2ZUluZGV4J10gPSBpbmRleDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3Njb3BlWydzZWxlY3QnXSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc2NvcGVbJ3NlbGVjdCddKHRoaXMuYWN0aW9uc1tpbmRleF0sIHRoaXMuYWN0aXZlSW5kZXgpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5fc2NvcGVbJ3BpcENoYW5nZSddKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl90aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9zY29wZVsncGlwQ2hhbmdlJ10oKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc2hvdygpOiBib29sZWFuIHtcclxuICAgICAgICAgICAgbGV0IHJlc3VsdDogYm9vbGVhbjtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3Njb3BlWydzaG93RHJvcGRvd24nXSgpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gISF0aGlzLl9zY29wZVsnc2hvd0Ryb3Bkb3duJ10oKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBkcm9wZG93bkRpcmVjdGl2ZSgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBzY29wZToge1xyXG4gICAgICAgICAgICAgICAgbmdEaXNhYmxlZDogJyYnLFxyXG4gICAgICAgICAgICAgICAgYWN0aW9uczogJz1waXBBY3Rpb25zJyxcclxuICAgICAgICAgICAgICAgIHNob3dEcm9wZG93bjogJyZwaXBTaG93JyxcclxuICAgICAgICAgICAgICAgIGFjdGl2ZUluZGV4OiAnPXBpcEFjdGl2ZUluZGV4JyxcclxuICAgICAgICAgICAgICAgIHNlbGVjdDogJz1waXBEcm9wZG93blNlbGVjdCcsXHJcbiAgICAgICAgICAgICAgICBwaXBDaGFuZ2U6ICcmJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2Ryb3Bkb3duL0Ryb3Bkb3duLmh0bWwnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBEcm9wZG93bkRpcmVjdGl2ZUNvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJyRjdHJsJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcERyb3Bkb3duJywgWydwaXBOYXYuVGVtcGxhdGVzJ10pXHJcbiAgICAgICAgLmRpcmVjdGl2ZSgncGlwRHJvcGRvd24nLCBkcm9wZG93bkRpcmVjdGl2ZSk7XHJcblxyXG59KSgpOyIsImltcG9ydCB7IElOYXZIZWFkZXJTZXJ2aWNlLCBOYXZIZWFkZXJDb25maWcgfSBmcm9tIFwiLi9OYXZIZWFkZXJTZXJ2aWNlXCI7XHJcblxyXG4oKCkgPT4ge1xyXG4gICAgY2xhc3MgTmF2SGVhZGVyRGlyZWN0aXZlQ29udHJvbGxlciB7XHJcbiAgICAgICAgcHJpdmF0ZSBfZWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeTtcclxuICAgICAgICBwcml2YXRlIF9zY29wZTogYW5ndWxhci5JU2NvcGU7XHJcbiAgICAgICAgcHJpdmF0ZSBfbG9nOiBuZy5JTG9nU2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3RpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9waXBOYXZIZWFkZXI6IElOYXZIZWFkZXJTZXJ2aWNlO1xyXG5cclxuICAgICAgICBwdWJsaWMgdGl0bGU6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgc3VidGl0bGU6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgaW1hZ2VVcmw6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgaW1hZ2VDc3M6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgaW1hZ2U6IG5nLklBdWdtZW50ZWRKUXVlcnk7XHJcbiAgICAgICAgcHVibGljIGltYWdlQmxvY2s6IG5nLklBdWdtZW50ZWRKUXVlcnk7XHJcbiAgICAgICAgcHVibGljIGxvYWRlZERlZmF1bHRJbWFnZTogYm9vbGVhbjtcclxuICAgICAgICBwdWJsaWMgc2hvd0hlYWRlcjogYm9vbGVhbjtcclxuXHJcbiAgICAgICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICAgICAkc2NvcGU6IGFuZ3VsYXIuSVNjb3BlLFxyXG4gICAgICAgICAgICAkbG9nOiBuZy5JTG9nU2VydmljZSxcclxuICAgICAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgICAgICR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2UsXHJcbiAgICAgICAgICAgIHBpcE5hdkhlYWRlcjogSU5hdkhlYWRlclNlcnZpY2UsXHJcbiAgICAgICAgICAgIG5hdkNvbnN0YW50OiBhbnlcclxuXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQgPSAkZWxlbWVudDtcclxuICAgICAgICAgICAgdGhpcy5fc2NvcGUgPSAkc2NvcGU7XHJcbiAgICAgICAgICAgIHRoaXMuX2xvZyA9ICRsb2c7XHJcbiAgICAgICAgICAgIHRoaXMuX3Jvb3RTY29wZSA9ICRyb290U2NvcGU7XHJcbiAgICAgICAgICAgIHRoaXMuX3RpbWVvdXQgPSAkdGltZW91dDtcclxuICAgICAgICAgICAgdGhpcy5fcGlwTmF2SGVhZGVyID0gcGlwTmF2SGVhZGVyO1xyXG5cclxuICAgICAgICAgICAgLy8gQXBwbHkgY2xhc3MgYW5kIGNhbGwgcmVzaXplXHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQuYWRkQ2xhc3MoJ3BpcC1zdGlja3ktbmF2LWhlYWRlcicpO1xyXG5cclxuXHJcbiAgICAgICAgICAgIHRoaXMuaW5pdEltYWdlKCk7XHJcblxyXG4gICAgICAgICAgICBsZXQgY2xlYW51cE5hdkhlYWRlckNoYW5nZWQ6IEZ1bmN0aW9uID0gdGhpcy5fcm9vdFNjb3BlLiRvbigncGlwTmF2SGVhZGVyQ2hhbmdlZCcsICgkZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogTmF2SGVhZGVyQ29uZmlnKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uTmF2SGVhZGVyQ2hhbmdlZCgkZXZlbnQsIGNvbmZpZylcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGxldCBjbGVhbnVwU2lkZU5hdlN0YXRlQ2hhbmdlZDogRnVuY3Rpb24gPSB0aGlzLl9yb290U2NvcGUuJG9uKCdwaXBTaWRlTmF2U3RhdGVDaGFuZ2VkJywgKCRldmVudDogbmcuSUFuZ3VsYXJFdmVudCwgc3RhdGU6IGFueSkgPT4geyAvL25hdlN0YXRlXHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uU3RhdGVDaGFuZ2VkKCRldmVudCwgc3RhdGUpXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJHNjb3BlLiRvbignJGRlc3Ryb3knLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoYW5ndWxhci5pc0Z1bmN0aW9uKGNsZWFudXBOYXZIZWFkZXJDaGFuZ2VkKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsZWFudXBOYXZIZWFkZXJDaGFuZ2VkKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoYW5ndWxhci5pc0Z1bmN0aW9uKGNsZWFudXBTaWRlTmF2U3RhdGVDaGFuZ2VkKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsZWFudXBTaWRlTmF2U3RhdGVDaGFuZ2VkKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgaW5pdEltYWdlKCkge1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlQmxvY2sgPSB0aGlzLl9lbGVtZW50LmZpbmQoJy5waXAtc3RpY2t5LW5hdi1oZWFkZXItdXNlcicpXHJcblxyXG4gICAgICAgICAgICB0aGlzLl90aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2UgPSB0aGlzLl9lbGVtZW50LmZpbmQoJy5waXAtc3RpY2t5LW5hdi1oZWFkZXItdXNlci1pbWFnZScpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmltYWdlWzBdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZVswXS5vbmxvYWQgPSAoKCkgPT4gdGhpcy5vbkltYWdlTG9hZCgpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gKCRldmVudDogSFRNTEVsZW1lbnQsIGVycm9ldjogRXZlbnQpOiBhbnkgPT4gIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5vbkltYWdlTG9hZCgkZXZlbnQpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZVswXS5vbmVycm9yID0gKCgpID0+IHRoaXMub25JbWFnZUVycm9yKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICgkZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5vbkltYWdlRXJyb3IoJGV2ZW50KTtcclxuICAgICAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2Uub25sb2FkID0gKCgpID0+IHRoaXMub25JbWFnZUxvYWQoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZS5vbmVycm9yID0gKCgpID0+IHRoaXMub25JbWFnZUVycm9yKCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMub25OYXZIZWFkZXJDaGFuZ2VkKG51bGwsIHRoaXMuX3BpcE5hdkhlYWRlci5jb25maWcpO1xyXG4gICAgICAgICAgICB9LCAyMCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcml2YXRlIGluaXRIZWFkZXIoKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5fcGlwTmF2SGVhZGVyLmNvbmZpZykgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgdGhpcy50aXRsZSA9IHRoaXMuX3BpcE5hdkhlYWRlci5jb25maWcudGl0bGU7XHJcbiAgICAgICAgICAgIHRoaXMuc3VidGl0bGUgPSB0aGlzLl9waXBOYXZIZWFkZXIuY29uZmlnLnN1YnRpdGxlO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlVXJsID0gdGhpcy5fcGlwTmF2SGVhZGVyLmNvbmZpZy5pbWFnZVVybDtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZUNzcyA9IHRoaXMuX3BpcE5hdkhlYWRlci5jb25maWcuaW1hZ2VDc3M7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyAvLyBXaGVuIGltYWdlIGlzIGxvYWRlZCByZXNpemUvcmVwb3NpdGlvbiBpdFxyXG4gICAgICAgIC8vIHByaXZhdGUgb25JbWFnZUxvYWQoJGV2ZW50KSB7XHJcbiAgICAgICAgLy8gICAgIGxldCBpbWFnZTogbmcuSUF1Z21lbnRlZEpRdWVyeSA9ICQoJGV2ZW50LnRhcmdldCk7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuc2V0SW1hZ2VNYXJnaW5DU1MoaW1hZ2UpO1xyXG4gICAgICAgIC8vIH07XHJcblxyXG4gICAgICAgIC8vIHByaXZhdGUgb25JbWFnZUVycm9yKCRldmVudCkge1xyXG4gICAgICAgIC8vICAgICBpZiAodGhpcy5sb2FkZWREZWZhdWx0SW1hZ2UpIHJldHVybjtcclxuICAgICAgICAvLyAgICAgdGhpcy5fc2NvcGUuJGFwcGx5KCgpID0+IHtcclxuICAgICAgICAvLyAgICAgICAgIHRoaXMuc2V0SW1hZ2UodGhpcy5fcGlwTmF2SGVhZGVyLmNvbmZpZywgdHJ1ZSk7XHJcbiAgICAgICAgLy8gICAgIH0pO1xyXG4gICAgICAgIC8vIH07XHJcbiAgICAgICAgLy8gV2hlbiBpbWFnZSBpcyBsb2FkZWQgcmVzaXplL3JlcG9zaXRpb24gaXRcclxuICAgICAgICBwcml2YXRlIG9uSW1hZ2VMb2FkKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNldEltYWdlTWFyZ2luQ1NTKHRoaXMuaW1hZ2UpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25JbWFnZUVycm9yKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5sb2FkZWREZWZhdWx0SW1hZ2UpIHJldHVybjtcclxuICAgICAgICAgICAgdGhpcy5fc2NvcGUuJGFwcGx5KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0SW1hZ2UodGhpcy5fcGlwTmF2SGVhZGVyLmNvbmZpZywgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25TdGF0ZUNoYW5nZWQoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIHN0YXRlOiBhbnkpIHsgLy8gbmF2U3RhdGVcclxuICAgICAgICAgICAgaWYgKHN0YXRlID09PSB1bmRlZmluZWQpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIGlmIChzdGF0ZS5pZCA9PSAndG9nZ2xlJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93SGVhZGVyID0gc3RhdGUgJiYgc3RhdGUuaWQgPT0gJ3RvZ2dsZSc7XHJcbiAgICAgICAgICAgICAgICB9LCA0MDApO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93SGVhZGVyID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgc2V0SW1hZ2VNYXJnaW5DU1MoaW1hZ2U6IG5nLklBdWdtZW50ZWRKUXVlcnkpIHsgLy9pbWFnZVswXVxyXG4gICAgICAgICAgICB2YXIgY3NzUGFyYW1zID0ge30sXHJcbiAgICAgICAgICAgICAgICBjb250YWluZXJXaWR0aCA9IHRoaXMuaW1hZ2VCbG9jay53aWR0aCA/IHRoaXMuaW1hZ2VCbG9jay53aWR0aCgpIDogdGhpcy5pbWFnZUJsb2NrLmNsaWVudFdpZHRoLFxyXG4gICAgICAgICAgICAgICAgY29udGFpbmVySGVpZ2h0ID0gdGhpcy5pbWFnZUJsb2NrLmhlaWdodCA/IHRoaXMuaW1hZ2VCbG9jay5oZWlnaHQoKSA6IHRoaXMuaW1hZ2VCbG9jay5jbGllbnRIZWlnaHQsXHJcbiAgICAgICAgICAgICAgICBpbWFnZVdpZHRoID0gaW1hZ2VbMF1bJ25hdHVyYWxXaWR0aCddIHx8IGltYWdlLndpZHRoLFxyXG4gICAgICAgICAgICAgICAgaW1hZ2VIZWlnaHQgPSBpbWFnZVswXVsnbmF0dXJhbEhlaWdodCddIHx8IGltYWdlLmhlaWdodCxcclxuICAgICAgICAgICAgICAgIG1hcmdpbiA9IDA7XHJcblxyXG4gICAgICAgICAgICBpZiAoKGltYWdlV2lkdGggLyBjb250YWluZXJXaWR0aCkgPiAoaW1hZ2VIZWlnaHQgLyBjb250YWluZXJIZWlnaHQpKSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4gPSAtKChpbWFnZVdpZHRoIC8gaW1hZ2VIZWlnaHQgKiBjb250YWluZXJIZWlnaHQgLSBjb250YWluZXJXaWR0aCkgLyAyKTtcclxuICAgICAgICAgICAgICAgIGNzc1BhcmFtc1snbWFyZ2luLWxlZnQnXSA9ICcnICsgbWFyZ2luICsgJ3B4JztcclxuICAgICAgICAgICAgICAgIGNzc1BhcmFtc1snaGVpZ2h0J10gPSAnJyArIGNvbnRhaW5lckhlaWdodCArICdweCc7XHJcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ3dpZHRoJ10gPSAnJyArIGltYWdlV2lkdGggKiBjb250YWluZXJIZWlnaHQgLyBpbWFnZUhlaWdodCArICdweCc7XHJcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ21hcmdpbi10b3AnXSA9ICcnO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luID0gLSgoaW1hZ2VIZWlnaHQgLyBpbWFnZVdpZHRoICogY29udGFpbmVyV2lkdGggLSBjb250YWluZXJIZWlnaHQpIC8gMik7XHJcbiAgICAgICAgICAgICAgICBjc3NQYXJhbXNbJ21hcmdpbi10b3AnXSA9ICcnICsgbWFyZ2luICsgJ3B4JztcclxuICAgICAgICAgICAgICAgIGNzc1BhcmFtc1snaGVpZ2h0J10gPSAnJyArIGltYWdlSGVpZ2h0ICogY29udGFpbmVyV2lkdGggLyBpbWFnZVdpZHRoICsgJ3B4JztcclxuICAgICAgICAgICAgICAgIGNzc1BhcmFtc1snd2lkdGgnXSA9ICcnICsgY29udGFpbmVyV2lkdGggKyAncHgnO1xyXG4gICAgICAgICAgICAgICAgY3NzUGFyYW1zWydtYXJnaW4tbGVmdCddID0gJyc7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGltYWdlLmNzcyhjc3NQYXJhbXMpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHByaXZhdGUgc2V0SW1hZ2UoY29uZmlnLCBsb2FkRXJyb3I6IGJvb2xlYW4pIHtcclxuICAgICAgICAgICAgaWYgKCFjb25maWcpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIHZhciB1cmw6IHN0cmluZztcclxuXHJcbiAgICAgICAgICAgIGlmICghbG9hZEVycm9yICYmICEhY29uZmlnLmltYWdlVXJsICYmICF0aGlzLmxvYWRlZERlZmF1bHRJbWFnZSkge1xyXG4gICAgICAgICAgICAgICAgdXJsID0gY29uZmlnLmltYWdlVXJsO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkZWREZWZhdWx0SW1hZ2UgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdXJsID0gY29uZmlnLmRlZmF1bHRJbWFnZVVybDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHVybCAmJiB0aGlzLmltYWdlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmltYWdlLmF0dHIoJ3NyYycsIHVybCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmltYWdlQmxvY2suY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbk5hdkhlYWRlckNoYW5nZWQoJGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IE5hdkhlYWRlckNvbmZpZykge1xyXG4gICAgICAgICAgICBpZiAoIWNvbmZpZykgcmV0dXJuO1xyXG4gICAgICAgICAgICB0aGlzLnNldEltYWdlKGNvbmZpZywgZmFsc2UpXHJcblxyXG4gICAgICAgICAgICB0aGlzLnRpdGxlID0gY29uZmlnLnRpdGxlO1xyXG4gICAgICAgICAgICB0aGlzLnN1YnRpdGxlID0gY29uZmlnLnN1YnRpdGxlO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlVXJsID0gY29uZmlnLmltYWdlVXJsO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlQ3NzID0gY29uZmlnLmltYWdlQ3NzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIG9uVXNlckNsaWNrKCkge1xyXG4gICAgICAgICAgICB0aGlzLl9yb290U2NvcGUuJGJyb2FkY2FzdCgncGlwTmF2VXNlckNsaWNrZWQnKTsgLy8gdG9kb1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbmF2SGVhZGVyRGlyZWN0aXZlKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnRUEnLFxyXG4gICAgICAgICAgICByZXBsYWNlOiBmYWxzZSxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdoZWFkZXIvTmF2SGVhZGVyLmh0bWwnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBOYXZIZWFkZXJEaXJlY3RpdmVDb250cm9sbGVyLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICckY3RybCdcclxuXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZSgncGlwTmF2SGVhZGVyJylcclxuICAgICAgICAuZGlyZWN0aXZlKCdwaXBOYXZIZWFkZXInLCBuYXZIZWFkZXJEaXJlY3RpdmUpO1xyXG5cclxufSkoKTsiLCJleHBvcnQgbGV0IE5hdkhlYWRlckNoYW5nZWRFdmVudCA9ICdwaXBOYXZIZWFkZXJDaGFuZ2VkJztcclxuXHJcbmV4cG9ydCBjbGFzcyBOYXZIZWFkZXJDb25maWcge1xyXG4gICAgLy8gSW1hZ2UgdXJsXHJcbiAgICBwdWJsaWMgaW1hZ2VVcmw6IHN0cmluZztcclxuICAgIC8vIEltYWdlIHVybFxyXG4gICAgcHVibGljIGRlZmF1bHRJbWFnZVVybDogc3RyaW5nO1xyXG4gICAgLy8gVGl0bGVcclxuICAgIHB1YmxpYyB0aXRsZTogc3RyaW5nO1xyXG4gICAgLy8gU3VidGl0bGVcclxuICAgIHB1YmxpYyBzdWJ0aXRsZTogc3RyaW5nO1xyXG4gICAgLy8gaW1hZ2Ugc3R5bGVzXHJcbiAgICBwdWJsaWMgaW1hZ2VDc3M6IHN0cmluZztcclxuICAgIC8vIEhhbmRsZSBoZWFkZXIgY2xpY2sgZXZlbnRcclxuICAgIGNsaWNrOiAoKSA9PiB2b2lkO1xyXG4gICAgLy8gRXZlbnQgbmFtZVxyXG4gICAgZXZlbnQ6IHN0cmluZ1xyXG59O1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJTmF2SGVhZGVyU2VydmljZSB7XHJcbiAgICByZWFkb25seSBjb25maWc6IE5hdkhlYWRlckNvbmZpZztcclxuICAgIGltYWdlVXJsOiBzdHJpbmc7XHJcbiAgICB0aXRsZTogc3RyaW5nO1xyXG4gICAgc3VidGl0bGU6IHN0cmluZztcclxuICAgIGV2ZW50OiBzdHJpbmc7XHJcblxyXG4gICAgc2hvdyh0aXRsZTogc3RyaW5nLCBzdWJ0aXRsZTogc3RyaW5nLCBpbWFnZVVybDogc3RyaW5nLCBjYWxsYmFja09yRXZlbnQ/OiBhbnkpOiB2b2lkO1xyXG4gICAgaGlkZSgpOiB2b2lkO1xyXG4gICAgY2xpY2s6ICgpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSU5hdkhlYWRlclByb3ZpZGVyIGV4dGVuZHMgbmcuSVNlcnZpY2VQcm92aWRlciB7XHJcbiAgICBjb25maWc6IE5hdkhlYWRlckNvbmZpZztcclxuICAgIGRlZmF1bHRJbWFnZVVybDogc3RyaW5nO1xyXG4gICAgaW1hZ2VVcmw6IHN0cmluZztcclxuICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBzdWJ0aXRsZTogc3RyaW5nO1xyXG4gICAgZXZlbnQ6IHN0cmluZztcclxuXHJcbiAgICBzZXQodGl0bGU6IHN0cmluZywgc3VidGl0bGU6IHN0cmluZywgaW1hZ2VVcmw6IHN0cmluZywgY2FsbGJhY2tPckV2ZW50PzogYW55KTogdm9pZDtcclxuICAgIGNsZWFyKCk6IHZvaWQ7XHJcbiAgICBjbGljazogKCkgPT4gdm9pZDtcclxufVxyXG5cclxuY2xhc3MgTmF2SGVhZGVyU2VydmljZSB7XHJcbiAgICBwcml2YXRlIF9jb25maWc6IE5hdkhlYWRlckNvbmZpZztcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKGNvbmZpZzogTmF2SGVhZGVyQ29uZmlnLCAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuICAgICAgICB0aGlzLl9yb290U2NvcGUgPSAkcm9vdFNjb3BlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgY29uZmlnKCk6IE5hdkhlYWRlckNvbmZpZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IHRpdGxlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy50aXRsZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IHRpdGxlKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcudGl0bGUgPSB2YWx1ZTtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgc3VidGl0bGUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnN1YnRpdGxlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgc3VidGl0bGUodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5zdWJ0aXRsZSA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBpbWFnZVVybCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuaW1hZ2VVcmw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBpbWFnZVVybCh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmltYWdlVXJsID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGNsaWNrKCk6ICgpID0+IHZvaWQge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuY2xpY2s7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBjbGljayh2YWx1ZTogKCkgPT4gdm9pZCkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5jbGljayA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBldmVudCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuZXZlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBldmVudCh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmV2ZW50ID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2hvdyh0aXRsZTogc3RyaW5nLCBzdWJ0aXRsZTogc3RyaW5nLCBpbWFnZVVybDogc3RyaW5nLCBjYWxsYmFja09yRXZlbnQ/OiBhbnkpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9jb25maWcudGl0bGUgPSB0aXRsZTtcclxuICAgICAgICB0aGlzLl9jb25maWcuc3VidGl0bGUgPSBzdWJ0aXRsZTtcclxuICAgICAgICB0aGlzLl9jb25maWcuaW1hZ2VVcmwgPSBpbWFnZVVybDtcclxuXHJcbiAgICAgICAgaWYgKF8uaXNGdW5jdGlvbihjYWxsYmFja09yRXZlbnQpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGljayA9IGNhbGxiYWNrT3JFdmVudDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuY2xpY2sgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoXy5pc1N0cmluZyhjYWxsYmFja09yRXZlbnQpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5ldmVudCA9IGNhbGxiYWNrT3JFdmVudDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuZXZlbnQgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBoaWRlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50aXRsZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnN1YnRpdGxlID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9jb25maWcuaW1hZ2VVcmwgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5jbGljayA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmV2ZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc2VuZENvbmZpZ0V2ZW50KCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kZW1pdChOYXZIZWFkZXJDaGFuZ2VkRXZlbnQsIHRoaXMuX2NvbmZpZyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIE5hdkhlYWRlclByb3ZpZGVyIGltcGxlbWVudHMgSU5hdkhlYWRlclByb3ZpZGVyIHtcclxuICAgIHByaXZhdGUgX2NvbmZpZzogTmF2SGVhZGVyQ29uZmlnID0gbmV3IE5hdkhlYWRlckNvbmZpZygpO1xyXG4gICAgcHJpdmF0ZSBfc2VydmljZTogTmF2SGVhZGVyU2VydmljZTtcclxuXHJcbiAgICBwdWJsaWMgZ2V0IGNvbmZpZygpOiBOYXZIZWFkZXJDb25maWcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWc7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBjb25maWcodmFsdWU6IE5hdkhlYWRlckNvbmZpZykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IHZhbHVlIHx8IG5ldyBOYXZIZWFkZXJDb25maWcoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGRlZmF1bHRJbWFnZVVybCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuZGVmYXVsdEltYWdlVXJsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgZGVmYXVsdEltYWdlVXJsKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuZGVmYXVsdEltYWdlVXJsID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCB0aXRsZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcudGl0bGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCB0aXRsZSh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnRpdGxlID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBzdWJ0aXRsZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuc3VidGl0bGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBzdWJ0aXRsZSh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnN1YnRpdGxlID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBpbWFnZVVybCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuaW1hZ2VVcmw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBpbWFnZVVybCh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmltYWdlVXJsID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBjbGljaygpOiAoKSA9PiB2b2lkIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmNsaWNrO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgY2xpY2sodmFsdWU6ICgpID0+IHZvaWQpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuY2xpY2sgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGV2ZW50KCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5ldmVudDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IGV2ZW50KHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuZXZlbnQgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0KHRpdGxlOiBzdHJpbmcsIHN1YnRpdGxlOiBzdHJpbmcsIGltYWdlVXJsOiBzdHJpbmcsIGNhbGxiYWNrT3JFdmVudD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50aXRsZSA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5zdWJ0aXRsZSA9IHN1YnRpdGxlO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5pbWFnZVVybCA9IGltYWdlVXJsO1xyXG5cclxuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKGNhbGxiYWNrT3JFdmVudCkpIHtcclxuICAgICAgICAgICAgdGhpcy5fY29uZmlnLmNsaWNrID0gY2FsbGJhY2tPckV2ZW50O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGljayA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChfLmlzU3RyaW5nKGNhbGxiYWNrT3JFdmVudCkpIHtcclxuICAgICAgICAgICAgdGhpcy5fY29uZmlnLmV2ZW50ID0gY2FsbGJhY2tPckV2ZW50O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5ldmVudCA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9jb25maWcudGl0bGUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5zdWJ0aXRsZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmltYWdlVXJsID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9jb25maWcuY2xpY2sgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5ldmVudCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljICRnZXQoJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9zZXJ2aWNlID09IG51bGwpXHJcbiAgICAgICAgICAgIHRoaXMuX3NlcnZpY2UgPSBuZXcgTmF2SGVhZGVyU2VydmljZSh0aGlzLl9jb25maWcsICRyb290U2NvcGUpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5fc2VydmljZTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBOYXZIZWFkZXInKVxyXG4gICAgLnByb3ZpZGVyKCdwaXBOYXZIZWFkZXInLCBOYXZIZWFkZXJQcm92aWRlcik7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdwaXBOYXZIZWFkZXInLCBbJ25nTWF0ZXJpYWwnLCAncGlwTmF2LlRlbXBsYXRlcyddKTtcclxuXHJcbmltcG9ydCAnLi9OYXZIZWFkZXJTZXJ2aWNlJztcclxuaW1wb3J0ICcuL05hdkhlYWRlckRpcmVjdGl2ZSc7XHJcblxyXG5leHBvcnQgKiBmcm9tICcuL05hdkhlYWRlclNlcnZpY2UnOyIsImltcG9ydCB7IE9wZW5TaWRlTmF2RXZlbnQgfSBmcm9tICcuLi9zaWRlbmF2L1NpZGVOYXZFdmVudHMnO1xyXG5pbXBvcnQgeyBOYXZJY29uQ29uZmlnIH0gZnJvbSAnLi9OYXZJY29uQ29uZmlnJztcclxuaW1wb3J0IHsgSU5hdkljb25TZXJ2aWNlIH0gZnJvbSAnLi9JTmF2SWNvblNlcnZpY2UnO1xyXG5pbXBvcnQgeyBJTmF2SWNvbkJpbmRpbmdzIH0gZnJvbSAnLi9JTmF2SWNvbkJpbmRpbmdzJztcclxuaW1wb3J0IHsgTmF2SWNvbkNsaWNrZWRFdmVudCwgTmF2SWNvbkNoYW5nZWRFdmVudCB9IGZyb20gJy4vTmF2SWNvbkFuZ3VsYXJFdmVudHMnO1xyXG5cclxuY29uc3QgTmF2SWNvbkJpbmRpbmdzOiBJTmF2SWNvbkJpbmRpbmdzID0ge1xyXG4gICAgdHlwZTogJzw/cGlwVHlwZScsXHJcbiAgICBpbWFnZVVybDogJzw/cGlwSW1hZ2VVcmwnLFxyXG4gICAgaWNvbjogJzw/cGlwSWNvbidcclxufVxyXG5cclxuY2xhc3MgTmF2SWNvbkNoYW5nZXMgaW1wbGVtZW50cyBuZy5JT25DaGFuZ2VzT2JqZWN0LCBJTmF2SWNvbkJpbmRpbmdzIHtcclxuICAgIFtrZXk6IHN0cmluZ106IG5nLklDaGFuZ2VzT2JqZWN0PGFueT47XHJcbiAgICAvLyBOb3Qgb25lIHdheSBiaW5kaW5nc1xyXG5cclxuICAgIHR5cGU6IG5nLklDaGFuZ2VzT2JqZWN0PHN0cmluZz47XHJcbiAgICBpbWFnZVVybDogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcclxuICAgIGljb246IG5nLklDaGFuZ2VzT2JqZWN0PHN0cmluZz47XHJcbn1cclxuXHJcbmNsYXNzIE5hdkljb25Db250cm9sbGVyIGltcGxlbWVudHMgSU5hdkljb25CaW5kaW5ncyB7XHJcbiAgICBwcml2YXRlIF9lbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5O1xyXG4gICAgcHJpdmF0ZSBfc2NvcGU6IGFuZ3VsYXIuSVNjb3BlO1xyXG4gICAgcHJpdmF0ZSBfbG9nOiBuZy5JTG9nU2VydmljZTtcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF93aW5kb3c6IG5nLklXaW5kb3dTZXJ2aWNlO1xyXG5cclxuICAgIHByaXZhdGUgY2xlYXJGbjogRnVuY3Rpb247XHJcblxyXG4gICAgcHVibGljIGNvbmZpZzogTmF2SWNvbkNvbmZpZztcclxuXHJcbiAgICBwdWJsaWMgdHlwZTogc3RyaW5nO1xyXG4gICAgcHVibGljIGltYWdlVXJsOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgaWNvbjogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICRzY29wZTogYW5ndWxhci5JU2NvcGUsXHJcbiAgICAgICAgJGxvZzogbmcuSUxvZ1NlcnZpY2UsXHJcbiAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgJHdpbmRvdzogbmcuSVdpbmRvd1NlcnZpY2UsXHJcbiAgICAgICAgcGlwTmF2SWNvbjogSU5hdkljb25TZXJ2aWNlXHJcbiAgICApIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSAkZWxlbWVudDtcclxuICAgICAgICB0aGlzLl9zY29wZSA9ICRzY29wZTtcclxuICAgICAgICB0aGlzLl9sb2cgPSAkbG9nO1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZSA9ICRyb290U2NvcGU7XHJcbiAgICAgICAgdGhpcy5fd2luZG93ID0gJHdpbmRvdztcclxuXHJcbiAgICAgICAgLy8gQXBwbHkgY2xhc3MgYW5kIGNhbGwgcmVzaXplXHJcbiAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC1uYXYtaWNvbicpO1xyXG5cclxuICAgICAgICB0aGlzLmNvbmZpZyA9IHBpcE5hdkljb24uY29uZmlnO1xyXG5cclxuICAgICAgICB0aGlzLmNsZWFyRm4gPSAkcm9vdFNjb3BlLiRvbigncGlwTmF2SWNvbkNoYW5nZWQnLCAoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogTmF2SWNvbkNvbmZpZykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uTmF2SWNvbkNoYW5nZWQoZXZlbnQsIGNvbmZpZylcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljICRvbkluaXQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudHlwZSkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbmZpZy50eXBlID0gdGhpcy50eXBlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5pbWFnZVVybCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbmZpZy5pbWFnZVVybCA9IHRoaXMuaW1hZ2VVcmw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmljb24pIHtcclxuICAgICAgICAgICAgdGhpcy5jb25maWcuaWNvbiA9IHRoaXMuaWNvbjtcclxuICAgICAgICB9ICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJG9uRGVzdHJveSgpIHtcclxuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKHRoaXMuY2xlYXJGbikpIHtcclxuICAgICAgICAgICAgdGhpcy5jbGVhckZuKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbk5hdkljb25DaGFuZ2VkKGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IE5hdkljb25Db25maWcpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25OYXZJY29uQ2xpY2soKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKF8uaXNGdW5jdGlvbih0aGlzLmNvbmZpZy5jbGljaykpIHtcclxuICAgICAgICAgICAgLy8gRXhlY3V0ZSBuYXYgaWNvbiBjYWxsYmFja1xyXG4gICAgICAgICAgICB0aGlzLmNvbmZpZy5jbGljaygpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5jb25maWcuZXZlbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QodGhpcy5jb25maWcuZXZlbnQpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5jb25maWcudHlwZSA9PSAnbWVudScpIHtcclxuICAgICAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoT3BlblNpZGVOYXZFdmVudCk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNvbmZpZy50eXBlID09ICdiYWNrJykge1xyXG4gICAgICAgICAgICB0aGlzLl93aW5kb3cuaGlzdG9yeS5iYWNrKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoTmF2SWNvbkNsaWNrZWRFdmVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuY29uc3QgTmF2SWNvbjogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XHJcbiAgICBiaW5kaW5nczogTmF2SWNvbkJpbmRpbmdzLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdpY29uL05hdkljb24uaHRtbCcsXHJcbiAgICBjb250cm9sbGVyOiBOYXZJY29uQ29udHJvbGxlclxyXG59XHJcblxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBOYXZJY29uJylcclxuICAgIC5jb21wb25lbnQoJ3BpcE5hdkljb24nLCBOYXZJY29uKTtcclxuIiwiZXhwb3J0IGxldCBOYXZJY29uQ2xpY2tlZEV2ZW50ID0gJ3BpcE5hdkljb25DbGlja2VkJztcclxuZXhwb3J0IGxldCBOYXZJY29uQ2hhbmdlZEV2ZW50ID0gJ3BpcE5hdkljb25DaGFuZ2VkJzsiLCJleHBvcnQgY2xhc3MgTmF2SWNvbkNvbmZpZyB7XHJcbiAgICAvLyBUeXBlIG9mIG5hdiBpY29uOiAnYmFjaycsICdtZW51JywgJ2ltYWdlJyBvciAnbm9uZSdcclxuICAgIHB1YmxpYyB0eXBlOiBzdHJpbmc7XHJcbiAgICAvLyBJbWFnZSB1cmxcclxuICAgIHB1YmxpYyBpbWFnZVVybDogc3RyaW5nO1xyXG4gICAgLy8gSWNvbiBuYW1lXHJcbiAgICBwdWJsaWMgaWNvbjogc3RyaW5nO1xyXG4gICAgLy8gSGFuZGxlIG5hdiBpY29uIGNsaWNrIGV2ZW50XHJcbiAgICBjbGljazogKCkgPT4gdm9pZDtcclxuICAgIC8vIEV2ZW50IG5hbWVcclxuICAgIGV2ZW50OiBzdHJpbmdcclxufTsiLCJpbXBvcnQgeyBOYXZJY29uQ29uZmlnIH0gZnJvbSAnLi9OYXZJY29uQ29uZmlnJztcclxuaW1wb3J0IHsgSU5hdkljb25TZXJ2aWNlLCBJTmF2SWNvblByb3ZpZGVyIH0gZnJvbSAnLi9JTmF2SWNvblNlcnZpY2UnO1xyXG5pbXBvcnQgeyBOYXZJY29uQ2hhbmdlZEV2ZW50IH0gZnJvbSAnLi9OYXZJY29uQW5ndWxhckV2ZW50cyc7XHJcblxyXG5jbGFzcyBOYXZJY29uU2VydmljZSBpbXBsZW1lbnRzIElOYXZJY29uU2VydmljZSB7XHJcbiAgICBwcml2YXRlIF9jb25maWc6IE5hdkljb25Db25maWc7XHJcbiAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcihjb25maWc6IE5hdkljb25Db25maWcsICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZSA9ICRyb290U2NvcGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBjb25maWcoKTogTmF2SWNvbkNvbmZpZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNldENhbGxiYWNrT3JFdmVudChjYWxsYmFja09yRXZlbnQ/OiBhbnkpOiB2b2lkIHtcclxuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKGNhbGxiYWNrT3JFdmVudCkpIHtcclxuICAgICAgICAgICAgdGhpcy5fY29uZmlnLmNsaWNrID0gY2FsbGJhY2tPckV2ZW50O1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuZXZlbnQgPSBudWxsO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoXy5pc1N0cmluZyhjYWxsYmFja09yRXZlbnQpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGljayA9IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5ldmVudCA9IGNhbGxiYWNrT3JFdmVudDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuY2xpY2sgPSBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuZXZlbnQgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2hvd01lbnUoY2FsbGJhY2tPckV2ZW50PzogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnR5cGUgPSAnbWVudSc7XHJcbiAgICAgICAgdGhpcy5zZXRDYWxsYmFja09yRXZlbnQoY2FsbGJhY2tPckV2ZW50KTtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzaG93SWNvbihpY29uOiBzdHJpbmcsIGNhbGxiYWNrT3JFdmVudD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50eXBlID0gJ2ljb24nO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5pY29uID0gaWNvbjtcclxuICAgICAgICB0aGlzLnNldENhbGxiYWNrT3JFdmVudChjYWxsYmFja09yRXZlbnQpO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNob3dCYWNrKGNhbGxiYWNrT3JFdmVudD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50eXBlID0gJ2JhY2snO1xyXG4gICAgICAgIHRoaXMuc2V0Q2FsbGJhY2tPckV2ZW50KGNhbGxiYWNrT3JFdmVudCk7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2hvd0ltYWdlKGltYWdlVXJsOiBzdHJpbmcsIGNhbGxiYWNrT3JFdmVudD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50eXBlID0gJ2ltYWdlJztcclxuICAgICAgICB0aGlzLl9jb25maWcuaW1hZ2VVcmwgPSBpbWFnZVVybDtcclxuICAgICAgICB0aGlzLnNldENhbGxiYWNrT3JFdmVudChjYWxsYmFja09yRXZlbnQpO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGhpZGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnR5cGUgPSAnbm9uZSc7XHJcbiAgICAgICAgdGhpcy5zZXRDYWxsYmFja09yRXZlbnQobnVsbCk7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNlbmRDb25maWdFdmVudCgpIHtcclxuICAgICAgICB0aGlzLl9yb290U2NvcGUuJGJyb2FkY2FzdChOYXZJY29uQ2hhbmdlZEV2ZW50LCB0aGlzLl9jb25maWcpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBOYXZJY29uUHJvdmlkZXIgaW1wbGVtZW50cyBJTmF2SWNvblByb3ZpZGVyIHtcclxuICAgIHByaXZhdGUgX2NvbmZpZzogTmF2SWNvbkNvbmZpZyA9IG5ldyBOYXZJY29uQ29uZmlnKCk7XHJcbiAgICBwcml2YXRlIF9zZXJ2aWNlOiBOYXZJY29uU2VydmljZTtcclxuXHJcbiAgICBwdWJsaWMgZ2V0IGNvbmZpZygpOiBOYXZJY29uQ29uZmlnIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgY29uZmlnKHZhbHVlOiBOYXZJY29uQ29uZmlnKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnID0gdmFsdWUgfHwgbmV3IE5hdkljb25Db25maWcoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNldENhbGxiYWNrT3JFdmVudChjYWxsYmFja09yRXZlbnQ/OiBhbnkpOiB2b2lkIHtcclxuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKGNhbGxiYWNrT3JFdmVudCkpXHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGljayA9IGNhbGxiYWNrT3JFdmVudDtcclxuICAgICAgICBlbHNlIHRoaXMuX2NvbmZpZy5jbGljayA9IG51bGw7XHJcblxyXG4gICAgICAgIGlmIChfLmlzU3RyaW5nKGNhbGxiYWNrT3JFdmVudCkpXHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5ldmVudCA9IGNhbGxiYWNrT3JFdmVudDtcclxuICAgICAgICBlbHNlIHRoaXMuX2NvbmZpZy5ldmVudCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldE1lbnUoY2FsbGJhY2tPckV2ZW50PzogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnR5cGUgPSAnbWVudSc7XHJcbiAgICAgICAgdGhpcy5zZXRDYWxsYmFja09yRXZlbnQoY2FsbGJhY2tPckV2ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0SWNvbihpY29uOiBzdHJpbmcsIGNhbGxiYWNrT3JFdmVudD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50eXBlID0gJ2ljb24nO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5pY29uID0gaWNvbjtcclxuICAgICAgICB0aGlzLnNldENhbGxiYWNrT3JFdmVudChjYWxsYmFja09yRXZlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRCYWNrKGNhbGxiYWNrT3JFdmVudD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50eXBlID0gJ2JhY2snO1xyXG4gICAgICAgIHRoaXMuc2V0Q2FsbGJhY2tPckV2ZW50KGNhbGxiYWNrT3JFdmVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldEltYWdlKGltYWdlVXJsOiBzdHJpbmcsIGNhbGxiYWNrT3JFdmVudD86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50eXBlID0gJ2ltYWdlJztcclxuICAgICAgICB0aGlzLl9jb25maWcuaW1hZ2VVcmwgPSBpbWFnZVVybDtcclxuICAgICAgICB0aGlzLnNldENhbGxiYWNrT3JFdmVudChjYWxsYmFja09yRXZlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9jb25maWcudHlwZSA9ICdub25lJztcclxuICAgICAgICB0aGlzLnNldENhbGxiYWNrT3JFdmVudChudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJGdldCgkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX3NlcnZpY2UgPT0gbnVsbClcclxuICAgICAgICAgICAgdGhpcy5fc2VydmljZSA9IG5ldyBOYXZJY29uU2VydmljZSh0aGlzLl9jb25maWcsICRyb290U2NvcGUpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5fc2VydmljZTtcclxuICAgIH1cclxuICAgICBcclxufVxyXG5cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcE5hdkljb24nKVxyXG4gICAgLnByb3ZpZGVyKCdwaXBOYXZJY29uJywgTmF2SWNvblByb3ZpZGVyKTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ3BpcE5hdkljb24nLCBbJ25nTWF0ZXJpYWwnLCAncGlwTmF2LlRyYW5zbGF0ZScsICdwaXBOYXYuVGVtcGxhdGVzJ10pO1xyXG5cclxuaW1wb3J0ICcuL05hdkljb25Db25maWcnO1xyXG5pbXBvcnQgJy4vTmF2SWNvbkFuZ3VsYXJFdmVudHMnO1xyXG5pbXBvcnQgJy4vSU5hdkljb25CaW5kaW5ncyc7XHJcbmltcG9ydCAnLi9JTmF2SWNvblNlcnZpY2UnO1xyXG5pbXBvcnQgJy4vTmF2SWNvblNlcnZpY2UnO1xyXG5pbXBvcnQgJy4vTmF2SWNvbic7XHJcblxyXG5cclxuZXhwb3J0ICogZnJvbSAnLi9OYXZJY29uQ29uZmlnJztcclxuZXhwb3J0ICogZnJvbSAnLi9JTmF2SWNvblNlcnZpY2UnO1xyXG5leHBvcnQgKiBmcm9tICcuL0lOYXZJY29uQmluZGluZ3MnO1xyXG5leHBvcnQgKiBmcm9tICcuL05hdkljb25TZXJ2aWNlJztcclxuIiwi77u/aW1wb3J0ICcuL2RlcGVuZGVuY2llcy9UcmFuc2xhdGVGaWx0ZXInO1xyXG5pbXBvcnQgJy4vbGFuZ3VhZ2UvTGFuZ3VhZ2VQaWNrZXJEaXJlY3RpdmUnO1xyXG5pbXBvcnQgJy4vZHJvcGRvd24vRHJvcGRvd25EaXJlY3RpdmUnO1xyXG5pbXBvcnQgJy4vdGFicy9UYWJzJztcclxuaW1wb3J0ICcuL2FjdGlvbnMnO1xyXG5pbXBvcnQgJy4vYXBwYmFyJztcclxuaW1wb3J0ICcuL3NlYXJjaCc7XHJcbmltcG9ydCAnLi9icmVhZGNydW1iJztcclxuaW1wb3J0ICcuL3NpZGVuYXYnO1xyXG5pbXBvcnQgJy4vaGVhZGVyJztcclxuaW1wb3J0ICcuL21lbnUnO1xyXG5pbXBvcnQgJy4vaWNvbic7XHJcbmltcG9ydCAnLi9jb21tb24vTmF2U2VydmljZSc7XHJcblxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBOYXYnLCBbXHJcbiAgICAgICAgJ3BpcE5hdlNlcnZpY2UnLFxyXG4gICAgICAgICdwaXBEcm9wZG93bicsXHJcbiAgICAgICAgJ3BpcFRhYnMnLFxyXG4gICAgICAgICdwaXBBcHBCYXInLFxyXG4gICAgICAgICdwaXBTZWFyY2hCYXInLFxyXG4gICAgICAgICdwaXBOYXZJY29uJyxcclxuICAgICAgICAncGlwQnJlYWRjcnVtYicsXHJcbiAgICAgICAgJ3BpcExhbmd1YWdlUGlja2VyJyxcclxuICAgICAgICAncGlwQWN0aW9ucycsIFxyXG4gICAgICAgICdwaXBTaWRlTmF2JyxcclxuICAgICAgICAncGlwTmF2TWVudScsXHJcbiAgICAgICAgJ3BpcE5hdkhlYWRlcidcclxuICAgIF0pXHJcbiAgICAuY29uc3RhbnQoJ25hdkNvbnN0YW50Jywge1xyXG4gICAgICAgICdUQUJfQlJFQUtQT0lOVCc6ICdndC1zbScsXHJcbiAgICAgICAgJ1NJREVOQVZfQ09OVEFJTkVSJzogJy5waXAtbWFpbicsXHJcbiAgICAgICAgJ1NJREVOQVZfTEFSR0VfV0lEVEgnOiAzMjAsXHJcbiAgICAgICAgJ1NJREVOQVZfTUlERExFX1dJRFRIJzogMjQwLFxyXG4gICAgICAgICdTSURFTkFWX1NNQUxMX1dJRFRIJzogNzIsXHJcbiAgICAgICAgJ1NJREVOQVZfQU5JTUFUSU9OX0RVUkFUSU9OJzogNjAwXHJcblxyXG4gICAgfSlcclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vYWN0aW9ucyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vYXBwYmFyJztcclxuZXhwb3J0ICogZnJvbSAnLi9icmVhZGNydW1iJztcclxuZXhwb3J0ICogZnJvbSAnLi9zZWFyY2gnO1xyXG5leHBvcnQgKiBmcm9tICcuL3NpZGVuYXYnO1xyXG5leHBvcnQgKiBmcm9tICcuL2ljb24nO1xyXG5leHBvcnQgKiBmcm9tICcuL21lbnUnO1xyXG5leHBvcnQgKiBmcm9tICcuL2hlYWRlcic7XHJcbmV4cG9ydCAqIGZyb20gJy4vY29tbW9uL05hdlNlcnZpY2UnO1xyXG4iLCIoKCkgPT4ge1xyXG4gICAgY2xhc3MgTGFuZ3VhZ2VQaWNrZXJEaXJlY3RpdmVDb250cm9sbGVyIHtcclxuICAgICAgICBwcml2YXRlIF9lbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5O1xyXG4gICAgICAgIHByaXZhdGUgX2F0dHJzOiBuZy5JQXR0cmlidXRlcztcclxuICAgICAgICBwcml2YXRlIF9pbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3Njb3BlOiBuZy5JU2NvcGU7XHJcbiAgICAgICAgcHJpdmF0ZSBfbG9nOiBuZy5JTG9nU2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3RyYW5zbGF0ZTogcGlwLnNlcnZpY2VzLklUcmFuc2xhdGVTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3RpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZTtcclxuXHJcbiAgICAgICAgcHVibGljIGxhbmd1YWdlczogc3RyaW5nW10gPSBbJ2VuJywgJ3J1J107XHJcbiAgICAgICAgcHVibGljIHNlbGVjdGVkTGFuZ3VhZ2U6IHN0cmluZztcclxuXHJcbiAgICAgICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICAgICAkZWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeSxcclxuICAgICAgICAgICAgJGF0dHJzOiBuZy5JQXR0cmlidXRlcyxcclxuICAgICAgICAgICAgJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UsXHJcbiAgICAgICAgICAgICRzY29wZTogbmcuSVNjb3BlLFxyXG4gICAgICAgICAgICAkbG9nOiBuZy5JTG9nU2VydmljZSxcclxuICAgICAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgICAgICR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2VcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudCA9ICRlbGVtZW50O1xyXG4gICAgICAgICAgICB0aGlzLl9hdHRycyA9ICRhdHRycztcclxuICAgICAgICAgICAgdGhpcy5fc2NvcGUgPSAkc2NvcGU7XHJcbiAgICAgICAgICAgIHRoaXMuX2luamVjdG9yID0gJGluamVjdG9yO1xyXG4gICAgICAgICAgICB0aGlzLl9sb2cgPSAkbG9nO1xyXG4gICAgICAgICAgICB0aGlzLl9yb290U2NvcGUgPSAkcm9vdFNjb3BlO1xyXG4gICAgICAgICAgICB0aGlzLl90aW1lb3V0ID0gJHRpbWVvdXQ7XHJcbiAgICAgICAgICAgIHRoaXMuX3RyYW5zbGF0ZSA9ICRpbmplY3Rvci5oYXMoJ3BpcFRyYW5zbGF0ZScpID8gPHBpcC5zZXJ2aWNlcy5JVHJhbnNsYXRlU2VydmljZT4kaW5qZWN0b3IuZ2V0KCdwaXBUcmFuc2xhdGUnKSA6IG51bGw7XHJcblxyXG4gICAgICAgICAgICAvLyBBcHBseSBjbGFzcyBhbmQgY2FsbCByZXNpemVcclxuICAgICAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC1sYW5ndWFnZS1waWNrZXInKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuc2V0TGFuZ3VhZ2VzKCRzY29wZVsnbGFuZ3VhZ2VzJ10pO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5zZWxlY3RlZExhbmd1YWdlID0gJHNjb3BlWyd2YWx1ZSddIHx8IHRoaXMubGFuZ3VhZ2VzWzBdO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIGdldCBsYW5ndWFnZSgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RyYW5zbGF0ZSA/IHRoaXMuX3RyYW5zbGF0ZS5sYW5ndWFnZSA6IG51bGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgc2V0TGFuZ3VhZ2VzKGxhbmd1YWdlczogc3RyaW5nW10pOiB2b2lkIHtcclxuICAgICAgICAgICAgdGhpcy5sYW5ndWFnZXMgPSBsYW5ndWFnZXMubGVuZ3RoID4gMCA/IGxhbmd1YWdlcyA6IFsnZW4nLCAncnUnXTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBvbkxhbmd1YWdlQ2xpY2sobGFuZ3VhZ2U6IHN0cmluZykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fdHJhbnNsYXRlICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRMYW5ndWFnZSA9IGxhbmd1YWdlO1xyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5fdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl90cmFuc2xhdGUubGFuZ3VhZ2UgPSB0aGlzLnNlbGVjdGVkTGFuZ3VhZ2U7XHJcbiAgICAgICAgICAgICAgICAvLyB9LCAwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gbGFuZ3VhZ2VQaWNrZXJEaXJlY3RpdmUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgc2NvcGU6IHtcclxuICAgICAgICAgICAgICAgIGxhbmd1YWdlczogJz1sYW5ndWFnZXMnLFxyXG4gICAgICAgICAgICAgICAgdmFsdWU6ICc9dmFsdWUnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHJlcGxhY2U6IGZhbHNlLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogZnVuY3Rpb24gKGVsZW1lbnQsIGF0dHIpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAnbGFuZ3VhZ2UvTGFuZ3VhZ2VQaWNrZXIuaHRtbCc7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IExhbmd1YWdlUGlja2VyRGlyZWN0aXZlQ29udHJvbGxlcixcclxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAnJGN0cmwnXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBhbmd1bGFyXHJcbiAgICAgICAgLm1vZHVsZSgncGlwTGFuZ3VhZ2VQaWNrZXInLCBbXHJcbiAgICAgICAgICAgICduZ01hdGVyaWFsJywgJ3BpcE5hdi5UcmFuc2xhdGUnLCAncGlwTmF2LlRlbXBsYXRlcydcclxuICAgICAgICBdKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcExhbmd1YWdlUGlja2VyJywgbGFuZ3VhZ2VQaWNrZXJEaXJlY3RpdmUpO1xyXG5cclxufSkoKTsiLCJpbXBvcnQgeyBJU2lkZU5hdlNlcnZpY2UsIFNpZGVOYXZDb25maWcgfSBmcm9tICcuLi9zaWRlbmF2L1NpZGVOYXZTZXJ2aWNlJztcclxuaW1wb3J0IHsgTmF2TWVudUNvbmZpZywgTmF2TWVudVNlY3Rpb24sIElOYXZNZW51U2VydmljZSwgTmF2TWVudUxpbmsgfSBmcm9tICcuL05hdk1lbnVTZXJ2aWNlJztcclxuaW1wb3J0IHsgU2lkZU5hdlN0YXRlTmFtZXMsIFNpZGVOYXZTdGF0ZSB9IGZyb20gJy4uL3NpZGVuYXYvU2lkZU5hdlN0YXRlJztcclxuXHJcbigoKSA9PiB7XHJcbiAgICBjbGFzcyBOYXZNZW51RGlyZWN0aXZlQ29udHJvbGxlciB7XHJcbiAgICAgICAgcHJpdmF0ZSBfZWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeTtcclxuICAgICAgICBwcml2YXRlIF9hdHRyczogbmcuSUF0dHJpYnV0ZXM7XHJcbiAgICAgICAgcHJpdmF0ZSBfaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9zY29wZTogYW5ndWxhci5JU2NvcGU7XHJcbiAgICAgICAgcHJpdmF0ZSBfbG9nOiBuZy5JTG9nU2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3BpcFNpZGVOYXY6IElTaWRlTmF2U2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9waXBOYXZNZW51OiBJTmF2TWVudVNlcnZpY2U7XHJcbiAgICAgICAgcHJpdmF0ZSBfc3RhdGU6IGFuZ3VsYXIudWkuSVN0YXRlU2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF93aW5kb3c6IG5nLklXaW5kb3dTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX2xvY2F0aW9uOiBuZy5JTG9jYXRpb25TZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3BpcE1lZGlhOiBwaXAubGF5b3V0cy5JTWVkaWFTZXJ2aWNlO1xyXG4gICAgICAgIHByaXZhdGUgX3RpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZTtcclxuICAgICAgICBwcml2YXRlIF9hbmltYXRpb25EdXJhdGlvbjtcclxuICAgICAgICBwcml2YXRlIF9waXBTaWRlTmF2RWxlbWVudDogbmcuSUF1Z21lbnRlZEpRdWVyeTtcclxuXHJcbiAgICAgICAgcHVibGljIHNlY3Rpb25zOiBOYXZNZW51U2VjdGlvbltdO1xyXG4gICAgICAgIHB1YmxpYyBkZWZhdWx0SWNvbjogc3RyaW5nO1xyXG4gICAgICAgIHB1YmxpYyBpc0NvbGxhcHNlZDogYm9vbGVhbjtcclxuICAgICAgICBwdWJsaWMgZXhwYW5kZWQ6IGJvb2xlYW47XHJcbiAgICAgICAgcHVibGljIGV4cGFuZGVkQnV0dG9uOiBib29sZWFuO1xyXG4gICAgICAgIHB1YmxpYyBzaWRlTmF2U3RhdGU6IFNpZGVOYXZTdGF0ZTtcclxuXHJcbiAgICAgICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICAgICAkYXR0cnM6IG5nLklBdHRyaWJ1dGVzLFxyXG4gICAgICAgICAgICAkaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZSxcclxuICAgICAgICAgICAgJHNjb3BlOiBhbmd1bGFyLklTY29wZSxcclxuICAgICAgICAgICAgJGxvZzogbmcuSUxvZ1NlcnZpY2UsXHJcbiAgICAgICAgICAgICR3aW5kb3c6IG5nLklXaW5kb3dTZXJ2aWNlLFxyXG4gICAgICAgICAgICAkbG9jYXRpb246IG5nLklMb2NhdGlvblNlcnZpY2UsXHJcbiAgICAgICAgICAgICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLFxyXG4gICAgICAgICAgICAkdGltZW91dDogbmcuSVRpbWVvdXRTZXJ2aWNlLFxyXG4gICAgICAgICAgICBwaXBTaWRlTmF2OiBJU2lkZU5hdlNlcnZpY2UsXHJcbiAgICAgICAgICAgIHBpcE5hdk1lbnU6IElOYXZNZW51U2VydmljZSxcclxuICAgICAgICAgICAgbmF2Q29uc3RhbnQ6IGFueVxyXG5cclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudCA9ICRlbGVtZW50O1xyXG4gICAgICAgICAgICB0aGlzLl9hdHRycyA9ICRhdHRycztcclxuICAgICAgICAgICAgdGhpcy5fc2NvcGUgPSAkc2NvcGU7XHJcbiAgICAgICAgICAgIHRoaXMuX2luamVjdG9yID0gJGluamVjdG9yO1xyXG4gICAgICAgICAgICB0aGlzLl9sb2cgPSAkbG9nO1xyXG4gICAgICAgICAgICB0aGlzLl9yb290U2NvcGUgPSAkcm9vdFNjb3BlO1xyXG4gICAgICAgICAgICB0aGlzLl90aW1lb3V0ID0gJHRpbWVvdXQ7XHJcbiAgICAgICAgICAgIHRoaXMuX3dpbmRvdyA9ICR3aW5kb3c7XHJcbiAgICAgICAgICAgIHRoaXMuX2xvY2F0aW9uID0gJGxvY2F0aW9uO1xyXG4gICAgICAgICAgICB0aGlzLl9waXBTaWRlTmF2ID0gcGlwU2lkZU5hdjtcclxuICAgICAgICAgICAgdGhpcy5fcGlwTmF2TWVudSA9IHBpcE5hdk1lbnU7XHJcblxyXG4gICAgICAgICAgICB0aGlzLl9zdGF0ZSA9IHRoaXMuX2luamVjdG9yLmhhcygnJHN0YXRlJykgPyA8YW5ndWxhci51aS5JU3RhdGVTZXJ2aWNlPnRoaXMuX2luamVjdG9yLmdldCgnJHN0YXRlJykgOiBudWxsO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fYW5pbWF0aW9uRHVyYXRpb24gPSBuYXZDb25zdGFudC5TSURFTkFWX0FOSU1BVElPTl9EVVJBVElPTixcclxuICAgICAgICAgICAgICAgIHRoaXMuX3BpcFNpZGVOYXZFbGVtZW50ID0gJGVsZW1lbnQucGFyZW50KCkucGFyZW50KCk7XHJcbiAgICAgICAgICAgIC8vIEFwcGx5IGNsYXNzIGFuZCBjYWxsIHJlc2l6ZVxyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LmFkZENsYXNzKCdwaXAtc3RpY2t5LW5hdi1tZW51Jyk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnNlY3Rpb25zID0gdGhpcy5fc2NvcGVbJ3NlY3Rpb25zJ10gfHwgdGhpcy5fcGlwTmF2TWVudS5zZWN0aW9ucztcclxuXHJcbiAgICAgICAgICAgIHRoaXMuc2V0Q29sbGFwc2libGUoKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdEljb24gPSB0aGlzLl9waXBOYXZNZW51LmRlZmF1bHRJY29uO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5vblN0YXRlQ2hhbmdlZChudWxsLCB0aGlzLl9waXBTaWRlTmF2LnN0YXRlKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBjbGVhbnVwTmF2TWVudUNoYW5nZWQ6IEZ1bmN0aW9uID0gdGhpcy5fcm9vdFNjb3BlLiRvbigncGlwTmF2TWVudUNoYW5nZWQnLCAoJGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IE5hdk1lbnVDb25maWcpID0+IHsgLy9uYXZTdGF0ZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5vbkNvbmZpZ0NoYW5nZWQoJGV2ZW50LCBjb25maWcpXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBsZXQgY2xlYW51cFNpZGVOYXZTdGF0ZUNoYW5nZWQ6IEZ1bmN0aW9uID0gdGhpcy5fcm9vdFNjb3BlLiRvbigncGlwU2lkZU5hdlN0YXRlQ2hhbmdlZCcsICgkZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIHN0YXRlOiBTaWRlTmF2U3RhdGUpID0+IHsgLy9uYXZTdGF0ZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5vblN0YXRlQ2hhbmdlZCgkZXZlbnQsIHN0YXRlKVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuX3Njb3BlLiRvbignJGRlc3Ryb3knLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoYW5ndWxhci5pc0Z1bmN0aW9uKGNsZWFudXBOYXZNZW51Q2hhbmdlZCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBjbGVhbnVwTmF2TWVudUNoYW5nZWQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzRnVuY3Rpb24oY2xlYW51cFNpZGVOYXZTdGF0ZUNoYW5nZWQpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2xlYW51cFNpZGVOYXZTdGF0ZUNoYW5nZWQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBzZXRDb2xsYXBzaWJsZSgpOiB2b2lkIHtcclxuICAgICAgICAgICAgdmFyIGNvbGxhcHNlZDogYm9vbGVhbjtcclxuICAgICAgICAgICAgaWYgKGFuZ3VsYXIuaXNGdW5jdGlvbih0aGlzLl9zY29wZVsnY29sbGFwc2VkJ10pKSB7XHJcbiAgICAgICAgICAgICAgICBjb2xsYXBzZWQgPSB0aGlzLl9zY29wZVsnY29sbGFwc2VkJ10oKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbGxhcHNlZCA9IHRoaXMuX3Njb3BlWydjb2xsYXBzZWQnXSAhPT0gZmFsc2UgJiYgdGhpcy5fc2NvcGVbJ2NvbGxhcHNlZCddICE9PSAnZmFsc2UnO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLmlzQ29sbGFwc2VkID0gY29sbGFwc2VkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljIG9uRXhwYW5kKCk6IHZvaWQge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNDb2xsYXBzZWQpIHsgcmV0dXJuIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuZXhwYW5kZWQgPSAhdGhpcy5leHBhbmRlZDtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmV4cGFuZGVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9waXBTaWRlTmF2RWxlbWVudC5yZW1vdmVDbGFzcygncGlwLXN0aWNreS1uYXYtc21hbGwnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3BpcFNpZGVOYXZFbGVtZW50LmFkZENsYXNzKCdwaXAtc3RpY2t5LW5hdi1zbWFsbCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kZW1pdCgncGlwTmF2RXhwYW5kZWQnLCB0aGlzLmV4cGFuZGVkKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBpc0hpZGRlbihpdGVtOiBOYXZNZW51TGluayk6IGJvb2xlYW4ge1xyXG4gICAgICAgICAgICByZXR1cm4gaXRlbSAmJiBpdGVtLmFjY2VzcyAmJiAhaXRlbS5hY2Nlc3MoaXRlbSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgaXNTZWN0aW9uRW1wdHkobGlua0NvbGxlY3Rpb246IE5hdk1lbnVMaW5rW10pOiBib29sZWFuIHtcclxuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHRydWU7XHJcbiAgICAgICAgICAgIF8uZWFjaChsaW5rQ29sbGVjdGlvbiwgKGxpbms6IE5hdk1lbnVMaW5rKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNIaWRkZW4obGluaykpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSBvbkNvbmZpZ0NoYW5nZWQoJGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IE5hdk1lbnVDb25maWcpOiB2b2lkIHtcclxuICAgICAgICAgICAgaWYgKCFjb25maWcpIHJldHVybjtcclxuICAgICAgICAgICAgdGhpcy5zZWN0aW9ucyA9IGNvbmZpZy5zZWN0aW9ucztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByaXZhdGUgb25TdGF0ZUNoYW5nZWQoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIHN0YXRlOiBTaWRlTmF2U3RhdGUpOiB2b2lkIHtcclxuICAgICAgICAgICAgLy8gU1M+IFlvdSBzaGFsbCBub3Qgc2V0IGl0IGludG8gdGhlIG1lbnUgc3RhdGUuIEluc3RlYWQgaXQgc2hhbGwgYmUgY29udHJvbGxlZCBieSB0aGUgc3RhdGUgb2YgU2lkZW5hdlxyXG4gICAgICAgICAgICBpZiAoIXN0YXRlKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICB0aGlzLmlzQ29sbGFwc2VkID0gc3RhdGUuZXhwYW5kO1xyXG4gICAgICAgICAgICB0aGlzLmV4cGFuZGVkID0gc3RhdGUuaXNFeHBhbmRlZDtcclxuICAgICAgICAgICAgdGhpcy5leHBhbmRlZEJ1dHRvbiA9IHN0YXRlLmV4cGFuZGVkQnV0dG9uO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5zaWRlTmF2U3RhdGUgPSBzdGF0ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBpc0FjdGl2ZShsaW5rOiBOYXZNZW51TGluayk6IGJvb2xlYW4ge1xyXG4gICAgICAgICAgICBpZiAobGluay5wYXJlbnRTdGF0ZSkge1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9zdGF0ZSAhPSBudWxsICYmIHRoaXMuX3N0YXRlLmluY2x1ZGVzKGxpbmsucGFyZW50U3RhdGUpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobGluay5zdGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX3N0YXRlICE9IG51bGwgJiYgdGhpcy5fc3RhdGUuaW5jbHVkZXMobGluay5zdGF0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIGlmIChsaW5rLmhyZWYpIHtcclxuICAgICAgICAgICAgICAgIGlmIChsaW5rLmhyZWYuc3BsaXQoJz8nKVswXSA9PT0gdGhpcy5fd2luZG93LmxvY2F0aW9uLmhyZWYuc3BsaXQoJz8nKVswXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGxpbmsudXJsKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAobGluay51cmwuc3BsaXQoL1tcXHMvP10rLylbMV0gPT09IHRoaXMuX2xvY2F0aW9uLnVybCgpLnNwbGl0KC9bXFxzLz9dKy8pWzFdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHB1YmxpYyBjbGlja0xpbmsoZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGxpbms6IE5hdk1lbnVMaW5rKTogdm9pZCB7XHJcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgICAgICAgICAgaWYgKCFsaW5rKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9waXBTaWRlTmF2LmNsb3NlKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAobGluay5ocmVmKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAobGluay5ocmVmLnNwbGl0KCc/JylbMF0gPT09IHRoaXMuX3dpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCc/JylbMF0pIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9waXBTaWRlTmF2LmNsb3NlKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9waXBTaWRlTmF2LmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl90aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl93aW5kb3cubG9jYXRpb24uaHJlZiA9IGxpbmsuaHJlZjtcclxuICAgICAgICAgICAgICAgIH0sIHRoaXMuX2FuaW1hdGlvbkR1cmF0aW9uKTtcclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobGluay51cmwpIHtcclxuICAgICAgICAgICAgICAgIGlmIChsaW5rLnVybC5zcGxpdCgvW1xccy8/XSsvKVsxXSA9PT0gdGhpcy5fbG9jYXRpb24udXJsKCkuc3BsaXQoL1tcXHMvP10rLylbMV0pIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9waXBTaWRlTmF2LmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuX3BpcFNpZGVOYXYuY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3RpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2xvY2F0aW9uLnVybChsaW5rLnVybCk7XHJcbiAgICAgICAgICAgICAgICB9LCB0aGlzLl9hbmltYXRpb25EdXJhdGlvbik7XHJcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGxpbmsuc3RhdGUpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9zdGF0ZSAhPSBudWxsICYmIHRoaXMuX3N0YXRlLmN1cnJlbnQubmFtZSA9PT0gbGluay5zdGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3BpcFNpZGVOYXYuY2xvc2UoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuX3BpcFNpZGVOYXYuY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3RpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3N0YXRlLmdvKGxpbmsuc3RhdGUsIGxpbmsuc3RhdGVQYXJhbXMpO1xyXG4gICAgICAgICAgICAgICAgfSwgdGhpcy5fYW5pbWF0aW9uRHVyYXRpb24pO1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChsaW5rLmV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9yb290U2NvcGUuJGJyb2FkY2FzdChsaW5rLmV2ZW50LCBsaW5rKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgIHRoaXMuX3BpcFNpZGVOYXYuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIG5hdk1lbnVEaXJlY3RpdmUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFQScsXHJcbiAgICAgICAgICAgIHNjb3BlOiB7XHJcbiAgICAgICAgICAgICAgICBzZWN0aW9uczogJz0/cGlwU2VjdGlvbnMnLFxyXG4gICAgICAgICAgICAgICAgY29sbGFwc2VkOiAnPT9waXBDb2xsYXBzZWQnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHJlcGxhY2U6IGZhbHNlLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ21lbnUvTmF2TWVudS5odG1sJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogTmF2TWVudURpcmVjdGl2ZUNvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJyRjdHJsJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcE5hdk1lbnUnKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcE5hdk1lbnUnLCBuYXZNZW51RGlyZWN0aXZlKTtcclxuXHJcbn0pKCk7IiwiZXhwb3J0IGxldCBOYXZNZW51Q2hhbmdlZEV2ZW50ID0gJ3BpcE5hdk1lbnVDaGFuZ2VkJztcclxuXHJcbmV4cG9ydCBjbGFzcyBOYXZNZW51TGluayB7XHJcbiAgICAvLyBOYW1lIHRvIHJlZmVyIHRvIHRoZSBpdGVtXHJcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gICAgLy8gTGluayB2aXNpYmxlIHRpdGxlXHJcbiAgICBwdWJsaWMgdGl0bGU6IHN0cmluZztcclxuICAgIC8vIFRvb2x0aXAgdGV4dFxyXG4gICAgcHVibGljIHRvb2x0aXBUZXh0Pzogc3RyaW5nO1xyXG4gICAgLy8gSWNvbiBuYW1lIGZyb20gJGljb25Qcm92aWRlclxyXG4gICAgcHVibGljIGljb24/OiBzdHJpbmc7XHJcbiAgICAvLyBDb3VudGVyIGJhZGdlXHJcbiAgICBwdWJsaWMgY291bnQ/OiBudW1iZXI7XHJcbiAgICAvLyBjbGFzcyBmb3IgYmFkZ2Ugc3R5bGVcclxuICAgIHB1YmxpYyBiYWRnZVN0eWxlPzogc3RyaW5nO1xyXG4gICAgLy8gQWNjZXNzIGZ1bmN0aW9uXHJcbiAgICBwdWJsaWMgYWNjZXNzPzogKGxpbms6IE5hdk1lbnVMaW5rKSA9PiBib29sZWFuO1xyXG4gICAgLy8gd2luZG93LmxvY2F0aW9uLmhyZWZcclxuICAgIHB1YmxpYyBocmVmPzogc3RyaW5nO1xyXG4gICAgLy8gJGxvY2F0aW9uLnVybFxyXG4gICAgcHVibGljIHVybD86IHN0cmluZztcclxuICAgIC8vICRzdGF0ZS5nbyhzdGF0ZSwgc3RhdGVQYXJhbXMpXHJcbiAgICBwdWJsaWMgc3RhdGU/OiBzdHJpbmc7XHJcbiAgICAvLyBQYXJhbWV0ZXJzIGZvciAkc3RhdGUuZ28oc3RhdGUsIHN0YXRlUGFyYW1zKVxyXG4gICAgcHVibGljIHN0YXRlUGFyYW1zPzogYW55O1xyXG4gICAgLy8gcGFyZW50IHN0YXRlIG9yIHBhcmVudCBzdGF0ZSBmb3Igc2VsZWN0aW9uIGl0ZW0gXHJcbiAgICBwdWJsaWMgcGFyZW50U3RhdGU/OiBzdHJpbmc7XHJcbiAgICAvLyAkcm9vdFNjb3BlLmJyb2FkY2FzdChldmVudClcclxuICAgIHB1YmxpYyBldmVudD86IHN0cmluZztcclxuICAgIC8vIENsaWNrIGNhbGxiYWNrXHJcbiAgICBwdWJsaWMgY2xpY2s/OiAobGluazogTmF2TWVudUxpbmspID0+IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBOYXZNZW51U2VjdGlvbiB7XHJcbiAgICAvLyBOYW1lIHRvIHJlZmVyIHRvIHRoZSBzZWN0aW9uXHJcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gICAgLy8gU2VjdGlvbiB2aXNpYmxlIHRpdGxlXHJcbiAgICBwdWJsaWMgdGl0bGU/OiBzdHJpbmc7XHJcbiAgICAvLyBUb29sdGlwIHRleHRcclxuICAgIHB1YmxpYyB0b29sdGlwVGV4dD86IHN0cmluZztcclxuICAgIC8vIEljb24gbmFtZSBmcm9tICRpY29uUHJvdmlkZXJcclxuICAgIHB1YmxpYyBpY29uPzogc3RyaW5nO1xyXG4gICAgLy8gTGlua3Mgc2hvd24gaW4gdGhlIHNlY3Rpb25cclxuICAgIHB1YmxpYyBsaW5rczogTmF2TWVudUxpbmtbXTtcclxuICAgIC8vIEFjY2VzcyBmdW5jdGlvblxyXG4gICAgcHVibGljIGFjY2Vzcz86IChzZWN0aW9uOiBOYXZNZW51U2VjdGlvbikgPT4gYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE5hdk1lbnVDb25maWcge1xyXG4gICAgc2VjdGlvbnM6IE5hdk1lbnVTZWN0aW9uW107XHJcbiAgICBkZWZhdWx0SWNvbjogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElOYXZNZW51U2VydmljZSB7XHJcbiAgICBzZWN0aW9uczogTmF2TWVudVNlY3Rpb25bXTtcclxuICAgIGRlZmF1bHRJY29uOiBzdHJpbmc7XHJcbiAgICB1cGRhdGVDb3VudChsaW5rOiBzdHJpbmcsIGNvdW50OiBudW1iZXIpOiB2b2lkO1xyXG4gICAgdXBkYXRlQmFkZ2VTdHlsZShsaW5rOiBzdHJpbmcsIHN0eWxlOiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgY2xlYXJDb3VudHMoKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJTmF2TWVudVByb3ZpZGVyIGV4dGVuZHMgbmcuSVNlcnZpY2VQcm92aWRlciB7XHJcbiAgICBzZWN0aW9uczogTmF2TWVudVNlY3Rpb25bXTtcclxuICAgIGRlZmF1bHRJY29uOiBzdHJpbmc7XHJcbn1cclxuXHJcbmNsYXNzIE5hdk1lbnVTZXJ2aWNlIGltcGxlbWVudHMgSU5hdk1lbnVTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgX2NvbmZpZzogTmF2TWVudUNvbmZpZztcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIGNvbmZpZzogTmF2TWVudUNvbmZpZyxcclxuICAgICAgICAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZSA9ICRyb290U2NvcGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBzZWN0aW9ucygpOiBOYXZNZW51U2VjdGlvbltdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnNlY3Rpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgc2VjdGlvbnModmFsdWU6IE5hdk1lbnVTZWN0aW9uW10pIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuc2VjdGlvbnMgPSB2YWx1ZSB8fCBbXTtcclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgZGVmYXVsdEljb24oKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmRlZmF1bHRJY29uO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGVCYWRnZVN0eWxlKGxpbms6IHN0cmluZywgc3R5bGU6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIGlmIChsaW5rID09IG51bGwgfHwgIV8uaXNTdHJpbmcoc3R5bGUpKSByZXR1cm47XHJcblxyXG4gICAgICAgIF8uZWFjaCh0aGlzLl9jb25maWcuc2VjdGlvbnMsIChzKSA9PiB7XHJcbiAgICAgICAgICAgIF8uZWFjaChzLmxpbmtzLCAobCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGwubmFtZSA9PSBsaW5rKVxyXG4gICAgICAgICAgICAgICAgICAgIGwuYmFkZ2VTdHlsZSA9IHN0eWxlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5zZW5kQ2hhbmdlRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IGRlZmF1bHRJY29uKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcuZGVmYXVsdEljb24gPSB2YWx1ZTtcclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGVDb3VudChsaW5rOiBzdHJpbmcsIGNvdW50OiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICBpZiAobGluayA9PSBudWxsIHx8ICFfLmlzTnVtYmVyKGNvdW50KSkgcmV0dXJuO1xyXG5cclxuICAgICAgICBfLmVhY2godGhpcy5fY29uZmlnLnNlY3Rpb25zLCAocykgPT4ge1xyXG4gICAgICAgICAgICBfLmVhY2gocy5saW5rcywgKGwpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChsLm5hbWUgPT0gbGluaylcclxuICAgICAgICAgICAgICAgICAgICBsLmNvdW50ID0gY291bnQ7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnNlbmRDaGFuZ2VFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGVhckNvdW50cygpOiB2b2lkIHtcclxuICAgICAgICBfLmVhY2godGhpcy5fY29uZmlnLnNlY3Rpb25zLCAocykgPT4ge1xyXG4gICAgICAgICAgICBfLmVhY2gocy5saW5rcywgKGwpID0+IHtcclxuICAgICAgICAgICAgICAgIGwuY291bnQgPSBudWxsO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5zZW5kQ2hhbmdlRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNlbmRDaGFuZ2VFdmVudCgpIHtcclxuICAgICAgICB0aGlzLl9yb290U2NvcGUuJGVtaXQoTmF2TWVudUNoYW5nZWRFdmVudCwgdGhpcy5fY29uZmlnKTtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgTmF2TWVudVByb3ZpZGVyIGltcGxlbWVudHMgSU5hdk1lbnVQcm92aWRlciB7XHJcbiAgICBwcml2YXRlIF9jb25maWc6IE5hdk1lbnVDb25maWcgPSB7XHJcbiAgICAgICAgc2VjdGlvbnM6IFtdLFxyXG4gICAgICAgIGRlZmF1bHRJY29uOiAnaWNvbnM6Zm9sZGVyJ1xyXG4gICAgfTtcclxuICAgIHByaXZhdGUgX3NlcnZpY2U6IE5hdk1lbnVTZXJ2aWNlO1xyXG5cclxuICAgIHB1YmxpYyBnZXQgc2VjdGlvbnMoKTogTmF2TWVudVNlY3Rpb25bXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5zZWN0aW9ucztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IHNlY3Rpb25zKHZhbHVlOiBOYXZNZW51U2VjdGlvbltdKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnNlY3Rpb25zID0gdmFsdWUgfHwgW107XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBkZWZhdWx0SWNvbigpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcuZGVmYXVsdEljb247XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBkZWZhdWx0SWNvbih2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmRlZmF1bHRJY29uID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljICRnZXQoJHJvb3RTY29wZSkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX3NlcnZpY2UgPT0gbnVsbClcclxuICAgICAgICAgICAgdGhpcy5fc2VydmljZSA9IG5ldyBOYXZNZW51U2VydmljZSh0aGlzLl9jb25maWcsICRyb290U2NvcGUpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5fc2VydmljZTtcclxuICAgIH1cclxufVxyXG5cclxuYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwTmF2TWVudScpXHJcbiAgICAucHJvdmlkZXIoJ3BpcE5hdk1lbnUnLCBOYXZNZW51UHJvdmlkZXIpO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgncGlwTmF2TWVudScsIFsnbmdNYXRlcmlhbCcsICdwaXBOYXYuVHJhbnNsYXRlJywgJ3BpcE5hdi5UZW1wbGF0ZXMnXSk7XHJcblxyXG5pbXBvcnQgJy4vTmF2TWVudVNlcnZpY2UnO1xyXG5pbXBvcnQgJy4vTmF2TWVudURpcmVjdGl2ZSc7XHJcblxyXG5leHBvcnQgKiBmcm9tICcuL05hdk1lbnVTZXJ2aWNlJzsiLCJleHBvcnQgbGV0IE9wZW5TZWFyY2hFdmVudCA9ICdwaXBPcGVuU2VhcmNoJztcclxuZXhwb3J0IGxldCBDbG9zZVNlYXJjaEV2ZW50ID0gJ3BpcENsb3NlU2VhcmNoJztcclxuZXhwb3J0IGxldCBTZWFyY2hDaGFuZ2VkRXZlbnQgPSAncGlwU2VhcmNoQ2hhbmdlZCc7XHJcbmV4cG9ydCBsZXQgU2VhcmNoQWN0aXZhdGVkRXZlbnQgPSAncGlwU2VhcmNoQWN0aXZhdGVkJzsiLCJpbXBvcnQgeyBTZWFyY2hDb25maWcgfSBmcm9tICcuL1NlYXJjaENvbmZpZyc7XHJcbmltcG9ydCB7IElTZWFyY2hTZXJ2aWNlIH0gZnJvbSAnLi9JU2VhcmNoU2VydmljZSc7XHJcbmltcG9ydCB7IE9wZW5TZWFyY2hFdmVudCwgQ2xvc2VTZWFyY2hFdmVudCwgU2VhcmNoQ2hhbmdlZEV2ZW50LCBTZWFyY2hBY3RpdmF0ZWRFdmVudCB9IGZyb20gJy4vU2VhcmNoQW5ndWxhckV2ZW50cyc7XHJcblxyXG5jbGFzcyBTZWFyY2hCYXJDb250cm9sbGVyIHtcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9lbGVtZW50OiBhbnk7XHJcbiAgICBwcml2YXRlIGNsZWFyRm46IEZ1bmN0aW9uO1xyXG5cclxuICAgIHB1YmxpYyBjb25maWc6IFNlYXJjaENvbmZpZztcclxuICAgIHB1YmxpYyBlbmFibGVkOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwdWJsaWMgc2VhcmNoOiBhbnkgPSB7IHRleHQ6ICcnIH07XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLFxyXG4gICAgICAgIHBpcFNlYXJjaDogSVNlYXJjaFNlcnZpY2VcclxuICAgICkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgICAgICB0aGlzLl9lbGVtZW50ID0gJGVsZW1lbnQ7XHJcblxyXG4gICAgICAgIC8vIEFwcGx5IGNsYXNzIGFuZCBjYWxsIHJlc2l6ZVxyXG4gICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtc2VhcmNoLWJhcicpO1xyXG5cclxuICAgICAgICB0aGlzLmNvbmZpZyA9IHBpcFNlYXJjaC5jb25maWc7XHJcbiAgICAgICAgdGhpcy5zdGF0ZUNoYW5nZSgpO1xyXG4gICAgICAgIHRoaXMuY2xlYXJGbiA9ICRyb290U2NvcGUuJG9uKFNlYXJjaENoYW5nZWRFdmVudCwgKGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IFNlYXJjaENvbmZpZykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uU2VhcmNoQ2hhbmdlZChldmVudCwgY29uZmlnKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJG9uRGVzdHJveSgpIHtcclxuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKHRoaXMuY2xlYXJGbikpIHtcclxuICAgICAgICAgICAgdGhpcy5jbGVhckZuKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhdGVDaGFuZ2UoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuZW5hYmxlZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LmFkZENsYXNzKCd3LXN0cmV0Y2gnKTtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5wYXJlbnQoKS5hZGRDbGFzcygncGlwLXNlYXJjaC1hY3RpdmUnKTtcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVDbGFzcygndy1zdHJldGNoJyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ3BpcC1zZWFyY2gtYWN0aXZlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25TZWFyY2hDaGFuZ2VkKGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IFNlYXJjaENvbmZpZyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xyXG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuc2VhcmNoLnRleHQgPSAnJztcclxuICAgICAgICB0aGlzLnN0YXRlQ2hhbmdlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBmb2N1c1RleHQoKTogdm9pZCB7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBlbGVtZW50OiBKUXVlcnkgPSAkKCcucGlwLXNlYXJjaC10ZXh0Jyk7XHJcbiAgICAgICAgICAgIGlmIChlbGVtZW50Lmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgICAgICBlbGVtZW50LmZvY3VzKCk7XHJcbiAgICAgICAgfSwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNlYXJjaC50ZXh0ID0gdGhpcy5jb25maWcuY3JpdGVyaWE7XHJcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmZvY3VzVGV4dCgpO1xyXG4gICAgICAgIHRoaXMuc3RhdGVDaGFuZ2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25DbGljaygpOiB2b2lkIHtcclxuICAgICAgICBsZXQgc2VhcmNoID0gdGhpcy5zZWFyY2gudGV4dDtcclxuXHJcbiAgICAgICAgdGhpcy5zZWFyY2gudGV4dCA9ICcnO1xyXG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuc3RhdGVDaGFuZ2UoKTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29uZmlnLmNhbGxiYWNrKHNlYXJjaCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoU2VhcmNoQWN0aXZhdGVkRXZlbnQsIHNlYXJjaCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5zZWFyY2gudGV4dCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlYXJjaC50ZXh0ID0gJyc7XHJcbiAgICAgICAgICAgIHRoaXMuZm9jdXNUZXh0KCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5lbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGVDaGFuZ2UoKTtcclxuICAgICAgICAgICAgdGhpcy5vbkNsaWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvbktleURvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkIHtcclxuICAgICAgICAvLyBFbnRlciBwcmVzc2VkXHJcbiAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDEzKVxyXG4gICAgICAgICAgICB0aGlzLm9uQ2xpY2soKTtcclxuICAgICAgICAvLyBFU0MgcHJlc3NlZFxyXG4gICAgICAgIGVsc2UgaWYgKGV2ZW50LmtleUNvZGUgPT09IDI3KSB7XHJcbiAgICAgICAgICAgIHRoaXMuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlQ2hhbmdlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBTZWFyY2hCYXI6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xyXG4gICAgdGVtcGxhdGVVcmw6ICdzZWFyY2gvU2VhcmNoQmFyLmh0bWwnLFxyXG4gICAgY29udHJvbGxlcjogU2VhcmNoQmFyQ29udHJvbGxlclxyXG59XHJcblxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBTZWFyY2hCYXInKVxyXG4gICAgLmNvbXBvbmVudCgncGlwU2VhcmNoQmFyJywgU2VhcmNoQmFyKTtcclxuIiwiZXhwb3J0IGNsYXNzIFNlYXJjaENvbmZpZyB7XHJcbiAgICAvLyBTZWFyY2ggdmlzaWJsZVxyXG4gICAgcHVibGljIHZpc2libGU6IGJvb2xlYW47XHJcbiAgICAvLyBTZWFyY2ggY3JpdGVyaWFcclxuICAgIHB1YmxpYyBjcml0ZXJpYTogc3RyaW5nO1xyXG4gICAgLy8gQ3VzdG9tIHNlYXJjaCBwYXJhbWV0ZXJzXHJcbiAgICBwdWJsaWMgcGFyYW1zOiBhbnk7XHJcbiAgICAvLyBIaXN0b3J5IGZvciBzZWFyY2ggYXV0b2NvbXBsZXRlXHJcbiAgICBwdWJsaWMgaGlzdG9yeTogc3RyaW5nW107XHJcbiAgICAvLyBDYWxsYmFjayBmb3Igc2VhcmNoXHJcbiAgICBjYWxsYmFjazogKGNyaXRlcmlhOiBzdHJpbmcpID0+IHZvaWQ7XHJcbn0iLCJpbXBvcnQgeyBTZWFyY2hDb25maWcgfSBmcm9tICcuL1NlYXJjaENvbmZpZyc7XHJcbmltcG9ydCB7IElTZWFyY2hQcm92aWRlciwgSVNlYXJjaFNlcnZpY2UgfSBmcm9tICcuL0lTZWFyY2hTZXJ2aWNlJztcclxuaW1wb3J0IHsgT3BlblNlYXJjaEV2ZW50LCBDbG9zZVNlYXJjaEV2ZW50LCBTZWFyY2hDaGFuZ2VkRXZlbnQsIFNlYXJjaEFjdGl2YXRlZEV2ZW50IH0gZnJvbSAnLi9TZWFyY2hBbmd1bGFyRXZlbnRzJztcclxuXHJcbmNsYXNzIFNlYXJjaFNlcnZpY2UgaW1wbGVtZW50cyBJU2VhcmNoU2VydmljZSB7XHJcbiAgICBwcml2YXRlIF9jb25maWc6IFNlYXJjaENvbmZpZztcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIGNvbmZpZzogU2VhcmNoQ29uZmlnLFxyXG4gICAgICAgICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlXHJcbiAgICApIHtcclxuICAgICAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuXHJcbiAgICAgICAgJHJvb3RTY29wZS4kb24oT3BlblNlYXJjaEV2ZW50LCAoKSA9PiB7IHRoaXMub3BlbiB9KTtcclxuICAgICAgICAkcm9vdFNjb3BlLiRvbihDbG9zZVNlYXJjaEV2ZW50LCAoKSA9PiB7IHRoaXMuY2xvc2UgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBjb25maWcoKTogU2VhcmNoQ29uZmlnIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgY3JpdGVyaWEoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmNyaXRlcmlhO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgY3JpdGVyaWEodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5jcml0ZXJpYSA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBwYXJhbXMoKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnBhcmFtcztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IHBhcmFtcyh2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnBhcmFtcyA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBoaXN0b3J5KCk6IHN0cmluZ1tdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmhpc3Rvcnk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBoaXN0b3J5KHZhbHVlOiBzdHJpbmdbXSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5oaXN0b3J5ID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGNhbGxiYWNrKCk6IChjcml0ZXJpYTogc3RyaW5nKSA9PiB2b2lkIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmNhbGxiYWNrO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgY2FsbGJhY2sodmFsdWU6IChjcml0ZXJpYTogc3RyaW5nKSA9PiB2b2lkKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmNhbGxiYWNrID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0KGNhbGxiYWNrOiAoY3JpdGVyaWE6IHN0cmluZykgPT4gdm9pZCwgY3JpdGVyaWE/OiBzdHJpbmcsIHBhcmFtcz86IGFueSwgaGlzdG9yeT86IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmNhbGxiYWNrID0gY2FsbGJhY2s7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmNyaXRlcmlhID0gY3JpdGVyaWE7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnBhcmFtcyA9IHBhcmFtcztcclxuICAgICAgICB0aGlzLl9jb25maWcuaGlzdG9yeSA9IGhpc3Rvcnk7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xlYXIoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLmNhbGxiYWNrID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9jb25maWcuY3JpdGVyaWEgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wYXJhbXMgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9wZW4oKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGNsb3NlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdG9nZ2xlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy52aXNpYmxlID0gIXRoaXMuX2NvbmZpZy52aXNpYmxlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZW5kQ29uZmlnRXZlbnQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoU2VhcmNoQ2hhbmdlZEV2ZW50LCB0aGlzLl9jb25maWcpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBTZWFyY2hQcm92aWRlciBpbXBsZW1lbnRzIElTZWFyY2hQcm92aWRlciB7XHJcbiAgICBwcml2YXRlIF9jb25maWc6IFNlYXJjaENvbmZpZyA9IG5ldyBTZWFyY2hDb25maWcoKTtcclxuICAgIHByaXZhdGUgX3NlcnZpY2U6IFNlYXJjaFNlcnZpY2UgPSBudWxsO1xyXG5cclxuICAgIHB1YmxpYyAkZ2V0KCRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5fc2VydmljZSA9PSBudWxsKVxyXG4gICAgICAgICAgICB0aGlzLl9zZXJ2aWNlID0gbmV3IFNlYXJjaFNlcnZpY2UodGhpcy5fY29uZmlnLCAkcm9vdFNjb3BlKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlcnZpY2U7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5hbmd1bGFyLm1vZHVsZSgncGlwU2VhcmNoQmFyJylcclxuICAgIC5wcm92aWRlcigncGlwU2VhcmNoJywgU2VhcmNoUHJvdmlkZXIpO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgncGlwU2VhcmNoQmFyJywgWyduZ01hdGVyaWFsJywgJ3BpcE5hdi5UcmFuc2xhdGUnLCAncGlwTmF2LlRlbXBsYXRlcyddKTtcclxuXHJcbmltcG9ydCAnLi9TZWFyY2hDb25maWcnO1xyXG5pbXBvcnQgJy4vU2VhcmNoQW5ndWxhckV2ZW50cyc7XHJcbmltcG9ydCAnLi9JU2VhcmNoU2VydmljZSc7XHJcbmltcG9ydCAnLi9TZWFyY2hTZXJ2aWNlJztcclxuaW1wb3J0ICcuL1NlYXJjaEJhcic7XHJcblxyXG5leHBvcnQgKiBmcm9tICcuL0lTZWFyY2hTZXJ2aWNlJztcclxuIiwiaW1wb3J0IHsgSVNpZGVOYXZTZXJ2aWNlLCBTaWRlTmF2Q29uZmlnIH0gZnJvbSAnLi9TaWRlTmF2U2VydmljZSc7XHJcbmltcG9ydCB7IFNpZGVOYXZTdGF0ZU5hbWVzLCBTaWRlTmF2U3RhdGUsIFNpZGVOYXZTdGF0ZUNvbmZpZyB9IGZyb20gJy4vU2lkZU5hdlN0YXRlJztcclxuXHJcbmNsYXNzIFNpZGVOYXZEaXJlY3RpdmVDb250cm9sbGVyIHtcclxuICAgIHByaXZhdGUgX2VsZW1lbnQ6IG5nLklBdWdtZW50ZWRKUXVlcnk7XHJcbiAgICBwcml2YXRlIF9hdHRyczogbmcuSUF0dHJpYnV0ZXM7XHJcbiAgICBwcml2YXRlIF9pbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfc2NvcGU6IGFuZ3VsYXIuSVNjb3BlO1xyXG4gICAgcHJpdmF0ZSBfbG9nOiBuZy5JTG9nU2VydmljZTtcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9waXBTaWRlTmF2OiBJU2lkZU5hdlNlcnZpY2U7XHJcblxyXG4gICAgcHJpdmF0ZSBfcGlwTWVkaWE6IHBpcC5sYXlvdXRzLklNZWRpYVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF90aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2U7XHJcblxyXG4gICAgcHJpdmF0ZSBfaXNSZXNpemluZzogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgX2FuaW1hdGlvbkR1cmF0aW9uOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIF9tYWluQ29udGFpbmVyOiBzdHJpbmc7IC8vIHRvZG8gYWRkICB0byBjb25maWdcclxuICAgIHByaXZhdGUgX2JpZ1dpZHRoOiBudW1iZXI7XHJcblxyXG4gICAgcHJpdmF0ZSBfbWlkZGxlV2lkdGg6IG51bWJlcjtcclxuICAgIHByaXZhdGUgX3NtYWxsV2lkdGg6IG51bWJlcjtcclxuICAgIHByaXZhdGUgX21lZGlhQnJlYWtwb2ludHM6IHBpcC5sYXlvdXRzLk1lZGlhQnJlYWtwb2ludHM7XHJcbiAgICBwcml2YXRlIF9uYXZTdGF0ZTogU2lkZU5hdlN0YXRlQ29uZmlnO1xyXG5cclxuICAgIHByaXZhdGUgd2luZG93UmVzaXplOiBGdW5jdGlvbjtcclxuXHJcbiAgICBwdWJsaWMgc2lkZW5hdlN0YXRlOiBTaWRlTmF2U3RhdGU7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgJGVsZW1lbnQ6IG5nLklBdWdtZW50ZWRKUXVlcnksXHJcbiAgICAgICAgJGF0dHJzOiBuZy5JQXR0cmlidXRlcyxcclxuICAgICAgICAkaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZSxcclxuICAgICAgICAkc2NvcGU6IGFuZ3VsYXIuSVNjb3BlLFxyXG4gICAgICAgICRsb2c6IG5nLklMb2dTZXJ2aWNlLFxyXG4gICAgICAgICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLFxyXG4gICAgICAgICR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2UsXHJcbiAgICAgICAgcGlwU2lkZU5hdjogSVNpZGVOYXZTZXJ2aWNlLFxyXG4gICAgICAgIG5hdkNvbnN0YW50OiBhbnlcclxuXHJcbiAgICApIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSAkZWxlbWVudDtcclxuICAgICAgICB0aGlzLl9hdHRycyA9ICRhdHRycztcclxuICAgICAgICB0aGlzLl9zY29wZSA9ICRzY29wZTtcclxuICAgICAgICB0aGlzLl9pbmplY3RvciA9ICRpbmplY3RvcjtcclxuICAgICAgICB0aGlzLl9sb2cgPSAkbG9nO1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZSA9ICRyb290U2NvcGU7XHJcbiAgICAgICAgdGhpcy5fdGltZW91dCA9ICR0aW1lb3V0O1xyXG4gICAgICAgIHRoaXMuX3BpcFNpZGVOYXYgPSBwaXBTaWRlTmF2O1xyXG5cclxuICAgICAgICB0aGlzLl9waXBNZWRpYSA9IHRoaXMuX2luamVjdG9yLmhhcygncGlwTWVkaWEnKSA/IDxwaXAubGF5b3V0cy5JTWVkaWFTZXJ2aWNlPnRoaXMuX2luamVjdG9yLmdldCgncGlwTWVkaWEnKSA6IG51bGw7XHJcblxyXG4gICAgICAgIHRoaXMuX21haW5Db250YWluZXIgPSBuYXZDb25zdGFudC5TSURFTkFWX0NPTlRBSU5FUjtcclxuICAgICAgICB0aGlzLl9iaWdXaWR0aCA9IG5hdkNvbnN0YW50LlNJREVOQVZfTEFSR0VfV0lEVEg7XHJcbiAgICAgICAgdGhpcy5fbWlkZGxlV2lkdGggPSBuYXZDb25zdGFudC5TSURFTkFWX01JRERMRV9XSURUSDtcclxuICAgICAgICB0aGlzLl9zbWFsbFdpZHRoID0gbmF2Q29uc3RhbnQuU0lERU5BVl9TTUFMTF9XSURUSDtcclxuICAgICAgICB0aGlzLl9pc1Jlc2l6aW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fYW5pbWF0aW9uRHVyYXRpb24gPSBuYXZDb25zdGFudC5TSURFTkFWX0FOSU1BVElPTl9EVVJBVElPTjtcclxuICAgICAgICB0aGlzLl9uYXZTdGF0ZSA9IG5ldyBTaWRlTmF2U3RhdGVDb25maWcoKTtcclxuICAgICAgICB0aGlzLl9tZWRpYUJyZWFrcG9pbnRzID0gdGhpcy5zZXRCcmVha3BvaW50cygpO1xyXG5cclxuICAgICAgICAvLyBBcHBseSBjbGFzcyBhbmQgY2FsbCByZXNpemVcclxuICAgICAgICB0aGlzLl9lbGVtZW50LmFkZENsYXNzKCdwaXAtc3RpY2t5LXNpZGVuYXYnKTtcclxuXHJcbiAgICAgICAgbGV0IGNsZWFudXBNYWluUmVzaXplZDtcclxuICAgICAgICBsZXQgY2xlYW51cFNpZGVOYXZTdGF0ZTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX3BpcFNpZGVOYXYuY29uZmlnICYmIHRoaXMuX3BpcFNpZGVOYXYuY29uZmlnLnR5cGUgIT0gJ3BvcHVwJykge1xyXG4gICAgICAgICAgICB0aGlzLl90aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U2lkZU5hdmVTdGF0ZSgpXHJcbiAgICAgICAgICAgIH0sIDEwMCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLndpbmRvd1Jlc2l6ZSA9IF8uZGVib3VuY2UoKCkgPT4geyB0aGlzLnNldFNpZGVOYXZlU3RhdGUoKTsgfSwgMTApO1xyXG4gICAgICAgICAgICBjbGVhbnVwTWFpblJlc2l6ZWQgPSB0aGlzLl9yb290U2NvcGUuJG9uKCdwaXBNYWluUmVzaXplZCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMud2luZG93UmVzaXplKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBjbGVhbnVwU2lkZU5hdlN0YXRlID0gdGhpcy5fcm9vdFNjb3BlLiRvbigncGlwU2lkZU5hdlN0YXRlJywgKCRldmVudDogbmcuSUFuZ3VsYXJFdmVudCwgc3RhdGU6IFNpZGVOYXZTdGF0ZU5hbWVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uU2lkZU5hdlN0YXRlKCRldmVudCwgc3RhdGUpXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2lzUmVzaXppbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5zaWRlbmF2U3RhdGUgPSBudWxsO1xyXG4gICAgICAgICAgICB0aGlzLl90aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoU2lkZU5hdlN0YXRlTmFtZXMuVG9nZ2xlKTtcclxuICAgICAgICAgICAgfSwgMTAwKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBjbGVhbnVwTmF2SGVhZGVyQ2hhbmdlZDogRnVuY3Rpb24gPSB0aGlzLl9yb290U2NvcGUuJG9uKCdwaXBOYXZJY29uQ2xpY2tlZCcsICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5vbk5hdkljb25DbGljaygpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGxldCBjbGVhbnVwU2lkZU5hdkNoYW5nZWQ6IEZ1bmN0aW9uID0gdGhpcy5fcm9vdFNjb3BlLiRvbigncGlwU2lkZU5hdkNoYW5nZWQnLCAoJGV2ZW50OiBuZy5JQW5ndWxhckV2ZW50LCBjb25maWc6IFNpZGVOYXZDb25maWcpID0+IHsgLy9uYXZTdGF0ZVxyXG4gICAgICAgICAgICB0aGlzLm9uU2lkZU5hdkNoYW5nZWQoJGV2ZW50LCBjb25maWcpXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3Njb3BlLiRvbignJGRlc3Ryb3knLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzRnVuY3Rpb24oY2xlYW51cE5hdkhlYWRlckNoYW5nZWQpKSB7XHJcbiAgICAgICAgICAgICAgICBjbGVhbnVwTmF2SGVhZGVyQ2hhbmdlZCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzRnVuY3Rpb24oY2xlYW51cFNpZGVOYXZDaGFuZ2VkKSkge1xyXG4gICAgICAgICAgICAgICAgY2xlYW51cFNpZGVOYXZDaGFuZ2VkKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGFuZ3VsYXIuaXNGdW5jdGlvbihjbGVhbnVwTWFpblJlc2l6ZWQpKSB7XHJcbiAgICAgICAgICAgICAgICBjbGVhbnVwTWFpblJlc2l6ZWQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoYW5ndWxhci5pc0Z1bmN0aW9uKGNsZWFudXBTaWRlTmF2U3RhdGUpKSB7XHJcbiAgICAgICAgICAgICAgICBjbGVhbnVwU2lkZU5hdlN0YXRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZXRCcmVha3BvaW50cygpOiBwaXAubGF5b3V0cy5NZWRpYUJyZWFrcG9pbnRzIHtcclxuICAgICAgICBpZiAoIXRoaXMuX3BpcE1lZGlhIHx8ICFhbmd1bGFyLmlzT2JqZWN0KHRoaXMuX3BpcE1lZGlhLmJyZWFrcG9pbnRzKSkge1xyXG4gICAgICAgICAgICByZXR1cm4geyB4czogNjM5LCBzbTogOTU5LCBtZDogMTAyNCwgbGc6IDE5MTkgfTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcGlwTWVkaWEuYnJlYWtwb2ludHM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25TaWRlTmF2Q2hhbmdlZCgkZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIGNvbmZpZzogU2lkZU5hdkNvbmZpZyk6IHZvaWQge1xyXG4gICAgICAgIGlmIChjb25maWcgJiYgY29uZmlnLnZpc2libGUpIHtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25OYXZJY29uQ2xpY2soKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fcGlwU2lkZU5hdi5vcGVuKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvblNpZGVOYXZTdGF0ZSgkZXZlbnQ6IG5nLklBbmd1bGFyRXZlbnQsIHN0YXRlTmFtZTogU2lkZU5hdlN0YXRlTmFtZXMpOiB2b2lkIHtcclxuICAgICAgICBpZiAoYW5ndWxhci5pc1N0cmluZyhzdGF0ZU5hbWUpICYmIHRoaXMuX25hdlN0YXRlW3N0YXRlTmFtZV0gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHN0YXRlTmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc2V0U2lkZU5hdmVTdGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5fcGlwU2lkZU5hdi5jb25maWcgJiYgdGhpcy5fcGlwU2lkZU5hdi5jb25maWcudHlwZSA9PSAncG9wdXAnKSB7IHJldHVybiB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9pc1Jlc2l6aW5nKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3RpbWVvdXQoKCkgPT4geyB0aGlzLnNldFNpZGVOYXZlU3RhdGUoKSB9LCB0aGlzLl9hbmltYXRpb25EdXJhdGlvbik7XHJcblxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgbWFpbldpZHRoOiBudW1iZXIgPSAkKHRoaXMuX21haW5Db250YWluZXIpLmlubmVyV2lkdGgoKTtcclxuICAgICAgICBsZXQgc2lkZU5hdldpZHRoOiBudW1iZXIgPSAkKCcucGlwLXN0aWNreS1zaWRlbmF2JykuaW5uZXJXaWR0aCgpO1xyXG4gICAgICAgIGxldCBjdXJyZW50V2lkdGg6IG51bWJlciA9IHNpZGVOYXZXaWR0aCA/IHNpZGVOYXZXaWR0aCArIDIgOiAwOyAvLyBhZGQgYm9yZGVyIHdpZHRoXHJcblxyXG4gICAgICAgIGlmIChtYWluV2lkdGggKyBjdXJyZW50V2lkdGggPCB0aGlzLl9tZWRpYUJyZWFrcG9pbnRzLnNtKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoU2lkZU5hdlN0YXRlTmFtZXMuVG9nZ2xlKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobWFpbldpZHRoICsgY3VycmVudFdpZHRoIDwgdGhpcy5fbWVkaWFCcmVha3BvaW50cy5tZCkge1xyXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKFNpZGVOYXZTdGF0ZU5hbWVzLlNtYWxsKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobWFpbldpZHRoICsgY3VycmVudFdpZHRoIDwgdGhpcy5fbWVkaWFCcmVha3BvaW50cy5sZykge1xyXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKFNpZGVOYXZTdGF0ZU5hbWVzLkxhcmdlKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNldFN0YXRlKFNpZGVOYXZTdGF0ZU5hbWVzLlhMYXJnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZXRTdGF0ZShzdGF0ZU5hbWU6IFNpZGVOYXZTdGF0ZU5hbWVzKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2lzUmVzaXppbmcpIHJldHVybjtcclxuICAgICAgICBpZiAodGhpcy5zaWRlbmF2U3RhdGUgJiYgdGhpcy5zaWRlbmF2U3RhdGUuaWQgPT0gc3RhdGVOYW1lKSByZXR1cm47XHJcblxyXG4gICAgICAgIGlmIChzdGF0ZU5hbWUgIT0gU2lkZU5hdlN0YXRlTmFtZXMuVG9nZ2xlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlQ2xhc3MoJ3NpZGVuYXYtbW9iaWxlJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoc3RhdGVOYW1lICE9IFNpZGVOYXZTdGF0ZU5hbWVzLlNtYWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlQ2xhc3MoJ3BpcC1zdGlja3ktbmF2LXNtYWxsJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoc3RhdGVOYW1lICE9IFNpZGVOYXZTdGF0ZU5hbWVzLlhMYXJnZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnJlbW92ZUNsYXNzKCdzaWRlbmF2LWRlc2t0b3AnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChzdGF0ZU5hbWUgIT0gU2lkZU5hdlN0YXRlTmFtZXMuTGFyZ2UpIHtcclxuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVDbGFzcygnc2lkZW5hdi1zbWFsbGRlc2t0b3AnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuX2lzUmVzaXppbmcgPSB0cnVlO1xyXG4gICAgICAgIGlmIChzdGF0ZU5hbWUgPT0gU2lkZU5hdlN0YXRlTmFtZXMuVG9nZ2xlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3BpcFNpZGVOYXYuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zaWRlbmF2U3RhdGUgPSB0aGlzLl9uYXZTdGF0ZVtTdHJpbmcoc3RhdGVOYW1lKV07XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5hZGRDbGFzcyh0aGlzLnNpZGVuYXZTdGF0ZS5hZGRDbGFzcyk7XHJcblxyXG4gICAgICAgIHRoaXMuX3BpcFNpZGVOYXYuc3RhdGUgPSB0aGlzLnNpZGVuYXZTdGF0ZTtcclxuXHJcbiAgICAgICAgLy8gY2hlY2sgc2lkZU5hdiBTdGF0ZVxyXG4gICAgICAgIHRoaXMuX3RpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNldFNpZGVOYXZlU3RhdGUoKVxyXG4gICAgICAgIH0sIDE1KTtcclxuXHJcbiAgICAgICAgLy8gY29tcGxldGUgYW5pbWF0aW9uXHJcbiAgICAgICAgdGhpcy5fdGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2lzUmVzaXppbmcgPSBmYWxzZTtcclxuICAgICAgICB9LCB0aGlzLl9hbmltYXRpb25EdXJhdGlvbik7IC8vYW5pbWF0aW9uRHVyYXRpb25cclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbigoKSA9PiB7XHJcbiAgICBmdW5jdGlvbiBzaWRlTmF2RGlyZWN0aXZlKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgICAgICAgIHRyYW5zY2x1ZGU6IHRydWUsXHJcbiAgICAgICAgICAgIHNjb3BlOiB0cnVlLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3NpZGVuYXYvU2lkZU5hdi5odG1sJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogU2lkZU5hdkRpcmVjdGl2ZUNvbnRyb2xsZXIsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJyRjdHJsJ1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcFNpZGVOYXYnKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcFNpZGVuYXYnLCBzaWRlTmF2RGlyZWN0aXZlKTtcclxuXHJcbn0pKCk7IiwiZXhwb3J0IGxldCBTaWRlTmF2Q2hhbmdlZEV2ZW50ID0gJ3BpcFNpZGVOYXZDaGFuZ2VkJztcclxuZXhwb3J0IGxldCBTaWRlTmF2U3RhdGVDaGFuZ2VkRXZlbnQgPSAncGlwU2lkZU5hdlN0YXRlQ2hhbmdlZCc7XHJcbmV4cG9ydCBsZXQgT3BlblNpZGVOYXZFdmVudCA9ICdwaXBPcGVuU2lkZU5hdic7XHJcbmV4cG9ydCBsZXQgQ2xvc2VTaWRlTmF2RXZlbnQgPSAncGlwQ2xvc2VTaWRlTmF2JzsiLCIoKCkgPT4ge1xyXG5cclxuICAgIGZ1bmN0aW9uIFNpZGVOYXZQYXJ0RGlyZWN0aXZlQ29udHJvbGxlcigkc2NvcGUsICRlbGVtZW50LCAkYXR0cnMsICRyb290U2NvcGUsIHBpcFNpZGVOYXYpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIHZhciBwYXJ0TmFtZSA9ICcnICsgJGF0dHJzLnBpcFNpZGVuYXZQYXJ0O1xyXG4gICAgICAgIHZhciBwYXJ0VmFsdWUgPSBudWxsO1xyXG5cclxuICAgICAgICAvLyBCcmVhayBwYXJ0IGFwYXJ0XHJcbiAgICAgICAgdmFyIHBvcyA9IHBhcnROYW1lLmluZGV4T2YoJzonKTtcclxuICAgICAgICBpZiAocG9zID4gMCkge1xyXG4gICAgICAgICAgICBwYXJ0VmFsdWUgPSBwYXJ0TmFtZS5zdWJzdHIocG9zICsgMSk7XHJcbiAgICAgICAgICAgIHBhcnROYW1lID0gcGFydE5hbWUuc3Vic3RyKDAsIHBvcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBvblNpZGVOYXZDaGFuZ2VkKG51bGwsIHBpcFNpZGVOYXYuY29uZmlnKVxyXG4gICAgICAgICRyb290U2NvcGUuJG9uKCdwaXBTaWRlTmF2Q2hhbmdlZCcsIG9uU2lkZU5hdkNoYW5nZWQpO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBvblNpZGVOYXZDaGFuZ2VkKGV2ZW50LCBjb25maWcpIHtcclxuICAgICAgICAgICAgdmFyIHBhcnRzID0gY29uZmlnLnBhcnRzIHx8IHt9O1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudFBhcnRWYWx1ZSA9IHBhcnRzW3BhcnROYW1lXTtcclxuICAgICAgICAgICAgdmFyIHZpc2libGUgPSAhIShwYXJ0VmFsdWUgPyBjdXJyZW50UGFydFZhbHVlID09IHBhcnRWYWx1ZSA6IGN1cnJlbnRQYXJ0VmFsdWUpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHZpc2libGUgIT0gJHNjb3BlLnZpc2libGUpXHJcbiAgICAgICAgICAgICAgICAkc2NvcGUudmlzaWJsZSA9IHZpc2libGU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzaWRlbmF2UGFydERpcmVjdGl2ZShuZ0lmRGlyZWN0aXZlKSB7XHJcbiAgICAgICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgICAgICB2YXIgbmdJZiA9IG5nSWZEaXJlY3RpdmVbMF07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHRyYW5zY2x1ZGU6IG5nSWYudHJhbnNjbHVkZSxcclxuICAgICAgICAgICAgcHJpb3JpdHk6IG5nSWYucHJpb3JpdHksXHJcbiAgICAgICAgICAgIHRlcm1pbmFsOiBuZ0lmLnRlcm1pbmFsLFxyXG4gICAgICAgICAgICByZXN0cmljdDogbmdJZi5yZXN0cmljdCxcclxuICAgICAgICAgICAgc2NvcGU6IHRydWUsXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIGxpbmtGdW5jdGlvbigkc2NvcGU6IGFueSwgJGVsZW1lbnQsICRhdHRycykge1xyXG4gICAgICAgICAgICAgICAgJGF0dHJzLm5nSWYgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAkc2NvcGUudmlzaWJsZSB9O1xyXG4gICAgICAgICAgICAgICAgbmdJZi5saW5rLmFwcGx5KG5nSWYsIGFyZ3VtZW50cyk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IFNpZGVOYXZQYXJ0RGlyZWN0aXZlQ29udHJvbGxlclxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhclxyXG4gICAgICAgIC5tb2R1bGUoJ3BpcFNpZGVOYXYnKVxyXG4gICAgICAgIC5kaXJlY3RpdmUoJ3BpcFNpZGVuYXZQYXJ0Jywgc2lkZW5hdlBhcnREaXJlY3RpdmUpO1xyXG5cclxufSkoKTsiLCJpbXBvcnQgeyBTaWRlTmF2Q2hhbmdlZEV2ZW50LCBTaWRlTmF2U3RhdGVDaGFuZ2VkRXZlbnQsIE9wZW5TaWRlTmF2RXZlbnQsIENsb3NlU2lkZU5hdkV2ZW50IH0gZnJvbSAnLi9TaWRlTmF2RXZlbnRzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTaWRlTmF2Q29uZmlnIHtcclxuICAgIHBhcnRzOiBhbnk7XHJcbiAgICBjbGFzc2VzOiBzdHJpbmdbXTtcclxuICAgIHN0YXRlOiBhbnk7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICB2aXNpYmxlOiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElTaWRlTmF2U2VydmljZSB7XHJcbiAgICByZWFkb25seSBjb25maWc6IFNpZGVOYXZDb25maWc7XHJcbiAgICByZWFkb25seSBjbGFzc2VzOiBzdHJpbmdbXTtcclxuICAgIHBhcnRzOiBhbnk7XHJcbiAgICBzdGF0ZTogYW55O1xyXG5cclxuICAgIG9wZW4oKTogdm9pZDtcclxuICAgIGNsb3NlKCk6IHZvaWQ7XHJcbiAgICB0b2dnbGUoKTogdm9pZDtcclxuICAgIHNob3coKTogdm9pZDtcclxuICAgIGhpZGUoKTogdm9pZDtcclxuXHJcbiAgICBhZGRDbGFzcyguLi5jbGFzc2VzOiBzdHJpbmdbXSk6IHZvaWQ7XHJcbiAgICByZW1vdmVDbGFzcyguLi5jbGFzc2VzOiBzdHJpbmdbXSk6IHZvaWQ7XHJcblxyXG4gICAgcGFydChwYXJ0OiBzdHJpbmcsIHZhbHVlOiBhbnkpOiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElTaWRlTmF2UHJvdmlkZXIgZXh0ZW5kcyBuZy5JU2VydmljZVByb3ZpZGVyIHtcclxuICAgIGNvbmZpZzogU2lkZU5hdkNvbmZpZztcclxuICAgIHBhcnRzOiBhbnk7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICB2aXNpYmxlOiBib29sZWFuO1xyXG4gICAgY2xhc3Nlczogc3RyaW5nW107XHJcblxyXG4gICAgYWRkQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkO1xyXG4gICAgcmVtb3ZlQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkO1xyXG5cclxuICAgIHBhcnQocGFydDogc3RyaW5nLCB2YWx1ZTogYW55KTogdm9pZDtcclxufVxyXG5cclxuY2xhc3MgU2lkZU5hdlNlcnZpY2UgaW1wbGVtZW50cyBJU2lkZU5hdlNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBTaWRlTmF2Q29uZmlnO1xyXG4gICAgcHJpdmF0ZSBfc3RhdGU6IGFueTtcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9zaWRlbmF2OiBuZy5tYXRlcmlhbC5JU2lkZW5hdlNlcnZpY2U7XHJcblxyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcihjb25maWc6IFNpZGVOYXZDb25maWcsICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLCAkbWRTaWRlbmF2OiBuZy5tYXRlcmlhbC5JU2lkZW5hdlNlcnZpY2UpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgICAgICB0aGlzLl9zaWRlbmF2ID0gJG1kU2lkZW5hdjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IGNvbmZpZygpOiBTaWRlTmF2Q29uZmlnIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgY2xhc3NlcygpOiBzdHJpbmdbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5jbGFzc2VzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgcGFydHMoKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnBhcnRzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgcGFydHModmFsdWU6IGFueSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wYXJ0cyA9IHZhbHVlIHx8IHt9O1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBzdGF0ZSgpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zdGF0ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IHN0YXRlKHZhbHVlOiBhbnkpIHtcclxuICAgICAgICB0aGlzLl9zdGF0ZSA9IHZhbHVlIHx8IHt9O1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kYnJvYWRjYXN0KFNpZGVOYXZTdGF0ZUNoYW5nZWRFdmVudCwgdmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvcGVuKCkge1xyXG4gICAgICAgIHRoaXMuX3NpZGVuYXYoJ3BpcC1zdGlja3ktc2lkZW5hdicpLm9wZW4oKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5fc2lkZW5hdigncGlwLXN0aWNreS1zaWRlbmF2JykuY2xvc2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdG9nZ2xlKCkge1xyXG4gICAgICAgIHRoaXMuX3NpZGVuYXYoJ3BpcC1zdGlja3ktc2lkZW5hdicpLnRvZ2dsZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzaG93KCkge1xyXG4gICAgICAgIGlmICghdGhpcy5fY29uZmlnLnZpc2libGUpIHtcclxuICAgICAgICAgICAgdGhpcy5fY29uZmlnLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaGlkZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5fY29uZmlnLnZpc2libGUpIHtcclxuICAgICAgICAgICAgdGhpcy5fY29uZmlnLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZENsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICAgICAgXy5lYWNoKGNsYXNzZXMsIChjKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGFzc2VzLnB1c2goYyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVtb3ZlQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkIHtcclxuICAgICAgICBfLmVhY2goY2xhc3NlcywgKGMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fY29uZmlnLmNsYXNzZXMgPSBfLnJlamVjdCh0aGlzLl9jb25maWcuY2xhc3NlcywgKGNjKSA9PiBjYyA9PSBjKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBwYXJ0KHBhcnQ6IHN0cmluZywgdmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wYXJ0c1twYXJ0XSA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZW5kQ29uZmlnRXZlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRlbWl0KFNpZGVOYXZDaGFuZ2VkRXZlbnQsIHRoaXMuX2NvbmZpZyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIFNpZGVOYXZQcm92aWRlciBpbXBsZW1lbnRzIElTaWRlTmF2UHJvdmlkZXIge1xyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBTaWRlTmF2Q29uZmlnID0ge1xyXG4gICAgICAgIHBhcnRzOiB7fSxcclxuICAgICAgICBjbGFzc2VzOiBbXSxcclxuICAgICAgICB0eXBlOiAncG9wdXAnLFxyXG4gICAgICAgIHN0YXRlOiBudWxsLFxyXG4gICAgICAgIHZpc2libGU6IHRydWVcclxuICAgIH07XHJcblxyXG4gICAgcHJpdmF0ZSBfc2VydmljZTogU2lkZU5hdlNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIGdldCBjb25maWcoKTogU2lkZU5hdkNvbmZpZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IGNvbmZpZyh2YWx1ZTogU2lkZU5hdkNvbmZpZykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IHZhbHVlIHx8IG5ldyBTaWRlTmF2Q29uZmlnKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBwYXJ0cygpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcucGFydHM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBwYXJ0cyh2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnBhcnRzID0gdmFsdWUgfHwge307XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCB0eXBlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy50eXBlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgdHlwZSh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnR5cGUgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IHZpc2libGUoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy52aXNpYmxlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgdmlzaWJsZSh2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy52aXNpYmxlID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBjbGFzc2VzKCk6IHN0cmluZ1tdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmNsYXNzZXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBjbGFzc2VzKHZhbHVlOiBzdHJpbmdbXSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5jbGFzc2VzID0gdmFsdWUgfHwgW107XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZENsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICAgICAgXy5lYWNoKGNsYXNzZXMsIChjKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGFzc2VzLnB1c2goYyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZUNsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICAgICAgXy5lYWNoKGNsYXNzZXMsIChjKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGFzc2VzID0gXy5yZWplY3QodGhpcy5fY29uZmlnLmNsYXNzZXMsIChjYykgPT4gY2MgPT0gYyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHBhcnQocGFydDogc3RyaW5nLCB2YWx1ZTogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnBhcnRzW3BhcnRdID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljICRnZXQoJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsICRtZFNpZGVuYXY6IG5nLm1hdGVyaWFsLklTaWRlbmF2U2VydmljZSkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX3NlcnZpY2UgPT0gbnVsbClcclxuICAgICAgICAgICAgdGhpcy5fc2VydmljZSA9IG5ldyBTaWRlTmF2U2VydmljZSh0aGlzLl9jb25maWcsICRyb290U2NvcGUsICRtZFNpZGVuYXYpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5fc2VydmljZTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaG9va1NpZGVOYXZFdmVudHMoJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsIHBpcFNpZGVOYXY6IElTaWRlTmF2U2VydmljZSkge1xyXG4gICAgJHJvb3RTY29wZS4kb24oT3BlblNpZGVOYXZFdmVudCwgKCkgPT4geyBwaXBTaWRlTmF2Lm9wZW4oKTsgfSk7XHJcbiAgICAkcm9vdFNjb3BlLiRvbihDbG9zZVNpZGVOYXZFdmVudCwgKCkgPT4geyBwaXBTaWRlTmF2LmNsb3NlKCk7IH0pO1xyXG59XHJcblxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBTaWRlTmF2JylcclxuICAgIC5wcm92aWRlcigncGlwU2lkZU5hdicsIFNpZGVOYXZQcm92aWRlcilcclxuICAgIC5ydW4oaG9va1NpZGVOYXZFdmVudHMpO1xyXG4iLCJleHBvcnQgY2xhc3MgU2lkZU5hdlN0YXRlTmFtZXMge1xyXG4gICAgc3RhdGljIFRvZ2dsZTogc3RyaW5nID0gJ3RvZ2dsZSc7XHJcbiAgICBzdGF0aWMgU21hbGw6IHN0cmluZyA9ICdzbWFsbCc7XHJcbiAgICBzdGF0aWMgTGFyZ2U6IHN0cmluZyA9ICdsYXJnZSc7XHJcbiAgICBzdGF0aWMgWExhcmdlOiBzdHJpbmcgPSAneGxhcmdlJztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFNpZGVOYXZTdGF0ZSB7XHJcbiAgICBpZDogU2lkZU5hdlN0YXRlTmFtZXM7XHJcbiAgICAvLyBDbGFzcyB3aGljaCBhZGRlZCB0byBzaWRlbmF2IGluIHRoaXMgc3RhdGVcclxuICAgIGFkZENsYXNzOiBzdHJpbmc7XHJcbiAgICAvLyBTaWRlIG5hdiBhbHdheXMgb3BlblxyXG4gICAgaXNMb2NrZWRPcGVuOiBib29sZWFuO1xyXG4gICAgLy8gU2hvdyBTaWRlTmF2IGhlYWRlciBcclxuICAgIHNob3dIZWFkZXI6IGJvb2xlYW47XHJcbiAgICAvLyBTaG93IGV4cGFuZGVkIGJ1dHRvblxyXG4gICAgZXhwYW5kZWRCdXR0b246IGJvb2xlYW47XHJcbiAgICAvLyBTaWRlTmF2IGhhcyBleHBhbmRcclxuICAgIGlzRXhwYW5kZWQ6IGJvb2xlYW47XHJcbiAgICAvLyBTaWRlTmF2IGlzIEV4cGFuZGVkIGluIHRoaXMgc3RhdGUgYnkgZGVmYXVsdFxyXG4gICAgZXhwYW5kOiBib29sZWFuO1xyXG4gICAgLy8gVG9vbHR5cGUgaXMgc2hvd1xyXG4gICAgc2hvd0ljb25Ub29sdHlwZTogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFNpZGVOYXZTdGF0ZUNvbmZpZyB7XHJcbiAgICB0b2dnbGU6IFNpZGVOYXZTdGF0ZSA9IHsgLy8gbWVkaWEoc20sIHhzKVxyXG4gICAgICAgIGlkOiBTaWRlTmF2U3RhdGVOYW1lcy5Ub2dnbGUsXHJcbiAgICAgICAgYWRkQ2xhc3M6ICdzaWRlbmF2LW1vYmlsZScsXHJcbiAgICAgICAgc2hvd0hlYWRlcjogdHJ1ZSxcclxuICAgICAgICBpc0xvY2tlZE9wZW46IGZhbHNlLFxyXG4gICAgICAgIGV4cGFuZGVkQnV0dG9uOiBmYWxzZSxcclxuICAgICAgICBpc0V4cGFuZGVkOiB0cnVlLFxyXG4gICAgICAgIGV4cGFuZDogdHJ1ZSxcclxuICAgICAgICBzaG93SWNvblRvb2x0eXBlOiBmYWxzZVxyXG4gICAgfTtcclxuICAgIHNtYWxsOiBTaWRlTmF2U3RhdGUgPSB7IC8vIG1lZGlhKG1kKVxyXG4gICAgICAgIGlkOiBTaWRlTmF2U3RhdGVOYW1lcy5TbWFsbCxcclxuICAgICAgICBhZGRDbGFzczogJ3BpcC1zdGlja3ktbmF2LXNtYWxsIHNpZGVuYXYtc21hbGxkZXNrdG9wJyxcclxuICAgICAgICBzaG93SGVhZGVyOiBmYWxzZSxcclxuICAgICAgICBpc0xvY2tlZE9wZW46IHRydWUsXHJcbiAgICAgICAgZXhwYW5kZWRCdXR0b246IGZhbHNlLFxyXG4gICAgICAgIGlzRXhwYW5kZWQ6IGZhbHNlLFxyXG4gICAgICAgIGV4cGFuZDogZmFsc2UsXHJcbiAgICAgICAgc2hvd0ljb25Ub29sdHlwZTogdHJ1ZVxyXG4gICAgfTtcclxuICAgIGxhcmdlOiBTaWRlTmF2U3RhdGUgPSB7IC8vIG1lZGlhKGxnKVxyXG4gICAgICAgIGlkOiBTaWRlTmF2U3RhdGVOYW1lcy5MYXJnZSxcclxuICAgICAgICBhZGRDbGFzczogJ3NpZGVuYXYtc21hbGxkZXNrdG9wJyxcclxuICAgICAgICBzaG93SGVhZGVyOiBmYWxzZSxcclxuICAgICAgICBpc0xvY2tlZE9wZW46IHRydWUsXHJcbiAgICAgICAgZXhwYW5kZWRCdXR0b246IHRydWUsXHJcbiAgICAgICAgaXNFeHBhbmRlZDogdHJ1ZSxcclxuICAgICAgICBleHBhbmQ6IHRydWUsXHJcbiAgICAgICAgc2hvd0ljb25Ub29sdHlwZTogdHJ1ZVxyXG4gICAgfTtcclxuICAgIHhsYXJnZTogU2lkZU5hdlN0YXRlID0geyAvLyBtZWRpYSh4bClcclxuICAgICAgICBpZDogU2lkZU5hdlN0YXRlTmFtZXMuWExhcmdlLFxyXG4gICAgICAgIGFkZENsYXNzOiAnc2lkZW5hdi1kZXNrdG9wJyxcclxuICAgICAgICBzaG93SGVhZGVyOiBmYWxzZSxcclxuICAgICAgICBpc0xvY2tlZE9wZW46IHRydWUsXHJcbiAgICAgICAgZXhwYW5kZWRCdXR0b246IGZhbHNlLFxyXG4gICAgICAgIGlzRXhwYW5kZWQ6IHRydWUsXHJcbiAgICAgICAgZXhwYW5kOiB0cnVlLFxyXG4gICAgICAgIHNob3dJY29uVG9vbHR5cGU6IGZhbHNlXHJcbiAgICB9O1xyXG59IiwiYW5ndWxhci5tb2R1bGUoJ3BpcFNpZGVOYXYnLCBbJ25nTWF0ZXJpYWwnLCAncGlwTmF2LlRlbXBsYXRlcyddKTtcclxuXHJcbmltcG9ydCAnLi9TaWRlTmF2RXZlbnRzJztcclxuaW1wb3J0ICcuL1NpZGVOYXZTdGF0ZSc7XHJcbmltcG9ydCAnLi9TaWRlTmF2U2VydmljZSc7XHJcbmltcG9ydCAnLi9TaWRlTmF2UGFydERpcmVjdGl2ZSc7XHJcbmltcG9ydCAnLi9TaWRlTmF2RGlyZWN0aXZlJztcclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vU2lkZU5hdlNlcnZpY2UnOyIsImltcG9ydCB7IElUYWJzQmluZGluZ3MgfSBmcm9tICcuL0lUYWJzQmluZGluZ3MnO1xyXG5cclxuY2xhc3MgUGlwVGFiIHtcclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICBuYW1lPzogc3RyaW5nO1xyXG4gICAgY291bnQ6IG51bWJlcjtcclxuICAgIHRpdGxlOiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IFRhYnNCaW5kaW5nczogSVRhYnNCaW5kaW5ncyA9IHtcclxuICAgIG5nRGlzYWJsZWQ6ICcmPycsIC8vIGZ1bmN0aW9uXHJcbiAgICB0YWJzOiAnPHBpcFRhYnMnLCAvLyBQaXBUYWJbXVxyXG4gICAgc2hvd1RhYnM6ICcmcGlwU2hvd1RhYnMnLCAvLyBmdW5jdGlvblxyXG4gICAgc2hvd1RhYnNTaGFkb3c6ICcmcGlwVGFic1NoYWRvdycsIC8vIGZ1bmN0aW9uXHJcbiAgICBhY3RpdmVJbmRleDogJzw/cGlwQWN0aXZlSW5kZXgnLCAvLyBudW1iZXJcclxuICAgIHNlbGVjdDogJz1waXBUYWJzU2VsZWN0JywgLy8gZnVuY3Rpb25cclxuICAgIGJyZWFrcG9pbnRzOiAnPD9waXBCcmVha3BvaW50cycsIC8vIHN0cmluZ1xyXG4gICAgdGhlbWVDbGFzczogJzw/dGhlbWVDbGFzcycsIC8vIHN0cmluZ1xyXG59XHJcblxyXG5jbGFzcyBUYWJzQ2hhbmdlcyBpbXBsZW1lbnRzIG5nLklPbkNoYW5nZXNPYmplY3QsIElUYWJzQmluZGluZ3Mge1xyXG4gICAgW2tleTogc3RyaW5nXTogbmcuSUNoYW5nZXNPYmplY3Q8YW55PjtcclxuICAgIC8vIE5vdCBvbmUgd2F5IGJpbmRpbmdzXHJcbiAgICBuZ0Rpc2FibGVkOiBuZy5JQ2hhbmdlc09iamVjdDwoKSA9PiBuZy5JUHJvbWlzZTx2b2lkPj47XHJcbiAgICB0YWJzOiBuZy5JQ2hhbmdlc09iamVjdDxQaXBUYWJbXT47XHJcbiAgICBzaG93VGFiczogbmcuSUNoYW5nZXNPYmplY3Q8KCkgPT4gbmcuSVByb21pc2U8dm9pZD4+O1xyXG4gICAgc2hvd1RhYnNTaGFkb3c6IG5nLklDaGFuZ2VzT2JqZWN0PCgpID0+IG5nLklQcm9taXNlPHZvaWQ+PjtcclxuICAgIGFjdGl2ZUluZGV4OiBuZy5JQ2hhbmdlc09iamVjdDxudW1iZXI+O1xyXG4gICAgc2VsZWN0OiBuZy5JQ2hhbmdlc09iamVjdDwoKSA9PiBuZy5JUHJvbWlzZTx2b2lkPj47XHJcbiAgICBicmVha3BvaW50czogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcclxuICAgIHRoZW1lQ2xhc3M6IG5nLklDaGFuZ2VzT2JqZWN0PHN0cmluZz47XHJcbn1cclxuXHJcbmNsYXNzIFRhYnNEaXJlY3RpdmVDb250cm9sbGVyIGltcGxlbWVudHMgSVRhYnNCaW5kaW5ncyB7XHJcbiAgICBwcml2YXRlIF9lbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5O1xyXG4gICAgcHJpdmF0ZSBfaW5qZWN0b3I6IG5nLmF1dG8uSUluamVjdG9yU2VydmljZTtcclxuICAgIHByaXZhdGUgX2xvZzogbmcuSUxvZ1NlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfcGlwVHJhbnNsYXRlOiBwaXAuc2VydmljZXMuSVRyYW5zbGF0ZVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9waXBUaGVtZTogcGlwLnRoZW1lcy5JVGhlbWVTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfcGlwTWVkaWE6IHBpcC5sYXlvdXRzLklNZWRpYVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF90aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9uYXZDb25zdGFudDogYW55O1xyXG4gICAgcHJpdmF0ZSBzZWxlY3RlZFRhYklkOiBzdHJpbmc7XHJcblxyXG4gICAgcHVibGljIG5nRGlzYWJsZWQ6IEZ1bmN0aW9uO1xyXG4gICAgcHVibGljIHRhYnM6IFBpcFRhYltdO1xyXG4gICAgcHVibGljIGFjdGl2ZUluZGV4OiBudW1iZXI7XHJcbiAgICBwdWJsaWMgYnJlYWtwb2ludHM6IHN0cmluZztcclxuICAgIHB1YmxpYyBzaG93VGFiczogRnVuY3Rpb247XHJcbiAgICBwdWJsaWMgc2hvd1RhYnNTaGFkb3c6IEZ1bmN0aW9uO1xyXG4gICAgcHVibGljIHNlbGVjdDogRnVuY3Rpb247XHJcbiAgICBwdWJsaWMgdGhlbWVDbGFzczogc3RyaW5nO1xyXG4gICAgXHJcbiAgICBwdWJsaWMgbWVkaWE6IGFueTtcclxuICAgIHB1YmxpYyBjdXJyZW50VGhlbWU6IHN0cmluZztcclxuXHJcbiAgICBwdWJsaWMgY2hhbmdlOiAoKSA9PiBuZy5JUHJvbWlzZTxhbnk+O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICRlbGVtZW50OiBuZy5JQXVnbWVudGVkSlF1ZXJ5LFxyXG4gICAgICAgICRpbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlLFxyXG4gICAgICAgICRsb2c6IG5nLklMb2dTZXJ2aWNlLFxyXG4gICAgICAgICRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLFxyXG4gICAgICAgICRtZE1lZGlhOiBhbmd1bGFyLm1hdGVyaWFsLklNZWRpYSxcclxuICAgICAgICAkdGltZW91dDogbmcuSVRpbWVvdXRTZXJ2aWNlLFxyXG4gICAgICAgIG5hdkNvbnN0YW50OiBhbnlcclxuICAgICkge1xyXG4gICAgICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9ICRlbGVtZW50O1xyXG4gICAgICAgIHRoaXMuX2luamVjdG9yID0gJGluamVjdG9yO1xyXG4gICAgICAgIHRoaXMuX2xvZyA9ICRsb2c7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgICAgICB0aGlzLl90aW1lb3V0ID0gJHRpbWVvdXQ7XHJcbiAgICAgICAgdGhpcy5fbmF2Q29uc3RhbnQgPSBuYXZDb25zdGFudDtcclxuICAgICAgICB0aGlzLnNldFRoZW1lKCk7XHJcbiAgICAgICAgdGhpcy5zZXRNZWRpYSgkbWRNZWRpYSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZXRUaGVtZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9waXBUaGVtZSA9IHRoaXMuX2luamVjdG9yLmhhcygncGlwVGhlbWUnKSA/IDxwaXAudGhlbWVzLklUaGVtZVNlcnZpY2U+dGhpcy5faW5qZWN0b3IuZ2V0KCdwaXBUaGVtZScpIDogbnVsbDtcclxuICAgICAgICBpZiAodGhpcy5fcGlwVGhlbWUpIHtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50VGhlbWUgPSB0aGlzLl9waXBUaGVtZS50aGVtZTtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuX3Jvb3RTY29wZVsnJHRoZW1lJ10pIHtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50VGhlbWUgPSB0aGlzLl9yb290U2NvcGVbJyR0aGVtZSddO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy50aGVtZUNsYXNzID0gKHRoaXMudGhlbWVDbGFzcyB8fCAnJykgKyAnIG1kLScgKyB0aGlzLmN1cnJlbnRUaGVtZSArICctdGhlbWUnO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc2V0TWVkaWEoJG1kTWVkaWE6IGFuZ3VsYXIubWF0ZXJpYWwuSU1lZGlhKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fcGlwTWVkaWEgPSB0aGlzLl9pbmplY3Rvci5oYXMoJ3BpcE1lZGlhJykgPyA8cGlwLmxheW91dHMuSU1lZGlhU2VydmljZT50aGlzLl9pbmplY3Rvci5nZXQoJ3BpcE1lZGlhJykgOiBudWxsO1xyXG4gICAgICAgIHRoaXMubWVkaWEgPSB0aGlzLl9waXBNZWRpYSAhPT0gdW5kZWZpbmVkID8gdGhpcy5fcGlwTWVkaWEgOiAkbWRNZWRpYTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNldFRyYW5zbGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9waXBUcmFuc2xhdGUgPSB0aGlzLl9pbmplY3Rvci5oYXMoJ3BpcFRyYW5zbGF0ZScpID8gPHBpcC5zZXJ2aWNlcy5JVHJhbnNsYXRlU2VydmljZT50aGlzLl9pbmplY3Rvci5nZXQoJ3BpcFRyYW5zbGF0ZScpIDogbnVsbDtcclxuICAgICAgICBpZiAodGhpcy5fcGlwVHJhbnNsYXRlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnRhYnMubGVuZ3RoID4gMCAmJiB0aGlzLnRhYnNbMF0udGl0bGUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3BpcFRyYW5zbGF0ZS50cmFuc2xhdGVPYmplY3RzKHRoaXMudGFicywgJ3RpdGxlJywgJ25hbWVMb2NhbCcpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcGlwVHJhbnNsYXRlLnRyYW5zbGF0ZU9iamVjdHModGhpcy50YWJzLCAnbmFtZScsICduYW1lTG9jYWwnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaXNEaXNhYmxlZCgpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKHRoaXMubmdEaXNhYmxlZCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMubmdEaXNhYmxlZCgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRvQm9vbGVhbih0aGlzLm5nRGlzYWJsZWQpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgcHVibGljIHRhYkRpc2FibGVkKGluZGV4OiBudW1iZXIpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gKHRoaXMuaXNEaXNhYmxlZCgpICYmIHRoaXMuYWN0aXZlSW5kZXggIT0gaW5kZXgpO1xyXG4gICAgfTtcclxuXHJcbiAgICBwdWJsaWMgb25TZWxlY3QoaW5kZXg6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmlzRGlzYWJsZWQoKSkgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuYWN0aXZlSW5kZXggPSBpbmRleDtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkVGFiSWQgPSB0aGlzLnRhYnMubGVuZ3RoID49IHRoaXMuYWN0aXZlSW5kZXggPyB0aGlzLnRhYnNbdGhpcy5hY3RpdmVJbmRleF0uaWQgOiBudWxsO1xyXG4gICAgICAgIHRoaXMuX3RpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3QpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0KHRoaXMudGFic1t0aGlzLmFjdGl2ZUluZGV4XSwgdGhpcy5hY3RpdmVJbmRleCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCAwKTtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIHB1YmxpYyBzaG93U2hhZG93KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGlmIChfLmlzRnVuY3Rpb24odGhpcy5zaG93VGFic1NoYWRvdykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2hvd1RhYnNTaGFkb3coKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy50b0Jvb2xlYW4odGhpcy5zaG93VGFic1NoYWRvdyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBwdWJsaWMgc2hvdygpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAoXy5pc0Z1bmN0aW9uKHRoaXMuc2hvd1RhYnMpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnNob3dUYWJzKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9Cb29sZWFuKHRoaXMuc2hvd1RhYnMpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgcHVibGljIHRvQm9vbGVhbih2YWx1ZTogYW55KTogYm9vbGVhbiB7XHJcbiAgICAgICAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiBmYWxzZTtcclxuICAgICAgICBpZiAoIXZhbHVlKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlID09ICcxJyB8fCB2YWx1ZSA9PSAndHJ1ZSc7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljICRvbkNoYW5nZXMoY2hhbmdlczogVGFic0NoYW5nZXMpIHtcclxuICAgICAgICBpZiAoY2hhbmdlcy5hY3RpdmVJbmRleCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5hY3RpdmVJbmRleCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hY3RpdmVJbmRleCA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZUluZGV4ID0gY2hhbmdlcy5hY3RpdmVJbmRleC5jdXJyZW50VmFsdWUgfHwgMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3RpbWVvdXQgJiYgdGhpcy5hY3RpdmVJbmRleCAhPT0gY2hhbmdlcy5hY3RpdmVJbmRleC5wcmV2aW91c1ZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl90aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgYSA9IHRoaXMuX2VsZW1lbnQuZmluZCgnbWQtdGFicy1jYW52YXMnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYSAmJiBhWzBdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFuZ3VsYXIuZWxlbWVudChhWzBdKS5hdHRyKCdhY3RpdmVJbmRleCcsIHRoaXMuYWN0aXZlSW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBhLm9uKCdmb2N1c291dCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYW5ndWxhci5lbGVtZW50KGFbMF0pLmF0dHIoJ2FjdGl2ZUluZGV4JywgdGhpcy5hY3RpdmVJbmRleCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3RpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5ndWxhci5lbGVtZW50KGFbMF0pLmF0dHIoJ2FjdGl2ZUluZGV4JywgdGhpcy5hY3RpdmVJbmRleCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDUwKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoY2hhbmdlcy5icmVha3BvaW50cyA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5icmVha3BvaW50cykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5icmVha3BvaW50cyA9IHRoaXMuX25hdkNvbnN0YW50LlRBQl9CUkVBS1BPSU5UO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5icmVha3BvaW50cyA9IGNoYW5nZXMuYnJlYWtwb2ludHMuY3VycmVudFZhbHVlID8gY2hhbmdlcy5icmVha3BvaW50cy5jdXJyZW50VmFsdWUgOiB0aGlzLl9uYXZDb25zdGFudC5UQUJfQlJFQUtQT0lOVFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGNoYW5nZXMudGFicyA9PT0gdW5kZWZpbmVkIHx8ICFfLmlzQXJyYXkoY2hhbmdlcy50YWJzLmN1cnJlbnRWYWx1ZSkpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnRhYnMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudGFicyA9IFtdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy50YWJzID0gY2hhbmdlcy50YWJzLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5zZXRUcmFuc2xhdGUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghY2hhbmdlcy5hY3RpdmVJbmRleCAmJiBjaGFuZ2VzLnRhYnMgJiYgdGhpcy5zZWxlY3RlZFRhYklkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBfLmluZGV4T2YodGhpcy50YWJzLCBfLmZpbmQodGhpcy50YWJzLCB7XHJcbiAgICAgICAgICAgICAgICBpZDogdGhpcy5zZWxlY3RlZFRhYklkXHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgaWYgKGluZGV4IDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFRhYklkID0gdGhpcy50YWJzLmxlbmd0aCA+PSB0aGlzLmFjdGl2ZUluZGV4ID8gdGhpcy50YWJzW3RoaXMuYWN0aXZlSW5kZXhdLmlkIDogbnVsbDtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnRhYnMubGVuZ3RoID4gMCAmJiB0aGlzLmFjdGl2ZUluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uU2VsZWN0KGluZGV4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRUYWJJZCA9IHRoaXMudGFicy5sZW5ndGggPj0gdGhpcy5hY3RpdmVJbmRleCA/IHRoaXMudGFic1t0aGlzLmFjdGl2ZUluZGV4XS5pZCA6IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuY29uc3QgVGFiczogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XHJcbiAgICBiaW5kaW5nczogVGFic0JpbmRpbmdzLFxyXG4gICAgdGVtcGxhdGVVcmw6ICd0YWJzL1RhYnMuaHRtbCcsXHJcbiAgICBjb250cm9sbGVyOiBUYWJzRGlyZWN0aXZlQ29udHJvbGxlclxyXG59XHJcblxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBUYWJzJywgWydwaXBOYXYuVGVtcGxhdGVzJ10pXHJcbiAgICAuY29tcG9uZW50KCdwaXBUYWJzJywgVGFicyk7XHJcblxyXG4iLCIoZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnYWN0aW9ucy9QcmltYXJ5QWN0aW9ucy5odG1sJyxcbiAgICAnPGRpdiBwaXAtZm9jdXNlZD1cIlwiIHBpcC1mb2N1c2VkLXRhYmluZGV4PVwiMlwiPjxtZC1tZW51IG1kLXBvc2l0aW9uLW1vZGU9XCJ0YXJnZXQtcmlnaHQgdGFyZ2V0XCIgY2xhc3M9XCJwaXAtcHJpbWFyeS1hY3Rpb25zXCIgbmctcmVwZWF0PVwiYWN0aW9uIGluICRjdHJsLmNvbmZpZy5wcmltYXJ5TG9jYWxBY3Rpb25zXCI+PG1kLWJ1dHRvbiBjbGFzcz1cInBpcC1wcmltYXJ5LWFjdGlvbnMtYWN0aW9uIG1kLWljb24tYnV0dG9uIHBpcC1mb2N1c2FibGVcIiBuZy1jbGljaz1cIiRjdHJsLmNsaWNrQWN0aW9uKGFjdGlvbiwgJG1kT3Blbk1lbnUpO1wiIHRhYmluZGV4PVwiLTFcIiBuZy1oaWRlPVwiJGN0cmwuaXNIaWRkZW4oYWN0aW9uKVwiIGFyaWEtbGFiZWw9XCJ7eyBhY3Rpb24udGl0bGUgfCB0cmFuc2xhdGUgfX1cIj48ZGl2IGNsYXNzPVwicGlwLXByaW1hcnktYWN0aW9ucy1iYWRnZVwiIG5nLXNob3c9XCJhY3Rpb24uY291bnQgPiAwXCI+e3sgJGN0cmwuYWN0aW9uQ291bnQoYWN0aW9uKSB9fTwvZGl2PjxtZC1pY29uIG1kLXN2Zy1pY29uPVwie3sgYWN0aW9uLmljb259fVwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48bWQtbWVudS1jb250ZW50IHdpZHRoPVwiM1wiPjxtZC1tZW51LWl0ZW0gbmctcmVwZWF0LXN0YXJ0PVwic3ViQWN0aW9uIGluIGFjdGlvbi5zdWJBY3Rpb25zXCIgbmctaWY9XCIhc3ViQWN0aW9uLmRpdmlkZXJcIiBuZy1oaWRlPVwiJGN0cmwuaXNIaWRkZW4oc3ViQWN0aW9uKVwiPjxtZC1idXR0b24gY2xhc3M9XCJwaXAtZm9jdXNhYmxlXCIgbmctaGlkZT1cInN1YkFjdGlvbi5kaXZpZGVyXCIgdGFiaW5kZXg9XCItMVwiIG5nLWNsaWNrPVwiJGN0cmwuY2xpY2tBY3Rpb24oc3ViQWN0aW9uKVwiPnt7IDo6c3ViQWN0aW9uLnRpdGxlIHwgdHJhbnNsYXRlIH19PC9tZC1idXR0b24+PC9tZC1tZW51LWl0ZW0+PG1kLW1lbnUtZGl2aWRlciBuZy1pZj1cInN1YkFjdGlvbi5kaXZpZGVyXCIgbmctcmVwZWF0LWVuZD1cIlwiPjwvbWQtbWVudS1kaXZpZGVyPjwvbWQtbWVudS1jb250ZW50PjwvbWQtbWVudT48bWQtbWVudSBtZC1wb3NpdGlvbi1tb2RlPVwidGFyZ2V0LXJpZ2h0IHRhcmdldFwiIGNsYXNzPVwicGlwLXByaW1hcnktYWN0aW9uc1wiIG5nLXJlcGVhdD1cImFjdGlvbiBpbiAkY3RybC5jb25maWcucHJpbWFyeUdsb2JhbEFjdGlvbnNcIj48bWQtYnV0dG9uIGNsYXNzPVwicGlwLXByaW1hcnktYWN0aW9ucy1hY3Rpb24gbWQtaWNvbi1idXR0b24gcGlwLWZvY3VzYWJsZVwiIG5nLWNsaWNrPVwiJGN0cmwuY2xpY2tBY3Rpb24oYWN0aW9uLCAkbWRPcGVuTWVudSk7XCIgbmctaGlkZT1cIiRjdHJsLmlzSGlkZGVuKGFjdGlvbilcIiB0YWJpbmRleD1cIi0xXCIgYXJpYS1sYWJlbD1cInt7IGFjdGlvbi50aXRsZSB8IHRyYW5zbGF0ZSB9fVwiPjxkaXYgY2xhc3M9XCJwaXAtcHJpbWFyeS1hY3Rpb25zLWJhZGdlIGNvbG9yLWJhZGdlLWJnXCIgbmctc2hvdz1cImFjdGlvbi5jb3VudCA+IDBcIj57eyAkY3RybC5hY3Rpb25Db3VudChhY3Rpb24pIH19PC9kaXY+PG1kLWljb24gbWQtc3ZnLWljb249XCJ7eyBhY3Rpb24uaWNvbiB9fVwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48bWQtbWVudS1jb250ZW50IHdpZHRoPVwiM1wiPjxtZC1tZW51LWl0ZW0gbmctcmVwZWF0LXN0YXJ0PVwic3ViQWN0aW9uIGluIGFjdGlvbi5zdWJBY3Rpb25zXCIgbmctaWY9XCIhc3ViQWN0aW9uLmRpdmlkZXJcIiBuZy1oaWRlPVwiJGN0cmwuaXNIaWRkZW4oc3ViQWN0aW9uKVwiPjxtZC1idXR0b24gY2xhc3M9XCJwaXAtZm9jdXNhYmxlXCIgbmctaGlkZT1cInN1YkFjdGlvbi5kaXZpZGVyXCIgdGFiaW5kZXg9XCItMVwiIG5nLWNsaWNrPVwiJGN0cmwuY2xpY2tBY3Rpb24oc3ViQWN0aW9uKVwiPnt7IHN1YkFjdGlvbi50aXRsZSB8IHRyYW5zbGF0ZSB9fTwvbWQtYnV0dG9uPjwvbWQtbWVudS1pdGVtPjxtZC1tZW51LWRpdmlkZXIgbmctaWY9XCJzdWJBY3Rpb24uZGl2aWRlclwiIG5nLXJlcGVhdC1lbmQ9XCJcIj48L21kLW1lbnUtZGl2aWRlcj48L21kLW1lbnUtY29udGVudD48L21kLW1lbnU+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnYWN0aW9ucy9TZWNvbmRhcnlBY3Rpb25zLmh0bWwnLFxuICAgICc8bWQtbWVudSBuZy1pZj1cIiRjdHJsLnNlY29uZGFyeUFjdGlvbnNWaXNpYmxlKClcIiBtZC1wb3NpdGlvbi1tb2RlPVwidGFyZ2V0LXJpZ2h0IHRhcmdldFwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvblwiIHRhYmluZGV4PVwiM1wiIG5nLWluaXQ9XCIkY3RybC5nZXRNZW51KCRtZE9wZW5NZW51KVwiIG5nLWNsaWNrPVwiJGN0cmwub25TZWNvbmRhcnlBY3Rpb25DbGljaygpOyAkY3RybC5vcGVuTWVudSgkbWRPcGVuTWVudSwgJGV2ZW50KTtcIiBhcmlhLWxhYmVsPVwib3BlbiBhY3Rpb25zXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczp2ZG90c1wiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48bWQtbWVudS1jb250ZW50IHdpZHRoPVwiM1wiPjxtZC1tZW51LWl0ZW0gbmctcmVwZWF0LXN0YXJ0PVwiYWN0aW9uIGluICRjdHJsLmNvbmZpZy5zZWNvbmRhcnlMb2NhbEFjdGlvbnNcIiBuZy1pZj1cIiFhY3Rpb24uZGl2aWRlclwiIG5nLWhpZGU9XCIkY3RybC5pc0hpZGRlbihhY3Rpb24pXCI+PG1kLWJ1dHRvbiBuZy1oaWRlPVwiYWN0aW9uLmRpdmlkZXJcIiBuZy1jbGljaz1cIiRjdHJsLmNsaWNrQWN0aW9uKGFjdGlvbilcIj57eyA6OmFjdGlvbi50aXRsZSB8IHRyYW5zbGF0ZSB9fTwvbWQtYnV0dG9uPjwvbWQtbWVudS1pdGVtPjxtZC1tZW51LWRpdmlkZXIgbmctaWY9XCJhY3Rpb24uZGl2aWRlclwiIG5nLXJlcGVhdC1lbmQ9XCJcIj48L21kLW1lbnUtZGl2aWRlcj48bWQtbWVudS1kaXZpZGVyIG5nLWlmPVwiJGN0cmwuc2Vjb25kYXJ5RGl2aWRlclZpc2libGUoKVwiPjwvbWQtbWVudS1kaXZpZGVyPjxtZC1tZW51LWl0ZW0gbmctcmVwZWF0LXN0YXJ0PVwiYWN0aW9uIGluICRjdHJsLmNvbmZpZy5zZWNvbmRhcnlHbG9iYWxBY3Rpb25zXCIgbmctaWY9XCIhYWN0aW9uLmRpdmlkZXJcIiBuZy1oaWRlPVwiJGN0cmwuaXNIaWRkZW4oYWN0aW9uKVwiPjxtZC1idXR0b24gbmctaGlkZT1cImFjdGlvbi5kaXZpZGVyXCIgbmctY2xpY2s9XCIkY3RybC5jbGlja0FjdGlvbihhY3Rpb24pXCI+e3sgOjphY3Rpb24udGl0bGUgfCB0cmFuc2xhdGUgfX08L21kLWJ1dHRvbj48L21kLW1lbnUtaXRlbT48bWQtbWVudS1kaXZpZGVyIG5nLWlmPVwiYWN0aW9uLmRpdmlkZXJcIiBuZy1yZXBlYXQtZW5kPVwiXCI+PC9tZC1tZW51LWRpdmlkZXI+PC9tZC1tZW51LWNvbnRlbnQ+PC9tZC1tZW51PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcE5hdi5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcE5hdi5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2FwcGJhci9BcHBCYXIuaHRtbCcsXG4gICAgJzxtZC10b29sYmFyIGNsYXNzPVwie3sgJGN0cmwuY29uZmlnLmNsYXNzZXMuam9pbihcXCcgXFwnKSB9fVwiIG5nLWlmPVwiJGN0cmwuY29uZmlnLnZpc2libGVcIiBuZy10cmFuc2NsdWRlPVwiXCI+PC9tZC10b29sYmFyPicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcE5hdi5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcE5hdi5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2JyZWFkY3J1bWIvQnJlYWRjcnVtYi5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInBpcC1icmVhZGNydW1iLWJsb2NrXCI+PGRpdiBjbGFzcz1cInRleHQtb3ZlcmZsb3dcIiBuZy1pZj1cIiEkY3RybC5fbWVkaWEoXFwneHNcXCcpXCI+PHNwYW4gbmctaWY9XCIkY3RybC5jb25maWcuY3JpdGVyaWFcIiBuZy1jbGljaz1cIiRjdHJsLm9wZW5TZWFyY2goKVwiPnt7ICRjdHJsLmNvbmZpZy5jcml0ZXJpYSB9fSAtPC9zcGFuPjxzcGFuIGNsYXNzPVwicGlwLWJyZWFkY3J1bWItaXRlbSB7eyAkbGFzdCA/IFxcJ2JyZWFkY3J1bWItYWNjZW50XFwnIDogXFwnXFwnIH19XCIgbmctaWY9XCIkY3RybC5jb25maWcuaXRlbXMgJiYgJGN0cmwuY29uZmlnLml0ZW1zLmxlbmd0aCA+IDBcIiBuZy1yZXBlYXQtc3RhcnQ9XCJpdGVtIGluICRjdHJsLmNvbmZpZy5pdGVtc1wiIG5nLWNsaWNrPVwiJGN0cmwub25DbGljayhpdGVtKVwiIG5nLWluaXQ9XCJzdGVwV2lkdGggPSAxMDAvKCRjdHJsLmNvbmZpZy5pdGVtcy5sZW5ndGggKyAxKVwiIG5nLWNsYXNzPVwie1xcJ2N1cnNvci1wb2ludGVyXFwnOiAhJGxhc3R9XCIgbmctc3R5bGU9XCJ7XFwnbWF4LXdpZHRoXFwnOiBzdGVwV2lkdGggKyBcXCclXFwnfVwiPjxzcGFuIG5nLWlmPVwiISRsYXN0IHx8ICEkY3RybC5hY3Rpb25zVmlzaWJsZShpdGVtKVwiPnt7IGl0ZW0udGl0bGUgfCB0cmFuc2xhdGUgfX08L3NwYW4+PGRpdiBuZy1pZj1cIiRsYXN0ICYmICRjdHJsLmFjdGlvbnNWaXNpYmxlKGl0ZW0pXCIgc3R5bGU9XCJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHBvc2l0aW9uOiByZWxhdGl2ZTtcIj48bWQtbWVudSBtZC1vZmZzZXQ9XCIwIDQ0XCI+PHNwYW4gY2xhc3M9XCJsYXlvdXQtcm93IHBpcC1icmVhZGNydW1iLWl0ZW0tbWVudSBjdXJzb3ItcG9pbnRlciB7eyAkbGFzdCA/IFxcJ2JyZWFkY3J1bWItYWNjZW50XFwnIDogXFwnXFwnIH19XCIgbmctY2xpY2s9XCIkY3RybC5vbk9wZW5NZW51KCRtZE9wZW5NZW51LCAkZXZlbnQpXCIgbWQtaW5rLXJpcHBsZT1cIlwiIGFyaWEtbGFiZWw9XCJvcGVuIGJyZWFkY3J1bWIgYWN0aW9uc1wiPnt7IGl0ZW0udGl0bGUgfCB0cmFuc2xhdGUgfX08bWQtaWNvbiBjbGFzcz1cInBpcC10cmlhbmdsZS1kb3duXCIgbWQtc3ZnLWljb249XCJpY29uczp0cmlhbmdsZS1kb3duXCI+PC9tZC1pY29uPjwvc3Bhbj48bWQtbWVudS1jb250ZW50IHdpZHRoPVwiNFwiPjxtZC1tZW51LWl0ZW0gbmctaWY9XCIhc3ViSXRlbS5kaXZpZGVyXCIgbmctcmVwZWF0LXN0YXJ0PVwic3ViSXRlbSBpbiBpdGVtLnN1YkFjdGlvbnNcIj48bWQtYnV0dG9uIG5nLWNsaWNrPVwiJGN0cmwub25TdWJBY3Rpb25DbGljayhzdWJJdGVtKVwiIG5nLWlmPVwiIWFjdGlvbi5kaXZpZGVyXCIgdGFiaW5kZXg9XCI0XCI+PG1kLWljb24gbWQtbWVudS1hbGlnbi10YXJnZXQ9XCJcIiBuZy1pZj1cInN1Ykl0ZW0uaWNvblwiIG1kLXN2Zy1pY29uPVwie3sgc3ViSXRlbS5pY29uIH19XCI+PC9tZC1pY29uPjxzcGFuPnt7IHN1Ykl0ZW0udGl0bGUgfCB0cmFuc2xhdGUgfX08L3NwYW4+PC9tZC1idXR0b24+PC9tZC1tZW51LWl0ZW0+PG1kLW1lbnUtZGl2aWRlciBuZy1pZj1cInN1Ykl0ZW0uZGl2aWRlclwiIG5nLXJlcGVhdC1lbmQ9XCJcIj48L21kLW1lbnUtZGl2aWRlcj48L21kLW1lbnUtY29udGVudD48L21kLW1lbnU+PC9kaXY+PC9zcGFuPjxtZC1pY29uIG5nLXJlcGVhdC1lbmQ9XCJcIiBtZC1zdmctaWNvbj1cImljb25zOmNoZXZyb24tcmlnaHRcIiBuZy1oaWRlPVwiJGxhc3RcIj48L21kLWljb24+PHNwYW4gY2xhc3M9XCJwaXAtdGl0bGUgYnJlYWRjcnVtYi1hY2NlbnRcIiBuZy1pZj1cIiRjdHJsLmNvbmZpZy50ZXh0XCI+e3sgJGN0cmwuY29uZmlnLnRleHQgfCB0cmFuc2xhdGUgfX08L3NwYW4+PC9kaXY+PGRpdiBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTtcIiBuZy1pZj1cIiRjdHJsLl9tZWRpYShcXCd4c1xcJylcIj48bWQtbWVudSBtZC1vZmZzZXQ9XCIwIDQ0XCI+PHNwYW4gY2xhc3M9XCJwaXAtbW9iaWxlLWJyZWFkY3J1bWIgbGF5b3V0LXJvd1wiIG5nLWNsaWNrPVwiJGN0cmwuY29uZmlnLml0ZW1zICYmICRjdHJsLmNvbmZpZy5pdGVtcy5sZW5ndGggPiAxID8gJG1kT3Blbk1lbnUoKSA6IHJldHVyblwiPjxzcGFuIGNsYXNzPVwidGV4dC1vdmVyZmxvd1wiPjxzcGFuIG5nLWlmPVwiJGN0cmwuY29uZmlnLmNyaXRlcmlhXCIgbmctY2xpY2s9XCIkY3RybC5vcGVuU2VhcmNoKClcIj57eyAkY3RybC5jb25maWcuY3JpdGVyaWEgfX0gLTwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJicmVhZGNydW1iLWFjY2VudFwiIG5nLWlmPVwiJGN0cmwuY29uZmlnLnRleHRcIj57eyAkY3RybC5jb25maWcudGV4dCB8IHRyYW5zbGF0ZSB9fTwvc3Bhbj4gPHNwYW4gbmctaWY9XCIkY3RybC5jb25maWcuaXRlbXMgJiYgJGN0cmwuY29uZmlnLml0ZW1zLmxlbmd0aCA+IDBcIiBjbGFzcz1cImJyZWFkY3J1bWItYWNjZW50IHt7ICgkY3RybC5jb25maWcuaXRlbXMgJiYgJGN0cmwuY29uZmlnLml0ZW1zLmxlbmd0aCA+IDEpID8gXFwnY3Vyc29yLXBvaW50ZXJcXCcgOiBcXCdcXCcgfX1cIj57eyAkY3RybC5jb25maWcuaXRlbXNbJGN0cmwuY29uZmlnLml0ZW1zLmxlbmd0aCAtIDFdLnRpdGxlIHwgdHJhbnNsYXRlIH19PC9zcGFuPjwvc3Bhbj48bWQtaWNvbiBjbGFzcz1cInBpcC10cmlhbmdsZS1kb3duIGN1cnNvci1wb2ludGVyIGJyZWFkY3J1bWItYWNjZW50XCIgbWQtc3ZnLWljb249XCJpY29uczp0cmlhbmdsZS1kb3duXCIgbmctaWY9XCIkY3RybC5jb25maWcuaXRlbXMgJiYgJGN0cmwuY29uZmlnLml0ZW1zLmxlbmd0aCA+IDFcIj48L21kLWljb24+PC9zcGFuPjxtZC1tZW51LWNvbnRlbnQgd2lkdGg9XCI0XCI+PG1kLW1lbnUtaXRlbSBuZy1yZXBlYXQ9XCJpdGVtIGluICRjdHJsLmNvbmZpZy5pdGVtc1wiIG5nLWlmPVwiJGN0cmwuY29uZmlnLml0ZW1zICYmICRjdHJsLmNvbmZpZy5pdGVtcy5sZW5ndGggPiAwXCI+PG1kLWJ1dHRvbiBuZy1jbGljaz1cIiRjdHJsLm9uQ2xpY2soaXRlbSlcIiB0YWJpbmRleD1cIjVcIj48bWQtaWNvbiBtZC1tZW51LWFsaWduLXRhcmdldD1cIlwiIG5nLWlmPVwiaXRlbS5pY29uXCIgbWQtc3ZnLWljb249XCJ7eyBpdGVtLmljb24gfX1cIj48L21kLWljb24+PHNwYW4+e3sgaXRlbS50aXRsZSB8IHRyYW5zbGF0ZSB9fTwvc3Bhbj48L21kLWJ1dHRvbj48L21kLW1lbnUtaXRlbT48bWQtbWVudS1pdGVtIG5nLWlmPVwiJGN0cmwuY29uZmlnLnRleHRcIj48bWQtYnV0dG9uIHRhYmluZGV4PVwiNVwiPjxzcGFuIGNsYXNzPVwidGV4dC1ncmV5XCI+e3sgJGN0cmwuY29uZmlnLnRleHQgfCB0cmFuc2xhdGUgfX08L3NwYW4+PC9tZC1idXR0b24+PC9tZC1tZW51LWl0ZW0+PC9tZC1tZW51LWNvbnRlbnQ+PC9tZC1tZW51PjwvZGl2PjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcE5hdi5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcE5hdi5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2Ryb3Bkb3duL0Ryb3Bkb3duLmh0bWwnLFxuICAgICc8bWQtdG9vbGJhciBjbGFzcz1cIm1kLXN1YmhlYWQgY29sb3ItcHJpbWFyeS1iZyB7eyAkY3RybC50aGVtZUNsYXNzfX1cIiBuZy1pZj1cIiRjdHJsLnNob3coKVwiIG5nLWNsYXNzPVwie1xcJ21kLXdoaXRlZnJhbWUtM2RwXFwnOiAkY3RybC5tZWRpYShcXCd4c1xcJyl9XCI+PGRpdiBjbGFzcz1cInBpcC1kaXZpZGVyXCI+PC9kaXY+PG1kLXNlbGVjdCBuZy1tb2RlbD1cIiRjdHJsLnNlbGVjdGVkSW5kZXhcIiB0YWJpbmRleD1cIjE1XCIgbmctZGlzYWJsZWQ9XCIkY3RybC5kaXNhYmxlZCgpXCIgbWQtY29udGFpbmVyLWNsYXNzPVwicGlwLWZ1bGwtd2lkdGgtZHJvcGRvd25cIiBhcmlhLWxhYmVsPVwiRFJPUERPV05cIiBtZC1pbmstcmlwcGxlPVwiXCIgbWQtb24tY2xvc2U9XCIkY3RybC5vblNlbGVjdCgkY3RybC5zZWxlY3RlZEluZGV4KVwiPjxtZC1vcHRpb24gbmctcmVwZWF0PVwiYWN0aW9uIGluICRjdHJsLmFjdGlvbnNcIiB2YWx1ZT1cInt7IDo6JGluZGV4IH19XCIgbmctc2VsZWN0ZWQ9XCIkY3RybC5hY3RpdmVJbmRleCA9PSAkaW5kZXggPyB0cnVlIDogZmFsc2VcIj57eyAoYWN0aW9uLnRpdGxlIHx8IGFjdGlvbi5uYW1lIHx8IGFjdGlvbikgfCB0cmFuc2xhdGUgfX08L21kLW9wdGlvbj48L21kLXNlbGVjdD48L21kLXRvb2xiYXI+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnaGVhZGVyL05hdkhlYWRlci5odG1sJyxcbiAgICAnPG1kLXRvb2xiYXIgbmctc2hvdz1cInNob3dIZWFkZXJcIiBjbGFzcz1cImxheW91dC1yb3cgbGF5b3V0LWFsaWduLXN0YXJ0LWNlbnRlclwiPjxkaXYgY2xhc3M9XCJmbGV4LWZpeGVkIHBpcC1zdGlja3ktbmF2LWhlYWRlci11c2VyXCI+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWljb24tYnV0dG9uXCIgbmctY2xpY2s9XCJvblVzZXJDbGljaygpXCIgYXJpYS1sYWJlbD1cImN1cnJlbnQgdXNlclwiIHRhYmluZGV4PVwiLTFcIj48aW1nIHNyYz1cIlwiIGNsYXNzPVwicGlwLXN0aWNreS1uYXYtaGVhZGVyLXVzZXItaW1hZ2VcIiBuZy1jbGFzcz1cImltYWdlQ3NzXCI+PC9tZC1idXR0b24+PC9kaXY+PGRpdiBjbGFzcz1cInBpcC1zdGlja3ktbmF2LWhlYWRlci11c2VyLXRleHRcIj48ZGl2IGNsYXNzPVwicGlwLXN0aWNreS1uYXYtaGVhZGVyLXVzZXItcHJpXCIgbmctY2xpY2s9XCJvblVzZXJDbGljaygpXCIgdGFiaW5kZXg9XCItMVwiPnt7IHRpdGxlIHwgdHJhbnNsYXRlIH19PC9kaXY+PGRpdiBjbGFzcz1cInBpcC1zdGlja3ktbmF2LWhlYWRlci11c2VyLXNlY1wiPnt7IHN1YnRpdGxlIHwgdHJhbnNsYXRlIH19PC9kaXY+PC9kaXY+PC9tZC10b29sYmFyPicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcE5hdi5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcE5hdi5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2ljb24vTmF2SWNvbi5odG1sJyxcbiAgICAnPG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWljb24tYnV0dG9uIHBpcC1uYXYtaWNvblwiIG5nLWlmPVwiJGN0cmwuY29uZmlnLnR5cGUgIT0gXFwnbm9uZVxcJ1wiIG5nLWNsYXNzPVwiJGN0cmwuY29uZmlnLmNsYXNzXCIgbmctY2xpY2s9XCIkY3RybC5vbk5hdkljb25DbGljaygpXCIgdGFiaW5kZXg9XCJ7eyAkY3RybC5jb25maWcudHlwZT09XFwnbWVudVxcJyB8fCAkY3RybC5jb25maWcudHlwZT09XFwnYmFja1xcJyA/IDQgOiAtMSB9fVwiIGFyaWEtbGFiZWw9XCJtZW51XCI+PG1kLWljb24gbmctaWY9XCIkY3RybC5jb25maWcudHlwZT09XFwnbWVudVxcJ1wiIG1kLXN2Zy1pY29uPVwiaWNvbnM6bWVudVwiPjwvbWQtaWNvbj48aW1nIG5nLXNyYz1cInt7ICRjdHJsLmNvbmZpZy5pbWFnZVVybCB9fVwiIG5nLWlmPVwiJGN0cmwuY29uZmlnLnR5cGU9PVxcJ2ltYWdlXFwnXCIgaGVpZ2h0PVwiMjRcIiB3aWR0aD1cIjI0XCI+PG1kLWljb24gbmctaWY9XCIkY3RybC5jb25maWcudHlwZT09XFwnYmFja1xcJ1wiIG1kLXN2Zy1pY29uPVwiaWNvbnM6YXJyb3ctbGVmdFwiPjwvbWQtaWNvbj48bWQtaWNvbiBuZy1pZj1cIiRjdHJsLmNvbmZpZy50eXBlPT1cXCdpY29uXFwnXCIgbWQtc3ZnLWljb249XCJ7eyAkY3RybC5jb25maWcuaWNvbiB9fVwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBOYXYuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBOYXYuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdsYW5ndWFnZS9MYW5ndWFnZVBpY2tlci5odG1sJyxcbiAgICAnPG1kLW1lbnUgbWQtcG9zaXRpb24tbW9kZT1cInRhcmdldC1yaWdodCB0YXJnZXRcIj48c3BhbiBjbGFzcz1cInBpcC1sYW5ndWFnZVwiIG5nLWNsaWNrPVwiJG1kT3Blbk1lbnUoKVwiIGFyaWEtbGFiZWw9XCJsYW5ndWFnZSBzZWxlY3Rpb25cIj57eyAkY3RybC5zZWxlY3RlZExhbmd1YWdlIHwgdHJhbnNsYXRlIH19PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczp0cmlhbmdsZS1kb3duXCI+PC9tZC1pY29uPjwvc3Bhbj48bWQtbWVudS1jb250ZW50IHdpZHRoPVwiM1wiPjxtZC1tZW51LWl0ZW0gbmctcmVwZWF0PVwibGFuZ3VhZ2UgaW4gJGN0cmwubGFuZ3VhZ2VzXCI+PG1kLWJ1dHRvbiBuZy1jbGljaz1cIiRjdHJsLm9uTGFuZ3VhZ2VDbGljayhsYW5ndWFnZSlcIiB0YWJpbmRleD1cIjdcIj57eyBsYW5ndWFnZSB8IHRyYW5zbGF0ZSB9fTwvbWQtYnV0dG9uPjwvbWQtbWVudS1pdGVtPjwvbWQtbWVudS1jb250ZW50PjwvbWQtbWVudT4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBOYXYuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBOYXYuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzZWFyY2gvU2VhcmNoQmFyLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwibWQtdG9vbGJhci10b29scyBwaXAtc2VhcmNoLWNvbnRhaW5lclwiIG5nLWlmPVwiJGN0cmwuZW5hYmxlZFwiPjxkaXYgY2xhc3M9XCJsYXlvdXQtcm93IHBpcC1zZWFyY2gtc2VsZWN0ZWRcIj48bWQtYnV0dG9uIGNsYXNzPVwibWQtaWNvbi1idXR0b25cIiB0YWJpbmRleD1cIjZcIiBhcmlhLWxhYmVsPVwic3RhcnQgc2VhcmNoXCIgbmctY2xpY2s9XCIkY3RybC5vbkNsaWNrKClcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnNlYXJjaFwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48aW5wdXQgY2xhc3M9XCJwaXAtc2VhcmNoLXRleHQgZmxleFwiIHR5cGU9XCJzZWFyY2hcIiB0YWJpbmRleD1cIjZcIiBuZy1tb2RlbD1cIiRjdHJsLnNlYXJjaC50ZXh0XCIgbmcta2V5ZG93bj1cIiRjdHJsLm9uS2V5RG93bigkZXZlbnQpXCI+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWljb24tYnV0dG9uXCIgdGFiaW5kZXg9XCI2XCIgYXJpYS1sYWJlbD1cImNsZWFyIHNlYXJjaFwiIG5nLWNsaWNrPVwiJGN0cmwuY2xlYXIoKVwiPjxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6Y3Jvc3MtY2lyY2xlXCI+PC9tZC1pY29uPjwvbWQtYnV0dG9uPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJtZC10b29sYmFyLXRvb2xzIGxheW91dC1yb3cgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXIgZmxleC1maXhlZCBscDAgcnAwXCIgbmctaWY9XCIhJGN0cmwuZW5hYmxlZFwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvblwiIHRhYmluZGV4PVwiNVwiIGFyaWEtbGFiZWw9XCJzdGFydCBzZWFyY2hcIiBuZy1jbGljaz1cIiRjdHJsLmVuYWJsZSgpXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpzZWFyY2hcIj48L21kLWljb24+PC9tZC1idXR0b24+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnbWVudS9OYXZNZW51Lmh0bWwnLFxuICAgICc8ZGl2IG5nLWlmPVwiJGN0cmwuc2VjdGlvbnMgJiYgJGN0cmwuc2VjdGlvbnMubGVuZ3RoXCI+PG1kLWxpc3QgY2xhc3M9XCJzaWRlbmF2LWxpc3RcIiBwaXAtZm9jdXNlZD1cIlwiIHBpcC1mb2N1c2VkLXRhYmluZGV4PVwiMTBcIiBwaXAtd2l0aC1oaWRkZW49XCJ0cnVlXCI+PG1kLWxpc3QtaXRlbSBjbGFzcz1cIm5vLWJvcmRlciBwaXAtc3RpY2t5LW5hdi1tZW51LWl0ZW0gcGlwLXN0aWNreS1uYXYtZXhwYW5kZWQtYnV0dG9uXCIgbmctY2xpY2s9XCIkY3RybC5vbkV4cGFuZCgpXCIgbmctZGlzYWJsZWQ9XCIhJGN0cmwuaXNDb2xsYXBzZWRcIiB0YWJpbmRleD1cIi0xXCIgbmctaWY9XCIkY3RybC5leHBhbmRlZEJ1dHRvblwiPjxtZC1pY29uIGNsYXNzPVwicGlwLXN0aWNreS1uYXYtbWVudS1pY29uXCIgbWQtc3ZnLWljb249XCJpY29uczpjaGV2cm9uLWxlZnRcIiBuZy1pZj1cIiRjdHJsLmV4cGFuZGVkXCI+PC9tZC1pY29uPjxtZC1pY29uIGNsYXNzPVwicGlwLXN0aWNreS1uYXYtbWVudS1pY29uXCIgbWQtc3ZnLWljb249XCJpY29uczpjaGV2cm9uLXJpZ2h0XCIgbmctaWY9XCIhJGN0cmwuZXhwYW5kZWRcIj48L21kLWljb24+PC9tZC1saXN0LWl0ZW0+PG1kLWRpdmlkZXIgbmctc2hvdz1cIiRjdHJsLmV4cGFuZGVkQnV0dG9uXCI+PC9tZC1kaXZpZGVyPjxkaXYgY2xhc3M9XCJwaXAtc2VjdGlvblwiIG5nLXJlcGVhdD1cInNlY3Rpb24gaW4gJGN0cmwuc2VjdGlvbnNcIiBuZy1oaWRlPVwic2VjdGlvbi5hY2Nlc3MgJiYgIXNlY3Rpb24uYWNjZXNzKHNlY3Rpb24pXCI+PG1kLWRpdmlkZXIgbmctc2hvdz1cIiRpbmRleCA+IDAgJiYgISRjdHJsLmlzU2VjdGlvbkVtcHR5KHNlY3Rpb24ubGlua3MpXCI+PC9tZC1kaXZpZGVyPjxtZC1zdWJoZWFkZXIgbmctc2hvdz1cInNlY3Rpb24udGl0bGVcIiBzdHlsZT1cImhlaWdodDogNDhweDtcIj48c3BhbiBuZy1pZj1cIiRjdHJsLmV4cGFuZGVkXCIgY2xhc3M9XCJwaXAtc3RpY2t5LW5hdi1tZW51LXRpdGxlIHNlY3Rpb24tdGl0bGVcIj57eyA6OnNlY3Rpb24udGl0bGUgfCB0cmFuc2xhdGUgfX08L3NwYW4+PG1kLWljb24gY2xhc3M9XCJwaXAtc3RpY2t5LW5hdi1tZW51LWljb24gc2VjdGlvbi1pY29uXCIgbWQtc3ZnLWljb249XCJ7eyBzZWN0aW9uLmljb24gfX1cIiBuZy1pZj1cIiEkY3RybC5zaWRlTmF2U3RhdGUuc2hvd0ljb25Ub29sdHlwZSAmJiAhJGN0cmwuZXhwYW5kZWQgJiYgc2VjdGlvbi5pY29uXCI+PC9tZC1pY29uPjxtZC1pY29uIGNsYXNzPVwicGlwLXN0aWNreS1uYXYtbWVudS1pY29uIHNlY3Rpb24taWNvblwiIG1kLXN2Zy1pY29uPVwie3sgc2VjdGlvbi5pY29uIH19XCIgbmctaWY9XCIkY3RybC5zaWRlTmF2U3RhdGUuc2hvd0ljb25Ub29sdHlwZSAmJiAhJGN0cmwuZXhwYW5kZWQgJiYgc2VjdGlvbi5pY29uXCI+PG1kLXRvb2x0aXAgbWQtdmlzaWJsZT1cInNob3dUb29sdGlwXCIgbWQtZGlyZWN0aW9uPVwicmlnaHRcIiBjbGFzcz1cInNpZGVuYXYtaWNvbi10b29sdGlwXCI+e3sgOjpzZWN0aW9uLnRvb2x0aXBUZXh0IHx8IHNlY3Rpb24udGl0bGUgfCB0cmFuc2xhdGUgfX08L21kLXRvb2x0aXA+PC9tZC1pY29uPjxtZC1pY29uIGNsYXNzPVwicGlwLXN0aWNreS1uYXYtbWVudS1pY29uIHNlY3Rpb24taWNvblwiIG1kLXN2Zy1pY29uPVwie3sgJGN0cmwuZGVmYXVsdEljb24gfX1cIiBuZy1pZj1cIiEkY3RybC5zaWRlTmF2U3RhdGUuc2hvd0ljb25Ub29sdHlwZSAmJiAhJGN0cmwuZXhwYW5kZWQgJiYgIXNlY3Rpb24uaWNvblwiPjwvbWQtaWNvbj48bWQtaWNvbiBjbGFzcz1cInBpcC1zdGlja3ktbmF2LW1lbnUtaWNvbiBzZWN0aW9uLWljb25cIiBtZC1zdmctaWNvbj1cInt7ICRjdHJsLmRlZmF1bHRJY29uIH19XCIgbmctaWY9XCIkY3RybC5zaWRlTmF2U3RhdGUuc2hvd0ljb25Ub29sdHlwZSAmJiAhJGN0cmwuZXhwYW5kZWQgJiYgIXNlY3Rpb24uaWNvblwiPjxtZC10b29sdGlwIG1kLXZpc2libGU9XCJzaG93VG9vbHRpcFwiIGNsYXNzPVwibWQtc2Vjb25kYXJ5XCI+e3sgOjpzZWN0aW9uLnRvb2x0aXBUZXh0IHx8IHNlY3Rpb24udGl0bGUgfCB0cmFuc2xhdGUgfX08L21kLXRvb2x0aXA+PC9tZC1pY29uPjwvbWQtc3ViaGVhZGVyPjxtZC1saXN0LWl0ZW0gY2xhc3M9XCJuby1ib3JkZXIgcGlwLXN0aWNreS1uYXYtbWVudS1pdGVtIHBpcC1mb2N1c2FibGVcIiB0YWJpbmRleD1cIi0xXCIgbmctcmVwZWF0PVwibGluayBpbiBzZWN0aW9uLmxpbmtzXCIgbmctY2xhc3M9XCJ7XFwnYWN0aXZlXFwnOiAkY3RybC5pc0FjdGl2ZShsaW5rKX1cIiBuZy1oaWRlPVwibGluay5hY2Nlc3MgJiYgIWxpbmsuYWNjZXNzKGxpbmspXCI+PG1kLWJ1dHRvbiBjbGFzcz1cImxheW91dC1yb3cgbGF5b3V0LWFsaWduLXN0YXJ0LWNlbnRlciBwaXAtYnV0dG9uLWJsb2NrXCIgdGFiaW5kZXg9XCItMVwiIG5nLWNsaWNrPVwiJGN0cmwuY2xpY2tMaW5rKCRldmVudCwgbGluaylcIj48bWQtdG9vbHRpcCBtZC12aXNpYmxlPVwic2hvd1Rvb2x0aXBcIiBtZC1kaXJlY3Rpb249XCJyaWdodFwiPnt7IDo6bGluay50b29sdGlwVGV4dCB8IHRyYW5zbGF0ZSB9fTwvbWQtdG9vbHRpcD48ZGl2IGNsYXNzPVwicGlwLXN0aWNreS1uYXYtbWVudS1pY29uLWJsb2NrXCI+PG1kLWljb24gY2xhc3M9XCJwaXAtc3RpY2t5LW5hdi1tZW51LWljb24gZmxleC1maXhlZFwiIG1kLXN2Zy1pY29uPVwie3sgbGluay5pY29uIH19XCIgbmctaWY9XCIhKCRjdHJsLnNpZGVOYXZTdGF0ZS5zaG93SWNvblRvb2x0eXBlICYmICFsaW5rLnRvb2x0aXBUZXh0ICYmICEkY3RybC5leHBhbmRlZClcIiBuZy1oaWRlPVwiIWxpbmsuaWNvblwiPjwvbWQtaWNvbj48bWQtaWNvbiBjbGFzcz1cInBpcC1zdGlja3ktbmF2LW1lbnUtaWNvbiBmbGV4LWZpeGVkXCIgbWQtc3ZnLWljb249XCJ7eyBsaW5rLmljb24gfX1cIiBuZy1oaWRlPVwiIWxpbmsuaWNvblwiIG5nLWlmPVwiJGN0cmwuc2lkZU5hdlN0YXRlLnNob3dJY29uVG9vbHR5cGUgJiYgIWxpbmsudG9vbHRpcFRleHQgJiYgISRjdHJsLmV4cGFuZGVkXCI+PG1kLXRvb2x0aXAgbWQtdmlzaWJsZT1cInNob3dUb29sdGlwXCIgbWQtZGlyZWN0aW9uPVwicmlnaHRcIiBjbGFzcz1cInNpZGVuYXYtaWNvbi10b29sdGlwXCI+e3sgOjpsaW5rLnRvb2x0aXBUZXh0IHx8IGxpbmsudGl0bGUgfCB0cmFuc2xhdGUgfX08L21kLXRvb2x0aXA+PC9tZC1pY29uPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtc3RpY2t5LW5hdi1tZW51LXRpdGxlXCI+e3sgOjpsaW5rLnRpdGxlIHwgdHJhbnNsYXRlIH19PC9kaXY+PGRpdiBjbGFzcz1cInBpcC1zdGlja3ktbmF2LW1lbnUtYmFkZ2Uge3sgbGluay5iYWRnZVN0eWxlID8gbGluay5iYWRnZVN0eWxlIDogXFwnY29sb3ItYmFkZ2UtYmdcXCcgfX0gZmxleC1maXhlZFwiIG5nLWlmPVwibGluay5jb3VudCAmJiBsaW5rLmNvdW50IDwgMTAwXCI+e3sgbGluay5jb3VudCB9fTwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtc3RpY2t5LW5hdi1tZW51LWJhZGdlIHt7IGxpbmsuYmFkZ2VTdHlsZSA/IGxpbmsuYmFkZ2VTdHlsZSA6IFxcJ2NvbG9yLWJhZGdlLWJnXFwnIH19IGZsZXgtZml4ZWRcIiBuZy1pZj1cImxpbmsuY291bnQgJiYgbGluay5jb3VudCA+IDk5XCI+ITwvZGl2PjwvbWQtYnV0dG9uPjwvbWQtbGlzdC1pdGVtPjwvZGl2PjwvbWQtbGlzdD48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBOYXYuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBOYXYuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCd0YWJzL1RhYnMuaHRtbCcsXG4gICAgJzxtZC10b29sYmFyIGNsYXNzPVwicGlwLW5hdiBjb2xvci1wcmltYXJ5LWJnIHt7ICRjdHJsLnRoZW1lQ2xhc3MgfX1cIiBuZy1jbGFzcz1cIntcXCdwaXAtdmlzaWJsZVxcJzogJGN0cmwuc2hvdygpLCBcXCdwaXAtc2hhZG93XFwnOiAkY3RybC5zaG93U2hhZG93KCl9XCI+PG1kLXRhYnMgY2xhc3M9XCJjb2xvci1wcmltYXJ5LWJnXCIgXCI9XCJcIiBuZy1pZj1cIiRjdHJsLm1lZGlhKCRjdHJsLmJyZWFrcG9pbnRzKVwiIG1kLXNlbGVjdGVkPVwiJGN0cmwuYWN0aXZlSW5kZXhcIiBuZy1jbGFzcz1cIntcXCdkaXNhYmxlZFxcJzogJGN0cmwuaXNEaXNhYmxlZCgpfVwiIG1kLXN0cmV0Y2gtdGFicz1cInRydWVcIiBtZC1keW5hbWljLWhlaWdodD1cInRydWVcIj48bWQtdGFiIG5nLXJlcGVhdD1cInRhYiBpbiAkY3RybC50YWJzIHRyYWNrIGJ5ICRpbmRleFwiIG5nLWRpc2FibGVkPVwiJGN0cmwudGFiRGlzYWJsZWQoJGluZGV4KVwiIG1kLW9uLXNlbGVjdD1cIiRjdHJsLm9uU2VsZWN0KCRpbmRleClcIj48bWQtdGFiLWxhYmVsPnt7OjogdGFiLm5hbWVMb2NhbCB9fTxkaXYgY2xhc3M9XCJwaXAtdGFicy1iYWRnZSBjb2xvci1iYWRnZS1iZ1wiIG5nLWlmPVwidGFiLmNvdW50cyA+IDAgJiYgdGFiLmNvdW50cyA8PSA5OVwiPnt7IHRhYi5jb3VudHMgfX08L2Rpdj48ZGl2IGNsYXNzPVwicGlwLXRhYnMtYmFkZ2UgY29sb3ItYmFkZ2UtYmdcIiBuZy1pZj1cInRhYi5jb3VudHMgPiA5OVwiPiE8L2Rpdj48L21kLXRhYi1sYWJlbD48L21kLXRhYj48L21kLXRhYnM+PGRpdiBjbGFzcz1cIm1kLXN1YmhlYWQgcGlwLXRhYnMtY29udGVudCBjb2xvci1wcmltYXJ5LWJnXCIgbmctaWY9XCIhJGN0cmwubWVkaWEoJGN0cmwuYnJlYWtwb2ludHMpXCI+PGRpdiBjbGFzcz1cInBpcC1kaXZpZGVyIHBvc2l0aW9uLXRvcCBtMFwiPjwvZGl2PjxtZC1zZWxlY3QgbmctbW9kZWw9XCIkY3RybC5hY3RpdmVJbmRleFwiIG5nLWRpc2FibGVkPVwiJGN0cmwuaXNEaXNhYmxlZCgpXCIgbWQtY29udGFpbmVyLWNsYXNzPVwicGlwLWZ1bGwtd2lkdGgtZHJvcGRvd25cIiBhcmlhLWxhYmVsPVwiU0VMRUNUXCIgbWQtaW5rLXJpcHBsZT1cIlwiIG1kLW9uLWNsb3NlPVwiJGN0cmwub25TZWxlY3QoJGN0cmwuYWN0aXZlSW5kZXgpXCI+PG1kLW9wdGlvbiBuZy1yZXBlYXQ9XCJ0YWIgaW4gJGN0cmwudGFicyB0cmFjayBieSAkaW5kZXhcIiBjbGFzcz1cInBpcC10YWItb3B0aW9uXCIgdmFsdWU9XCJ7eyA6OiRpbmRleCB9fVwiPnt7IDo6dGFiLm5hbWVMb2NhbCB9fTxkaXYgY2xhc3M9XCJwaXAtdGFicy1iYWRnZSBjb2xvci1iYWRnZS1iZ1wiIG5nLWlmPVwidGFiLmNvdW50cyA+IDAgJiYgdGFiLmNvdW50cyA8PSA5OVwiPnt7IHRhYi5jb3VudHMgfX08L2Rpdj48ZGl2IGNsYXNzPVwicGlwLXRhYnMtYmFkZ2UgY29sb3ItYmFkZ2UtYmdcIiBuZy1pZj1cInRhYi5jb3VudHMgPiA5OVwiPiE8L2Rpdj48L21kLW9wdGlvbj48L21kLXNlbGVjdD48L2Rpdj48L21kLXRvb2xiYXI+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTmF2LlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnc2lkZW5hdi9TaWRlTmF2Lmh0bWwnLFxuICAgICc8bWQtc2lkZW5hdiBjbGFzcz1cIm1kLXNpZGVuYXYtbGVmdFwiIG1kLWlzLWxvY2tlZC1vcGVuPVwiJGN0cmwuc2lkZW5hdlN0YXRlLmlzTG9ja2VkT3BlblwiIG1kLWNvbXBvbmVudC1pZD1cInBpcC1zdGlja3ktc2lkZW5hdlwiIG5nLXRyYW5zY2x1ZGU9XCJcIj48L21kLXNpZGVuYXY+Jyk7XG59XSk7XG59KSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXAtd2VidWktbmF2LWh0bWwubWluLmpzLm1hcFxuIl19"}