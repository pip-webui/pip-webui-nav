<<<<<<< HEAD
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/actions/ActionsService.ts","src/actions/PrimaryActionsDirective.ts","src/actions/SecondaryActionsDirective.ts","src/actions/index.ts","src/appbar/AppBarDirective.ts","src/appbar/AppBarPartDirective.ts","src/appbar/AppBarService.ts","src/appbar/index.ts","src/breadcrumb/BreadcrumbDirective.ts","src/breadcrumb/BreadcrumbService.ts","src/breadcrumb/index.ts","src/common/NavService.ts","src/dependencies/TranslateFilter.ts","src/dropdown/DropdownDirective.ts","src/header/NavHeaderDirective.ts","src/header/NavHeaderService.ts","src/header/index.ts","src/icon/NavIconDirective.ts","src/icon/NavIconService.ts","src/icon/index.ts","src/index.ts","src/language/LanguagePickerDirective.ts","src/menu/NavMenuDirective.ts","src/menu/NavMenuService.ts","src/menu/index.ts","src/search/SearchBarDirective.ts","src/search/SearchService.ts","src/search/index.ts","src/sidenav/SideNavDirective.ts","src/sidenav/SideNavEvents.ts","src/sidenav/SideNavPartDirective.ts","src/sidenav/SideNavService.ts","src/sidenav/SideNavState.ts","src/sidenav/index.ts","src/tabs/TabsDirective.ts","temp/pip-webui-nav-html.min.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;ACEW,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAC1C,QAAA,yBAAyB,GAAG,yBAAyB,CAAC;AAEjE;IAAA;IA2BA,CAAC;IAAD,uBAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,4CAAgB;AA6B7B;IAAgC,8BAAgB;IAAhD;;IAEA,CAAC;IAAD,iBAAC;AAAD,CAFA,AAEC,CAF+B,gBAAgB,GAE/C;AAFY,gCAAU;AAIvB;IAAA;QAEW,yBAAoB,GAAiB,EAAE,CAAC;QAExC,wBAAmB,GAAiB,EAAE,CAAC;QAGvC,2BAAsB,GAAiB,EAAE,CAAC;QAE1C,0BAAqB,GAAgB,EAAE,CAAC;IACnD,CAAC;IAAD,oBAAC;AAAD,CAVA,AAUC,IAAA;AAVY,sCAAa;AAoC1B;IAII,wBACI,MAAqB,EACrB,UAAgC;QAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,kCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,gDAAoB;aAA/B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;QAC7C,CAAC;aAED,UAAgC,KAAmB;YAC/C,IAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,KAAK,IAAI,EAAE,CAAC;YAChD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,kDAAsB;aAAjC;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAC/C,CAAC;aAED,UAAkC,KAAmB;YACjD,IAAI,CAAC,OAAO,CAAC,sBAAsB,GAAG,KAAK,IAAI,EAAE,CAAC;YAClD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,+CAAmB;aAA9B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;QAC5C,CAAC;aAED,UAA+B,KAAmB;YAC9C,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,KAAK,IAAI,EAAE,CAAC;YAC/C,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,iDAAqB;aAAhC;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;QAC9C,CAAC;aAED,UAAiC,KAAmB;YAChD,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,KAAK,IAAI,EAAE,CAAC;YACjD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,6BAAI,GAAX,UAAY,cAA6B,EAAE,gBAA+B;QACtE,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,cAAc,IAAI,EAAE,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,gBAAgB,IAAI,EAAE,CAAC;QAC5D,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB,UAAmB,MAAc,EAAE,KAAa;QAC5C,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC;QAEjD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAC,CAAC;YACxC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC;gBACjB,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAC,CAAC;YACvC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC;gBACjB,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB;QACI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAC,CAAC;YACxC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAC,CAAC;YACvC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAEM,sCAAa,GAApB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iCAAyB,CAAC,CAAC;IACrD,CAAC;IACL,qBAAC;AAAD,CAjGA,AAiGC,IAAA;AAED;IAAA;QACY,YAAO,GAAkB,IAAI,aAAa,EAAE,CAAC;IAmDzD,CAAC;IAhDG,sBAAW,mCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAoB;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,aAAa,EAAE,CAAC;QAChD,CAAC;;;OAJA;IAMD,sBAAW,iDAAoB;aAA/B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;QAC7C,CAAC;aAED,UAAgC,KAAmB;YAC/C,IAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,KAAK,IAAI,EAAE,CAAC;QACpD,CAAC;;;OAJA;IAMD,sBAAW,mDAAsB;aAAjC;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC;QAC/C,CAAC;aAED,UAAkC,KAAmB;YACjD,IAAI,CAAC,OAAO,CAAC,sBAAsB,GAAG,KAAK,IAAI,EAAE,CAAC;QACtD,CAAC;;;OAJA;IAMD,sBAAW,gDAAmB;aAA9B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;QAC5C,CAAC;aAED,UAA+B,KAAmB;YAC9C,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,KAAK,IAAI,EAAE,CAAC;QACnD,CAAC;;;OAJA;IAMD,sBAAW,kDAAqB;aAAhC;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;QAC9C,CAAC;aAED,UAAiC,KAAmB;YAChD,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,KAAK,IAAI,EAAE,CAAC;QACrD,CAAC;;;OAJA;IAMM,8BAAI,GAAX,UAAY,UAAU;QAClB,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,sBAAC;AAAD,CApDA,AAoDC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;;;;;AC9N7C;IAcI,kCACI,QAA6B,EAC7B,MAAsB,EACtB,SAAmC,EACnC,MAAsB,EACtB,IAAoB,EACpB,UAAgC,EAChC,OAA0B,EAC1B,SAA8B,EAC9B,UAA2B;QAG3B,UAAU,CAAC;QAZf,iBAuDC;QAzCG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAG9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAmC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QACpI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE;gBACrC,kBAAkB,EAAE,sBAAsB;gBAC1C,sBAAsB,EAAE,uDAAuD;aAClF,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE;gBACrC,kBAAkB,EAAE,sBAAsB;gBAC1C,sBAAsB,EAAE,uDAAuD;aAElF,CAAC,CAAC;QACP,CAAC;QAGD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAE9C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAC3B,UAAU,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAC9D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5B,UAAU,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;QAChE,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAEhC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,KAAuB,EAAE,MAAqB;YACpF,KAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IAEP,CAAC;IAEO,mDAAgB,GAAxB,UAAyB,KAAuB,EAAE,MAAqB;QACnE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEM,2CAAQ,GAAf,UAAgB,MAAkB;QAE9B,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAEM,8CAAW,GAAlB,UAAmB,MAAkB;QACjC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAEM,8CAAW,GAAlB,UAAmB,MAAkB,EAAE,WAAqB;QACxD,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC;QACX,CAAC;QAOD,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACtC,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACrB,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACzC,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC/B,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,MAAM,GAA6B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAA6B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAE;gBAC3I,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;gBAChD,CAAC;YACL,CAAC;YACD,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAChE,CAAC;IACL,CAAC;IAEL,+BAAC;AAAD,CA3IA,AA2IC,IAAA;AAED,CAAC;IACG;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,YAAY,EAAE,kBAAkB;gBAChC,aAAa,EAAE,mBAAmB;aACrC;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,6BAA6B;YAC1C,UAAU,EAAE,wBAAwB;YACpC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAGD,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,mBAAmB,EAAE,uBAAuB,CAAC,CAAC;AAEjE,CAAC,CAAC,EAAE,CAAC;;;;;AChKL;IAcI,oCACI,QAA6B,EAC7B,MAAsB,EACtB,SAAmC,EACnC,MAAsB,EACtB,IAAoB,EACpB,UAAgC,EAChC,OAA0B,EAC1B,SAA8B,EAC9B,UAA2B;QAE3B,UAAU,CAAC;QAXf,iBA4CC;QA/BG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAG9B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAC3B,UAAU,CAAC,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAChE,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5B,UAAU,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;QAClE,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAEhC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,KAAuB,EAAE,MAAqB;YACpF,KAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,yBAAyB,EAAE;YAC3C,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IAEP,CAAC;IAEM,4CAAO,GAAd,UAAe,MAAgB;QAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC3B,CAAC;IAEM,sDAAiB,GAAxB;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEM,6CAAQ,GAAf,UAAgB,WAAqB,EAAE,EAAoB;QACvD,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC;QAC9B,WAAW,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAEO,qDAAgB,GAAxB,UAAyB,KAAuB,EAAE,MAAqB;QACnE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEM,6CAAQ,GAAf,UAAgB,MAAkB;QAE9B,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAEM,gDAAW,GAAlB,UAAmB,MAAkB;QACjC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAGO,gDAAW,GAAnB,UAAoB,OAAqB;QAAzC,iBAUC;QATG,IAAI,KAAK,GAAW,CAAC,CAAC;QAEtB,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,MAAkB;YAC/B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAK,EAAE,CAAC;YACZ,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,4DAAuB,GAA9B;QACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC;YAC3D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;IAChE,CAAC;IAEM,4DAAuB,GAA9B;QACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC;YAC3D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;IAChE,CAAC;IAEM,gDAAW,GAAlB,UAAmB,MAAkB,EAAE,WAAqB;QACxD,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC;QACX,CAAC;QAOD,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACtC,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACrB,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACzC,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC/B,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,MAAM,GAA6B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAA6B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gBAC1I,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;gBAChD,CAAC;YACL,CAAC;YACD,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAChE,CAAC;IACL,CAAC;IAEL,iCAAC;AAAD,CApKA,AAoKC,IAAA;AAED,CAAC;IACG;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,YAAY,EAAE,kBAAkB;gBAChC,aAAa,EAAE,mBAAmB;aACrC;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,+BAA+B;YAC5C,UAAU,EAAE,0BAA0B;YACtC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,qBAAqB,EAAE,yBAAyB,CAAC,CAAC;AAErE,CAAC,CAAC,EAAE,CAAC;;;;;;;;AC/LL,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,WAAW,CAAC,CAAC,CAAC;AAE9E,4BAA0B;AAC1B,qCAAmC;AACnC,uCAAqC;AAErC,sCAAiC;;;;;ACHjC;IAGI,mCACI,QAA6B,EAC7B,MAAsB,EACtB,IAAoB,EACpB,UAAgC,EAChC,SAAyB;QAEzB,UAAU,CAAC;QAPf,iBAiBC;QARG,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAChC,QAAQ,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAEtC,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAEjC,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAC,KAAuB,EAAE,MAAoB;YAC7E,KAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,mDAAe,GAAtB,UAAuB,KAAuB,EAAE,MAAoB;QAChE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEL,gCAAC;AAAD,CA1BA,AA0BC,IAAA;AAED,CAAC;IACG;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,oBAAoB;YACjC,UAAU,EAAE,yBAAyB;YACrC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AAEjD,CAAC,CAAC,EAAE,CAAC;;;;;AC5CL;IAKI,uCACI,QAA6B,EAC7B,MAAsB,EACtB,MAAiB,EACjB,IAAoB,EACpB,UAAgC,EAChC,SAAyB;QAEzB,UAAU,CAAC;QARf,iBA0BC;QAhBG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAGvB,IAAI,GAAG,GAAW,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACnD,CAAC;QAGD,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAC,KAAuB,EAAE,MAAoB;YAC7E,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;QACtC,CAAC,CAAC,CAAC;IAEP,CAAC;IAEO,uDAAe,GAAvB,UAAwB,KAAuB,EAAE,MAAoB;QACjE,IAAI,KAAK,GAAQ,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;QACpC,IAAI,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAG7C,IAAI,OAAO,GAAY,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,gBAAgB,IAAI,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,CAAC;QAEpG,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;IACzC,CAAC;IAEL,oCAAC;AAAD,CA5CA,AA4CC,IAAA;AAGD,CAAC;IACG,6BAA6B,aAAa;QACtC,UAAU,CAAC;QAEX,IAAI,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAE5B,MAAM,CAAC;YACH,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,sBAAsB,MAAiB,EAAE,QAA6B,EAAE,MAAsB;gBAEhG,MAAM,CAAC,IAAI,GAAG;oBACV,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC1B,CAAC,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACrC,CAAC;YACD,UAAU,EAAE,6BAA6B;SAC5C,CAAC;IACN,CAAC;IAED,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;SACtB,SAAS,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;AAEzD,CAAC,CAAC,EAAE,CAAC;;;;;AC5EM,QAAA,kBAAkB,GAAG,kBAAkB,CAAC;AAEnD;IAAA;IAIA,CAAC;IAAD,mBAAC;AAAD,CAJA,AAIC,IAAA;AAJY,oCAAY;AAkCzB;IAII,uBAAmB,MAAoB,EAAE,UAAgC;QACrE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,iCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,kCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAW,gCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,4BAAI,GAAX,UAAY,KAAW,EAAE,OAAkB,EAAE,iBAA4B;QACrE,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;QAC7D,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QACtC,CAAC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,4BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,kCAAU,GAAlB;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,EAA1B,CAA0B,CAAC,CAAC;IAC7F,CAAC;IAEO,iCAAS,GAAjB,UAAkB,WAAqB;QAAvC,iBAUC;QATG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,EAAE;gBACnB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAEM,iCAAS,GAAhB;QAAiB,qBAAwB;aAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;YAAxB,gCAAwB;;QACrC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAY,GAAnB;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,gCAAQ,GAAf;QAAA,iBAKC;QALe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,mCAAW,GAAlB;QAAA,iBAKC;QALkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,4BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,uCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,0BAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IACL,oBAAC;AAAD,CAzFA,AAyFC,IAAA;AAED;IAAA;QACY,YAAO,GAAiB;YAC5B,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;SACd,CAAC;IAoDN,CAAC;IAjDG,sBAAW,kCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAmB;YACjC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,YAAY,EAAE,CAAC;QAC/C,CAAC;;;OAJA;IAMD,sBAAW,iCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QAErC,CAAC;;;OALA;IAOD,sBAAW,mCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAe;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,IAAI,EAAE,CAAC;QACvC,CAAC;;;OAJA;IAMM,iCAAQ,GAAf;QAAA,iBAIC;QAJe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,oCAAW,GAAlB;QAAA,iBAIC;QAJkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACrC,CAAC;IAEM,6BAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEhE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,qBAAC;AAAD,CAzDA,AAyDC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,WAAW,CAAC;KACnB,QAAQ,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;;;;;;;;AC5L3C,OAAO;KACF,MAAM,CAAC,WAAW,EAAE,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAE7D,2BAAyB;AACzB,6BAA2B;AAC3B,iCAA+B;AAE/B,qCAAgC;;;;;ACHhC,yDAA6D;AAC7D,yDAA0D;AAC1D,yDAAyD;AAGzD;IAUI,8BACI,QAA6B,EAC7B,UAAgC,EAChC,OAA0B,EAC1B,MAA2B,EAC3B,SAA8B,EAC9B,SAAmC,EACnC,aAAiC,EACjC,QAAiC;QAEjC,UAAU,CAAC;QAVf,iBA6BC;QAjBG,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAG3B,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;QAEpC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;QAEnC,UAAU,CAAC,GAAG,CAAC,0CAAsB,EAAE,UAAC,KAAuB,EAAE,MAAwB;YACrF,KAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,GAAG,CAAC,uCAAmB,EAAE,cAAQ,KAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAExE,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QAC5E,IAAI,CAAC,MAAM,GAAG,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC/D,CAAC;IAEO,kDAAmB,GAA3B,UAA4B,KAAuB,EAAE,MAAwB;QACzE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEO,+CAAgB,GAAxB;QACI,IAAI,KAAK,GAAqB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAEhD,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,IAAI,GAAmB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACnD,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAChC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC;IACL,CAAC;IAEM,sCAAO,GAAd,UAAe,IAAoB;QAC/B,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC;IACL,CAAC;IAEM,yCAAU,GAAjB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,+BAAe,CAAC,CAAC;IAChD,CAAC;IAEM,6CAAc,GAArB,UAAsB,IAAoB;QAEtC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1E,CAAC;IAEM,yCAAU,GAAjB,UAAkB,WAAqB,EAAE,KAAY;QACjD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,MAAwB;QAC5C,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACrB,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACzC,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC/B,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,MAAM,GAA6B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAwB,CAAA;gBAC1F,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;YAChD,CAAC;YACD,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC;IACL,CAAC;IACL,2BAAC;AAAD,CArHA,AAqHC,IAAA;AAED,CAAC;IACG;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,4BAA4B;YACzC,UAAU,EAAE,oBAAoB;YAChC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAGD,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC;SAC1B,SAAS,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;AAEzD,CAAC,CAAC,EAAE,CAAC;;;;;AC/IM,QAAA,sBAAsB,GAAG,sBAAsB,CAAC;AAChD,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAErD;IAAA;IAIA,CAAC;IAAD,qBAAC;AAAD,CAJA,AAIC,IAAA;AAJY,wCAAc;AAM3B;IAAA;IAIA,CAAC;IAAD,uBAAC;AAAD,CAJA,AAIC,IAAA;AAJY,4CAAgB;AAoB7B;IAII,2BACI,MAAwB,EACxB,UAAgC;QAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,qCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,mCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;YAE1B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OAPA;IASD,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAuB;YACpC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAE3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OAPA;IASD,sBAAW,uCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,oCAAQ,GAAf,UAAgB,IAAY,EAAE,QAAiB;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,qCAAS,GAAhB,UAAiB,KAAuB,EAAE,QAAiB;QACvD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,2CAAe,GAAtB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,8BAAsB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;IACL,wBAAC;AAAD,CAhEA,AAgEC,IAAA;AAGD;IAAA;QACY,YAAO,GAAqB;YAChC,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACjB,CAAC;IAmBN,CAAC;IAhBG,sBAAW,oCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMM,iCAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEpE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,yBAAC;AAAD,CAxBA,AAwBC,IAAA;AAGD,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC;KAC1B,QAAQ,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;;;;;;;;AC7HnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAExF,iCAA+B;AAC/B,+BAA6B;AAE7B,yCAAoC;;;;;ACiBpC;IAEI,oBAAmB,SAAmC;QAClD,UAAU,CAAC;QAEX,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAmB,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QAC7F,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAoB,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QAC9F,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,GAAuB,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;QAC7G,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAoB,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QACjG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAmB,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QAC7F,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAoB,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QACjG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAsB,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QACtG,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAoB,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;IAClG,CAAC;IAWM,0BAAK,GAAZ;QAEI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC;QAGD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACzB,CAAC;QAGD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;QAGD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC;QAGD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC;IAEL,CAAC;IACL,iBAAC;AAAD,CAvDA,AAuDC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC;KAC3B,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;;;AChF1C,CAAC;IAED,yBAAyB,SAAmC;QACxD,UAAU,CAAC;QAEX,IAAI,YAAY,GAAmC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAmC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAExJ,MAAM,CAAC,UAAU,GAAW;YACxB,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;QACnE,CAAC,CAAA;IACL,CAAC;IAED,OAAO;SACF,MAAM,CAAC,kBAAkB,EAAE,EAAE,CAAC;SAC9B,MAAM,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AAE1C,CAAC,CAAC,EAAE,CAAC;;;AChBL,CAAC;IACG;QAoBI,qCACI,QAA6B,EAC7B,MAAsB,EACtB,SAAmC,EACnC,MAAsB,EACtB,IAAoB,EACpB,UAAgC,EAChC,QAAiC,EACjC,QAA4B;YAG5B,UAAU,CAAC;YAEX,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAA6B,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACxG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAA8B,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YAEzG,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,CAAC;YAED,IAAI,CAAC,UAAU,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAG/E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YACtE,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YAC5F,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAClD,CAAC;QAGM,8CAAQ,GAAf;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QAEM,8CAAQ,GAAf,UAAgB,KAAa;YAA7B,iBAYC;YAXG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YACnC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACjE,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC;oBACV,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAEM,0CAAI,GAAX;YACI,IAAI,MAAe,CAAC;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC;YAC3C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;QAEL,kCAAC;IAAD,CA1FA,AA0FC,IAAA;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,UAAU,EAAE,GAAG;gBACf,OAAO,EAAE,aAAa;gBACtB,YAAY,EAAE,UAAU;gBACxB,WAAW,EAAE,iBAAiB;gBAC9B,MAAM,EAAE,oBAAoB;gBAC5B,SAAS,EAAE,GAAG;aACjB;YACD,WAAW,EAAE,wBAAwB;YACrC,UAAU,EAAE,2BAA2B;YACvC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,aAAa,EAAE,CAAC,kBAAkB,CAAC,CAAC;SAC3C,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;AAErD,CAAC,CAAC,EAAE,CAAC;;;;;AChHL,CAAC;IACG;QAiBI,sCACI,QAA6B,EAC7B,MAAsB,EACtB,IAAoB,EACpB,UAAgC,EAChC,QAA4B,EAC5B,YAA+B,EAC/B,WAAgB;YAGhB,UAAU,CAAC;YAVf,iBAyCC;YA7BG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAGlC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;YAGhD,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjB,IAAI,uBAAuB,GAAa,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAC,MAAwB,EAAE,MAAuB;gBACjI,KAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;YAC3C,CAAC,CAAC,CAAC;YACH,IAAI,0BAA0B,GAAa,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,EAAE,UAAC,MAAwB,EAAE,KAAU;gBAC1H,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;YACtC,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;gBACnB,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;oBAC9C,uBAAuB,EAAE,CAAC;gBAC9B,CAAC;gBACD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;oBACjD,0BAA0B,EAAE,CAAC;gBACjC,CAAC;YACL,CAAC,CAAC,CAAC;QAEP,CAAC;QAEO,gDAAS,GAAjB;YAAA,iBAwBC;YAvBG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAA;YAEnE,IAAI,CAAC,QAAQ,CAAC;gBACV,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;gBAErE,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;oBAMlD,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC,CAAC;gBAIxD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;oBAC/C,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC,CAAC;gBACrD,CAAC;gBAED,KAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC7D,CAAC,EAAE,EAAE,CAAC,CAAC;QACX,CAAC;QAEO,iDAAU,GAAlB;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YAEvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC;QACvD,CAAC;QAeO,kDAAW,GAAnB;YACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC;QAAA,CAAC;QAEM,mDAAY,GAApB;YAAA,iBAKC;YAJG,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;gBAAC,MAAM,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACf,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACP,CAAC;QAAA,CAAC;QAEM,qDAAc,GAAtB,UAAuB,KAAuB,EAAE,KAAU;YAA1D,iBAUC;YATG,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC;YAEhC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC;oBACV,KAAI,CAAC,UAAU,GAAG,KAAK,IAAI,KAAK,CAAC,EAAE,IAAI,QAAQ,CAAC;gBACpD,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC;QACL,CAAC;QAEO,wDAAiB,GAAzB,UAA0B,KAA0B;YAChD,IAAI,SAAS,GAAG,EAAE,EACd,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAC9F,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAClG,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC,KAAK,EACpD,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC,MAAM,EACvD,MAAM,GAAG,CAAC,CAAC;YAEf,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;gBAClE,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,WAAW,GAAG,eAAe,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9E,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;gBAC9C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,eAAe,GAAG,IAAI,CAAC;gBAClD,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,UAAU,GAAG,eAAe,GAAG,WAAW,GAAG,IAAI,CAAC;gBAC5E,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,UAAU,GAAG,cAAc,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9E,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;gBAC7C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,WAAW,GAAG,cAAc,GAAG,UAAU,GAAG,IAAI,CAAC;gBAC5E,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,cAAc,GAAG,IAAI,CAAC;gBAChD,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;YAClC,CAAC;YAED,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACzB,CAAC;QAAA,CAAC;QAEM,+CAAQ,GAAhB,UAAiB,MAAM,EAAE,SAAkB;YACvC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YAEpB,IAAI,GAAW,CAAC;YAEhB,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC9D,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC/B,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC;YACjC,CAAC;YAED,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAChC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC;QAEO,yDAAkB,GAA1B,UAA2B,MAAwB,EAAE,MAAuB;YACxE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;YAE5B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACpC,CAAC;QAEM,kDAAW,GAAlB;YACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QACpD,CAAC;QAEL,mCAAC;IAAD,CA7LA,AA6LC,IAAA;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,uBAAuB;YACpC,UAAU,EAAE,4BAA4B;YACxC,YAAY,EAAE,IAAI;SAErB,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,cAAc,CAAC;SACtB,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;AAEvD,CAAC,CAAC,EAAE,CAAC;;;;;AClNM,QAAA,qBAAqB,GAAG,qBAAqB,CAAC;AAEzD;IAAA;IAeA,CAAC;IAAD,sBAAC;AAAD,CAfA,AAeC,IAAA;AAfY,0CAAe;AAe3B,CAAC;AA2BF;IAII,0BAAmB,MAAuB,EAAE,UAAgC;QACxE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,oCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,mCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,sCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,sCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,mCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAiB;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,mCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,+BAAI,GAAX,UAAY,KAAa,EAAE,QAAgB,EAAE,QAAgB,EAAE,eAAqB;QAChF,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEjC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,+BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,0CAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,6BAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IACL,uBAAC;AAAD,CAxFA,AAwFC,IAAA;AAED;IAAA;QACY,YAAO,GAAoB,IAAI,eAAe,EAAE,CAAC;IA6F7D,CAAC;IA1FG,sBAAW,qCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAsB;YACpC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,eAAe,EAAE,CAAC;QAClD,CAAC;;;OAJA;IAMD,sBAAW,8CAAe;aAA1B;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;QACxC,CAAC;aAED,UAA2B,KAAa;YACpC,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;QACzC,CAAC;;;OAJA;IAMD,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAW,uCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAJA;IAMD,sBAAW,uCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAJA;IAMD,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAiB;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAW,oCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMM,+BAAG,GAAV,UAAW,KAAa,EAAE,QAAgB,EAAE,QAAgB,EAAE,eAAqB;QAC/E,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEjC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,CAAC;IACL,CAAC;IAEM,iCAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;IAC9B,CAAC;IAEM,gCAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEnE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEL,wBAAC;AAAD,CA9FA,AA8FC,IAAA;AAGD,OAAO;KACF,MAAM,CAAC,cAAc,CAAC;KACtB,QAAQ,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;;;;;;;;ACzOjD,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAEnE,8BAA4B;AAC5B,gCAA8B;AAE9B,wCAAmC;;;;;ACNnC,0DAA4D;AAGjD,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAErD;IASI,oCACI,QAA6B,EAC7B,MAAsB,EACtB,IAAoB,EACpB,UAAgC,EAChC,OAA0B,EAC1B,UAA2B;QAE3B,UAAU,CAAC;QARf,iBAyBC;QAfG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAGvB,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAElC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAEhC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,KAAuB,EAAE,MAAqB;YAC/E,KAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QACxC,CAAC,CAAC,CAAC;IAEP,CAAC;IAEM,qDAAgB,GAAvB,UAAwB,KAAuB,EAAE,MAAqB;QAClE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEM,mDAAc,GAArB;QACI,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAElC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,gCAAgB,CAAC,CAAC;QACjD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,2BAAmB,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;IAEL,iCAAC;AAAD,CAvDA,AAuDC,IAAA;AAED,CAAC;IACG;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,cAAc;gBACxB,IAAI,EAAE,UAAU;aACnB;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,mBAAmB;YAChC,UAAU,EAAE,0BAA0B;YACtC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAGD,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AAEnD,CAAC,CAAC,EAAE,CAAC;;;;;AClFM,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAErD;IAAA;IAWA,CAAC;IAAD,oBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,sCAAa;AAWzB,CAAC;AAsBF;IAII,wBAAmB,MAAqB,EAAE,UAAgC;QACtE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,kCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAEO,2CAAkB,GAA1B,UAA2B,eAAqB;QAC5C,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,CAAC;IACL,CAAC;IAEM,iCAAQ,GAAf,UAAgB,eAAqB;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,iCAAQ,GAAf,UAAgB,IAAY,EAAE,eAAqB;QAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,iCAAQ,GAAf,UAAgB,eAAqB;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,kCAAS,GAAhB,UAAiB,QAAgB,EAAE,eAAqB;QACpD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAClE,CAAC;IACL,qBAAC;AAAD,CA7DA,AA6DC,IAAA;AAED;IAAA;QACY,YAAO,GAAkB,IAAI,aAAa,EAAE,CAAC;IAyDzD,CAAC;IAtDG,sBAAW,mCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAoB;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,aAAa,EAAE,CAAC;QAChD,CAAC;;;OAJA;IAMO,4CAAkB,GAA1B,UAA2B,eAAqB;QAC5C,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;QAE/B,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,eAAe,CAAC;QACzC,IAAI;YAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;IACnC,CAAC;IAEM,iCAAO,GAAd,UAAe,eAAqB;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,iCAAO,GAAd,UAAe,IAAY,EAAE,eAAqB;QAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,iCAAO,GAAd,UAAe,eAAqB;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,kCAAQ,GAAf,UAAgB,QAAgB,EAAE,eAAqB;QACnD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,+BAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAEM,8BAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEL,sBAAC;AAAD,CA1DA,AA0DC,IAAA;AAGD,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;;;;;;;;ACjK7C,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAErF,4BAA0B;AAC1B,8BAA4B;AAE5B,sCAAiC;;;;;;;;ACLjC,0CAAwC;AACxC,8CAA4C;AAC5C,wCAAsC;AACtC,gCAA8B;AAC9B,qBAAmB;AACnB,oBAAkB;AAClB,oBAAkB;AAClB,wBAAsB;AACtB,qBAAmB;AACnB,oBAAkB;AAClB,kBAAgB;AAChB,kBAAgB;AAChB,+BAA6B;AAE7B,OAAO;KACF,MAAM,CAAC,QAAQ,EAAE;IACd,eAAe;IACf,aAAa;IACb,SAAS;IACT,WAAW;IACX,cAAc;IACd,YAAY;IACZ,eAAe;IACf,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,cAAc;CACjB,CAAC;KACD,QAAQ,CAAC,aAAa,EAAE;IACrB,gBAAgB,EAAE,OAAO;IACzB,mBAAmB,EAAE,WAAW;IAChC,qBAAqB,EAAE,GAAG;IAC1B,sBAAsB,EAAE,GAAG;IAC3B,qBAAqB,EAAE,EAAE;IACzB,4BAA4B,EAAE,GAAG;CAEpC,CAAC,CAAA;AAEN,+BAA0B;AAC1B,8BAAyB;AACzB,kCAA6B;AAC7B,8BAAyB;AACzB,+BAA0B;AAC1B,4BAAuB;AACvB,4BAAuB;AACvB,8BAAyB;;;AC3CzB,CAAC;IACG;QAaI,2CACI,QAA6B,EAC7B,MAAsB,EACtB,SAAmC,EACnC,MAAiB,EACjB,IAAoB,EACpB,UAAgC,EAChC,QAA4B;YAE5B,UAAU,CAAC;YAZR,cAAS,GAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YActC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAmC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;YAGvH,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YAEzC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;YAEvC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACjE,CAAC;QAED,sBAAW,uDAAQ;iBAAnB;gBACI,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC7D,CAAC;;;WAAA;QAEM,wDAAY,GAAnB,UAAoB,SAAmB;YACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrE,CAAC;QAEM,2DAAe,GAAtB,UAAuB,QAAgB;YACnC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;gBAEjC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAErD,CAAC;QACL,CAAC;QAEL,wCAAC;IAAD,CA1DA,AA0DC,IAAA;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,SAAS,EAAE,YAAY;gBACvB,KAAK,EAAE,QAAQ;aAClB;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,UAAU,OAAO,EAAE,IAAI;gBAChC,MAAM,CAAC,8BAA8B,CAAC;YAC1C,CAAC;YACD,UAAU,EAAE,iCAAiC;YAC7C,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,mBAAmB,EAAE;QACzB,YAAY,EAAE,kBAAkB,EAAE,kBAAkB;KACvD,CAAC;SACD,SAAS,CAAC,mBAAmB,EAAE,uBAAuB,CAAC,CAAC;AAEjE,CAAC,CAAC,EAAE,CAAC;;;;;ACnFL,CAAC;IACG;QAwBI,oCACI,QAA6B,EAC7B,MAAsB,EACtB,SAAmC,EACnC,MAAsB,EACtB,IAAoB,EACpB,OAA0B,EAC1B,SAA8B,EAC9B,UAAgC,EAChC,QAA4B,EAC5B,UAA2B,EAC3B,UAA2B,EAC3B,WAAgB;YAGhB,UAAU,CAAC;YAff,iBA4DC;YA3CG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAE9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAA6B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YAE3G,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC,0BAA0B;gBAC5D,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC;YAEzD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YAE9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YAErE,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YAEhD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAElD,IAAI,qBAAqB,GAAa,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,MAAwB,EAAE,MAAqB;gBAC3H,KAAI,CAAC,eAAe,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;YACxC,CAAC,CAAC,CAAC;YACH,IAAI,0BAA0B,GAAa,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,EAAE,UAAC,MAAwB,EAAE,KAAmB;gBACnI,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;YACtC,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;gBACxB,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;oBAC5C,qBAAqB,EAAE,CAAC;gBAC5B,CAAC;gBACD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;oBACjD,0BAA0B,EAAE,CAAC;gBACjC,CAAC;YACL,CAAC,CAAC,CAAC;QAEP,CAAC;QAEO,mDAAc,GAAtB;YACI,IAAI,SAAkB,CAAC;YACvB,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC;YAC3C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,OAAO,CAAC;YAC3F,CAAC;YAED,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QACjC,CAAC;QAEM,6CAAQ,GAAf;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAA;YAAC,CAAC;YAEjC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;YAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;YAC7D,CAAC;YACD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,CAAC;QAEM,6CAAQ,GAAf,UAAgB,IAAiB;YAC7B,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;QAEM,mDAAc,GAArB,UAAsB,cAA6B;YAAnD,iBASC;YARG,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,UAAC,IAAiB;gBACrC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACvB,MAAM,GAAG,KAAK,CAAC;gBACnB,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAEO,oDAAe,GAAvB,UAAwB,MAAwB,EAAE,MAAqB;YACnE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACpC,CAAC;QAEO,mDAAc,GAAtB,UAAuB,KAAuB,EAAE,KAAmB;YAE/D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC;YAEnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC;YACjC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;YAE3C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC9B,CAAC;QAEM,6CAAQ,GAAf,UAAgB,IAAiB;YAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAEnB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAChE,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC1D,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvE,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5E,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEM,8CAAS,GAAhB,UAAiB,KAAuB,EAAE,IAAiB;YAA3D,iBAqDC;YApDG,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBAEzB,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;oBAEzB,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,QAAQ,CAAC;oBACV,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3C,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAE5B,MAAM,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5E,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;oBACzB,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,QAAQ,CAAC;oBACV,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACjC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAE5B,MAAM,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;oBAEzB,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,QAAQ,CAAC;oBACV,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBACjD,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAE5B,MAAM,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACjD,CAAC;YAGD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC7B,CAAC;QACL,iCAAC;IAAD,CA1NA,AA0NC,IAAA;IAGD;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE;gBACH,QAAQ,EAAE,eAAe;gBACzB,SAAS,EAAE,gBAAgB;aAC9B;YACD,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,mBAAmB;YAChC,UAAU,EAAE,0BAA0B;YACtC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AAEnD,CAAC,CAAC,EAAE,CAAC;;;;;ACnPM,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAErD;IAAA;IA6BA,CAAC;IAAD,kBAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,kCAAW;AA+BxB;IAAA;IAaA,CAAC;IAAD,qBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,wCAAc;AAe3B;IAAA;IAGA,CAAC;IAAD,oBAAC;AAAD,CAHA,AAGC,IAAA;AAHY,sCAAa;AAkB1B;IAII,wBACI,MAAqB,EACrB,UAAgC;QAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,sBAAW,oCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAuB;YACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,IAAI,EAAE,CAAC;YACpC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,uCAAW;aAAtB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACpC,CAAC;aAeD,UAAuB,KAAa;YAChC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OAlBA;IAEM,yCAAgB,GAAvB,UAAwB,IAAY,EAAE,KAAa;QAC/C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC;QAE/C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,UAAC,CAAC;gBACd,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;oBACf,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAOM,oCAAW,GAAlB,UAAmB,IAAY,EAAE,KAAa;QAC1C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC;QAE/C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,UAAC,CAAC;gBACd,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;oBACf,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB;QACI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,UAAC,CAAC;gBACd,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IACL,qBAAC;AAAD,CArEA,AAqEC,IAAA;AAED;IAAA;QACY,YAAO,GAAkB;YAC7B,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,cAAc;SAC9B,CAAC;IA2BN,CAAC;IAxBG,sBAAW,qCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAuB;YACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,IAAI,EAAE,CAAC;QACxC,CAAC;;;OAJA;IAMD,sBAAW,wCAAW;aAAtB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACpC,CAAC;aAED,UAAuB,KAAa;YAChC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;QACrC,CAAC;;;OAJA;IAMM,8BAAI,GAAX,UAAY,UAAU;QAClB,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,sBAAC;AAAD,CA/BA,AA+BC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;;;;;;;;AC9K7C,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAErF,4BAA0B;AAC1B,8BAA4B;AAE5B,sCAAiC;;;;;ACDjC,iDAAqD;AACrD,iDAAuD;AAKvD;IAQI,6BACI,QAA6B,EAC7B,UAAgC,EAChC,SAAyB;QAEzB,UAAU,CAAC;QALf,iBAkBC;QArBM,YAAO,GAAY,KAAK,CAAC;QACzB,WAAM,GAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAS9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAGzB,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;QAEpC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,UAAU,CAAC,GAAG,CAAC,kCAAkB,EAAE,UAAC,KAAuB,EAAE,MAAoB;YAC7E,KAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,yCAAW,GAAnB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAEzD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAC5D,CAAC;IACL,CAAC;IAEO,6CAAe,GAAvB,UAAwB,KAAuB,EAAE,MAAoB;QACjE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,uCAAS,GAAjB;QACI,UAAU,CAAC;YACP,IAAI,OAAO,GAAW,CAAC,CAAC,kBAAkB,CAAC,CAAC;YAC5C,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;gBACnB,OAAO,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAEM,oCAAM,GAAb;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEM,qCAAO,GAAd;QACI,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAE9B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,oCAAoB,EAAE,MAAM,CAAC,CAAC;QAC7D,CAAC;IACL,CAAC;IAEM,mCAAK,GAAZ;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;IACL,CAAC;IAEM,uCAAS,GAAhB,UAAiB,KAAoB;QAEjC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,EAAE,CAAC;QAEnB,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;IACL,CAAC;IACL,0BAAC;AAAD,CAhGA,AAgGC,IAAA;AAED,CAAC;IACG;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,uBAAuB;YACpC,UAAU,EAAE,mBAAmB;YAC/B,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC;SACzB,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;AAEvD,CAAC,CAAC,EAAE,CAAC;;;;;ACzHM,QAAA,eAAe,GAAG,eAAe,CAAC;AAClC,QAAA,gBAAgB,GAAG,gBAAgB,CAAC;AACpC,QAAA,kBAAkB,GAAG,kBAAkB,CAAC;AACxC,QAAA,oBAAoB,GAAG,oBAAoB,CAAC;AAEvD;IAAA;IAWA,CAAC;IAAD,mBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,oCAAY;AA+BzB;IAII,uBACI,MAAoB,EACpB,UAAgC;QAFpC,iBASC;QALG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,UAAU,CAAC,GAAG,CAAC,uBAAe,EAAE,cAAQ,KAAI,CAAC,IAAI,CAAA,CAAC,CAAC,CAAC,CAAC;QACrD,UAAU,CAAC,GAAG,CAAC,wBAAgB,EAAE,cAAQ,KAAI,CAAC,KAAK,CAAA,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,sBAAW,iCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,mCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAa;YAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,iCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/B,CAAC;aAED,UAAkB,KAAU;YACxB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,kCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAe;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,mCAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC;aAED,UAAoB,KAAiC;YACjD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOM,2BAAG,GAAV,UAAW,QAAoC,EAAE,QAAiB,EAAE,MAAY,EAAE,OAAkB;QAChG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,4BAAI,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAK,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,8BAAM,GAAb;QACI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,uCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,0BAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IACL,oBAAC;AAAD,CAxFA,AAwFC,IAAA;AAED;IAAA;QACY,YAAO,GAAiB,IAAI,YAAY,EAAE,CAAC;QAC3C,aAAQ,GAAkB,IAAI,CAAC;IAU3C,CAAC;IARU,6BAAI,GAAX,UAAY,UAAgC;QACxC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAEhE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,qBAAC;AAAD,CAZA,AAYC,IAAA;AAGD,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC;KACzB,QAAQ,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;;;;;;;;AC9I3C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAEvF,2BAAyB;AACzB,gCAA8B;AAE9B,qCAAgC;;;;;ACJhC,+CAAqF;AAKrF;IA0BI,oCACI,QAA6B,EAC7B,MAAsB,EACtB,SAAmC,EACnC,MAAsB,EACtB,IAAoB,EACpB,UAAgC,EAChC,QAA4B,EAC5B,UAA2B,EAC3B,WAAgB;QAGhB,UAAU,CAAC;QAZf,iBAkFC;QApEG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAE9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAA8B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QAEnH,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,iBAAiB,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,mBAAmB,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,oBAAoB,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,mBAAmB,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC,0BAA0B,CAAC;QACjE,IAAI,CAAC,SAAS,GAAG,IAAI,iCAAkB,EAAE,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAG/C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;QAE7C,IAAI,kBAAkB,CAAC;QACvB,IAAI,mBAAmB,CAAC;QAExB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,QAAQ,CAAC;gBACV,KAAI,CAAC,gBAAgB,EAAE,CAAA;YAC3B,CAAC,EAAE,GAAG,CAAC,CAAC;YAER,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC,cAAQ,KAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACvE,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE;gBACvD,KAAI,CAAC,YAAY,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAC,MAAwB,EAAE,KAAwB;gBAC5G,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;YACtC,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC;gBACV,KAAI,CAAC,QAAQ,CAAC,gCAAiB,CAAC,MAAM,CAAC,CAAC;YAC5C,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC;QAED,IAAI,uBAAuB,GAAa,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE;YAC7E,KAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,IAAI,qBAAqB,GAAa,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,MAAwB,EAAE,MAAqB;YAC3H,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;YACxB,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;gBAC9C,uBAAuB,EAAE,CAAC;YAC9B,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;gBAC5C,qBAAqB,EAAE,CAAC;YAC5B,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACzC,kBAAkB,EAAE,CAAC;YACzB,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBAC1C,mBAAmB,EAAE,CAAC;YAC1B,CAAC;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;IAEO,mDAAc,GAAtB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QACtC,CAAC;IACL,CAAC;IAEO,qDAAgB,GAAxB,UAAyB,MAAwB,EAAE,MAAqB;QACpE,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC1C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;IAEO,mDAAc,GAAtB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEO,mDAAc,GAAtB,UAAuB,MAAwB,EAAE,SAA4B;QACzE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC7B,CAAC;IACL,CAAC;IAEO,qDAAgB,GAAxB;QAAA,iBA0BC;QAzBG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;YAAC,MAAM,CAAA;QAAC,CAAC;QAElF,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,cAAQ,KAAI,CAAC,gBAAgB,EAAE,CAAA,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE1E,MAAM,CAAC;QACX,CAAC;QAED,IAAI,SAAS,GAAW,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,EAAE,CAAC;QAC5D,IAAI,YAAY,GAAW,CAAC,CAAC,qBAAqB,CAAC,CAAC,UAAU,EAAE,CAAC;QACjE,IAAI,YAAY,GAAW,YAAY,GAAG,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;QAE/D,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,gCAAiB,CAAC,MAAM,CAAC,CAAC;YACxC,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,gCAAiB,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,SAAS,GAAG,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,gCAAiB,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,gCAAiB,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAEO,6CAAQ,GAAhB,UAAiB,SAA4B;QAA7C,iBAuCC;QAtCG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;YAAC,MAAM,CAAC;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,SAAS,CAAC;YAAC,MAAM,CAAC;QAEnE,EAAE,CAAC,CAAC,SAAS,IAAI,gCAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QAChD,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,IAAI,gCAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;QACtD,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,IAAI,gCAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;QACjD,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,IAAI,gCAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;QACtD,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,EAAE,CAAC,CAAC,SAAS,IAAI,gCAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAEnD,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;QAG3C,IAAI,CAAC,QAAQ,CAAC;YACV,KAAI,CAAC,gBAAgB,EAAE,CAAA;QAC3B,CAAC,EAAE,EAAE,CAAC,CAAC;QAGP,IAAI,CAAC,QAAQ,CAAC;YACV,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAEhC,CAAC;IACL,iCAAC;AAAD,CA5MA,AA4MC,IAAA;AAED,CAAC;IACG;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,IAAI;YACX,WAAW,EAAE,sBAAsB;YACnC,UAAU,EAAE,0BAA0B;YACtC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AAEnD,CAAC,CAAC,EAAE,CAAC;;;;;ACtOM,QAAA,mBAAmB,GAAG,mBAAmB,CAAC;AAC1C,QAAA,wBAAwB,GAAG,wBAAwB,CAAC;AACpD,QAAA,gBAAgB,GAAG,gBAAgB,CAAC;AACpC,QAAA,iBAAiB,GAAG,iBAAiB,CAAC;;;ACAjD,CAAC;IAEG,wCAAwC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU;QACpF,UAAU,CAAC;QAEX,IAAI,QAAQ,GAAG,EAAE,GAAG,MAAM,CAAC,cAAc,CAAC;QAC1C,IAAI,SAAS,GAAG,IAAI,CAAC;QAGrB,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACV,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACrC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC;QAED,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAA;QACzC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;QAEtD,0BAA0B,KAAK,EAAE,MAAM;YACnC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;YAC/B,IAAI,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,gBAAgB,IAAI,SAAS,GAAG,gBAAgB,CAAC,CAAC;YAE/E,EAAE,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;gBAC1B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QACjC,CAAC;IAEL,CAAC;IAED,8BAA8B,aAAa;QACvC,UAAU,CAAC;QAEX,IAAI,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAE5B,MAAM,CAAC;YACH,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,sBAAsB,MAAW,EAAE,QAAQ,EAAE,MAAM;gBACrD,MAAM,CAAC,IAAI,GAAG,cAAc,MAAM,CAAC,MAAM,CAAC,OAAO,CAAA,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACrC,CAAC;YACD,UAAU,EAAE,8BAA8B;SAC7C,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,YAAY,CAAC;SACpB,SAAS,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAAC;AAE3D,CAAC,CAAC,EAAE,CAAC;;;;;ACvDL,iDAAqH;AAErH;IAAA;IAMA,CAAC;IAAD,oBAAC;AAAD,CANA,AAMC,IAAA;AANY,sCAAa;AAuC1B;IAOI,wBAAmB,MAAqB,EAAE,UAAgC,EAAE,UAAuC;QAC/G,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,sBAAW,kCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,mCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAW,iCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,iCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,wCAAwB,EAAE,KAAK,CAAC,CAAC;QAChE,CAAC;;;OALA;IAOM,6BAAI,GAAX;QACI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/C,CAAC;IAEM,8BAAK,GAAZ;QACI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;IAEM,+BAAM,GAAb;QACI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC;IACjD,CAAC;IAEM,6BAAI,GAAX;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAEM,6BAAI,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAEM,iCAAQ,GAAf;QAAA,iBAKC;QALe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,oCAAW,GAAlB;QAAA,iBAKC;QALkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,6BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,wCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,mCAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IACL,qBAAC;AAAD,CAvFA,AAuFC,IAAA;AAED;IAAA;QACY,YAAO,GAAkB;YAC7B,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI;SAChB,CAAC;IAoEN,CAAC;IAhEG,sBAAW,mCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAoB;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,aAAa,EAAE,CAAC;QAChD,CAAC;;;OAJA;IAMD,sBAAW,kCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACrC,CAAC;;;OAJA;IAMD,sBAAW,iCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAW,oCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAc;YAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAW,oCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAe;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,IAAI,EAAE,CAAC;QACvC,CAAC;;;OAJA;IAMM,kCAAQ,GAAf;QAAA,iBAIC;QAJe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qCAAW,GAAlB;QAAA,iBAIC;QAJkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,8BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACrC,CAAC;IAEM,8BAAI,GAAX,UAAY,UAAgC,EAAE,UAAuC;QACjF,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAE7E,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,sBAAC;AAAD,CA3EA,AA2EC,IAAA;AAED,2BAA2B,UAAgC,EAAE,UAA2B;IACpF,UAAU,CAAC,GAAG,CAAC,gCAAgB,EAAE,cAAQ,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,UAAU,CAAC,GAAG,CAAC,iCAAiB,EAAE,cAAQ,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC;AAED,OAAO;KACF,MAAM,CAAC,YAAY,CAAC;KACpB,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC;KACvC,GAAG,CAAC,iBAAiB,CAAC,CAAC;;;;;ACvN5B;IAAA;IAKA,CAAC;IAAD,wBAAC;AAAD,CALA,AAKC;AAJc,wBAAM,GAAW,QAAQ,CAAC;AAC1B,uBAAK,GAAW,OAAO,CAAC;AACxB,uBAAK,GAAW,OAAO,CAAC;AACxB,wBAAM,GAAW,QAAQ,CAAC;AAJ5B,8CAAiB;AAO7B;IAAA;IAgBA,CAAC;IAAD,mBAAC;AAAD,CAhBA,AAgBC,IAAA;AAhBY,oCAAY;AAkB1B;IAAA;QACY,WAAM,GAAiB;YACnB,EAAE,EAAE,iBAAiB,CAAC,MAAM;YAC5B,QAAQ,EAAE,gBAAgB;YAC1B,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,KAAK;YACnB,cAAc,EAAE,KAAK;YACrB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,IAAI;YACZ,gBAAgB,EAAE,KAAK;SAC1B,CAAC;QACF,UAAK,GAAiB;YAClB,EAAE,EAAE,iBAAiB,CAAC,KAAK;YAC3B,QAAQ,EAAE,2CAA2C;YACrD,UAAU,EAAE,KAAK;YACjB,YAAY,EAAE,IAAI;YAClB,cAAc,EAAE,KAAK;YACrB,UAAU,EAAE,KAAK;YACjB,MAAM,EAAE,KAAK;YACb,gBAAgB,EAAE,IAAI;SACzB,CAAC;QACF,UAAK,GAAiB;YAClB,EAAE,EAAE,iBAAiB,CAAC,KAAK;YAC3B,QAAQ,EAAE,sBAAsB;YAChC,UAAU,EAAE,KAAK;YACjB,YAAY,EAAE,IAAI;YAClB,cAAc,EAAE,IAAI;YACpB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,IAAI;YACZ,gBAAgB,EAAE,IAAI;SACzB,CAAC;QACF,WAAM,GAAiB;YACnB,EAAE,EAAE,iBAAiB,CAAC,MAAM;YAC5B,QAAQ,EAAE,iBAAiB;YAC3B,UAAU,EAAE,KAAK;YACjB,YAAY,EAAE,IAAI;YAClB,cAAc,EAAE,KAAK;YACrB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,IAAI;YACZ,gBAAgB,EAAE,KAAK;SAC1B,CAAC;IACd,CAAC;IAAD,yBAAC;AAAD,CAzCA,AAyCC,IAAA;AAzCY,gDAAkB;;;;;;;;ACvB/B,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAEjE,2BAAyB;AACzB,0BAAwB;AACxB,4BAA0B;AAC1B,kCAAgC;AAChC,8BAA4B;AAE5B,sCAAiC;;;ACRjC,CAAC;IACG;QAAA;YACI,gBAAW,GAAW,CAAC,CAAC;YACxB,cAAS,GAAW,CAAC,CAAC;QAC1B,CAAC;QAAD,eAAC;IAAD,CAHA,AAGC,IAAA;IAED;QAsBI,iCACI,QAA6B,EAC7B,MAAsB,EACtB,SAAmC,EACnC,MAAsB,EACtB,IAAoB,EACpB,UAAgC,EAChC,QAAiC,EACjC,QAA4B,EAC5B,WAAgB;YAGhB,UAAU,CAAC;YAZf,iBAsCC;YAxBG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEzB,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,WAAW,CAAC,cAAc,CAAC;YAExG,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAA1B,CAA0B,EAC/C,UAAC,QAAgB,EAAE,QAAgB;oBAC/B,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,QAAQ,IAAI,CAAC,CAAC;oBAC1C,KAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;gBACxD,CAAC,CACJ,CAAC;YACN,CAAC;QAEL,CAAC;QAEO,0CAAQ,GAAhB;YACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAA6B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YAClH,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,CAAC;YAED,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC3F,CAAC;QAEO,0CAAQ,GAAhB,UAAiB,QAAiC;YAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAA8B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACnH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1E,CAAC;QAEO,8CAAY,GAApB;YACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAmC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;YACpI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;gBACzE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;gBACxE,CAAC;YACL,CAAC;QACL,CAAC;QAEO,0CAAQ,GAAhB;YAAA,iBAuBC;YAtBG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAC/F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC;YACzF,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YAIpD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,QAAQ,CAAC;oBACV,IAAI,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBAC7C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACZ,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;oBAC7D,CAAC;oBACD,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE;wBAAA,iBAKhB;wBAJG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;wBACzD,IAAI,CAAC,QAAQ,CAAC;4BACV,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;wBAC7D,CAAC,EAAE,EAAE,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC;gBACP,CAAC,EAAE,IAAI,CAAC,CAAC;YACb,CAAC;YACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QAGM,0CAAQ,GAAf;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC;YACvC,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAAA,CAAC;QAEK,6CAAW,GAAlB,UAAmB,KAAa;YAC5B,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC;QACnE,CAAC;QAAA,CAAC;QAEK,0CAAQ,GAAf,UAAgB,KAAa;YAA7B,iBAYC;YAXG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAAC,MAAM,CAAC;YAE5B,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC;gBACV,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;gBACnC,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBAC3F,CAAC;YACL,CAAC,EAAE,CAAC,CAAC,CAAC;QAEV,CAAC;QAAA,CAAC;QAEK,4CAAU,GAAjB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,CAAC;YAC3C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QAAA,CAAC;QAEK,sCAAI,GAAX;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;QAAA,CAAC;QAEK,2CAAS,GAAhB,UAAiB,KAAU;YACvB,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAChC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;YACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;QAC3C,CAAC;QAEL,8BAAC;IAAD,CApKA,AAoKC,IAAA;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,cAAc;gBACxB,cAAc,EAAE,gBAAgB;gBAChC,WAAW,EAAE,iBAAiB;gBAC9B,MAAM,EAAE,gBAAgB;gBACxB,WAAW,EAAE,iBAAiB;aACjC;YACD,WAAW,EAAE,gBAAgB;YAC7B,UAAU,EAAE,uBAAuB;YACnC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAGD,OAAO;SACF,MAAM,CAAC,SAAS,EAAE,CAAC,kBAAkB,CAAC,CAAC;SACvC,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AAE7C,CAAC,CAAC,EAAE,CAAC;;;ACrfile":"pip-webui-nav.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\n\nexport let ActionsChangedEvent = 'pipActionsChanged';\nexport let SecondaryActionsOpenEvent = 'pipSecondaryActionsOpen';\n\nexport class SimpleActionItem {\n    // Name to refer to the item\n    public name: string;\n    // Link visible title\n    public title?: string;\n    // Show divider instead of title\n    public divider?: boolean;\n    // Icon name from $iconProvider\n    public icon?: string;\n    // Counter badge\n    public count?: number;\n    // Access function\n    public access?: (action: SimpleActionItem) => boolean;\n    // Show on specified breakpoints\n    public breakpoints?: string[];\n    // window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public click?: (action: SimpleActionItem) => void;\n}\n\nexport class ActionItem extends SimpleActionItem {\n    public subActions: SimpleActionItem[];\n}\n\nexport class ActionsConfig {\n    // Primary global actions visible on the screen\n    public primaryGlobalActions: ActionItem[] = [];\n    // Primary local actions visible on the screen\n    public primaryLocalActions: ActionItem[] = [];\n\n    // Secondary global actions available in popup\n    public secondaryGlobalActions: ActionItem[] = [];\n    // Secondary local actions available in popup\n    public secondaryLocalActions: ActionItem[]= [];\n}\n\nexport interface IActionsService {\n    readonly config: ActionsConfig;\n\n    primaryGlobalActions: ActionItem[];\n    primaryLocalActions: ActionItem[];\n    secondaryGlobalActions: ActionItem[];\n    secondaryLocalActions: ActionItem[];    \n\n    show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void;\n    hide(): void;\n    updateCount(link: string, count: number): void; \n    clearCounts(): void;\n    openMenuEvent(): void;\n}\n\nexport interface IActionsProvider extends ng.IServiceProvider {\n    config: ActionsConfig;\n    \n    primaryGlobalActions: ActionItem[];\n    primaryLocalActions: ActionItem[];\n    secondaryGlobalActions: ActionItem[];\n    secondaryLocalActions: ActionItem[];    \n}\n\nclass ActionsService implements IActionsService {\n    private _config: ActionsConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: ActionsConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): ActionsConfig {\n        return this._config;\n    }\n\n    public get primaryGlobalActions(): ActionItem[] {\n        return this._config.primaryGlobalActions;\n    }\n\n    public set primaryGlobalActions(value: ActionItem[]) {\n        this._config.primaryGlobalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get secondaryGlobalActions(): ActionItem[] {\n        return this._config.secondaryGlobalActions;\n    }\n\n    public set secondaryGlobalActions(value: ActionItem[]) {\n        this._config.secondaryGlobalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get primaryLocalActions(): ActionItem[] {\n        return this._config.primaryLocalActions;\n    }\n\n    public set primaryLocalActions(value: ActionItem[]) {\n        this._config.primaryLocalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get secondaryLocalActions(): ActionItem[] {\n        return this._config.secondaryLocalActions;\n    }\n\n    public set secondaryLocalActions(value: ActionItem[]) {\n        this._config.secondaryLocalActions = value || [];\n        this.sendChangeEvent();\n    }\n\n    public show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void {\n        this._config.primaryLocalActions = primaryActions || [];\n        this._config.secondaryLocalActions = secondaryActions || [];\n        this.sendChangeEvent();\n    }\n\n    public hide(): void {\n        this._config.primaryLocalActions = [];\n        this._config.secondaryLocalActions = [];\n        this.sendChangeEvent();\n    }\n\n    public updateCount(action: string, count: number) {\n        if (action == null || !_.isNumber(count)) return;\n\n        _.each(this._config.primaryGlobalActions, (a) => {\n            if (a.name == action)\n                a.count = count;\n        });\n        _.each(this._config.primaryLocalActions, (a) => {\n            if (a.name == action)\n                a.count = count;\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public clearCounts(): void {\n        _.each(this._config.primaryGlobalActions, (a) => {\n            a.count = null;\n        });\n        _.each(this._config.primaryLocalActions, (a) => {\n            a.count = null;\n        });\n\n        this.sendChangeEvent();\n    }\n\n    private sendChangeEvent() {\n        this._rootScope.$emit(ActionsChangedEvent, this._config);\n    }\n\n    public openMenuEvent(): void {\n        this._rootScope.$emit(SecondaryActionsOpenEvent);\n    }\n}\n\nclass ActionsProvider implements IActionsProvider {\n    private _config: ActionsConfig = new ActionsConfig();\n    private _service: ActionsService;\n\n    public get config(): ActionsConfig {\n        return this._config;\n    }\n\n    public set config(value: ActionsConfig) {\n        this._config = value || new ActionsConfig();\n    }\n\n    public get primaryGlobalActions(): ActionItem[] {\n        return this._config.primaryGlobalActions;\n    }\n\n    public set primaryGlobalActions(value: ActionItem[]) {\n        this._config.primaryGlobalActions = value || [];\n    }\n\n    public get secondaryGlobalActions(): ActionItem[] {\n        return this._config.secondaryGlobalActions;\n    }\n\n    public set secondaryGlobalActions(value: ActionItem[]) {\n        this._config.secondaryGlobalActions = value || [];\n    }\n\n    public get primaryLocalActions(): ActionItem[] {\n        return this._config.primaryLocalActions;\n    }\n\n    public set primaryLocalActions(value: ActionItem[]) {\n        this._config.primaryLocalActions = value || [];\n    }\n\n    public get secondaryLocalActions(): ActionItem[] {\n        return this._config.secondaryLocalActions;\n    }\n\n    public set secondaryLocalActions(value: ActionItem[]) {\n        this._config.secondaryLocalActions = value || [];\n    }\n\n    public $get($rootScope) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new ActionsService(this._config, $rootScope);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipActions')\n    .provider('pipActions', ActionsProvider);\n\n","\n\nimport { IActionsService, ActionItem, ActionsConfig } from \"./ActionsService\";\n// Prevent junk from going into typescript definitions\n\n// todo: create class ActionsController and extend it \n\nclass PrimaryActionsController {\n    private _element: ng.IAugmentedJQuery;\n    private _attrs: ng.IAttributes;\n    private _injector: ng.auto.IInjectorService;\n    private _scope: angular.IScope;\n    private _log: ng.ILogService;\n    private _rootScope: ng.IRootScopeService;\n    private _window: ng.IWindowService;\n    private _location: ng.ILocationService;\n    private _pipActions: IActionsService;\n    private _pipTranslate: pip.services.ITranslateService\n\n    public config: ActionsConfig;\n\n    constructor(\n        $element: ng.IAugmentedJQuery,\n        $attrs: ng.IAttributes,\n        $injector: ng.auto.IInjectorService,\n        $scope: angular.IScope,\n        $log: ng.ILogService,\n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService,\n        $location: ng.ILocationService,\n        pipActions: IActionsService\n\n    ) {\n        \"ngInject\";\n\n        this._element = $element;\n        this._attrs = $attrs;\n        this._scope = $scope;\n        this._injector = $injector;\n        this._log = $log;\n        this._rootScope = $rootScope;\n        this._window = $window;\n        this._location = $location;\n        this._pipActions = pipActions;\n\n\n        this._pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\n        if (this._pipTranslate && this._pipTranslate.setTranslations) {\n            this._pipTranslate.setTranslations('en', {\n                DOCUMENTS_ATTACHED: 'document(s) attached',\n                ERROR_DOCUMENTS_LOADED: 'Error: <%= error_number %> document(s) are not loaded'\n            });\n            this._pipTranslate.setTranslations('ru', {\n                DOCUMENTS_ATTACHED: 'документов добавлено',\n                ERROR_DOCUMENTS_LOADED: 'Ошибка: <%= error_number %> документ(ов) не загружено'\n\n            });\n        }\n\n        // Apply class and call resize\n        this._element.addClass('pip-primary-actions');\n\n        if (this._scope.localActions) {\n            pipActions.primaryLocalActions = this._scope.localActions;\n        }\n\n        if (this._scope.globalActions) {\n            pipActions.primaryGlobalActions = this._scope.globalActions;\n        }\n\n        this.config = pipActions.config;\n\n        this._rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\n            this.onActionsChanged(event, config);\n        });\n\n    }\n\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\n        this.config = config;\n    }\n\n    public isHidden(action: ActionItem): boolean {\n        // Todo: Check breakpoints here\n        return action.access && !action.access(action);\n    }\n\n    public actionCount(action: ActionItem): string {\n        if (action.count === null || action.count <= 0) {\n            return '';\n        }\n        if (action.count > 99) {\n            return '!';\n        }\n\n        return String(action.count);\n    }\n\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\n        if (!action || action.divider) {\n            return;\n        }\n\n        // todo: do not supported into ActionItem\n        // if (action.close) {\n        //     this._scope.originatorEv = null;\n        // }\n\n        if (action.subActions) {\n            $mdOpenMenu(this._scope.originatorEv);\n            return;\n        }\n\n        if (_.isFunction(action.click)) {\n            action.click(action);\n            return;\n        }\n\n        if (action.href) {\n            this._window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            this._location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if (this._injector.has('this._state')) {\n                let _state: angular.ui.IStateService = this._injector.has('pipTranslate') ? <angular.ui.IStateService>this._injector.get('$state') : null ;\n                if (_state) {\n                    _state.go(action.state, action.stateParams);\n                }\n            }\n            return;\n        }\n\n        if (action.event) {\n            this._rootScope.$broadcast(action.event);\n        } else {\n            // Otherwise raise notification\n            this._rootScope.$broadcast('pipActionClicked', action.name);\n        }\n    }\n\n}\n\n(() => {\n    function primaryActionsDirective() {\n        return {\n            restrict: 'E',\n            scope: {\n                localActions: '=pipLocalActions',\n                globalActions: '=pipGlobalActions'\n            },\n            replace: false,\n            templateUrl: 'actions/PrimaryActions.html',\n            controller: PrimaryActionsController,\n            controllerAs: 'vm'\n        };\n    }\n\n\n    angular\n        .module('pipActions')\n        .directive('pipPrimaryActions', primaryActionsDirective);\n\n})();","\n\nimport { IActionsService, ActionItem, ActionsConfig } from \"./ActionsService\";\n\n// Prevent junk from going into typescript definitions\n\n// todo: create class ActionsController and extend it \n\nclass SecondaryActionsController {\n    private _element: ng.IAugmentedJQuery;\n    private _attrs: ng.IAttributes;\n    private _injector: ng.auto.IInjectorService;\n    private _scope: angular.IScope;\n    private _log: ng.ILogService;\n    private _rootScope: ng.IRootScopeService;\n    private _window: ng.IWindowService;\n    private _location: ng.ILocationService;\n    private _pipActions: IActionsService;\n    private _pipTranslate: pip.services.ITranslateService\n    private _menuFn: Function;\n    public config: ActionsConfig;\n\n    constructor(\n        $element: ng.IAugmentedJQuery,\n        $attrs: ng.IAttributes,\n        $injector: ng.auto.IInjectorService,\n        $scope: angular.IScope,\n        $log: ng.ILogService,\n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService,\n        $location: ng.ILocationService,\n        pipActions: IActionsService\n    ) {\n        \"ngInject\";\n\n        this._element = $element;\n        this._attrs = $attrs;\n        this._scope = $scope;\n        this._injector = $injector;\n        this._log = $log;\n        this._rootScope = $rootScope;\n        this._window = $window;\n        this._location = $location;\n        this._pipActions = pipActions;\n\n        // Apply class and call resize\n        this._element.addClass('pip-secondary-actions');\n\n        if (this._scope.localActions) {\n            pipActions.secondaryLocalActions = this._scope.localActions;\n        }\n\n        if (this._scope.globalActions) {\n            pipActions.secondaryGlobalActions = this._scope.globalActions;\n        }\n\n        this.config = pipActions.config;\n\n        this._rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\n            this.onActionsChanged(event, config);\n        });\n\n        this._rootScope.$on('pipSecondaryActionsOpen', () => {\n            this.onActionsMenuOpen();\n        });\n\n    }\n\n    public getMenu(menuFn: Function): void {\n         this._menuFn = menuFn;\n    }\n\n    public onActionsMenuOpen(): void {\n        this._menuFn();\n    }\n\n    public openMenu($mdOpenMenu: Function, ev: ng.IAngularEvent): void {\n        this._scope.originatorEv = ev;\n        $mdOpenMenu(ev);\n    }\n\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\n        this.config = config;\n    }\n\n    public isHidden(action: ActionItem): boolean {\n        // Todo: Check breakpoints here\n        return action.access && !action.access(action);\n    }\n\n    public actionCount(action: ActionItem): string {\n        if (action.count === null || action.count <= 0) {\n            return '';\n        }\n        if (action.count > 99) {\n            return '!';\n        }\n\n        return String(action.count);\n    }\n\n\n    private calcActions(actions: ActionItem[]): number {\n        let count: number = 0;\n\n        _.each(actions, (action: ActionItem) => {\n            if (!this.isHidden(action)) {\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    public secondaryActionsVisible() {\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 ||\n            this.calcActions(this.config.secondaryLocalActions) > 0;\n    }\n\n    public secondaryDividerVisible() {\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 &&\n            this.calcActions(this.config.secondaryLocalActions) > 0;\n    }\n\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\n        if (!action || action.divider) {\n            return;\n        }\n\n        // todo: do not supported into ActionItem\n        // if (action.close) {\n        //     this._scope.originatorEv = null;\n        // }\n\n        if (action.subActions) {\n            $mdOpenMenu(this._scope.originatorEv);\n            return;\n        }\n\n        if (action.click) {\n            action.click(action);\n            return;\n        }\n\n        if (action.href) {\n            this._window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            this._location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if (this._injector.has('this._state')) {\n                let _state: angular.ui.IStateService = this._injector.has('pipTranslate') ? <angular.ui.IStateService>this._injector.get('$state') : null;\n                if (_state) {\n                    _state.go(action.state, action.stateParams);\n                }\n            }\n            return;\n        }\n\n        if (action.event) {\n            this._rootScope.$broadcast(action.event);\n        } else {\n            // Otherwise raise notification\n            this._rootScope.$broadcast('pipActionClicked', action.name);\n        }\n    }\n\n}\n\n(() => {\n    function secondaryActionsDirective() {\n        return {\n            restrict: 'E',\n            scope: {\n                localActions: '=pipLocalActions',\n                globalActions: '=pipGlobalActions'\n            },\n            replace: false,\n            templateUrl: 'actions/SecondaryActions.html',\n            controller: SecondaryActionsController,\n            controllerAs: 'vm'\n        };\n    }\n\n    angular\n        .module('pipActions')\n        .directive('pipSecondaryActions', secondaryActionsDirective);\n\n})();\n","\n\nangular.module('pipActions', ['ngMaterial', 'pipNav.Templates', 'ui.router']);\n\nimport './ActionsService';\nimport './PrimaryActionsDirective';\nimport './SecondaryActionsDirective';\n\nexport * from './ActionsService';","﻿\n\nimport { IAppBarService, AppBarConfig } from \"./AppBarService\";\n// Prevent junk from going into typescript definitions\n\nclass AppBarDirectiveController {\n    public config: AppBarConfig;\n\n    constructor(\n        $element: ng.IAugmentedJQuery,\n        $scope: angular.IScope,\n        $log: ng.ILogService,\n        $rootScope: ng.IRootScopeService,\n        pipAppBar: IAppBarService\n    ) {\n        \"ngInject\";\n        // Apply class and call resize\n        $element.addClass('pip-appbar');\n        $element.addClass('color-primary-bg');\n\n        $scope.config = pipAppBar.config;\n\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\n            this.onAppBarChanged(event, config)\n        });\n    }\n\n    public onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\n        this.config = config;\n    }\n    \n}\n\n(() => {\n    function appbarDirective() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: true,\n            templateUrl: 'appbar/AppBar.html',\n            controller: AppBarDirectiveController,\n            controllerAs: 'vm'\n        };\n    }\n\n    angular\n        .module('pipAppBar')\n        .directive('pipAppbar', appbarDirective);\n\n})();","\n\n// Prevent junk from going into typescript definitions\nimport { AppBarConfig, IAppBarService } from \"./AppBarService\";\n\nclass AppBarPartDirectiveController {\n    private _scope: ng.IScope;\n    private _partName: string;\n    private _partValue: string;\n\n    constructor(\n        $element: ng.IAugmentedJQuery,\n        $attrs: ng.IAttributes,\n        $scope: ng.IScope,\n        $log: ng.ILogService,\n        $rootScope: ng.IRootScopeService,\n        pipAppBar: IAppBarService\n    ) {\n        \"ngInject\";\n\n        this._scope = $scope;\n        this._partName = String($attrs.pipAppbarPart);\n        this._partValue = null;\n\n        // Break part apart\n        let pos: number = this._partName.indexOf(':');\n        if (pos > 0) {\n            this._partValue = this._partName.substr(pos + 1);\n            this._partName = this._partName.substr(0, pos);\n        }\n\n        // onAppBarChanged(null, pipAppBar.config);\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\n            this.onAppBarChanged(null, config)\n        });\n\n    }\n\n    private onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\n        let parts: any = config.parts || {};\n        let currentPartValue = parts[this._partName];\n\n        // Set visible variable to switch ngIf\n        let visible: boolean = !!(this._partValue ? currentPartValue == this._partValue : currentPartValue);\n\n        if (visible != this._scope['visible'])\n            this._scope['visible'] = visible;\n    }\n\n}\n\n// Example is taken from here: http://stackoverflow.com/questions/20325480/angularjs-whats-the-best-practice-to-add-ngif-to-a-directive-programmatically\n(() => {\n    function appbarPartDirective(ngIfDirective) {\n        \"ngInject\";\n\n        var ngIf = ngIfDirective[0];\n\n        return {\n            transclude: ngIf.transclude,\n            priority: ngIf.priority,\n            terminal: ngIf.terminal,\n            restrict: ngIf.restrict,\n            scope: true,\n            link: function linkFunction($scope: ng.IScope, $element: ng.IAugmentedJQuery, $attrs: ng.IAttributes) {\n                // Visualize based on visible variable in scope\n                $attrs.ngIf = function () {\n                    return $scope.visible;\n                };\n                ngIf.link.apply(ngIf, arguments);\n            },\n            controller: AppBarPartDirectiveController\n        };\n    }\n\n    angular.module('pipAppBar')\n        .directive('pipAppbarPart', appbarPartDirective);\n\n})();","\n\nexport let AppBarChangedEvent = 'pipAppBarChanged';\n\nexport class AppBarConfig {\n    visible: boolean;\n    parts: any;\n    classes: string[];\n} \n\nexport interface IAppBarService {\n    readonly config: AppBarConfig;\n    readonly classes: string[];\n    parts: any;\n\n    show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void;\n    hide(): void;\n \n    addShadow(...breakpoints: string[]): void;\n    removeShadow(): void;\n \n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n \n    part(part: string, value: any): void;\n}\n\nexport interface IAppBarProvider extends ng.IServiceProvider {\n    config: AppBarConfig;\n    parts: any;\n    classes: string[];\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}\n\nclass AppBarService implements IAppBarService {\n    private _config: AppBarConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(config: AppBarConfig, $rootScope: ng.IRootScopeService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): AppBarConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void {\n        this._config.visible = true;\n        this._config.parts = parts || this._config.parts || {};\n        this._config.classes = classes || this._config.classes || [];\n        if (shadowBreakpoints) {\n            this.setShadow(shadowBreakpoints); \n        }\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.visible = false;\n        this.sendConfigEvent();\n    }\n\n    private hideShadow(): void {\n        this._config.classes = _.reject(this._config.classes, (c) => c.startsWith('pip-shadow'));\n    }\n\n    private setShadow(breakpoints: string[]): void {\n        this.hideShadow();\n\n        if (breakpoints != null && breakpoints.length > 0) {\n            _.each(breakpoints, (bp) => {\n                this._config.classes.push('pip-shadow-' + bp);\n            });\n        } else {\n            this._config.classes.push('pip-shadow');\n        }\n    }\n\n    public addShadow(...breakpoints: string[]): void {\n        this.setShadow(breakpoints);\n        this.sendConfigEvent();\n    }\n\n    public removeShadow(): void {\n        this.hideShadow();\n        this.sendConfigEvent();\n    }\n \n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$broadcast(AppBarChangedEvent, this._config);\n    }\n}\n\nclass AppBarProvider implements IAppBarProvider {\n    private _config: AppBarConfig = {\n        visible: true,\n        parts: {},\n        classes: []\n    };\n    private _service: AppBarService;\n\n    public get config(): AppBarConfig {\n        return this._config;\n    }\n\n    public set config(value: AppBarConfig) {\n        this._config = value || new AppBarConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new AppBarService(this._config, $rootScope);\n\n        return this._service;\n    }     \n}\n\nangular\n    .module('pipAppBar')\n    .provider('pipAppBar', AppBarProvider);\n","\n\nangular\n    .module('pipAppBar', ['ngMaterial', 'pipNav.Templates']);\n\nimport './AppBarService';\nimport './AppBarDirective';\nimport './AppBarPartDirective';\n\nexport * from './AppBarService';\n","\n\nimport { SimpleActionItem } from '../actions/ActionsService';\nimport { BreadcrumbItem } from './BreadcrumbService';\nimport { BreadcrumbConfig } from './BreadcrumbService';\nimport { IBreadcrumbService } from './BreadcrumbService';\nimport { BreadcrumbChangedEvent } from './BreadcrumbService';\nimport { BreadcrumbBackEvent } from './BreadcrumbService';\nimport { OpenSearchEvent } from '../search/SearchService'\n\n// Prevent junk from going into typescript definitions\nclass BreadcrumbController {\n    private _rootScope: ng.IRootScopeService;\n    private _window: ng.IWindowService;\n    private _location: ng.ILocationService;\n    private _injector: ng.auto.IInjectorService;\n    private originatorEv: Event;\n    private _media: any;\n\n    public config: BreadcrumbConfig;\n\n    public constructor(\n        $element: ng.IAugmentedJQuery,\n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService,\n        $state: ng.ui.IStateService,\n        $location: ng.ILocationService,\n        $injector: ng.auto.IInjectorService,\n        pipBreadcrumb: IBreadcrumbService,\n        $mdMedia: angular.material.IMedia\n    ) {\n        \"ngInject\";\n\n        this._rootScope = $rootScope;\n        this._window = $window;\n        this._location = $location;\n        this._injector = $injector;\n\n        // Apply class and call resize\n        $element.addClass('pip-breadcrumb');\n\n        this.config = pipBreadcrumb.config;\n\n        $rootScope.$on(BreadcrumbChangedEvent, (event: ng.IAngularEvent, config: BreadcrumbConfig) => {\n            this.onBreadcrumbChanged(event, config);\n        });\n        $rootScope.$on(BreadcrumbBackEvent, () => { this.onBreadcrumbBack(); });\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this._media = pipMedia !== undefined ? pipMedia : $mdMedia;\n    }\n\n    private onBreadcrumbChanged(event: ng.IAngularEvent, config: BreadcrumbConfig): void {\n        this.config = config;\n    }\n\n    private onBreadcrumbBack(): void {\n        let items: BreadcrumbItem[] = this.config.items;\n        // Go to the last breadcrumb item\n        if (_.isArray(items) && items.length > 0) {\n            let item: BreadcrumbItem = items[items.length - 1];\n            if (_.isFunction(item.click)) {\n                item.click(item);\n            } else {\n                this._window.history.back();\n            }\n        } else {\n            this._window.history.back();\n        }\n    }\n\n    public onClick(item: BreadcrumbItem): void {\n        if (_.isFunction(item.click)) {\n            item.click(item);\n        }\n    }\n\n    public openSearch(): void {\n        this._rootScope.$broadcast(OpenSearchEvent);\n    }\n\n    public actionsVisible(item: BreadcrumbItem): boolean {\n\n        return angular.isArray(item.subActions) && item.subActions.length > 1;\n    }\n\n    public onOpenMenu($mdOpenMenu: Function, event: Event): void {\n        this.originatorEv = event;\n        $mdOpenMenu(this.originatorEv);\n    }\n\n    public onSubActionClick(action: SimpleActionItem): void {\n        if (!action || action.divider) {\n            return;\n        }\n\n        if (_.isFunction(action.click)) {\n            action.click(action);\n            return;\n        }\n\n        if (action.href) {\n            this._window.location.href = action.href;\n            return;\n        }\n\n        if (action.url) {\n            this._location.url(action.url);\n            return;\n        }\n\n        if (action.state) {\n            if (this._injector.has('$state')) {\n                let _state: angular.ui.IStateService = this._injector.get('$state') as ng.ui.IStateService\n                _state.go(action.state, action.stateParams);\n            }\n            return;\n        }\n\n        if (action.event) {\n            this._rootScope.$broadcast(action.event);\n            this.originatorEv = null;\n        } else {\n            // Otherwise raise notification\n            this._rootScope.$broadcast('pipActionClicked', action.name);\n            this.originatorEv = null;\n        }\n    }\n}\n\n(() => {\n    function breadcrumbDirective() {\n        return {\n            restrict: 'E',\n            scope: {},\n            replace: false,\n            templateUrl: 'breadcrumb/Breadcrumb.html',\n            controller: BreadcrumbController,\n            controllerAs: 'vm'\n        };\n    }\n\n\n    angular.module('pipBreadcrumb')\n        .directive('pipBreadcrumb', breadcrumbDirective);\n\n})();","\n\nimport { SimpleActionItem } from '../actions/ActionsService';\nexport let BreadcrumbChangedEvent = \"pipBreadcrumbChanged\";\nexport let BreadcrumbBackEvent = \"pipBreadcrumbBack\";\n\nexport class BreadcrumbItem {\n    title: string;\n    click?: (item: BreadcrumbItem) => void;   \n    subActions?: SimpleActionItem[]; \n}\n\nexport class BreadcrumbConfig {\n    text: string;\n    items: BreadcrumbItem[];\n    criteria: string;\n}\n\nexport interface IBreadcrumbService {\n    config: BreadcrumbConfig;\n    text: string;\n    items: BreadcrumbItem[];\n    criteria: string;\n\n    showText(text: string, criteria?: string): void;\n    showItems(items: BreadcrumbItem[], criteria?: string): void;\n}\n\nexport interface IBreadcrumbProvider extends ng.IServiceProvider {\n    text: string;\n}\n\nclass BreadcrumbService implements IBreadcrumbService {\n    private _config: BreadcrumbConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: BreadcrumbConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config() {\n        return this._config;\n    }\n\n    public get text(): string {\n        return this._config.text;\n    }\n\n    public set text(value: string) {\n        this._config.text = value;\n        this._config.items = null;\n\n        this.sendConfigEvent();\n    }\n\n    public get items(): BreadcrumbItem[] {\n        return this._config.items;\n    }\n\n    public set items(value: BreadcrumbItem[]) {\n        this._config.text = null;\n        this._config.items = value;\n\n        this.sendConfigEvent();\n    }\n\n    public get criteria(): string {\n        return this._config.criteria;\n    }\n\n    public set criteria(value: string) {\n        this._config.criteria = value;\n        this.sendConfigEvent();\n    }\n\n    public showText(text: string, criteria?: string): void {\n        this._config.text = text;\n        this._config.items = null;\n        this._config.criteria = criteria;\n        this.sendConfigEvent();\n    }\n\n    public showItems(items: BreadcrumbItem[], criteria?: string): void {\n        this._config.items = items || [];\n        this._config.text = null;\n        this._config.criteria = criteria;\n        this.sendConfigEvent();\n    }\n\n    public sendConfigEvent() {\n        this._rootScope.$broadcast(BreadcrumbChangedEvent, this._config);\n    }\n}\n\n\nclass BreadcrumbProvider implements IBreadcrumbProvider {\n    private _config: BreadcrumbConfig = { \n        text: null,\n        items: null,\n        criteria: null\n    };\n    private _service: BreadcrumbService;\n\n    public get text(): string {\n        return this._config.text;\n    }\n\n    public set text(value: string) {\n        this._config.text = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService): any {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new BreadcrumbService(this._config, $rootScope);\n\n        return this._service;\n    }\n}\n\n\nangular.module('pipBreadcrumb')\n    .provider('pipBreadcrumb', BreadcrumbProvider);\n","\n\nangular.module('pipBreadcrumb', ['ngMaterial', 'pipNav.Templates', 'pipNav.Translate']);\n\nimport './BreadcrumbDirective';\nimport './BreadcrumbService';\n\nexport * from './BreadcrumbService';\n\n\n","\n\nimport { INavIconService } from '../icon/NavIconService';\nimport { INavMenuService } from '../menu/NavMenuService';\nimport { INavHeaderService } from '../header/NavHeaderService';\nimport { IBreadcrumbService } from '../breadcrumb/BreadcrumbService';\nimport { ISearchService } from '../search/SearchService';\nimport { IActionsService } from '../actions/ActionsService';\nimport { IAppBarService } from '../appbar/AppBarService';\nimport { ISideNavService } from '../sidenav/SideNavService';\n\nexport interface INavService {\n    appbar: IAppBarService;\n    icon: INavIconService;\n    breadcrumb: IBreadcrumbService;\n    actions: IActionsService;\n    search: ISearchService;\n    sidenav: ISideNavService;\n    header: INavHeaderService;\n    menu: INavMenuService;\n\n    reset(): void;\n}\n\nclass NavService implements INavService {\n\n    public constructor($injector: ng.auto.IInjectorService) {\n        \"ngInject\";\n\n        this.appbar = $injector.has('pipAppBar') ? <IAppBarService>$injector.get('pipAppBar') : null;\n        this.icon = $injector.has('pipNavIcon') ? <INavIconService>$injector.get('pipNavIcon') : null;\n        this.breadcrumb = $injector.has('pipBreadcrumb') ? <IBreadcrumbService>$injector.get('pipBreadcrumb') : null;\n        this.actions = $injector.has('pipActions') ? <IActionsService>$injector.get('pipActions') : null;\n        this.search = $injector.has('pipSearch') ? <ISearchService>$injector.get('pipSearch') : null;\n        this.sidenav = $injector.has('pipSideNav') ? <ISideNavService>$injector.get('pipSideNav') : null;\n        this.header = $injector.has('pipNavHeader') ? <INavHeaderService>$injector.get('pipNavHeader') : null;\n        this.menu = $injector.has('pipNavMenu') ? <INavMenuService>$injector.get('pipNavMenu') : null;\n    }\n\n    public appbar: IAppBarService;\n    public icon: INavIconService;\n    public breadcrumb: IBreadcrumbService;\n    public actions: IActionsService;\n    public search: ISearchService;\n    public sidenav: ISideNavService;\n    public header: INavHeaderService;\n    public menu: INavMenuService;\n\n    public reset() {\n        // Reset appbar\n        if (this.appbar) {\n            this.appbar.show();\n        }\n\n        // Reset icon\n        if (this.icon) {\n            this.icon.showMenu();\n        }\n\n        // Reset breadcrumb\n        if (this.breadcrumb) {\n            this.breadcrumb.showText(null);\n        }\n\n        // Reset actions\n        if (this.actions) {\n            this.actions.show();\n        }\n\n        // Reset search\n        if (this.search) {\n            this.search.set(null);\n        }\n\n        if (this.sidenav) {\n            this.sidenav.show();\n        }\n\n    }\n}\n\nangular\n    .module('pipNavService', [])\n    .service('pipNavService', NavService);","\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction translateFilter($injector: ng.auto.IInjectorService) {\n    \"ngInject\";\n\n    let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n\n    return function (key: string) {\n        return pipTranslate ? pipTranslate.translate(key) || key : key;\n    }\n}\n\nangular\n    .module('pipNav.Translate', [])\n    .filter('translate', translateFilter);\n\n})();\n\n","\n\n// Prevent junk from going into typescript definitions\n(() => {\n    class DropdownDirectiveController {\n        private _element: ng.IAugmentedJQuery;\n        private _attrs: ng.IAttributes;\n        private _injector: ng.auto.IInjectorService;\n        private _scope: angular.IScope;\n        private _log: ng.ILogService;\n        private _rootScope: ng.IRootScopeService;\n        private _pipTranslate: pip.services.ITranslateService;\n\n        private _pipTheme: pip.themes.IThemeService;\n        private _pipMedia: pip.layouts.IMediaService;\n        private _timeout: ng.ITimeoutService;\n\n        public themeClass: string;\n        public media: any;\n        public actions: any; // string or array\n        public activeIndex: number;\n        public selectedIndex: number;\n        public currentTheme: string;\n\n        constructor(\n            $element: ng.IAugmentedJQuery,\n            $attrs: ng.IAttributes,\n            $injector: ng.auto.IInjectorService,\n            $scope: angular.IScope,\n            $log: ng.ILogService,\n            $rootScope: ng.IRootScopeService,\n            $mdMedia: angular.material.IMedia,\n            $timeout: ng.ITimeoutService\n\n        ) {\n            \"ngInject\";\n\n            this._element = $element;\n            this._attrs = $attrs;\n            this._scope = $scope;\n            this._injector = $injector;\n            this._log = $log;\n            this._rootScope = $rootScope;\n            this._timeout = $timeout;\n\n            this._pipTheme = $injector.has('pipTheme') ? <pip.themes.IThemeService>$injector.get('pipTheme') : null;\n            this._pipMedia = $injector.has('pipMedia') ? <pip.layouts.IMediaService>$injector.get('pipMedia') : null;\n\n            if (this._pipTheme) {\n                this.currentTheme = this._pipTheme.theme;\n            } else if (this._rootScope['$theme']) {\n                this.currentTheme = this._rootScope['$theme'];\n            }\n\n            this.themeClass = ($attrs.class || '') + ' md-' + this.currentTheme + '-theme';\n\n            //pipAssert.isArray($scope.actions, 'pipDropdown: pip-actions attribute should take an array, but take ' + typeof $scope.actions);\n            this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\n            this.actions = ($scope['actions'] && _.isArray($scope['actions'])) ? $scope['actions'] : [];\n            this.activeIndex = $scope['activeIndex'] || 0;\n        }\n\n\n        public disabled(): boolean {\n            if (this._scope['ngDisabled']) {\n                return this._scope['ngDisabled']();\n            } else {\n                return false;\n            }\n        }\n\n        public onSelect(index: number): void {\n            this.activeIndex = index;\n            this._scope['activeIndex'] = index;\n            if (this._scope['select']) {\n                this._scope['select'](this.actions[index], this.activeIndex);\n            }\n\n            if (this._scope['pipChange']) {\n                this._timeout(() => {\n                    this._scope['pipChange']();\n                });\n            }\n        }\n\n        public show(): boolean {\n            let result: boolean;\n            if (this._scope['showDropdown']()) {\n                return !!this._scope['showDropdown']();\n            } else {\n                return true;\n            }\n        }\n\n    }\n\n    function dropdownDirective() {\n        return {\n            restrict: 'E',\n            scope: {\n                ngDisabled: '&',\n                actions: '=pipActions',\n                showDropdown: '&pipShow',\n                activeIndex: '=pipActiveIndex',\n                select: '=pipDropdownSelect',\n                pipChange: '&'\n            },\n            templateUrl: 'dropdown/Dropdown.html',\n            controller: DropdownDirectiveController,\n            controllerAs: 'vm'\n        };\n    }\n\n    angular\n        .module('pipDropdown', ['pipNav.Templates'])\n        .directive('pipDropdown', dropdownDirective);\n\n})();","\n\n// Prevent junk from going into typescript definitions\nimport { INavHeaderService, NavHeaderConfig } from \"./NavHeaderService\";\n\n(() => {\n    class NavHeaderDirectiveController {\n        private _element: ng.IAugmentedJQuery;\n        private _scope: angular.IScope;\n        private _log: ng.ILogService;\n        private _rootScope: ng.IRootScopeService;\n        private _timeout: ng.ITimeoutService;\n        private _pipNavHeader: INavHeaderService;\n\n        public title: string;\n        public subtitle: string;\n        public imageUrl: string;\n        public imageCss: string;\n        public image: ng.IAugmentedJQuery;\n        public imageBlock: ng.IAugmentedJQuery;\n        public loadedDefaultImage: boolean;\n        public showHeader: boolean;\n\n        constructor(\n            $element: ng.IAugmentedJQuery,\n            $scope: angular.IScope,\n            $log: ng.ILogService,\n            $rootScope: ng.IRootScopeService,\n            $timeout: ng.ITimeoutService,\n            pipNavHeader: INavHeaderService,\n            navConstant: any\n\n        ) {\n            \"ngInject\";\n\n            this._element = $element;\n            this._scope = $scope;\n            this._log = $log;\n            this._rootScope = $rootScope;\n            this._timeout = $timeout;\n            this._pipNavHeader = pipNavHeader;\n\n            // Apply class and call resize\n            this._element.addClass('pip-sticky-nav-header');\n\n\n            this.initImage();\n\n            let cleanupNavHeaderChanged: Function = this._rootScope.$on('pipNavHeaderChanged', ($event: ng.IAngularEvent, config: NavHeaderConfig) => {\n                this.onNavHeaderChanged($event, config)\n            });\n            let cleanupSideNavStateChanged: Function = this._rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: any) => { //navState\n                this.onStateChanged($event, state)\n            });\n\n            $scope.$on('$destroy', () => {\n                if (angular.isFunction(cleanupNavHeaderChanged)) {\n                    cleanupNavHeaderChanged();\n                }\n                if (angular.isFunction(cleanupSideNavStateChanged)) {\n                    cleanupSideNavStateChanged();\n                }\n            });\n\n        }\n\n        private initImage() {\n            this.imageBlock = this._element.find('.pip-sticky-nav-header-user')\n\n            this._timeout(() => {\n                this.image = this._element.find('.pip-sticky-nav-header-user-image');\n\n                if (this.image[0]) {\n                    this.image[0].onload = (() => this.onImageLoad());\n\n                    // ($event: HTMLElement, erroev: Event): any =>  {\n                    //     this.onImageLoad($event);\n                    //     return null;\n                    // }\n                    this.image[0].onerror = (() => this.onImageError());\n                    // ($event: ng.IAngularEvent) => {\n                    //     this.onImageError($event);\n                    // }\n                } else {\n                    this.image.onload = (() => this.onImageLoad());\n                    this.image.onerror = (() => this.onImageError());\n                }\n\n                this.onNavHeaderChanged(null, this._pipNavHeader.config);\n            }, 20);\n        }\n\n        private initHeader() {\n            if (!this._pipNavHeader.config) return;\n\n            this.title = this._pipNavHeader.config.title;\n            this.subtitle = this._pipNavHeader.config.subtitle;\n            this.imageUrl = this._pipNavHeader.config.imageUrl;\n            this.imageCss = this._pipNavHeader.config.imageCss;\n        }\n\n        // // When image is loaded resize/reposition it\n        // private onImageLoad($event) {\n        //     let image: ng.IAugmentedJQuery = $($event.target);\n        //     this.setImageMarginCSS(image);\n        // };\n\n        // private onImageError($event) {\n        //     if (this.loadedDefaultImage) return;\n        //     this._scope.$apply(() => {\n        //         this.setImage(this._pipNavHeader.config, true);\n        //     });\n        // };\n        // When image is loaded resize/reposition it\n        private onImageLoad() {\n            this.setImageMarginCSS(this.image);\n        };\n\n        private onImageError() {\n            if (this.loadedDefaultImage) return;\n            this._scope.$apply(() => {\n                this.setImage(this._pipNavHeader.config, true);\n            });\n        };\n\n        private onStateChanged(event: ng.IAngularEvent, state: any) { // navState\n            if (state === undefined) return;\n\n            if (state.id == 'toggle') {\n                this._timeout(() => {\n                    this.showHeader = state && state.id == 'toggle';\n                }, 400);\n            } else {\n                this.showHeader = false;\n            }\n        }\n\n        private setImageMarginCSS(image: ng.IAugmentedJQuery) { //image[0]\n            var cssParams = {},\n                containerWidth = this.imageBlock.width ? this.imageBlock.width() : this.imageBlock.clientWidth,\n                containerHeight = this.imageBlock.height ? this.imageBlock.height() : this.imageBlock.clientHeight,\n                imageWidth = image[0]['naturalWidth'] || image.width,\n                imageHeight = image[0]['naturalHeight'] || image.height,\n                margin = 0;\n\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\n                cssParams['margin-left'] = '' + margin + 'px';\n                cssParams['height'] = '' + containerHeight + 'px';\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px';\n                cssParams['margin-top'] = '';\n            } else {\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\n                cssParams['margin-top'] = '' + margin + 'px';\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px';\n                cssParams['width'] = '' + containerWidth + 'px';\n                cssParams['margin-left'] = '';\n            }\n\n            image.css(cssParams);\n        };\n\n        private setImage(config, loadError: boolean) {\n            if (!config) return;\n\n            var url: string;\n\n            if (!loadError && !!config.imageUrl && !this.loadedDefaultImage) {\n                url = config.imageUrl;\n            } else {\n                this.loadedDefaultImage = true;\n                url = config.defaultImageUrl;\n            }\n\n            if (url && this.image) {\n                this.image.attr('src', url);\n            } else {\n                this.imageBlock.css('display', 'none');\n            }\n        }\n\n        private onNavHeaderChanged($event: ng.IAngularEvent, config: NavHeaderConfig) {\n            if (!config) return;\n            this.setImage(config, false)\n\n            this.title = config.title;\n            this.subtitle = config.subtitle;\n            this.imageUrl = config.imageUrl;\n            this.imageCss = config.imageCss;\n        }\n\n        public onUserClick() {\n            this._rootScope.$broadcast('pipNavUserClicked'); // todo\n        }\n\n    }\n\n    function navHeaderDirective() {\n        return {\n            restrict: 'EA',\n            replace: false,\n            templateUrl: 'header/NavHeader.html',\n            controller: NavHeaderDirectiveController,\n            controllerAs: 'vm'\n\n        };\n    }\n\n    angular\n        .module('pipNavHeader')\n        .directive('pipNavHeader', navHeaderDirective);\n\n})();","\n\nexport let NavHeaderChangedEvent = 'pipNavHeaderChanged';\n\nexport class NavHeaderConfig {\n    // Image url\n    public imageUrl: string;\n    // Image url\n    public defaultImageUrl: string;\n    // Title\n    public title: string;\n    // Subtitle\n    public subtitle: string;\n    // image styles\n    public imageCss: string;\n    // Handle header click event\n    click: () => void;\n    // Event name\n    event: string\n};\n\nexport interface INavHeaderService {\n    readonly config: NavHeaderConfig;\n    imageUrl: string;\n    title: string;\n    subtitle: string;\n    event: string;\n\n    show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\n    hide(): void;\n    click: () => void;\n}\n\nexport interface INavHeaderProvider extends ng.IServiceProvider {\n    config: NavHeaderConfig;\n    defaultImageUrl: string;\n    imageUrl: string;\n    title: string;\n    subtitle: string;\n    event: string;\n\n    set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\n    clear(): void;\n    click: () => void;\n}\n\nclass NavHeaderService {\n    private _config: NavHeaderConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(config: NavHeaderConfig, $rootScope: ng.IRootScopeService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): NavHeaderConfig {\n        return this._config;\n    }\n\n    public get title(): string {\n        return this._config.title;\n    }\n\n    public set title(value: string) {\n        this._config.title = value;\n        this.sendConfigEvent();\n    }\n\n    public get subtitle(): string {\n        return this._config.subtitle;\n    }\n\n    public set subtitle(value: string) {\n        this._config.subtitle = value;\n        this.sendConfigEvent();\n    }\n\n    public get imageUrl(): string {\n        return this._config.imageUrl;\n    }\n\n    public set imageUrl(value: string) {\n        this._config.imageUrl = value;\n        this.sendConfigEvent();\n    }\n\n    public get click(): () => void {\n        return this._config.click;\n    }\n\n    public set click(value: () => void) {\n        this._config.click = value;\n        this.sendConfigEvent();\n    }\n\n    public get event(): string {\n        return this._config.event;\n    }\n\n    public set event(value: string) {\n        this._config.event = value;\n        this.sendConfigEvent();\n    }\n\n    public show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\n        this._config.title = title;\n        this._config.subtitle = subtitle;\n        this._config.imageUrl = imageUrl;\n\n        if (_.isFunction(callbackOrEvent)) {\n            this._config.click = callbackOrEvent;\n        } else {\n            this._config.click = null;\n        }\n        if (_.isString(callbackOrEvent)) {\n            this._config.event = callbackOrEvent;\n        } else {\n            this._config.event = null;\n        }\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.title = null;\n        this._config.subtitle = null;\n        this._config.imageUrl = null;\n        this._config.click = null;\n        this._config.event = null;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$emit(NavHeaderChangedEvent, this._config);\n    }\n}\n\nclass NavHeaderProvider implements INavHeaderProvider {\n    private _config: NavHeaderConfig = new NavHeaderConfig();\n    private _service: NavHeaderService;\n\n    public get config(): NavHeaderConfig {\n        return this._config;\n    }\n\n    public set config(value: NavHeaderConfig) {\n        this._config = value || new NavHeaderConfig();\n    }\n\n    public get defaultImageUrl(): string {\n        return this._config.defaultImageUrl;\n    }\n\n    public set defaultImageUrl(value: string) {\n        this._config.defaultImageUrl = value;\n    }\n\n    public get title(): string {\n        return this._config.title;\n    }\n\n    public set title(value: string) {\n        this._config.title = value;\n    }\n\n    public get subtitle(): string {\n        return this._config.subtitle;\n    }\n\n    public set subtitle(value: string) {\n        this._config.subtitle = value;\n    }\n\n    public get imageUrl(): string {\n        return this._config.imageUrl;\n    }\n\n    public set imageUrl(value: string) {\n        this._config.imageUrl = value;\n    }\n\n    public get click(): () => void {\n        return this._config.click;\n    }\n\n    public set click(value: () => void) {\n        this._config.click = value;\n    }\n\n    public get event(): string {\n        return this._config.event;\n    }\n\n    public set event(value: string) {\n        this._config.event = value;\n    }\n\n    public set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\n        this._config.title = title;\n        this._config.subtitle = subtitle;\n        this._config.imageUrl = imageUrl;\n\n        if (_.isFunction(callbackOrEvent)) {\n            this._config.click = callbackOrEvent;\n        } else {\n            this._config.click = null;\n        }\n        if (_.isString(callbackOrEvent)) {\n            this._config.event = callbackOrEvent;\n        } else {\n            this._config.event = null;\n        }\n    }\n\n    public clear(): void {\n        this._config.title = null;\n        this._config.subtitle = null;\n        this._config.imageUrl = null;\n        this._config.click = null;\n        this._config.event = null;\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavHeaderService(this._config, $rootScope);\n\n        return this._service;\n    }\n\n}\n\n\nangular\n    .module('pipNavHeader')\n    .provider('pipNavHeader', NavHeaderProvider);\n","\n\nangular.module('pipNavHeader', ['ngMaterial', 'pipNav.Templates']);\n\nimport './NavHeaderService';\nimport './NavHeaderDirective';\n\nexport * from './NavHeaderService';","\nimport { OpenSideNavEvent } from '../sidenav/SideNavEvents';\nimport {  INavIconService, NavIconConfig } from \"./NavIconService\";\n// Prevent junk from going into typescript definitions\nexport let NavIconClickedEvent = 'pipNavIconClicked';\n\nclass NavIconDirectiveController {\n    private _element: ng.IAugmentedJQuery;\n    private _scope: angular.IScope;\n    private _log: ng.ILogService;\n    private _rootScope: ng.IRootScopeService;\n    private _window: ng.IWindowService;\n\n    public config: NavIconConfig;\n\n    constructor(\n        $element: ng.IAugmentedJQuery,\n        $scope: angular.IScope,\n        $log: ng.ILogService,\n        $rootScope: ng.IRootScopeService,\n        $window: ng.IWindowService,\n        pipNavIcon: INavIconService\n    ) {\n        \"ngInject\";\n\n        this._element = $element;\n        this._scope = $scope;\n        this._log = $log;\n        this._rootScope = $rootScope;\n        this._window = $window;\n\n        // Apply class and call resize\n        $element.addClass('pip-nav-icon');\n\n        this.config = pipNavIcon.config;\n\n        $rootScope.$on('pipNavIconChanged', (event: ng.IAngularEvent, config: NavIconConfig) => {\n            this.onNavIconChanged(event, config)\n        });\n\n    }\n\n    public onNavIconChanged(event: ng.IAngularEvent, config: NavIconConfig): void {\n        this.config = config;\n    }\n\n    public onNavIconClick(): void {\n        if (_.isFunction(this.config.click)) {\n            // Execute nav icon callback\n            this.config.click();\n        } else if (this.config.event) {\n            this._rootScope.$broadcast(this.config.event);\n        } else if (this.config.type == 'menu') {\n            this._rootScope.$broadcast(OpenSideNavEvent);\n        } else if (this.config.type == 'back') {\n            this._window.history.back();\n        } else {\n            this._rootScope.$broadcast(NavIconClickedEvent);\n        }\n    }\n\n}\n\n(() => {\n    function navIconDirective() {\n        return {\n            restrict: 'E',\n            scope: {\n                type: '=pipType',\n                imageUrl: '=pipImageUrl',\n                icon: '=pipIcon'\n            },\n            replace: false,\n            templateUrl: 'icon/NavIcon.html',\n            controller: NavIconDirectiveController,\n            controllerAs: 'vm'\n        };\n    }\n\n\n    angular\n        .module('pipNavIcon')\n        .directive('pipNavIcon', navIconDirective);\n\n})();","\n\nexport let NavIconChangedEvent = 'pipNavIconChanged';\n\nexport class NavIconConfig {\n    // Type of nav icon: 'back', 'menu', 'image' or 'none'\n    public type: string;\n    // Image url\n    public imageUrl: string;\n    // Icon name\n    public icon: string;\n    // Handle nav icon click event\n    click: () => void;\n    // Event name\n    event: string\n};\n\nexport interface INavIconService {\n    readonly config: NavIconConfig;\n\n    showMenu(callbackOrEvent?: any): void;\n    showIcon(icon: string, callbackOrEvent?: any): void;\n    showBack(callbackOrEvent?: any): void;\n    showImage(imageUrl: string, callbackOrEvent?: any): void;\n    hide(): void;\n}\n\nexport interface INavIconProvider extends ng.IServiceProvider {\n    config: NavIconConfig;\n\n    setMenu(callbackOrEvent?: any): void;\n    setIcon(icon: string, callbackOrEvent?: any): void;\n    setBack(callbackOrEvent?: any): void;\n    setImage(imageUrl: string, callbackOrEvent?: any): void;\n    clear(): void;\n}\n\nclass NavIconService implements INavIconService {\n    private _config: NavIconConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(config: NavIconConfig, $rootScope: ng.IRootScopeService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get config(): NavIconConfig {\n        return this._config;\n    }\n\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\n        if (_.isFunction(callbackOrEvent)) {\n            this._config.click = callbackOrEvent;\n            this._config.event = null;\n        } else if (_.isString(callbackOrEvent)) {\n            this._config.click = null;\n            this._config.event = callbackOrEvent;\n        } else {\n            this._config.click = null;\n            this._config.event = null;\n        }\n    }\n\n    public showMenu(callbackOrEvent?: any): void {\n        this._config.type = 'menu';\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showIcon(icon: string, callbackOrEvent?: any): void {\n        this._config.type = 'icon';\n        this._config.icon = icon;\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showBack(callbackOrEvent?: any): void {\n        this._config.type = 'back';\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public showImage(imageUrl: string, callbackOrEvent?: any): void {\n        this._config.type = 'image';\n        this._config.imageUrl = imageUrl;\n        this.setCallbackOrEvent(callbackOrEvent);\n        this.sendConfigEvent();\n    }\n\n    public hide(): void {\n        this._config.type = 'none';\n        this.setCallbackOrEvent(null);\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$broadcast(NavIconChangedEvent, this._config);\n    }\n}\n\nclass NavIconProvider implements INavIconProvider {\n    private _config: NavIconConfig = new NavIconConfig();\n    private _service: NavIconService;\n\n    public get config(): NavIconConfig {\n        return this._config;\n    }\n\n    public set config(value: NavIconConfig) {\n        this._config = value || new NavIconConfig();\n    }\n\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\n        if (_.isFunction(callbackOrEvent))\n            this._config.click = callbackOrEvent;\n        else this._config.click = null;\n\n        if (_.isString(callbackOrEvent))\n            this._config.event = callbackOrEvent;\n        else this._config.event = null;\n    }\n\n    public setMenu(callbackOrEvent?: any): void {\n        this._config.type = 'menu';\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setIcon(icon: string, callbackOrEvent?: any): void {\n        this._config.type = 'icon';\n        this._config.icon = icon;\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setBack(callbackOrEvent?: any): void {\n        this._config.type = 'back';\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public setImage(imageUrl: string, callbackOrEvent?: any): void {\n        this._config.type = 'image';\n        this._config.imageUrl = imageUrl;\n        this.setCallbackOrEvent(callbackOrEvent);\n    }\n\n    public clear(): void {\n        this._config.type = 'none';\n        this.setCallbackOrEvent(null);\n    }\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavIconService(this._config, $rootScope);\n\n        return this._service;\n    }\n     \n}\n\n\nangular\n    .module('pipNavIcon')\n    .provider('pipNavIcon', NavIconProvider);\n","\n\nangular.module('pipNavIcon', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './NavIconService';\nimport './NavIconDirective';\n\nexport * from './NavIconService';\n","﻿\n\nimport './dependencies/TranslateFilter';\nimport './language/LanguagePickerDirective';\nimport './dropdown/DropdownDirective';\nimport './tabs/TabsDirective';\nimport './actions';\nimport './appbar';\nimport './search';\nimport './breadcrumb';\nimport './sidenav';\nimport './header';\nimport './menu';\nimport './icon';\nimport './common/NavService';\n\nangular\n    .module('pipNav', [\n        'pipNavService',\n        'pipDropdown',\n        'pipTabs',\n        'pipAppBar',\n        'pipSearchBar',\n        'pipNavIcon',\n        'pipBreadcrumb',\n        'pipLanguagePicker',\n        'pipActions', \n        'pipSideNav',\n        'pipNavMenu',\n        'pipNavHeader'\n    ])\n    .constant('navConstant', {\n        'TAB_BREAKPOINT': 'gt-sm',\n        'SIDENAV_CONTAINER': '.pip-main',\n        'SIDENAV_LARGE_WIDTH': 320,\n        'SIDENAV_MIDDLE_WIDTH': 240,\n        'SIDENAV_SMALL_WIDTH': 72,\n        'SIDENAV_ANIMATION_DURATION': 600\n\n    })\n\nexport * from './actions';\nexport * from './appbar';\nexport * from './breadcrumb';\nexport * from './search';\nexport * from './sidenav';\nexport * from './icon';\nexport * from './menu';\nexport * from './header';\nexport * from './common/NavService';\n","\n\n// Prevent junk from going into typescript definitions\n\n\n(() => {\n    class LanguagePickerDirectiveController {\n        private _element: ng.IAugmentedJQuery;\n        private _attrs: ng.IAttributes;\n        private _injector: ng.auto.IInjectorService;\n        private _scope: ng.IScope;\n        private _log: ng.ILogService;\n        private _rootScope: ng.IRootScopeService;\n        private _translate: pip.services.ITranslateService;\n        private _timeout: ng.ITimeoutService;\n\n        public languages: string[] = ['en', 'ru'];\n        public selectedLanguage: string;\n\n        public constructor(\n            $element: ng.IAugmentedJQuery,\n            $attrs: ng.IAttributes,\n            $injector: ng.auto.IInjectorService,\n            $scope: ng.IScope,\n            $log: ng.ILogService,\n            $rootScope: ng.IRootScopeService,\n            $timeout: ng.ITimeoutService\n        ) {\n            \"ngInject\";\n\n            this._element = $element;\n            this._attrs = $attrs;\n            this._scope = $scope;\n            this._injector = $injector;\n            this._log = $log;\n            this._rootScope = $rootScope;\n            this._timeout = $timeout;\n            this._translate = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\n\n            // Apply class and call resize\n            $element.addClass('pip-language-picker');\n\n            this.setLanguages($scope['languages']);\n\n            this.selectedLanguage = $scope['value'] || this.languages[0];\n        }\n\n        public get language() {\n            return this._translate ? this._translate.language : null;\n        }\n\n        public setLanguages(languages: string[]): void {\n            this.languages = languages.length > 0 ? languages : ['en', 'ru'];\n        }\n\n        public onLanguageClick(language: string) {\n            if (this._translate != null) {\n                this.selectedLanguage = language;\n                // this._timeout(() => {\n                this._translate.language = this.selectedLanguage;\n                // }, 0);\n            }\n        }\n\n    }\n\n    function languagePickerDirective() {\n        return {\n            restrict: 'E',\n            scope: {\n                languages: '=languages',\n                value: '=value'\n            },\n            replace: false,\n            templateUrl: function (element, attr) {\n                return 'language/LanguagePicker.html';\n            },\n            controller: LanguagePickerDirectiveController,\n            controllerAs: 'vm'\n        };\n    }\n\n    angular\n        .module('pipLanguagePicker', [\n            'ngMaterial', 'pipNav.Translate', 'pipNav.Templates'\n        ])\n        .directive('pipLanguagePicker', languagePickerDirective);\n\n})();","// Prevent junk from going into typescript definitions\nimport { ISideNavService, SideNavConfig } from '../sidenav/SideNavService';\nimport { NavMenuConfig, NavMenuSection, INavMenuService, NavMenuLink } from './NavMenuService';\nimport { SideNavStateNames, SideNavState } from '../sidenav/SideNavState';\n\n(() => {\n    class NavMenuDirectiveController {\n        private _element: ng.IAugmentedJQuery;\n        private _attrs: ng.IAttributes;\n        private _injector: ng.auto.IInjectorService;\n        private _scope: angular.IScope;\n        private _log: ng.ILogService;\n        private _rootScope: ng.IRootScopeService;\n        private _pipSideNav: ISideNavService;\n        private _pipNavMenu: INavMenuService;\n        private _state: angular.ui.IStateService;\n        private _window: ng.IWindowService;\n        private _location: ng.ILocationService;\n        private _pipMedia: pip.layouts.IMediaService;\n        private _timeout: ng.ITimeoutService;\n        private _animationDuration;\n        private _pipSideNavElement: ng.IAugmentedJQuery;\n\n        public sections: NavMenuSection[];\n        public defaultIcon: string;\n        public isCollapsed: boolean;\n        public expanded: boolean;\n        public expandedButton: boolean;\n        public sideNavState: SideNavState;\n\n        constructor(\n            $element: ng.IAugmentedJQuery,\n            $attrs: ng.IAttributes,\n            $injector: ng.auto.IInjectorService,\n            $scope: angular.IScope,\n            $log: ng.ILogService,\n            $window: ng.IWindowService,\n            $location: ng.ILocationService,\n            $rootScope: ng.IRootScopeService,\n            $timeout: ng.ITimeoutService,\n            pipSideNav: ISideNavService,\n            pipNavMenu: INavMenuService,\n            navConstant: any\n\n        ) {\n            \"ngInject\";\n\n            this._element = $element;\n            this._attrs = $attrs;\n            this._scope = $scope;\n            this._injector = $injector;\n            this._log = $log;\n            this._rootScope = $rootScope;\n            this._timeout = $timeout;\n            this._window = $window;\n            this._location = $location;\n            this._pipSideNav = pipSideNav;\n            this._pipNavMenu = pipNavMenu;\n\n            this._state = this._injector.has('$state') ? <angular.ui.IStateService>this._injector.get('$state') : null;\n\n            this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION,\n                this._pipSideNavElement = $element.parent().parent();\n            // Apply class and call resize\n            this._element.addClass('pip-sticky-nav-menu');\n\n            this.sections = this._scope['sections'] || this._pipNavMenu.sections;\n\n            this.setCollapsible();\n\n            this.defaultIcon = this._pipNavMenu.defaultIcon;\n\n            this.onStateChanged(null, this._pipSideNav.state);\n\n            let cleanupNavMenuChanged: Function = this._rootScope.$on('pipNavMenuChanged', ($event: ng.IAngularEvent, config: NavMenuConfig) => { //navState\n                this.onConfigChanged($event, config)\n            });\n            let cleanupSideNavStateChanged: Function = this._rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: SideNavState) => { //navState\n                this.onStateChanged($event, state)\n            });\n\n            this._scope.$on('$destroy', () => {\n                if (angular.isFunction(cleanupNavMenuChanged)) {\n                    cleanupNavMenuChanged();\n                }\n                if (angular.isFunction(cleanupSideNavStateChanged)) {\n                    cleanupSideNavStateChanged();\n                }\n            });\n\n        }\n\n        private setCollapsible(): void {\n            var collapsed: boolean;\n            if (angular.isFunction(this._scope['collapsed'])) {\n                collapsed = this._scope['collapsed']();\n            } else {\n                collapsed = this._scope['collapsed'] !== false && this._scope['collapsed'] !== 'false';\n            }\n\n            this.isCollapsed = collapsed;\n        }\n\n        public onExpand(): void {\n            if (!this.isCollapsed) { return }\n\n            this.expanded = !this.expanded;\n\n            if (this.expanded) {\n                this._pipSideNavElement.removeClass('pip-sticky-nav-small');\n            } else {\n                this._pipSideNavElement.addClass('pip-sticky-nav-small');\n            }\n            this._rootScope.$emit('pipNavExpanded', this.expanded);\n        }\n\n        public isHidden(item: NavMenuLink): boolean {\n            return item && item.access && !item.access(item);\n        }\n\n        public isSectionEmpty(linkCollection: NavMenuLink[]): boolean {\n            var result = true;\n            _.each(linkCollection, (link: NavMenuLink) => {\n                if (!this.isHidden(link)) {\n                    result = false;\n                }\n            });\n\n            return result;\n        }\n\n        private onConfigChanged($event: ng.IAngularEvent, config: NavMenuConfig): void {\n            if (!config) return;\n            this.sections = config.sections;\n        }\n\n        private onStateChanged(event: ng.IAngularEvent, state: SideNavState): void {\n            // SS> You shall not set it into the menu state. Instead it shall be controlled by the state of Sidenav\n            if (!state) return;\n\n            this.isCollapsed = state.expand;\n            this.expanded = state.isExpanded;\n            this.expandedButton = state.expandedButton;\n\n            this.sideNavState = state;\n        }\n\n        public isActive(link: NavMenuLink): boolean {\n            if (link.parentState) {\n\n                if (this._state != null && this._state.includes(link.parentState)) {\n                    return true;\n                }\n            } else if (link.state) {\n                if (this._state != null && this._state.includes(link.state)) {\n                    return true;\n                }\n            } else if (link.href) {\n                if (link.href.split('?')[0] === this._window.location.href.split('?')[0]) {\n                    return true;\n                }\n            } else if (link.url) {\n                if (link.url.split(/[\\s/?]+/)[1] === this._location.url().split(/[\\s/?]+/)[1]) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        public clickLink(event: ng.IAngularEvent, link: NavMenuLink): void {\n            event.stopPropagation();\n\n            if (!link) {\n                this._pipSideNav.close();\n\n                return;\n            }\n\n            if (link.href) {\n                if (link.href.split('?')[0] === this._window.location.href.split('?')[0]) {\n                    this._pipSideNav.close();\n\n                    return;\n                }\n\n                this._pipSideNav.close();\n                this._timeout(() => {\n                    this._window.location.href = link.href;\n                }, this._animationDuration);\n\n                return;\n            } else if (link.url) {\n                if (link.url.split(/[\\s/?]+/)[1] === this._location.url().split(/[\\s/?]+/)[1]) {\n                    this._pipSideNav.close();\n                    return;\n                }\n\n                this._pipSideNav.close();\n                this._timeout(() => {\n                    this._location.url(link.url);\n                }, this._animationDuration);\n\n                return;\n            } else if (link.state) {\n                if (this._state != null && this._state.current.name === link.state) {\n                    this._pipSideNav.close();\n\n                    return;\n                }\n\n                this._pipSideNav.close();\n                this._timeout(() => {\n                    this._state.go(link.state, link.stateParams);\n                }, this._animationDuration);\n\n                return;\n            } else if (link.event) {\n                this._rootScope.$broadcast(link.event, link);\n            }\n\n\n            this._pipSideNav.close();\n        }\n    }\n\n\n    function navMenuDirective() {\n        return {\n            restrict: 'EA',\n            scope: {\n                sections: '=?pipSections',\n                collapsed: '=?pipCollapsed'\n            },\n            replace: false,\n            templateUrl: 'menu/NavMenu.html',\n            controller: NavMenuDirectiveController,\n            controllerAs: 'vm'\n        };\n    }\n\n    angular\n        .module('pipNavMenu')\n        .directive('pipNavMenu', navMenuDirective);\n\n})();","\n\nexport let NavMenuChangedEvent = 'pipNavMenuChanged';\n\nexport class NavMenuLink {\n    // Name to refer to the item\n    public name: string;\n    // Link visible title\n    public title: string;\n    // Tooltip text\n    public tooltipText?: string;    \n    // Icon name from $iconProvider\n    public icon?: string;\n    // Counter badge\n    public count?: number;\n    // class for badge style\n    public badgeStyle?: string;\n    // Access function\n    public access?: (link: NavMenuLink) => boolean;\n    // window.location.href\n    public href?: string;\n    // $location.url\n    public url?: string;\n    // $state.go(state, stateParams)\n    public state?: string;\n    // Parameters for $state.go(state, stateParams)\n    public stateParams?: any;\n    // parent state or parent state for selection item \n    public parentState?: string;\n    // $rootScope.broadcast(event)\n    public event?: string;\n    // Click callback\n    public click?: (link: NavMenuLink) => void;\n}\n\nexport class NavMenuSection {\n    // Name to refer to the section\n    public name: string;\n    // Section visible title\n    public title?: string;\n    // Tooltip text\n    public tooltipText?: string;      \n    // Icon name from $iconProvider\n    public icon?: string;\n    // Links shown in the section\n    public links: NavMenuLink[];\n    // Access function\n    public access?: (section: NavMenuSection) => boolean;\n}\n\nexport class NavMenuConfig {\n    sections: NavMenuSection[];\n    defaultIcon: string;\n}\n\nexport interface INavMenuService {\n    sections: NavMenuSection[];\n    defaultIcon: string;\n    updateCount(link: string, count: number): void; \n    updateBadgeStyle(link: string, style: string): void;\n    clearCounts(): void;\n}\n\nexport interface INavMenuProvider extends ng.IServiceProvider {\n    sections: NavMenuSection[];\n    defaultIcon: string;\n}\n\nclass NavMenuService implements INavMenuService {\n    private _config: NavMenuConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: NavMenuConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n    }\n\n    public get sections(): NavMenuSection[] {\n        return this._config.sections;\n    }\n\n    public set sections(value: NavMenuSection[]) {\n        this._config.sections = value || [];\n        this.sendChangeEvent();\n    }\n\n    public get defaultIcon(): string {\n        return this._config.defaultIcon;\n    }\n\n    public updateBadgeStyle(link: string, style: string): void {\n        if (link == null || !_.isString(style)) return;\n\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                if (l.name == link)\n                    l.badgeStyle = style;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public set defaultIcon(value: string) {\n        this._config.defaultIcon = value;\n        this.sendChangeEvent();\n    }\n\n    public updateCount(link: string, count: number): void {\n        if (link == null || !_.isNumber(count)) return;\n\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                if (l.name == link)\n                    l.count = count;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    public clearCounts(): void {\n        _.each(this._config.sections, (s) => {\n            _.each(s.links, (l) => {\n                l.count = null;\n            });\n        });\n\n        this.sendChangeEvent();\n    }\n\n    private sendChangeEvent() {\n        this._rootScope.$emit(NavMenuChangedEvent, this._config);\n    }\n}\n\nclass NavMenuProvider implements INavMenuProvider {\n    private _config: NavMenuConfig = {\n        sections: [],\n        defaultIcon: 'icons:folder'\n    };\n    private _service: NavMenuService;\n\n    public get sections(): NavMenuSection[] {\n        return this._config.sections;\n    }\n\n    public set sections(value: NavMenuSection[]) {\n        this._config.sections = value || [];\n    }\n\n    public get defaultIcon(): string {\n        return this._config.defaultIcon;\n    }\n\n    public set defaultIcon(value: string) {\n        this._config.defaultIcon = value;\n    }\n\n    public $get($rootScope) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new NavMenuService(this._config, $rootScope);\n        \n        return this._service;\n    }\n}\n\nangular\n    .module('pipNavMenu')\n    .provider('pipNavMenu', NavMenuProvider);\n","angular.module('pipNavMenu', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './NavMenuService';\nimport './NavMenuDirective';\n\nexport * from './NavMenuService';","\n\nimport { SearchConfig } from './SearchService';\nimport { ISearchService } from './SearchService';\nimport { SearchChangedEvent } from './SearchService';\nimport { SearchActivatedEvent } from './SearchService';\n\n// Prevent junk from going into typescript definitions\n\n\nclass SearchBarController {\n    private _rootScope: ng.IRootScopeService;\n    private _element: any;\n\n    public config: SearchConfig;\n    public enabled: boolean = false;\n    public search: any = { text: '' };\n\n    public constructor(\n        $element: ng.IAugmentedJQuery,\n        $rootScope: ng.IRootScopeService,\n        pipSearch: ISearchService\n    ) {\n        \"ngInject\";\n\n        this._rootScope = $rootScope;\n        this._element = $element;\n\n        // Apply class and call resize\n        $element.addClass('pip-search-bar');\n\n        this.config = pipSearch.config;\n        this.stateChange();\n        $rootScope.$on(SearchChangedEvent, (event: ng.IAngularEvent, config: SearchConfig) => {\n            this.onSearchChanged(event, config);\n        });\n    }\n\n    private stateChange(): void {\n        if (this.enabled) {\n            this._element.addClass('w-stretch');\n            this._element.parent().addClass('pip-search-active');\n\n        } else {\n            this._element.removeClass('w-stretch');\n            this._element.parent().removeClass('pip-search-active');\n        }\n    }\n\n    private onSearchChanged(event: ng.IAngularEvent, config: SearchConfig): void {\n        this.config = config;\n        this.enabled = false;\n        this.search.text = '';\n        this.stateChange();\n    }\n\n    private focusText(): void {\n        setTimeout(() => {\n            let element: JQuery = $('.pip-search-text');\n            if (element.length > 0)\n                element.focus();\n        }, 0);\n    }\n\n    public enable(): void {\n        this.search.text = this.config.criteria;\n        this.enabled = true;\n        this.focusText();\n        this.stateChange();\n    }\n\n    public onClick(): void {\n        let search = this.search.text;\n\n        this.search.text = '';\n        this.enabled = false;\n        this.stateChange();\n\n        if (this.config.callback) {\n            this.config.callback(search);\n        } else {\n            this._rootScope.$broadcast(SearchActivatedEvent, search);\n        }\n    }\n\n    public clear(): void {\n        if (this.search.text) {\n            this.search.text = '';\n            this.focusText();\n        } else {\n            this.enabled = false;\n            this.stateChange();\n            this.onClick();\n        }\n    }\n\n    public onKeyDown(event: KeyboardEvent): void {\n        // Enter pressed\n        if (event.keyCode === 13)\n            this.onClick();\n        // ESC pressed\n        else if (event.keyCode === 27) {\n            this.enabled = false;\n            this.stateChange();\n        }\n    }\n}\n\n(() => {\n    function searchBarDirective() {\n        return {\n            restrict: 'E',\n            scope: {},\n            replace: false,\n            templateUrl: 'search/SearchBar.html',\n            controller: SearchBarController,\n            controllerAs: 'vm'\n        };\n    }\n\n    angular.module('pipSearchBar')\n        .directive('pipSearchBar', searchBarDirective);\n\n})();","\n\nexport let OpenSearchEvent = 'pipOpenSearch';\nexport let CloseSearchEvent = 'pipCloseSearch';\nexport let SearchChangedEvent = 'pipSearchChanged';\nexport let SearchActivatedEvent = 'pipSearchActivated';\n\nexport class SearchConfig {\n    // Search visible\n    public visible: boolean;\n    // Search criteria\n    public criteria: string;\n    // Custom search parameters\n    public params: any;\n    // History for search autocomplete\n    public history: string[];\n    // Callback for search\n    callback: (criteria: string) => void;\n}\n\nexport interface ISearchService {\n    config: SearchConfig;\n    criteria: string;\n    params: any;\n    history: string[];\n    callback: (criteria: string) => void;\n\n    set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void;\n    clear(): void;\n    open(): void;\n    close(): void;\n    toggle(): void;\n}\n\nexport interface ISearchProvider extends ng.IServiceProvider {    \n}\n\n\nclass SearchService implements ISearchService {\n    private _config: SearchConfig;\n    private _rootScope: ng.IRootScopeService;\n\n    public constructor(\n        config: SearchConfig,\n        $rootScope: ng.IRootScopeService\n    ) {\n        this._config = config;\n        this._rootScope = $rootScope;\n\n        $rootScope.$on(OpenSearchEvent, () => { this.open });\n        $rootScope.$on(CloseSearchEvent, () => { this.close });\n    }\n\n    public get config(): SearchConfig {\n        return this._config;\n    }\n\n    public get criteria(): string {\n        return this._config.criteria;\n    }\n\n    public set criteria(value: string) {\n        this._config.criteria = value;\n        this.sendConfigEvent();\n    }\n\n    public get params(): any {\n        return this._config.params;\n    }\n\n    public set params(value: any) {\n        this._config.params = value;\n        this.sendConfigEvent();\n    }\n\n    public get history(): string[] {\n        return this._config.history;\n    }\n\n    public set history(value: string[]) {\n        this._config.history = value;\n        this.sendConfigEvent();\n    }\n\n    public get callback(): (criteria: string) => void {\n        return this._config.callback;\n    }\n\n    public set callback(value: (criteria: string) => void) {\n        this._config.callback = value;\n        this.sendConfigEvent();\n    }\n\n    public set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void {\n        this._config.callback = callback;\n        this._config.criteria = criteria;\n        this._config.params = params;\n        this._config.history = history;\n        this.sendConfigEvent();\n    }\n\n    public clear(): void {\n        this._config.callback = null;\n        this._config.criteria = null;\n        this._config.params = null;\n        this.sendConfigEvent();\n    }\n\n    public open(): void {\n        this._config.visible = true;\n        this.sendConfigEvent();                \n    }\n            \n    public close(): void {\n        this._config.visible = false;        \n        this.sendConfigEvent();                \n    }                \n\n    public toggle(): void {\n        this._config.visible = !this._config.visible;\n        this.sendConfigEvent();                \n    }                   \n\n    private sendConfigEvent(): void {\n        this._rootScope.$broadcast(SearchChangedEvent, this._config);\n    }\n}\n\nclass SearchProvider implements ISearchProvider {\n    private _config: SearchConfig = new SearchConfig();\n    private _service: SearchService = null;\n\n    public $get($rootScope: ng.IRootScopeService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SearchService(this._config, $rootScope);\n\n        return this._service;\n    } \n}\n\n\nangular.module('pipSearchBar')\n    .provider('pipSearch', SearchProvider);\n","\n\nangular.module('pipSearchBar', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\n\nimport './SearchService';\nimport './SearchBarDirective';\n\nexport * from './SearchService';","\nimport { ISideNavService, SideNavConfig } from './SideNavService';\n\nimport { SideNavStateNames, SideNavState, SideNavStateConfig } from './SideNavState';\n\n// Prevent junk from going into typescript definitions\n\n\nclass SideNavDirectiveController {\n    private _element: ng.IAugmentedJQuery;\n    private _attrs: ng.IAttributes;\n    private _injector: ng.auto.IInjectorService;\n    private _scope: angular.IScope;\n    private _log: ng.ILogService;\n    private _rootScope: ng.IRootScopeService;\n    private _pipSideNav: ISideNavService;\n\n    private _pipMedia: pip.layouts.IMediaService;\n    private _timeout: ng.ITimeoutService;\n\n    private _isResizing: boolean;\n    private _animationDuration: number;\n    private _mainContainer: string; // todo add  to config\n    private _bigWidth: number;\n\n    private _middleWidth: number;\n    private _smallWidth: number;\n    private _mediaBreakpoints: pip.layouts.MediaBreakpoints;\n    private _navState: SideNavStateConfig;\n\n    private windowResize: Function;\n\n    public sidenavState: SideNavState;\n\n    constructor(\n        $element: ng.IAugmentedJQuery,\n        $attrs: ng.IAttributes,\n        $injector: ng.auto.IInjectorService,\n        $scope: angular.IScope,\n        $log: ng.ILogService,\n        $rootScope: ng.IRootScopeService,\n        $timeout: ng.ITimeoutService,\n        pipSideNav: ISideNavService,\n        navConstant: any\n\n    ) {\n        \"ngInject\";\n\n        this._element = $element;\n        this._attrs = $attrs;\n        this._scope = $scope;\n        this._injector = $injector;\n        this._log = $log;\n        this._rootScope = $rootScope;\n        this._timeout = $timeout;\n        this._pipSideNav = pipSideNav;\n\n        this._pipMedia = this._injector.has('pipMedia') ? <pip.layouts.IMediaService>this._injector.get('pipMedia') : null;\n\n        this._mainContainer = navConstant.SIDENAV_CONTAINER;\n        this._bigWidth = navConstant.SIDENAV_LARGE_WIDTH;\n        this._middleWidth = navConstant.SIDENAV_MIDDLE_WIDTH;\n        this._smallWidth = navConstant.SIDENAV_SMALL_WIDTH;\n        this._isResizing = false;\n        this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION;\n        this._navState = new SideNavStateConfig();\n        this._mediaBreakpoints = this.setBreakpoints();\n\n        // Apply class and call resize\n        this._element.addClass('pip-sticky-sidenav');\n\n        let cleanupMainResized;\n        let cleanupSideNavState;\n\n        if (this._pipSideNav.config && this._pipSideNav.config.type != 'popup') {\n            this._timeout(() => {\n                this.setSideNaveState()\n            }, 100);\n\n            this.windowResize = _.debounce(() => { this.setSideNaveState(); }, 10);\n            cleanupMainResized = this._rootScope.$on('pipMainResized', () => {\n                this.windowResize();\n            });\n            cleanupSideNavState = this._rootScope.$on('pipSideNavState', ($event: ng.IAngularEvent, state: SideNavStateNames) => {\n                this.onSideNavState($event, state)\n            });\n        } else {\n            this._isResizing = false;\n            this.sidenavState = null;\n            this._timeout(() => {\n                this.setState(SideNavStateNames.Toggle);\n            }, 100);\n        }\n\n        let cleanupNavHeaderChanged: Function = this._rootScope.$on('pipNavIconClicked', () => {\n            this.onNavIconClick();\n        });\n        let cleanupSideNavChanged: Function = this._rootScope.$on('pipSideNavChanged', ($event: ng.IAngularEvent, config: SideNavConfig) => { //navState\n            this.onSideNavChanged($event, config)\n        });\n\n        this._scope.$on('$destroy', () => {\n            if (angular.isFunction(cleanupNavHeaderChanged)) {\n                cleanupNavHeaderChanged();\n            }\n            if (angular.isFunction(cleanupSideNavChanged)) {\n                cleanupSideNavChanged();\n            }\n            if (angular.isFunction(cleanupMainResized)) {\n                cleanupMainResized();\n            }\n            if (angular.isFunction(cleanupSideNavState)) {\n                cleanupSideNavState();\n            }\n        });\n\n    }\n\n    private setBreakpoints(): pip.layouts.MediaBreakpoints {\n        if (!this._pipMedia || !angular.isObject(this._pipMedia.breakpoints)) {\n            return { xs: 639, sm: 959, md: 1024, lg: 1919 };\n        } else {\n            return this._pipMedia.breakpoints;\n        }\n    }\n\n    private onSideNavChanged($event: ng.IAngularEvent, config: SideNavConfig): void {\n        if (config && config.visible) {\n            this._element.css('display', 'block');\n        } else {\n            this._element.css('display', 'none');\n        }\n    }\n\n    private onNavIconClick(): void {\n        this._pipSideNav.open();\n    }\n\n    private onSideNavState($event: ng.IAngularEvent, stateName: SideNavStateNames): void {\n        if (angular.isString(stateName) && this._navState[stateName] !== undefined) {\n            this.setState(stateName);\n        }\n    }\n\n    private setSideNaveState(): void {\n        if (this._pipSideNav.config && this._pipSideNav.config.type == 'popup') { return }\n\n        if (this._isResizing) {\n            this._timeout(() => { this.setSideNaveState() }, this._animationDuration); \n\n            return;\n        }\n\n        let mainWidth: number = $(this._mainContainer).innerWidth();\n        let sideNavWidth: number = $('.pip-sticky-sidenav').innerWidth();\n        let currentWidth: number = sideNavWidth ? sideNavWidth + 2 : 0; // add border width\n\n        if (mainWidth + currentWidth < this._mediaBreakpoints.sm) {\n            this.setState(SideNavStateNames.Toggle);\n            return;\n        }\n        if (mainWidth + currentWidth < this._mediaBreakpoints.md) {\n            this.setState(SideNavStateNames.Small);\n            return;\n        }\n        if (mainWidth + currentWidth < this._mediaBreakpoints.lg) {\n            this.setState(SideNavStateNames.Large);\n            return;\n        }\n        this.setState(SideNavStateNames.XLarge);\n    }\n\n    private setState(stateName: SideNavStateNames) {\n        if (this._isResizing) return;\n        if (this.sidenavState && this.sidenavState.id == stateName) return;\n\n        if (stateName != SideNavStateNames.Toggle) {\n            this._element.removeClass('sidenav-mobile');\n        }\n\n        if (stateName != SideNavStateNames.Small) {\n            this._element.removeClass('pip-sticky-nav-small');\n        }\n\n        if (stateName != SideNavStateNames.XLarge) {\n            this._element.removeClass('sidenav-desktop');\n        }\n\n        if (stateName != SideNavStateNames.Large) {\n            this._element.removeClass('sidenav-smalldesktop');\n        }\n\n        this._isResizing = true;\n        if (stateName == SideNavStateNames.Toggle) {\n            this._pipSideNav.close();\n        }\n        this.sidenavState = this._navState[String(stateName)];\n        this._element.addClass(this.sidenavState.addClass);\n\n        this._pipSideNav.state = this.sidenavState;\n\n        // check sideNav State\n        this._timeout(() => {\n            this.setSideNaveState()\n        }, 15);\n\n        // complete animation\n        this._timeout(() => {\n            this._isResizing = false;\n        }, this._animationDuration); //animationDuration\n\n    }\n}\n\n(() => {\n    function sideNavDirective() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: true,\n            templateUrl: 'sidenav/SideNav.html',\n            controller: SideNavDirectiveController,\n            controllerAs: 'vm'\n        };\n    }\n\n    angular\n        .module('pipSideNav')\n        .directive('pipSidenav', sideNavDirective);\n\n})();","export let SideNavChangedEvent = 'pipSideNavChanged';\nexport let SideNavStateChangedEvent = 'pipSideNavStateChanged';\nexport let OpenSideNavEvent = 'pipOpenSideNav';\nexport let CloseSideNavEvent = 'pipCloseSideNav';","\n\n// Prevent junk from going into typescript definitions\n(() => {\n\n    function SideNavPartDirectiveController($scope, $element, $attrs, $rootScope, pipSideNav) {\n        \"ngInject\";\n\n        var partName = '' + $attrs.pipSidenavPart;\n        var partValue = null;\n\n        // Break part apart\n        var pos = partName.indexOf(':');\n        if (pos > 0) {\n            partValue = partName.substr(pos + 1);\n            partName = partName.substr(0, pos);\n        }\n\n        onSideNavChanged(null, pipSideNav.config)\n        $rootScope.$on('pipSideNavChanged', onSideNavChanged);\n\n        function onSideNavChanged(event, config) {\n            var parts = config.parts || {};\n            var currentPartValue = parts[partName];\n            var visible = !!(partValue ? currentPartValue == partValue : currentPartValue);\n\n            if (visible != $scope.visible)\n                $scope.visible = visible;\n        }\n\n    }\n\n    function sidenavPartDirective(ngIfDirective) {\n        \"ngInject\";\n\n        var ngIf = ngIfDirective[0];\n\n        return {\n            transclude: ngIf.transclude,\n            priority: ngIf.priority,\n            terminal: ngIf.terminal,\n            restrict: ngIf.restrict,\n            scope: true,\n            link: function linkFunction($scope: any, $element, $attrs) {\n                $attrs.ngIf = function () { return $scope.visible };\n                ngIf.link.apply(ngIf, arguments);\n            },\n            controller: SideNavPartDirectiveController\n        };\n    }\n\n    angular\n        .module('pipSideNav')\n        .directive('pipSidenavPart', sidenavPartDirective);\n\n})();","import { SideNavChangedEvent, SideNavStateChangedEvent, OpenSideNavEvent, CloseSideNavEvent } from './SideNavEvents';\n\nexport class SideNavConfig {\n    parts: any;\n    classes: string[];\n    state: any;\n    type: string;\n    visible: boolean;\n}\n\nexport interface ISideNavService {\n    readonly config: SideNavConfig;\n    readonly classes: string[];\n    parts: any;\n    state: any;\n\n    open(): void;\n    close(): void;\n    toggle(): void;\n    show(): void;\n    hide(): void;\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}\n\nexport interface ISideNavProvider extends ng.IServiceProvider {\n    config: SideNavConfig;\n    parts: any;\n    type: string;\n    visible: boolean;\n    classes: string[];\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}\n\nclass SideNavService implements ISideNavService {\n    private _config: SideNavConfig;\n    private _state: any;\n    private _rootScope: ng.IRootScopeService;\n    private _sidenav: ng.material.ISidenavService;\n\n\n    public constructor(config: SideNavConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n        this._sidenav = $mdSidenav;\n    }\n\n    public get config(): SideNavConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public get state(): any {\n        return this._state;\n    }\n\n    public set state(value: any) {\n        this._state = value || {};\n        this._rootScope.$broadcast(SideNavStateChangedEvent, value);\n    }\n\n    public open() {\n        this._sidenav('pip-sticky-sidenav').open();\n    }\n\n    public close() {\n        this._sidenav('pip-sticky-sidenav').close();\n    }\n\n    public toggle() {\n        this._sidenav('pip-sticky-sidenav').toggle();\n    }\n\n    public show() {\n        if (!this._config.visible) {\n            this._config.visible = true;\n            this.sendConfigEvent();\n        }\n    }\n\n    public hide() {\n        if (this._config.visible) {\n            this._config.visible = false;\n            this.sendConfigEvent();\n        }\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$emit(SideNavChangedEvent, this._config);\n    }\n}\n\nclass SideNavProvider implements ISideNavProvider {\n    private _config: SideNavConfig = {\n        parts: {},\n        classes: [],\n        type: 'popup',\n        state: null,\n        visible: true\n    };\n\n    private _service: SideNavService;\n\n    public get config(): SideNavConfig {\n        return this._config;\n    }\n\n    public set config(value: SideNavConfig) {\n        this._config = value || new SideNavConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n    }\n\n    public get type(): string {\n        return this._config.type;\n    }\n\n    public set type(value: string) {\n        this._config.type = value;\n    }\n\n    public get visible(): boolean {\n        return this._config.visible;\n    }\n\n    public set visible(value: boolean) {\n        this._config.visible = value;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n\n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new SideNavService(this._config, $rootScope, $mdSidenav);\n\n        return this._service;\n    }\n}\n\nfunction hookSideNavEvents($rootScope: ng.IRootScopeService, pipSideNav: ISideNavService) {\n    $rootScope.$on(OpenSideNavEvent, () => { pipSideNav.open(); });\n    $rootScope.$on(CloseSideNavEvent, () => { pipSideNav.close(); });\n}\n\nangular\n    .module('pipSideNav')\n    .provider('pipSideNav', SideNavProvider)\n    .run(hookSideNavEvents);\n","export class SideNavStateNames {\n        static Toggle: string = 'toggle';\n        static Small: string = 'small';\n        static Large: string = 'large';\n        static XLarge: string = 'xlarge';\n}               \n               \n export class SideNavState {\n    id: SideNavStateNames;\n    // Class which added to sidenav in this state\n    addClass: string;\n    // Side nav always open\n    isLockedOpen: boolean;\n    // Show SideNav header \n    showHeader: boolean;\n    // Show expanded button\n    expandedButton: boolean;\n    // SideNav has expand\n    isExpanded: boolean;\n    // SideNav is Expanded in this state by default\n    expand: boolean;\n    // Tooltype is show\n    showIconTooltype: boolean;\n } \n\nexport class SideNavStateConfig {\n            toggle: SideNavState = { // media(sm, xs)\n                id: SideNavStateNames.Toggle,\n                addClass: 'sidenav-mobile', \n                showHeader: true,\n                isLockedOpen: false,\n                expandedButton: false,\n                isExpanded: true,\n                expand: true,\n                showIconTooltype: false\n            };\n            small: SideNavState = { // media(md)\n                id: SideNavStateNames.Small,\n                addClass: 'pip-sticky-nav-small sidenav-smalldesktop', \n                showHeader: false,\n                isLockedOpen: true,\n                expandedButton: false,\n                isExpanded: false,\n                expand: false,\n                showIconTooltype: true\n            };\n            large: SideNavState = { // media(lg)\n                id: SideNavStateNames.Large,\n                addClass: 'sidenav-smalldesktop', \n                showHeader: false,\n                isLockedOpen: true,\n                expandedButton: true,\n                isExpanded: true,\n                expand: true,\n                showIconTooltype: true\n            };\n            xlarge: SideNavState = { // media(xl)\n                id: SideNavStateNames.XLarge,\n                addClass: 'sidenav-desktop', \n                showHeader: false,\n                isLockedOpen: true,\n                expandedButton: false,\n                isExpanded: true,\n                expand: true,\n                showIconTooltype: false\n            };   \n}","\n\nangular.module('pipSideNav', ['ngMaterial', 'pipNav.Templates']);\n\nimport './SideNavEvents';\nimport './SideNavState';\nimport './SideNavService';\nimport './SideNavPartDirective';\nimport './SideNavDirective';\n\nexport * from './SideNavService';","\n// Prevent junk from going into typescript definitions\n(() => {\n    class Selected {\n        activeIndex: number = 0;\n        activeTab: number = 0;\n    }\n\n    class TabsDirectiveController {\n\n        private _element: ng.IAugmentedJQuery;\n        private _attrs: ng.IAttributes;\n        private _injector: ng.auto.IInjectorService;\n        private _scope: angular.IScope;\n        private _log: ng.ILogService;\n        private _rootScope: ng.IRootScopeService;\n        private _pipTranslate: pip.services.ITranslateService;\n\n        private _pipTheme: pip.themes.IThemeService;\n        private _pipMedia: pip.layouts.IMediaService;\n        private _timeout: ng.ITimeoutService;\n\n        public themeClass: string;\n        public media: any;\n        public pipTabIndex: number;\n        public selected: Selected;\n        public tabs: any[];\n        public currentTheme: string;\n        public breakpoints: string;\n\n        constructor(\n            $element: ng.IAugmentedJQuery,\n            $attrs: ng.IAttributes,\n            $injector: ng.auto.IInjectorService,\n            $scope: angular.IScope,\n            $log: ng.ILogService,\n            $rootScope: ng.IRootScopeService,\n            $mdMedia: angular.material.IMedia,\n            $timeout: ng.ITimeoutService,\n            navConstant: any\n\n        ) {\n            \"ngInject\";\n\n            this._element = $element;\n            this._attrs = $attrs;\n            this._scope = $scope;\n            this._injector = $injector;\n            this._log = $log;\n            this._rootScope = $rootScope;\n            this._timeout = $timeout;\n\n            this.selected = new Selected();\n            this.setTheme();\n            this.setMedia($mdMedia);\n            this.initTabs();\n\n            this.breakpoints = this._scope['breakpoints'] ? this._scope['breakpoints'] : navConstant.TAB_BREAKPOINT;\n\n            if (this.toBoolean($attrs['pipRebind'])) {\n                this._scope.$watch(() => this._scope['activeIndex'],\n                    (newValue: number, oldValue: number) => {\n                        this.selected.activeIndex = newValue || 0;\n                        this.selected.activeTab = this.selected.activeIndex;\n                    }\n                );\n            }\n\n        }\n\n        private setTheme(): void {\n            this._pipTheme = this._injector.has('pipTheme') ? <pip.themes.IThemeService>this._injector.get('pipTheme') : null;\n            if (this._pipTheme) {\n                this.currentTheme = this._pipTheme.theme;\n            } else if (this._rootScope['$theme']) {\n                this.currentTheme = this._rootScope['$theme'];\n            }\n\n            this.themeClass = (this._attrs['class'] || '') + ' md-' + this.currentTheme + '-theme';\n        }\n\n        private setMedia($mdMedia: angular.material.IMedia): void {\n            this._pipMedia = this._injector.has('pipMedia') ? <pip.layouts.IMediaService>this._injector.get('pipMedia') : null;\n            this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\n        }\n\n        private setTranslate(): void {\n            this._pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\n            if (this._pipTranslate) {\n                if (this.tabs.length > 0 && this.tabs[0].title) {\n                    this._pipTranslate.translateObjects(this.tabs, 'title', 'nameLocal');\n                } else {\n                    this._pipTranslate.translateObjects(this.tabs, 'name', 'nameLocal');\n                }\n            }\n        }\n\n        private initTabs(): void {\n            this.tabs = (this._scope['tabs'] && _.isArray(this._scope['tabs'])) ? this._scope['tabs'] : [];\n            this.pipTabIndex = this._attrs['pipTabIndex'] ? parseInt(this._attrs['pipTabIndex']) : 0;\n            this.selected.activeIndex = this._scope['activeIndex'] || 0;\n            this.selected.activeTab = this.selected.activeIndex;\n\n\n\n            if (this.pipTabIndex) {\n                this._timeout(() => {\n                    let a = this._element.find('md-tabs-canvas');\n                    if (a && a[0]) {\n                        angular.element(a[0]).attr('tabindex', this.pipTabIndex);\n                    }\n                    a.on('focusout', function () {\n                        angular.element(a[0]).attr('tabindex', this.pipTabIndex);\n                        this._timeout(() => {\n                            angular.element(a[0]).attr('tabindex', this.pipTabIndex);\n                        }, 50);\n                    });\n                }, 1000);\n            }\n            this.setTranslate();\n        }\n\n\n        public disabled(): boolean {\n            if (this._scope['ngDisabled']) {\n                return this._scope['ngDisabled']();\n            }\n\n            return false;\n        };\n\n        public tabDisabled(index: number): boolean {\n            return (this.disabled() && this.selected.activeIndex != index);\n        };\n\n        public onSelect(index: number): void {\n            if (this.disabled()) return;\n\n            this.selected.activeIndex = index;\n            this.selected.activeTab = this.selected.activeIndex;\n            this._timeout(() => {\n                this._scope['activeIndex'] = index;\n                if (this._scope['select']) {\n                    this._scope['select'](this.tabs[this.selected.activeIndex], this.selected.activeIndex);\n                }\n            }, 0);\n\n        };\n\n        public showShadow(): boolean {\n            if (this._scope['showTabsShadow']) {\n                return this._scope['showTabsShadow']();\n            } else {\n                return false;\n            }\n        };\n\n        public show(): boolean {\n            if (this._scope['showTabs']) {\n                return this._scope['showTabs']();\n            } else {\n                return true;\n            }\n        };\n\n        public toBoolean(value: any): boolean {\n            if (value == null) return false;\n            if (!value) return false;\n            value = value.toString().toLowerCase();\n            return value == '1' || value == 'true';\n        }\n\n    }\n\n    function tabsDirective() {\n        return {\n            restrict: 'E',\n            scope: {\n                ngDisabled: '&',\n                tabs: '=pipTabs',\n                showTabs: '&pipShowTabs',\n                showTabsShadow: '&pipTabsShadow',\n                activeIndex: '=pipActiveIndex',\n                select: '=pipTabsSelect',\n                breakpoints: '=pipBreakpoints'\n            },\n            templateUrl: 'tabs/Tabs.html',\n            controller: TabsDirectiveController,\n            controllerAs: 'vm'\n        };\n    }\n\n\n    angular\n        .module(\"pipTabs\", ['pipNav.Templates'])\n        .directive('pipTabs', tabsDirective);\n\n})();","(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('appbar/AppBar.html',\n    '<md-toolbar class=\"{{ vm.config.classes.join(\\' \\') }}\" ng-if=\"vm.config.visible\" ng-transclude=\"\"></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/PrimaryActions.html',\n    '<div pip-focused=\"\" pip-focused-tabindex=\"2\"><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in vm.config.primaryLocalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"vm.clickAction(action, $mdOpenMenu);\" tabindex=\"-1\" ng-hide=\"vm.isHidden(action)\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge\" ng-show=\"action.count > 0\">{{ vm.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon}}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"vm.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"vm.clickAction(subAction)\">{{ ::subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in vm.config.primaryGlobalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"vm.clickAction(action, $mdOpenMenu);\" ng-hide=\"vm.isHidden(action)\" tabindex=\"-1\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge color-badge-bg\" ng-show=\"action.count > 0\">{{ vm.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon }}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"vm.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"vm.clickAction(subAction)\">{{ subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/SecondaryActions.html',\n    '<md-menu ng-if=\"vm.secondaryActionsVisible()\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button\" tabindex=\"3\" ng-init=\"vm.getMenu($mdOpenMenu)\" ng-click=\"vm.onSecondaryActionClick(); vm.openMenu($mdOpenMenu, $event);\" aria-label=\"open actions\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"action in vm.config.secondaryLocalActions\" ng-if=\"!action.divider\" ng-hide=\"vm.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"vm.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider><md-menu-divider ng-if=\"vm.secondaryDividerVisible()\"></md-menu-divider><md-menu-item ng-repeat-start=\"action in vm.config.secondaryGlobalActions\" ng-if=\"!action.divider\" ng-hide=\"vm.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"vm.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('breadcrumb/Breadcrumb.html',\n    '<div class=\"pip-breadcrumb-block\"><div class=\"text-overflow\" ng-if=\"!vm._media(\\'xs\\')\"><span ng-if=\"vm.config.criteria\" ng-click=\"vm.openSearch()\">{{ vm.config.criteria }} -</span><span class=\"pip-breadcrumb-item {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-if=\"vm.config.items && vm.config.items.length > 0\" ng-repeat-start=\"item in vm.config.items\" ng-click=\"vm.onClick(item)\" ng-init=\"stepWidth = 100/(vm.config.items.length + 1)\" ng-class=\"{\\'cursor-pointer\\': !$last}\" ng-style=\"{\\'max-width\\': stepWidth + \\'%\\'}\"><span ng-if=\"!$last || !vm.actionsVisible(item)\">{{ item.title | translate }}</span><div ng-if=\"$last && vm.actionsVisible(item)\" style=\"display: inline-block; position: relative;\"><md-menu md-offset=\"0 44\"><span class=\"layout-row pip-breadcrumb-item-menu cursor-pointer {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-click=\"vm.onOpenMenu($mdOpenMenu, $event)\" md-ink-ripple=\"\" aria-label=\"open breadcrumb actions\">{{ item.title | translate }}<md-icon class=\"pip-triangle-down\" md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-if=\"!subItem.divider\" ng-repeat-start=\"subItem in item.subActions\"><md-button ng-click=\"vm.onSubActionClick(subItem)\" ng-if=\"!action.divider\" tabindex=\"4\"><md-icon md-menu-align-target=\"\" ng-if=\"subItem.icon\" md-svg-icon=\"{{ subItem.icon }}\"></md-icon><span>{{ subItem.title | translate }}</span></md-button></md-menu-item><md-menu-divider ng-if=\"subItem.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div></span><md-icon ng-repeat-end=\"\" md-svg-icon=\"icons:chevron-right\" ng-hide=\"$last\"></md-icon><span class=\"pip-title breadcrumb-accent\" ng-if=\"vm.config.text\">{{ vm.config.text | translate }}</span></div><div style=\"position: relative;\" ng-if=\"vm._media(\\'xs\\')\"><md-menu md-offset=\"0 44\"><span class=\"pip-mobile-breadcrumb layout-row\" ng-click=\"vm.config.items && vm.config.items.length > 1 ? $mdOpenMenu() : return\"><span class=\"text-overflow\"><span ng-if=\"vm.config.criteria\" ng-click=\"vm.openSearch()\">{{ vm.config.criteria }} -</span> <span class=\"breadcrumb-accent\" ng-if=\"vm.config.text\">{{ vm.config.text | translate }}</span> <span ng-if=\"vm.config.items && vm.config.items.length > 0\" class=\"breadcrumb-accent {{ (vm.config.items && vm.config.items.length > 1) ? \\'cursor-pointer\\' : \\'\\' }}\">{{ vm.config.items[vm.config.items.length - 1].title | translate }}</span></span><md-icon class=\"pip-triangle-down cursor-pointer breadcrumb-accent\" md-svg-icon=\"icons:triangle-down\" ng-if=\"vm.config.items && vm.config.items.length > 1\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in vm.config.items\" ng-if=\"vm.config.items && vm.config.items.length > 0\"><md-button ng-click=\"vm.onClick(item)\" tabindex=\"5\"><md-icon md-menu-align-target=\"\" ng-if=\"item.icon\" md-svg-icon=\"{{ item.icon }}\"></md-icon><span>{{ item.title | translate }}</span></md-button></md-menu-item><md-menu-item ng-if=\"vm.config.text\"><md-button tabindex=\"5\"><span class=\"text-grey\">{{ vm.config.text | translate }}</span></md-button></md-menu-item></md-menu-content></md-menu></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dropdown/Dropdown.html',\n    '<md-toolbar class=\"md-subhead color-primary-bg {{ vm.themeClass}}\" ng-if=\"vm.show()\" ng-class=\"{\\'md-whiteframe-3dp\\': vm.media(\\'xs\\')}\"><div class=\"pip-divider\"></div><md-select ng-model=\"vm.selectedIndex\" tabindex=\"15\" ng-disabled=\"vm.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"DROPDOWN\" md-ink-ripple=\"\" md-on-close=\"vm.onSelect(vm.selectedIndex)\"><md-option ng-repeat=\"action in vm.actions\" value=\"{{ ::$index }}\" ng-selected=\"vm.activeIndex == $index ? true : false\">{{ (action.title || action.name || action) | translate }}</md-option></md-select></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('header/NavHeader.html',\n    '<md-toolbar ng-show=\"showHeader\" class=\"layout-row layout-align-start-center\"><div class=\"flex-fixed pip-sticky-nav-header-user\"><md-button class=\"md-icon-button\" ng-click=\"onUserClick()\" aria-label=\"current user\" tabindex=\"-1\"><img src=\"\" class=\"pip-sticky-nav-header-user-image\" ng-class=\"imageCss\"></md-button></div><div class=\"pip-sticky-nav-header-user-text\"><div class=\"pip-sticky-nav-header-user-pri\" ng-click=\"onUserClick()\" tabindex=\"-1\">{{ title | translate }}</div><div class=\"pip-sticky-nav-header-user-sec\">{{ subtitle | translate }}</div></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('icon/NavIcon.html',\n    '<md-button class=\"md-icon-button pip-nav-icon\" ng-if=\"vm.config.type != \\'none\\'\" ng-class=\"vm.config.class\" ng-click=\"vm.onNavIconClick()\" tabindex=\"{{ vm.config.type==\\'menu\\' || vm.config.type==\\'back\\' ? 4 : -1 }}\" aria-label=\"menu\"><md-icon ng-if=\"vm.config.type==\\'menu\\'\" md-svg-icon=\"icons:menu\"></md-icon><img ng-src=\"{{ vm.config.imageUrl }}\" ng-if=\"vm.config.type==\\'image\\'\" height=\"24\" width=\"24\"><md-icon ng-if=\"vm.config.type==\\'back\\'\" md-svg-icon=\"icons:arrow-left\"></md-icon><md-icon ng-if=\"vm.config.type==\\'icon\\'\" md-svg-icon=\"{{ vm.config.icon }}\"></md-icon></md-button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('language/LanguagePicker.html',\n    '<md-menu md-position-mode=\"target-right target\"><span class=\"pip-language\" ng-click=\"$mdOpenMenu()\" aria-label=\"language selection\">{{ vm.selectedLanguage | translate }}<md-icon md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"3\"><md-menu-item ng-repeat=\"language in vm.languages\"><md-button ng-click=\"vm.onLanguageClick(language)\" tabindex=\"7\">{{ language | translate }}</md-button></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('sidenav/SideNav.html',\n    '<md-sidenav class=\"md-sidenav-left\" md-is-locked-open=\"vm.sidenavState.isLockedOpen\" md-component-id=\"pip-sticky-sidenav\" ng-transclude=\"\"></md-sidenav>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu/NavMenu.html',\n    '<div ng-if=\"vm.sections && vm.sections.length\"><md-list class=\"sidenav-list\" pip-focused=\"\" pip-focused-tabindex=\"10\" pip-with-hidden=\"true\"><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-sticky-nav-expanded-button\" ng-click=\"vm.onExpand()\" ng-disabled=\"!vm.isCollapsed\" tabindex=\"-1\" ng-if=\"vm.expandedButton\"><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-left\" ng-if=\"vm.expanded\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-right\" ng-if=\"!vm.expanded\"></md-icon></md-list-item><md-divider ng-show=\"vm.expandedButton\"></md-divider><div class=\"pip-section\" ng-repeat=\"section in vm.sections\" ng-hide=\"section.access && !section.access(section)\"><md-divider ng-show=\"$index > 0 && !vm.isSectionEmpty(section.links)\"></md-divider><md-subheader ng-show=\"section.title\" style=\"height: 48px;\"><span ng-if=\"vm.expanded\" class=\"pip-sticky-nav-menu-title section-title\">{{ ::section.title | translate }}</span><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"!vm.sideNavState.showIconTooltype && !vm.expanded && section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"vm.sideNavState.showIconTooltype && !vm.expanded && section.icon\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ vm.defaultIcon }}\" ng-if=\"!vm.sideNavState.showIconTooltype && !vm.expanded && !section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ vm.defaultIcon }}\" ng-if=\"vm.sideNavState.showIconTooltype && !vm.expanded && !section.icon\"><md-tooltip md-visible=\"showTooltip\" class=\"md-secondary\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon></md-subheader><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-focusable\" tabindex=\"-1\" ng-repeat=\"link in section.links\" ng-class=\"{\\'active\\': vm.isActive(link)}\" ng-hide=\"link.access && !link.access(link)\"><md-button class=\"layout-row layout-align-start-center pip-button-block\" tabindex=\"-1\" ng-click=\"vm.clickLink($event, link)\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">{{ ::link.tooltipText | translate }}</md-tooltip><div class=\"pip-sticky-nav-menu-icon-block\"><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-if=\"!(vm.sideNavState.showIconTooltype && !link.tooltipText && !vm.expanded)\" ng-hide=\"!link.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-hide=\"!link.icon\" ng-if=\"vm.sideNavState.showIconTooltype && !link.tooltipText && !vm.expanded\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::link.tooltipText || link.title | translate }}</md-tooltip></md-icon></div><div class=\"pip-sticky-nav-menu-title\">{{ ::link.title | translate }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count < 100\">{{ link.count }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count > 99\">!</div></md-button></md-list-item></div></md-list></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('search/SearchBar.html',\n    '<div class=\"md-toolbar-tools pip-search-container\" ng-if=\"vm.enabled\"><div class=\"layout-row pip-search-selected\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"start search\" ng-click=\"vm.onClick()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><input class=\"pip-search-text flex\" type=\"search\" tabindex=\"6\" ng-model=\"vm.search.text\" ng-keydown=\"vm.onKeyDown($event)\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"clear search\" ng-click=\"vm.clear()\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div><div class=\"md-toolbar-tools layout-row layout-align-end-center flex-fixed lp0 rp0\" ng-if=\"!vm.enabled\"><md-button class=\"md-icon-button\" tabindex=\"5\" aria-label=\"start search\" ng-click=\"vm.enable()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tabs/Tabs.html',\n    '<md-toolbar class=\"pip-nav {{ vm.themeClass }}\" ng-class=\"{\\'pip-visible\\': vm.show(), \\'pip-shadow\\': vm.showShadow()}\"><md-tabs ng-if=\"vm.media(vm.breakpoints)\" md-selected=\"vm.selected.activeTab\" ng-class=\"{\\'disabled\\': vm.disabled()}\" md-stretch-tabs=\"true\" md-dynamic-height=\"true\"><md-tab ng-repeat=\"tab in vm.tabs track by $index\" ng-disabled=\"vm.tabDisabled($index)\" md-on-select=\"vm.onSelect($index)\"><md-tab-label>{{:: tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ tab.newCounts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div></md-tab-label></md-tab></md-tabs><div class=\"md-subhead pip-tabs-content color-primary-bg\" ng-if=\"!vm.media(vm.breakpoints)\"><div class=\"pip-divider position-top m0\"></div><md-select ng-model=\"vm.selected.activeIndex\" ng-disabled=\"vm.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"SELECT\" md-ink-ripple=\"\" md-on-close=\"vm.onSelect(vm.selected.activeIndex)\"><md-option ng-repeat=\"tab in vm.tabs track by $index\" class=\"pip-tab-option\" value=\"{{ ::$index }}\">{{ ::tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ tab.newCounts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div></md-option></md-select></div></md-toolbar>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-nav-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
=======
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/actions/ActionsService.ts","src/actions/PrimaryActionsDirective.ts","src/actions/SecondaryActionsDirective.ts","src/actions/index.ts","src/appbar/AppBarDirective.ts","src/appbar/AppBarPartDirective.ts","src/appbar/AppBarService.ts","src/appbar/index.ts","src/breadcrumb/BreadcrumbDirective.ts","src/breadcrumb/BreadcrumbService.ts","src/breadcrumb/index.ts","src/common/NavService.ts","src/dependencies/TranslateFilter.ts","src/dropdown/DropdownDirective.ts","src/header/NavHeaderDirective.ts","src/header/NavHeaderService.ts","src/header/index.ts","src/icon/NavIconDirective.ts","src/icon/NavIconService.ts","src/icon/index.ts","src/index.ts","src/language/LanguagePickerDirective.ts","src/menu/NavMenuDirective.ts","src/menu/NavMenuService.ts","src/menu/index.ts","src/search/SearchBarDirective.ts","src/search/SearchService.ts","src/search/index.ts","src/sidenav/SideNavDirective.ts","src/sidenav/SideNavEvents.ts","src/sidenav/SideNavPartDirective.ts","src/sidenav/SideNavService.ts","src/sidenav/SideNavState.ts","src/sidenav/index.ts","src/tabs/TabsDirective.ts","temp/pip-webui-nav-html.min.js"],"names":[],"mappings":"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":"pip-webui-nav.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\r\n\r\nexport let ActionsChangedEvent = 'pipActionsChanged';\r\nexport let SecondaryActionsOpenEvent = 'pipSecondaryActionsOpen';\r\n\r\nexport class SimpleActionItem {\r\n    // Name to refer to the item\r\n    public name: string;\r\n    // Link visible title\r\n    public title?: string;\r\n    // Show divider instead of title\r\n    public divider?: boolean;\r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Counter badge\r\n    public count?: number;\r\n    // Access function\r\n    public access?: (action: SimpleActionItem) => boolean;\r\n    // Show on specified breakpoints\r\n    public breakpoints?: string[];\r\n    // window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public click?: (action: SimpleActionItem) => void;\r\n}\r\n\r\nexport class ActionItem extends SimpleActionItem {\r\n    public subActions: SimpleActionItem[];\r\n}\r\n\r\nexport class ActionsConfig {\r\n    // Primary global actions visible on the screen\r\n    public primaryGlobalActions: ActionItem[] = [];\r\n    // Primary local actions visible on the screen\r\n    public primaryLocalActions: ActionItem[] = [];\r\n\r\n    // Secondary global actions available in popup\r\n    public secondaryGlobalActions: ActionItem[] = [];\r\n    // Secondary local actions available in popup\r\n    public secondaryLocalActions: ActionItem[]= [];\r\n}\r\n\r\nexport interface IActionsService {\r\n    readonly config: ActionsConfig;\r\n\r\n    primaryGlobalActions: ActionItem[];\r\n    primaryLocalActions: ActionItem[];\r\n    secondaryGlobalActions: ActionItem[];\r\n    secondaryLocalActions: ActionItem[];    \r\n\r\n    show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void;\r\n    hide(): void;\r\n    updateCount(link: string, count: number): void; \r\n    clearCounts(): void;\r\n    openMenuEvent(): void;\r\n}\r\n\r\nexport interface IActionsProvider extends ng.IServiceProvider {\r\n    config: ActionsConfig;\r\n    \r\n    primaryGlobalActions: ActionItem[];\r\n    primaryLocalActions: ActionItem[];\r\n    secondaryGlobalActions: ActionItem[];\r\n    secondaryLocalActions: ActionItem[];    \r\n}\r\n\r\nclass ActionsService implements IActionsService {\r\n    private _config: ActionsConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: ActionsConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): ActionsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get primaryGlobalActions(): ActionItem[] {\r\n        return this._config.primaryGlobalActions;\r\n    }\r\n\r\n    public set primaryGlobalActions(value: ActionItem[]) {\r\n        this._config.primaryGlobalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get secondaryGlobalActions(): ActionItem[] {\r\n        return this._config.secondaryGlobalActions;\r\n    }\r\n\r\n    public set secondaryGlobalActions(value: ActionItem[]) {\r\n        this._config.secondaryGlobalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get primaryLocalActions(): ActionItem[] {\r\n        return this._config.primaryLocalActions;\r\n    }\r\n\r\n    public set primaryLocalActions(value: ActionItem[]) {\r\n        this._config.primaryLocalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get secondaryLocalActions(): ActionItem[] {\r\n        return this._config.secondaryLocalActions;\r\n    }\r\n\r\n    public set secondaryLocalActions(value: ActionItem[]) {\r\n        this._config.secondaryLocalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void {\r\n        this._config.primaryLocalActions = primaryActions || [];\r\n        this._config.secondaryLocalActions = secondaryActions || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.primaryLocalActions = [];\r\n        this._config.secondaryLocalActions = [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public updateCount(action: string, count: number) {\r\n        if (action == null || !_.isNumber(count)) return;\r\n\r\n        _.each(this._config.primaryGlobalActions, (a) => {\r\n            if (a.name == action)\r\n                a.count = count;\r\n        });\r\n        _.each(this._config.primaryLocalActions, (a) => {\r\n            if (a.name == action)\r\n                a.count = count;\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public clearCounts(): void {\r\n        _.each(this._config.primaryGlobalActions, (a) => {\r\n            a.count = null;\r\n        });\r\n        _.each(this._config.primaryLocalActions, (a) => {\r\n            a.count = null;\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    private sendChangeEvent() {\r\n        this._rootScope.$emit(ActionsChangedEvent, this._config);\r\n    }\r\n\r\n    public openMenuEvent(): void {\r\n        this._rootScope.$emit(SecondaryActionsOpenEvent);\r\n    }\r\n}\r\n\r\nclass ActionsProvider implements IActionsProvider {\r\n    private _config: ActionsConfig = new ActionsConfig();\r\n    private _service: ActionsService;\r\n\r\n    public get config(): ActionsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ActionsConfig) {\r\n        this._config = value || new ActionsConfig();\r\n    }\r\n\r\n    public get primaryGlobalActions(): ActionItem[] {\r\n        return this._config.primaryGlobalActions;\r\n    }\r\n\r\n    public set primaryGlobalActions(value: ActionItem[]) {\r\n        this._config.primaryGlobalActions = value || [];\r\n    }\r\n\r\n    public get secondaryGlobalActions(): ActionItem[] {\r\n        return this._config.secondaryGlobalActions;\r\n    }\r\n\r\n    public set secondaryGlobalActions(value: ActionItem[]) {\r\n        this._config.secondaryGlobalActions = value || [];\r\n    }\r\n\r\n    public get primaryLocalActions(): ActionItem[] {\r\n        return this._config.primaryLocalActions;\r\n    }\r\n\r\n    public set primaryLocalActions(value: ActionItem[]) {\r\n        this._config.primaryLocalActions = value || [];\r\n    }\r\n\r\n    public get secondaryLocalActions(): ActionItem[] {\r\n        return this._config.secondaryLocalActions;\r\n    }\r\n\r\n    public set secondaryLocalActions(value: ActionItem[]) {\r\n        this._config.secondaryLocalActions = value || [];\r\n    }\r\n\r\n    public $get($rootScope) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ActionsService(this._config, $rootScope);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipActions')\r\n    .provider('pipActions', ActionsProvider);\r\n\r\n","\r\n\r\nimport { IActionsService, ActionItem, ActionsConfig } from \"./ActionsService\";\r\n// Prevent junk from going into typescript definitions\r\n\r\n// todo: create class ActionsController and extend it \r\n\r\nclass PrimaryActionsController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _pipActions: IActionsService;\r\n    private _pipTranslate: pip.services.ITranslateService\r\n\r\n    public config: ActionsConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $location: ng.ILocationService,\r\n        pipActions: IActionsService\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._pipActions = pipActions;\r\n\r\n\r\n        this._pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n        if (this._pipTranslate && this._pipTranslate.setTranslations) {\r\n            this._pipTranslate.setTranslations('en', {\r\n                DOCUMENTS_ATTACHED: 'document(s) attached',\r\n                ERROR_DOCUMENTS_LOADED: 'Error: <%= error_number %> document(s) are not loaded'\r\n            });\r\n            this._pipTranslate.setTranslations('ru', {\r\n                DOCUMENTS_ATTACHED: 'документов добавлено',\r\n                ERROR_DOCUMENTS_LOADED: 'Ошибка: <%= error_number %> документ(ов) не загружено'\r\n\r\n            });\r\n        }\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-primary-actions');\r\n\r\n        if (this._scope.localActions) {\r\n            pipActions.primaryLocalActions = this._scope.localActions;\r\n        }\r\n\r\n        if (this._scope.globalActions) {\r\n            pipActions.primaryGlobalActions = this._scope.globalActions;\r\n        }\r\n\r\n        this.config = pipActions.config;\r\n\r\n        this._rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\r\n            this.onActionsChanged(event, config);\r\n        });\r\n\r\n    }\r\n\r\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\r\n        this.config = config;\r\n    }\r\n\r\n    public isHidden(action: ActionItem): boolean {\r\n        // Todo: Check breakpoints here\r\n        return action.access && !action.access(action);\r\n    }\r\n\r\n    public actionCount(action: ActionItem): string {\r\n        if (action.count === null || action.count <= 0) {\r\n            return '';\r\n        }\r\n        if (action.count > 99) {\r\n            return '!';\r\n        }\r\n\r\n        return String(action.count);\r\n    }\r\n\r\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        // todo: do not supported into ActionItem\r\n        // if (action.close) {\r\n        //     this._scope.originatorEv = null;\r\n        // }\r\n\r\n        if (action.subActions) {\r\n            $mdOpenMenu(this._scope.originatorEv);\r\n            return;\r\n        }\r\n\r\n        if (_.isFunction(action.click)) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('this._state')) {\r\n                let _state: angular.ui.IStateService = this._injector.has('pipTranslate') ? <angular.ui.IStateService>this._injector.get('$state') : null ;\r\n                if (_state) {\r\n                    _state.go(action.state, action.stateParams);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function primaryActionsDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                localActions: '=pipLocalActions',\r\n                globalActions: '=pipGlobalActions'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'actions/PrimaryActions.html',\r\n            controller: PrimaryActionsController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipActions')\r\n        .directive('pipPrimaryActions', primaryActionsDirective);\r\n\r\n})();","\r\n\r\nimport { IActionsService, ActionItem, ActionsConfig } from \"./ActionsService\";\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\n// todo: create class ActionsController and extend it \r\n\r\nclass SecondaryActionsController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _pipActions: IActionsService;\r\n    private _pipTranslate: pip.services.ITranslateService\r\n    private _menuFn: Function;\r\n    public config: ActionsConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $location: ng.ILocationService,\r\n        pipActions: IActionsService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._pipActions = pipActions;\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-secondary-actions');\r\n\r\n        if (this._scope.localActions) {\r\n            pipActions.secondaryLocalActions = this._scope.localActions;\r\n        }\r\n\r\n        if (this._scope.globalActions) {\r\n            pipActions.secondaryGlobalActions = this._scope.globalActions;\r\n        }\r\n\r\n        this.config = pipActions.config;\r\n\r\n        this._rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\r\n            this.onActionsChanged(event, config);\r\n        });\r\n\r\n        this._rootScope.$on('pipSecondaryActionsOpen', () => {\r\n            this.onActionsMenuOpen();\r\n        });\r\n\r\n    }\r\n\r\n    public getMenu(menuFn: Function): void {\r\n         this._menuFn = menuFn;\r\n    }\r\n\r\n    public onActionsMenuOpen(): void {\r\n        this._menuFn();\r\n    }\r\n\r\n    public openMenu($mdOpenMenu: Function, ev: ng.IAngularEvent): void {\r\n        this._scope.originatorEv = ev;\r\n        $mdOpenMenu(ev);\r\n    }\r\n\r\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\r\n        this.config = config;\r\n    }\r\n\r\n    public isHidden(action: ActionItem): boolean {\r\n        // Todo: Check breakpoints here\r\n        return action.access && !action.access(action);\r\n    }\r\n\r\n    public actionCount(action: ActionItem): string {\r\n        if (action.count === null || action.count <= 0) {\r\n            return '';\r\n        }\r\n        if (action.count > 99) {\r\n            return '!';\r\n        }\r\n\r\n        return String(action.count);\r\n    }\r\n\r\n\r\n    private calcActions(actions: ActionItem[]): number {\r\n        let count: number = 0;\r\n\r\n        _.each(actions, (action: ActionItem) => {\r\n            if (!this.isHidden(action)) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    public secondaryActionsVisible() {\r\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 ||\r\n            this.calcActions(this.config.secondaryLocalActions) > 0;\r\n    }\r\n\r\n    public secondaryDividerVisible() {\r\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 &&\r\n            this.calcActions(this.config.secondaryLocalActions) > 0;\r\n    }\r\n\r\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        // todo: do not supported into ActionItem\r\n        // if (action.close) {\r\n        //     this._scope.originatorEv = null;\r\n        // }\r\n\r\n        if (action.subActions) {\r\n            $mdOpenMenu(this._scope.originatorEv);\r\n            return;\r\n        }\r\n\r\n        if (action.click) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('this._state')) {\r\n                let _state: angular.ui.IStateService = this._injector.has('pipTranslate') ? <angular.ui.IStateService>this._injector.get('$state') : null;\r\n                if (_state) {\r\n                    _state.go(action.state, action.stateParams);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function secondaryActionsDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                localActions: '=pipLocalActions',\r\n                globalActions: '=pipGlobalActions'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'actions/SecondaryActions.html',\r\n            controller: SecondaryActionsController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipActions')\r\n        .directive('pipSecondaryActions', secondaryActionsDirective);\r\n\r\n})();\r\n","\r\n\r\nangular.module('pipActions', ['ngMaterial', 'pipNav.Templates', 'ui.router']);\r\n\r\nimport './ActionsService';\r\nimport './PrimaryActionsDirective';\r\nimport './SecondaryActionsDirective';\r\n\r\nexport * from './ActionsService';","﻿\r\n\r\nimport { IAppBarService, AppBarConfig } from \"./AppBarService\";\r\n// Prevent junk from going into typescript definitions\r\n\r\nclass AppBarDirectiveController {\r\n    public config: AppBarConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipAppBar: IAppBarService\r\n    ) {\r\n        \"ngInject\";\r\n        // Apply class and call resize\r\n        $element.addClass('pip-appbar');\r\n        $element.addClass('color-primary-bg');\r\n\r\n        $scope.config = pipAppBar.config;\r\n\r\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\r\n            this.onAppBarChanged(event, config)\r\n        });\r\n    }\r\n\r\n    public onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\r\n        this.config = config;\r\n    }\r\n    \r\n}\r\n\r\n(() => {\r\n    function appbarDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: true,\r\n            templateUrl: 'appbar/AppBar.html',\r\n            controller: AppBarDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipAppBar')\r\n        .directive('pipAppbar', appbarDirective);\r\n\r\n})();","\r\n\r\n// Prevent junk from going into typescript definitions\r\nimport { AppBarConfig, IAppBarService } from \"./AppBarService\";\r\n\r\nclass AppBarPartDirectiveController {\r\n    private _scope: ng.IScope;\r\n    private _partName: string;\r\n    private _partValue: string;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipAppBar: IAppBarService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._scope = $scope;\r\n        this._partName = String($attrs.pipAppbarPart);\r\n        this._partValue = null;\r\n\r\n        // Break part apart\r\n        let pos: number = this._partName.indexOf(':');\r\n        if (pos > 0) {\r\n            this._partValue = this._partName.substr(pos + 1);\r\n            this._partName = this._partName.substr(0, pos);\r\n        }\r\n\r\n        // onAppBarChanged(null, pipAppBar.config);\r\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\r\n            this.onAppBarChanged(null, config)\r\n        });\r\n\r\n    }\r\n\r\n    private onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\r\n        let parts: any = config.parts || {};\r\n        let currentPartValue = parts[this._partName];\r\n\r\n        // Set visible variable to switch ngIf\r\n        let visible: boolean = !!(this._partValue ? currentPartValue == this._partValue : currentPartValue);\r\n\r\n        if (visible != this._scope['visible'])\r\n            this._scope['visible'] = visible;\r\n    }\r\n\r\n}\r\n\r\n// Example is taken from here: http://stackoverflow.com/questions/20325480/angularjs-whats-the-best-practice-to-add-ngif-to-a-directive-programmatically\r\n(() => {\r\n    function appbarPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        var ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function linkFunction($scope: ng.IScope, $element: ng.IAugmentedJQuery, $attrs: ng.IAttributes) {\r\n                // Visualize based on visible variable in scope\r\n                $attrs.ngIf = function () {\r\n                    return $scope.visible;\r\n                };\r\n                ngIf.link.apply(ngIf, arguments);\r\n            },\r\n            controller: AppBarPartDirectiveController\r\n        };\r\n    }\r\n\r\n    angular.module('pipAppBar')\r\n        .directive('pipAppbarPart', appbarPartDirective);\r\n\r\n})();","\r\n\r\nexport let AppBarChangedEvent = 'pipAppBarChanged';\r\n\r\nexport class AppBarConfig {\r\n    visible: boolean;\r\n    parts: any;\r\n    classes: string[];\r\n} \r\n\r\nexport interface IAppBarService {\r\n    readonly config: AppBarConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n\r\n    show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void;\r\n    hide(): void;\r\n \r\n    addShadow(...breakpoints: string[]): void;\r\n    removeShadow(): void;\r\n \r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n \r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface IAppBarProvider extends ng.IServiceProvider {\r\n    config: AppBarConfig;\r\n    parts: any;\r\n    classes: string[];\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nclass AppBarService implements IAppBarService {\r\n    private _config: AppBarConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: AppBarConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): AppBarConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void {\r\n        this._config.visible = true;\r\n        this._config.parts = parts || this._config.parts || {};\r\n        this._config.classes = classes || this._config.classes || [];\r\n        if (shadowBreakpoints) {\r\n            this.setShadow(shadowBreakpoints); \r\n        }\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.visible = false;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private hideShadow(): void {\r\n        this._config.classes = _.reject(this._config.classes, (c) => c.startsWith('pip-shadow'));\r\n    }\r\n\r\n    private setShadow(breakpoints: string[]): void {\r\n        this.hideShadow();\r\n\r\n        if (breakpoints != null && breakpoints.length > 0) {\r\n            _.each(breakpoints, (bp) => {\r\n                this._config.classes.push('pip-shadow-' + bp);\r\n            });\r\n        } else {\r\n            this._config.classes.push('pip-shadow');\r\n        }\r\n    }\r\n\r\n    public addShadow(...breakpoints: string[]): void {\r\n        this.setShadow(breakpoints);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeShadow(): void {\r\n        this.hideShadow();\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$broadcast(AppBarChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass AppBarProvider implements IAppBarProvider {\r\n    private _config: AppBarConfig = {\r\n        visible: true,\r\n        parts: {},\r\n        classes: []\r\n    };\r\n    private _service: AppBarService;\r\n\r\n    public get config(): AppBarConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: AppBarConfig) {\r\n        this._config = value || new AppBarConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AppBarService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }     \r\n}\r\n\r\nangular\r\n    .module('pipAppBar')\r\n    .provider('pipAppBar', AppBarProvider);\r\n","\r\n\r\nangular\r\n    .module('pipAppBar', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './AppBarService';\r\nimport './AppBarDirective';\r\nimport './AppBarPartDirective';\r\n\r\nexport * from './AppBarService';\r\n","\r\n\r\nimport { SimpleActionItem } from '../actions/ActionsService';\r\nimport { BreadcrumbItem } from './BreadcrumbService';\r\nimport { BreadcrumbConfig } from './BreadcrumbService';\r\nimport { IBreadcrumbService } from './BreadcrumbService';\r\nimport { BreadcrumbChangedEvent } from './BreadcrumbService';\r\nimport { BreadcrumbBackEvent } from './BreadcrumbService';\r\nimport { OpenSearchEvent } from '../search/SearchService'\r\n\r\n// Prevent junk from going into typescript definitions\r\nclass BreadcrumbController {\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private originatorEv: Event;\r\n    private _media: any;\r\n\r\n    public config: BreadcrumbConfig;\r\n\r\n    public constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $state: ng.ui.IStateService,\r\n        $location: ng.ILocationService,\r\n        $injector: ng.auto.IInjectorService,\r\n        pipBreadcrumb: IBreadcrumbService,\r\n        $mdMedia: angular.material.IMedia\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._injector = $injector;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-breadcrumb');\r\n\r\n        this.config = pipBreadcrumb.config;\r\n\r\n        $rootScope.$on(BreadcrumbChangedEvent, (event: ng.IAngularEvent, config: BreadcrumbConfig) => {\r\n            this.onBreadcrumbChanged(event, config);\r\n        });\r\n        $rootScope.$on(BreadcrumbBackEvent, () => { this.onBreadcrumbBack(); });\r\n\r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this._media = pipMedia !== undefined ? pipMedia : $mdMedia;\r\n    }\r\n\r\n    private onBreadcrumbChanged(event: ng.IAngularEvent, config: BreadcrumbConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    private onBreadcrumbBack(): void {\r\n        let items: BreadcrumbItem[] = this.config.items;\r\n        // Go to the last breadcrumb item\r\n        if (_.isArray(items) && items.length > 0) {\r\n            let item: BreadcrumbItem = items[items.length - 1];\r\n            if (_.isFunction(item.click)) {\r\n                item.click(item);\r\n            } else {\r\n                this._window.history.back();\r\n            }\r\n        } else {\r\n            this._window.history.back();\r\n        }\r\n    }\r\n\r\n    public onClick(item: BreadcrumbItem): void {\r\n        if (_.isFunction(item.click)) {\r\n            item.click(item);\r\n        }\r\n    }\r\n\r\n    public openSearch(): void {\r\n        this._rootScope.$broadcast(OpenSearchEvent);\r\n    }\r\n\r\n    public actionsVisible(item: BreadcrumbItem): boolean {\r\n\r\n        return angular.isArray(item.subActions) && item.subActions.length > 1;\r\n    }\r\n\r\n    public onOpenMenu($mdOpenMenu: Function, event: Event): void {\r\n        this.originatorEv = event;\r\n        $mdOpenMenu(this.originatorEv);\r\n    }\r\n\r\n    public onSubActionClick(action: SimpleActionItem): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        if (_.isFunction(action.click)) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('$state')) {\r\n                let _state: angular.ui.IStateService = this._injector.get('$state') as ng.ui.IStateService\r\n                _state.go(action.state, action.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n            this.originatorEv = null;\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n            this.originatorEv = null;\r\n        }\r\n    }\r\n}\r\n\r\n(() => {\r\n    function breadcrumbDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {},\r\n            replace: false,\r\n            templateUrl: 'breadcrumb/Breadcrumb.html',\r\n            controller: BreadcrumbController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n\r\n    angular.module('pipBreadcrumb')\r\n        .directive('pipBreadcrumb', breadcrumbDirective);\r\n\r\n})();","\r\n\r\nimport { SimpleActionItem } from '../actions/ActionsService';\r\nexport let BreadcrumbChangedEvent = \"pipBreadcrumbChanged\";\r\nexport let BreadcrumbBackEvent = \"pipBreadcrumbBack\";\r\n\r\nexport class BreadcrumbItem {\r\n    title: string;\r\n    click?: (item: BreadcrumbItem) => void;   \r\n    subActions?: SimpleActionItem[]; \r\n}\r\n\r\nexport class BreadcrumbConfig {\r\n    text: string;\r\n    items: BreadcrumbItem[];\r\n    criteria: string;\r\n}\r\n\r\nexport interface IBreadcrumbService {\r\n    config: BreadcrumbConfig;\r\n    text: string;\r\n    items: BreadcrumbItem[];\r\n    criteria: string;\r\n\r\n    showText(text: string, criteria?: string): void;\r\n    showItems(items: BreadcrumbItem[], criteria?: string): void;\r\n}\r\n\r\nexport interface IBreadcrumbProvider extends ng.IServiceProvider {\r\n    text: string;\r\n}\r\n\r\nclass BreadcrumbService implements IBreadcrumbService {\r\n    private _config: BreadcrumbConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: BreadcrumbConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config() {\r\n        return this._config;\r\n    }\r\n\r\n    public get text(): string {\r\n        return this._config.text;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._config.text = value;\r\n        this._config.items = null;\r\n\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get items(): BreadcrumbItem[] {\r\n        return this._config.items;\r\n    }\r\n\r\n    public set items(value: BreadcrumbItem[]) {\r\n        this._config.text = null;\r\n        this._config.items = value;\r\n\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get criteria(): string {\r\n        return this._config.criteria;\r\n    }\r\n\r\n    public set criteria(value: string) {\r\n        this._config.criteria = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showText(text: string, criteria?: string): void {\r\n        this._config.text = text;\r\n        this._config.items = null;\r\n        this._config.criteria = criteria;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showItems(items: BreadcrumbItem[], criteria?: string): void {\r\n        this._config.items = items || [];\r\n        this._config.text = null;\r\n        this._config.criteria = criteria;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public sendConfigEvent() {\r\n        this._rootScope.$broadcast(BreadcrumbChangedEvent, this._config);\r\n    }\r\n}\r\n\r\n\r\nclass BreadcrumbProvider implements IBreadcrumbProvider {\r\n    private _config: BreadcrumbConfig = { \r\n        text: null,\r\n        items: null,\r\n        criteria: null\r\n    };\r\n    private _service: BreadcrumbService;\r\n\r\n    public get text(): string {\r\n        return this._config.text;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._config.text = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService): any {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new BreadcrumbService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\n\r\nangular.module('pipBreadcrumb')\r\n    .provider('pipBreadcrumb', BreadcrumbProvider);\r\n","\r\n\r\nangular.module('pipBreadcrumb', ['ngMaterial', 'pipNav.Templates', 'pipNav.Translate']);\r\n\r\nimport './BreadcrumbDirective';\r\nimport './BreadcrumbService';\r\n\r\nexport * from './BreadcrumbService';\r\n\r\n\r\n","\r\n\r\nimport { INavIconService } from '../icon/NavIconService';\r\nimport { INavMenuService } from '../menu/NavMenuService';\r\nimport { INavHeaderService } from '../header/NavHeaderService';\r\nimport { IBreadcrumbService } from '../breadcrumb/BreadcrumbService';\r\nimport { ISearchService } from '../search/SearchService';\r\nimport { IActionsService } from '../actions/ActionsService';\r\nimport { IAppBarService } from '../appbar/AppBarService';\r\nimport { ISideNavService } from '../sidenav/SideNavService';\r\n\r\nexport interface INavService {\r\n    appbar: IAppBarService;\r\n    icon: INavIconService;\r\n    breadcrumb: IBreadcrumbService;\r\n    actions: IActionsService;\r\n    search: ISearchService;\r\n    sidenav: ISideNavService;\r\n    header: INavHeaderService;\r\n    menu: INavMenuService;\r\n\r\n    reset(): void;\r\n}\r\n\r\nclass NavService implements INavService {\r\n\r\n    public constructor($injector: ng.auto.IInjectorService) {\r\n        \"ngInject\";\r\n\r\n        this.appbar = $injector.has('pipAppBar') ? <IAppBarService>$injector.get('pipAppBar') : null;\r\n        this.icon = $injector.has('pipNavIcon') ? <INavIconService>$injector.get('pipNavIcon') : null;\r\n        this.breadcrumb = $injector.has('pipBreadcrumb') ? <IBreadcrumbService>$injector.get('pipBreadcrumb') : null;\r\n        this.actions = $injector.has('pipActions') ? <IActionsService>$injector.get('pipActions') : null;\r\n        this.search = $injector.has('pipSearch') ? <ISearchService>$injector.get('pipSearch') : null;\r\n        this.sidenav = $injector.has('pipSideNav') ? <ISideNavService>$injector.get('pipSideNav') : null;\r\n        this.header = $injector.has('pipNavHeader') ? <INavHeaderService>$injector.get('pipNavHeader') : null;\r\n        this.menu = $injector.has('pipNavMenu') ? <INavMenuService>$injector.get('pipNavMenu') : null;\r\n    }\r\n\r\n    public appbar: IAppBarService;\r\n    public icon: INavIconService;\r\n    public breadcrumb: IBreadcrumbService;\r\n    public actions: IActionsService;\r\n    public search: ISearchService;\r\n    public sidenav: ISideNavService;\r\n    public header: INavHeaderService;\r\n    public menu: INavMenuService;\r\n\r\n    public reset() {\r\n        // Reset appbar\r\n        if (this.appbar) {\r\n            this.appbar.show();\r\n        }\r\n\r\n        // Reset icon\r\n        if (this.icon) {\r\n            this.icon.showMenu();\r\n        }\r\n\r\n        // Reset breadcrumb\r\n        if (this.breadcrumb) {\r\n            this.breadcrumb.showText(null);\r\n        }\r\n\r\n        // Reset actions\r\n        if (this.actions) {\r\n            this.actions.show();\r\n        }\r\n\r\n        // Reset search\r\n        if (this.search) {\r\n            this.search.set(null);\r\n        }\r\n\r\n        if (this.sidenav) {\r\n            this.sidenav.show();\r\n        }\r\n\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNavService', [])\r\n    .service('pipNavService', NavService);","\r\n\r\n// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\nfunction translateFilter($injector: ng.auto.IInjectorService) {\r\n    \"ngInject\";\r\n\r\n    let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n    return function (key: string) {\r\n        return pipTranslate ? pipTranslate.translate(key) || key : key;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNav.Translate', [])\r\n    .filter('translate', translateFilter);\r\n\r\n})();\r\n\r\n","\r\n\r\n// Prevent junk from going into typescript definitions\r\n(() => {\r\n    class DropdownDirectiveController {\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _attrs: ng.IAttributes;\r\n        private _injector: ng.auto.IInjectorService;\r\n        private _scope: angular.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _pipTranslate: pip.services.ITranslateService;\r\n\r\n        private _pipTheme: pip.themes.IThemeService;\r\n        private _pipMedia: pip.layouts.IMediaService;\r\n        private _timeout: ng.ITimeoutService;\r\n\r\n        public themeClass: string;\r\n        public media: any;\r\n        public actions: any; // string or array\r\n        public activeIndex: number;\r\n        public selectedIndex: number;\r\n        public currentTheme: string;\r\n\r\n        constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $attrs: ng.IAttributes,\r\n            $injector: ng.auto.IInjectorService,\r\n            $scope: angular.IScope,\r\n            $log: ng.ILogService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $mdMedia: angular.material.IMedia,\r\n            $timeout: ng.ITimeoutService\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._attrs = $attrs;\r\n            this._scope = $scope;\r\n            this._injector = $injector;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n\r\n            this._pipTheme = $injector.has('pipTheme') ? <pip.themes.IThemeService>$injector.get('pipTheme') : null;\r\n            this._pipMedia = $injector.has('pipMedia') ? <pip.layouts.IMediaService>$injector.get('pipMedia') : null;\r\n\r\n            if (this._pipTheme) {\r\n                this.currentTheme = this._pipTheme.theme;\r\n            } else if (this._rootScope['$theme']) {\r\n                this.currentTheme = this._rootScope['$theme'];\r\n            }\r\n\r\n            this.themeClass = ($attrs.class || '') + ' md-' + this.currentTheme + '-theme';\r\n\r\n            //pipAssert.isArray($scope.actions, 'pipDropdown: pip-actions attribute should take an array, but take ' + typeof $scope.actions);\r\n            this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\r\n            this.actions = ($scope['actions'] && _.isArray($scope['actions'])) ? $scope['actions'] : [];\r\n            this.activeIndex = $scope['activeIndex'] || 0;\r\n        }\r\n\r\n\r\n        public disabled(): boolean {\r\n            if (this._scope['ngDisabled']) {\r\n                return this._scope['ngDisabled']();\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public onSelect(index: number): void {\r\n            this.activeIndex = index;\r\n            this._scope['activeIndex'] = index;\r\n            if (this._scope['select']) {\r\n                this._scope['select'](this.actions[index], this.activeIndex);\r\n            }\r\n\r\n            if (this._scope['pipChange']) {\r\n                this._timeout(() => {\r\n                    this._scope['pipChange']();\r\n                });\r\n            }\r\n        }\r\n\r\n        public show(): boolean {\r\n            let result: boolean;\r\n            if (this._scope['showDropdown']()) {\r\n                return !!this._scope['showDropdown']();\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function dropdownDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                ngDisabled: '&',\r\n                actions: '=pipActions',\r\n                showDropdown: '&pipShow',\r\n                activeIndex: '=pipActiveIndex',\r\n                select: '=pipDropdownSelect',\r\n                pipChange: '&'\r\n            },\r\n            templateUrl: 'dropdown/Dropdown.html',\r\n            controller: DropdownDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipDropdown', ['pipNav.Templates'])\r\n        .directive('pipDropdown', dropdownDirective);\r\n\r\n})();","\r\n\r\n// Prevent junk from going into typescript definitions\r\nimport { INavHeaderService, NavHeaderConfig } from \"./NavHeaderService\";\r\n\r\n(() => {\r\n    class NavHeaderDirectiveController {\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _scope: angular.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _timeout: ng.ITimeoutService;\r\n        private _pipNavHeader: INavHeaderService;\r\n\r\n        public title: string;\r\n        public subtitle: string;\r\n        public imageUrl: string;\r\n        public imageCss: string;\r\n        public image: ng.IAugmentedJQuery;\r\n        public imageBlock: ng.IAugmentedJQuery;\r\n        public loadedDefaultImage: boolean;\r\n        public showHeader: boolean;\r\n\r\n        constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $scope: angular.IScope,\r\n            $log: ng.ILogService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: ng.ITimeoutService,\r\n            pipNavHeader: INavHeaderService,\r\n            navConstant: any\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._scope = $scope;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n            this._pipNavHeader = pipNavHeader;\r\n\r\n            // Apply class and call resize\r\n            this._element.addClass('pip-sticky-nav-header');\r\n\r\n\r\n            this.initImage();\r\n\r\n            let cleanupNavHeaderChanged: Function = this._rootScope.$on('pipNavHeaderChanged', ($event: ng.IAngularEvent, config: NavHeaderConfig) => {\r\n                this.onNavHeaderChanged($event, config)\r\n            });\r\n            let cleanupSideNavStateChanged: Function = this._rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: any) => { //navState\r\n                this.onStateChanged($event, state)\r\n            });\r\n\r\n            $scope.$on('$destroy', () => {\r\n                if (angular.isFunction(cleanupNavHeaderChanged)) {\r\n                    cleanupNavHeaderChanged();\r\n                }\r\n                if (angular.isFunction(cleanupSideNavStateChanged)) {\r\n                    cleanupSideNavStateChanged();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        private initImage() {\r\n            this.imageBlock = this._element.find('.pip-sticky-nav-header-user')\r\n\r\n            this._timeout(() => {\r\n                this.image = this._element.find('.pip-sticky-nav-header-user-image');\r\n\r\n                if (this.image[0]) {\r\n                    this.image[0].onload = (() => this.onImageLoad());\r\n\r\n                    // ($event: HTMLElement, erroev: Event): any =>  {\r\n                    //     this.onImageLoad($event);\r\n                    //     return null;\r\n                    // }\r\n                    this.image[0].onerror = (() => this.onImageError());\r\n                    // ($event: ng.IAngularEvent) => {\r\n                    //     this.onImageError($event);\r\n                    // }\r\n                } else {\r\n                    this.image.onload = (() => this.onImageLoad());\r\n                    this.image.onerror = (() => this.onImageError());\r\n                }\r\n\r\n                this.onNavHeaderChanged(null, this._pipNavHeader.config);\r\n            }, 20);\r\n        }\r\n\r\n        private initHeader() {\r\n            if (!this._pipNavHeader.config) return;\r\n\r\n            this.title = this._pipNavHeader.config.title;\r\n            this.subtitle = this._pipNavHeader.config.subtitle;\r\n            this.imageUrl = this._pipNavHeader.config.imageUrl;\r\n            this.imageCss = this._pipNavHeader.config.imageCss;\r\n        }\r\n\r\n        // // When image is loaded resize/reposition it\r\n        // private onImageLoad($event) {\r\n        //     let image: ng.IAugmentedJQuery = $($event.target);\r\n        //     this.setImageMarginCSS(image);\r\n        // };\r\n\r\n        // private onImageError($event) {\r\n        //     if (this.loadedDefaultImage) return;\r\n        //     this._scope.$apply(() => {\r\n        //         this.setImage(this._pipNavHeader.config, true);\r\n        //     });\r\n        // };\r\n        // When image is loaded resize/reposition it\r\n        private onImageLoad() {\r\n            this.setImageMarginCSS(this.image);\r\n        };\r\n\r\n        private onImageError() {\r\n            if (this.loadedDefaultImage) return;\r\n            this._scope.$apply(() => {\r\n                this.setImage(this._pipNavHeader.config, true);\r\n            });\r\n        };\r\n\r\n        private onStateChanged(event: ng.IAngularEvent, state: any) { // navState\r\n            if (state === undefined) return;\r\n\r\n            if (state.id == 'toggle') {\r\n                this._timeout(() => {\r\n                    this.showHeader = state && state.id == 'toggle';\r\n                }, 400);\r\n            } else {\r\n                this.showHeader = false;\r\n            }\r\n        }\r\n\r\n        private setImageMarginCSS(image: ng.IAugmentedJQuery) { //image[0]\r\n            var cssParams = {},\r\n                containerWidth = this.imageBlock.width ? this.imageBlock.width() : this.imageBlock.clientWidth,\r\n                containerHeight = this.imageBlock.height ? this.imageBlock.height() : this.imageBlock.clientHeight,\r\n                imageWidth = image[0]['naturalWidth'] || image.width,\r\n                imageHeight = image[0]['naturalHeight'] || image.height,\r\n                margin = 0;\r\n\r\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n                cssParams['margin-left'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + containerHeight + 'px';\r\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px';\r\n                cssParams['margin-top'] = '';\r\n            } else {\r\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n                cssParams['margin-top'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px';\r\n                cssParams['width'] = '' + containerWidth + 'px';\r\n                cssParams['margin-left'] = '';\r\n            }\r\n\r\n            image.css(cssParams);\r\n        };\r\n\r\n        private setImage(config, loadError: boolean) {\r\n            if (!config) return;\r\n\r\n            var url: string;\r\n\r\n            if (!loadError && !!config.imageUrl && !this.loadedDefaultImage) {\r\n                url = config.imageUrl;\r\n            } else {\r\n                this.loadedDefaultImage = true;\r\n                url = config.defaultImageUrl;\r\n            }\r\n\r\n            if (url && this.image) {\r\n                this.image.attr('src', url);\r\n            } else {\r\n                this.imageBlock.css('display', 'none');\r\n            }\r\n        }\r\n\r\n        private onNavHeaderChanged($event: ng.IAngularEvent, config: NavHeaderConfig) {\r\n            if (!config) return;\r\n            this.setImage(config, false)\r\n\r\n            this.title = config.title;\r\n            this.subtitle = config.subtitle;\r\n            this.imageUrl = config.imageUrl;\r\n            this.imageCss = config.imageCss;\r\n        }\r\n\r\n        public onUserClick() {\r\n            this._rootScope.$broadcast('pipNavUserClicked'); // todo\r\n        }\r\n\r\n    }\r\n\r\n    function navHeaderDirective() {\r\n        return {\r\n            restrict: 'EA',\r\n            replace: false,\r\n            templateUrl: 'header/NavHeader.html',\r\n            controller: NavHeaderDirectiveController,\r\n            controllerAs: '$ctrl'\r\n\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipNavHeader')\r\n        .directive('pipNavHeader', navHeaderDirective);\r\n\r\n})();","\r\n\r\nexport let NavHeaderChangedEvent = 'pipNavHeaderChanged';\r\n\r\nexport class NavHeaderConfig {\r\n    // Image url\r\n    public imageUrl: string;\r\n    // Image url\r\n    public defaultImageUrl: string;\r\n    // Title\r\n    public title: string;\r\n    // Subtitle\r\n    public subtitle: string;\r\n    // image styles\r\n    public imageCss: string;\r\n    // Handle header click event\r\n    click: () => void;\r\n    // Event name\r\n    event: string\r\n};\r\n\r\nexport interface INavHeaderService {\r\n    readonly config: NavHeaderConfig;\r\n    imageUrl: string;\r\n    title: string;\r\n    subtitle: string;\r\n    event: string;\r\n\r\n    show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\r\n    hide(): void;\r\n    click: () => void;\r\n}\r\n\r\nexport interface INavHeaderProvider extends ng.IServiceProvider {\r\n    config: NavHeaderConfig;\r\n    defaultImageUrl: string;\r\n    imageUrl: string;\r\n    title: string;\r\n    subtitle: string;\r\n    event: string;\r\n\r\n    set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\r\n    clear(): void;\r\n    click: () => void;\r\n}\r\n\r\nclass NavHeaderService {\r\n    private _config: NavHeaderConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: NavHeaderConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): NavHeaderConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get title(): string {\r\n        return this._config.title;\r\n    }\r\n\r\n    public set title(value: string) {\r\n        this._config.title = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get subtitle(): string {\r\n        return this._config.subtitle;\r\n    }\r\n\r\n    public set subtitle(value: string) {\r\n        this._config.subtitle = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get imageUrl(): string {\r\n        return this._config.imageUrl;\r\n    }\r\n\r\n    public set imageUrl(value: string) {\r\n        this._config.imageUrl = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get click(): () => void {\r\n        return this._config.click;\r\n    }\r\n\r\n    public set click(value: () => void) {\r\n        this._config.click = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get event(): string {\r\n        return this._config.event;\r\n    }\r\n\r\n    public set event(value: string) {\r\n        this._config.event = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.title = title;\r\n        this._config.subtitle = subtitle;\r\n        this._config.imageUrl = imageUrl;\r\n\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n        }\r\n        if (_.isString(callbackOrEvent)) {\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.event = null;\r\n        }\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.title = null;\r\n        this._config.subtitle = null;\r\n        this._config.imageUrl = null;\r\n        this._config.click = null;\r\n        this._config.event = null;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(NavHeaderChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavHeaderProvider implements INavHeaderProvider {\r\n    private _config: NavHeaderConfig = new NavHeaderConfig();\r\n    private _service: NavHeaderService;\r\n\r\n    public get config(): NavHeaderConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: NavHeaderConfig) {\r\n        this._config = value || new NavHeaderConfig();\r\n    }\r\n\r\n    public get defaultImageUrl(): string {\r\n        return this._config.defaultImageUrl;\r\n    }\r\n\r\n    public set defaultImageUrl(value: string) {\r\n        this._config.defaultImageUrl = value;\r\n    }\r\n\r\n    public get title(): string {\r\n        return this._config.title;\r\n    }\r\n\r\n    public set title(value: string) {\r\n        this._config.title = value;\r\n    }\r\n\r\n    public get subtitle(): string {\r\n        return this._config.subtitle;\r\n    }\r\n\r\n    public set subtitle(value: string) {\r\n        this._config.subtitle = value;\r\n    }\r\n\r\n    public get imageUrl(): string {\r\n        return this._config.imageUrl;\r\n    }\r\n\r\n    public set imageUrl(value: string) {\r\n        this._config.imageUrl = value;\r\n    }\r\n\r\n    public get click(): () => void {\r\n        return this._config.click;\r\n    }\r\n\r\n    public set click(value: () => void) {\r\n        this._config.click = value;\r\n    }\r\n\r\n    public get event(): string {\r\n        return this._config.event;\r\n    }\r\n\r\n    public set event(value: string) {\r\n        this._config.event = value;\r\n    }\r\n\r\n    public set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.title = title;\r\n        this._config.subtitle = subtitle;\r\n        this._config.imageUrl = imageUrl;\r\n\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n        }\r\n        if (_.isString(callbackOrEvent)) {\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.event = null;\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.title = null;\r\n        this._config.subtitle = null;\r\n        this._config.imageUrl = null;\r\n        this._config.click = null;\r\n        this._config.event = null;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavHeaderService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n\r\n}\r\n\r\n\r\nangular\r\n    .module('pipNavHeader')\r\n    .provider('pipNavHeader', NavHeaderProvider);\r\n","\r\n\r\nangular.module('pipNavHeader', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './NavHeaderService';\r\nimport './NavHeaderDirective';\r\n\r\nexport * from './NavHeaderService';","\r\nimport { OpenSideNavEvent } from '../sidenav/SideNavEvents';\r\nimport {  INavIconService, NavIconConfig } from \"./NavIconService\";\r\n// Prevent junk from going into typescript definitions\r\nexport let NavIconClickedEvent = 'pipNavIconClicked';\r\n\r\nclass NavIconDirectiveController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n\r\n    public config: NavIconConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        pipNavIcon: INavIconService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._scope = $scope;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-nav-icon');\r\n\r\n        this.config = pipNavIcon.config;\r\n\r\n        $rootScope.$on('pipNavIconChanged', (event: ng.IAngularEvent, config: NavIconConfig) => {\r\n            this.onNavIconChanged(event, config)\r\n        });\r\n\r\n    }\r\n\r\n    public onNavIconChanged(event: ng.IAngularEvent, config: NavIconConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    public onNavIconClick(): void {\r\n        if (_.isFunction(this.config.click)) {\r\n            // Execute nav icon callback\r\n            this.config.click();\r\n        } else if (this.config.event) {\r\n            this._rootScope.$broadcast(this.config.event);\r\n        } else if (this.config.type == 'menu') {\r\n            this._rootScope.$broadcast(OpenSideNavEvent);\r\n        } else if (this.config.type == 'back') {\r\n            this._window.history.back();\r\n        } else {\r\n            this._rootScope.$broadcast(NavIconClickedEvent);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function navIconDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                type: '=pipType',\r\n                imageUrl: '=pipImageUrl',\r\n                icon: '=pipIcon'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'icon/NavIcon.html',\r\n            controller: NavIconDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipNavIcon')\r\n        .directive('pipNavIcon', navIconDirective);\r\n\r\n})();","\r\n\r\nexport let NavIconChangedEvent = 'pipNavIconChanged';\r\n\r\nexport class NavIconConfig {\r\n    // Type of nav icon: 'back', 'menu', 'image' or 'none'\r\n    public type: string;\r\n    // Image url\r\n    public imageUrl: string;\r\n    // Icon name\r\n    public icon: string;\r\n    // Handle nav icon click event\r\n    click: () => void;\r\n    // Event name\r\n    event: string\r\n};\r\n\r\nexport interface INavIconService {\r\n    readonly config: NavIconConfig;\r\n\r\n    showMenu(callbackOrEvent?: any): void;\r\n    showIcon(icon: string, callbackOrEvent?: any): void;\r\n    showBack(callbackOrEvent?: any): void;\r\n    showImage(imageUrl: string, callbackOrEvent?: any): void;\r\n    hide(): void;\r\n}\r\n\r\nexport interface INavIconProvider extends ng.IServiceProvider {\r\n    config: NavIconConfig;\r\n\r\n    setMenu(callbackOrEvent?: any): void;\r\n    setIcon(icon: string, callbackOrEvent?: any): void;\r\n    setBack(callbackOrEvent?: any): void;\r\n    setImage(imageUrl: string, callbackOrEvent?: any): void;\r\n    clear(): void;\r\n}\r\n\r\nclass NavIconService implements INavIconService {\r\n    private _config: NavIconConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: NavIconConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): NavIconConfig {\r\n        return this._config;\r\n    }\r\n\r\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n            this._config.event = null;\r\n        } else if (_.isString(callbackOrEvent)) {\r\n            this._config.click = null;\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n            this._config.event = null;\r\n        }\r\n    }\r\n\r\n    public showMenu(callbackOrEvent?: any): void {\r\n        this._config.type = 'menu';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showIcon(icon: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'icon';\r\n        this._config.icon = icon;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showBack(callbackOrEvent?: any): void {\r\n        this._config.type = 'back';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showImage(imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'image';\r\n        this._config.imageUrl = imageUrl;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.type = 'none';\r\n        this.setCallbackOrEvent(null);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$broadcast(NavIconChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavIconProvider implements INavIconProvider {\r\n    private _config: NavIconConfig = new NavIconConfig();\r\n    private _service: NavIconService;\r\n\r\n    public get config(): NavIconConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: NavIconConfig) {\r\n        this._config = value || new NavIconConfig();\r\n    }\r\n\r\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\r\n        if (_.isFunction(callbackOrEvent))\r\n            this._config.click = callbackOrEvent;\r\n        else this._config.click = null;\r\n\r\n        if (_.isString(callbackOrEvent))\r\n            this._config.event = callbackOrEvent;\r\n        else this._config.event = null;\r\n    }\r\n\r\n    public setMenu(callbackOrEvent?: any): void {\r\n        this._config.type = 'menu';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setIcon(icon: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'icon';\r\n        this._config.icon = icon;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setBack(callbackOrEvent?: any): void {\r\n        this._config.type = 'back';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setImage(imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'image';\r\n        this._config.imageUrl = imageUrl;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.type = 'none';\r\n        this.setCallbackOrEvent(null);\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavIconService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n     \r\n}\r\n\r\n\r\nangular\r\n    .module('pipNavIcon')\r\n    .provider('pipNavIcon', NavIconProvider);\r\n","\r\n\r\nangular.module('pipNavIcon', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './NavIconService';\r\nimport './NavIconDirective';\r\n\r\nexport * from './NavIconService';\r\n","﻿\r\n\r\nimport './dependencies/TranslateFilter';\r\nimport './language/LanguagePickerDirective';\r\nimport './dropdown/DropdownDirective';\r\nimport './tabs/TabsDirective';\r\nimport './actions';\r\nimport './appbar';\r\nimport './search';\r\nimport './breadcrumb';\r\nimport './sidenav';\r\nimport './header';\r\nimport './menu';\r\nimport './icon';\r\nimport './common/NavService';\r\n\r\nangular\r\n    .module('pipNav', [\r\n        'pipNavService',\r\n        'pipDropdown',\r\n        'pipTabs',\r\n        'pipAppBar',\r\n        'pipSearchBar',\r\n        'pipNavIcon',\r\n        'pipBreadcrumb',\r\n        'pipLanguagePicker',\r\n        'pipActions', \r\n        'pipSideNav',\r\n        'pipNavMenu',\r\n        'pipNavHeader'\r\n    ])\r\n    .constant('navConstant', {\r\n        'TAB_BREAKPOINT': 'gt-sm',\r\n        'SIDENAV_CONTAINER': '.pip-main',\r\n        'SIDENAV_LARGE_WIDTH': 320,\r\n        'SIDENAV_MIDDLE_WIDTH': 240,\r\n        'SIDENAV_SMALL_WIDTH': 72,\r\n        'SIDENAV_ANIMATION_DURATION': 600\r\n\r\n    })\r\n\r\nexport * from './actions';\r\nexport * from './appbar';\r\nexport * from './breadcrumb';\r\nexport * from './search';\r\nexport * from './sidenav';\r\nexport * from './icon';\r\nexport * from './menu';\r\nexport * from './header';\r\nexport * from './common/NavService';\r\n","\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\n\r\n(() => {\r\n    class LanguagePickerDirectiveController {\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _attrs: ng.IAttributes;\r\n        private _injector: ng.auto.IInjectorService;\r\n        private _scope: ng.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _translate: pip.services.ITranslateService;\r\n        private _timeout: ng.ITimeoutService;\r\n\r\n        public languages: string[] = ['en', 'ru'];\r\n        public selectedLanguage: string;\r\n\r\n        public constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $attrs: ng.IAttributes,\r\n            $injector: ng.auto.IInjectorService,\r\n            $scope: ng.IScope,\r\n            $log: ng.ILogService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: ng.ITimeoutService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._attrs = $attrs;\r\n            this._scope = $scope;\r\n            this._injector = $injector;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n            this._translate = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n            // Apply class and call resize\r\n            $element.addClass('pip-language-picker');\r\n\r\n            this.setLanguages($scope['languages']);\r\n\r\n            this.selectedLanguage = $scope['value'] || this.languages[0];\r\n        }\r\n\r\n        public get language() {\r\n            return this._translate ? this._translate.language : null;\r\n        }\r\n\r\n        public setLanguages(languages: string[]): void {\r\n            this.languages = languages.length > 0 ? languages : ['en', 'ru'];\r\n        }\r\n\r\n        public onLanguageClick(language: string) {\r\n            if (this._translate != null) {\r\n                this.selectedLanguage = language;\r\n                // this._timeout(() => {\r\n                this._translate.language = this.selectedLanguage;\r\n                // }, 0);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function languagePickerDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                languages: '=languages',\r\n                value: '=value'\r\n            },\r\n            replace: false,\r\n            templateUrl: function (element, attr) {\r\n                return 'language/LanguagePicker.html';\r\n            },\r\n            controller: LanguagePickerDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipLanguagePicker', [\r\n            'ngMaterial', 'pipNav.Translate', 'pipNav.Templates'\r\n        ])\r\n        .directive('pipLanguagePicker', languagePickerDirective);\r\n\r\n})();","// Prevent junk from going into typescript definitions\r\nimport { ISideNavService, SideNavConfig } from '../sidenav/SideNavService';\r\nimport { NavMenuConfig, NavMenuSection, INavMenuService, NavMenuLink } from './NavMenuService';\r\nimport { SideNavStateNames, SideNavState } from '../sidenav/SideNavState';\r\n\r\n(() => {\r\n    class NavMenuDirectiveController {\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _attrs: ng.IAttributes;\r\n        private _injector: ng.auto.IInjectorService;\r\n        private _scope: angular.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _pipSideNav: ISideNavService;\r\n        private _pipNavMenu: INavMenuService;\r\n        private _state: angular.ui.IStateService;\r\n        private _window: ng.IWindowService;\r\n        private _location: ng.ILocationService;\r\n        private _pipMedia: pip.layouts.IMediaService;\r\n        private _timeout: ng.ITimeoutService;\r\n        private _animationDuration;\r\n        private _pipSideNavElement: ng.IAugmentedJQuery;\r\n\r\n        public sections: NavMenuSection[];\r\n        public defaultIcon: string;\r\n        public isCollapsed: boolean;\r\n        public expanded: boolean;\r\n        public expandedButton: boolean;\r\n        public sideNavState: SideNavState;\r\n\r\n        constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $attrs: ng.IAttributes,\r\n            $injector: ng.auto.IInjectorService,\r\n            $scope: angular.IScope,\r\n            $log: ng.ILogService,\r\n            $window: ng.IWindowService,\r\n            $location: ng.ILocationService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: ng.ITimeoutService,\r\n            pipSideNav: ISideNavService,\r\n            pipNavMenu: INavMenuService,\r\n            navConstant: any\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._attrs = $attrs;\r\n            this._scope = $scope;\r\n            this._injector = $injector;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n            this._window = $window;\r\n            this._location = $location;\r\n            this._pipSideNav = pipSideNav;\r\n            this._pipNavMenu = pipNavMenu;\r\n\r\n            this._state = this._injector.has('$state') ? <angular.ui.IStateService>this._injector.get('$state') : null;\r\n\r\n            this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION,\r\n                this._pipSideNavElement = $element.parent().parent();\r\n            // Apply class and call resize\r\n            this._element.addClass('pip-sticky-nav-menu');\r\n\r\n            this.sections = this._scope['sections'] || this._pipNavMenu.sections;\r\n\r\n            this.setCollapsible();\r\n\r\n            this.defaultIcon = this._pipNavMenu.defaultIcon;\r\n\r\n            this.onStateChanged(null, this._pipSideNav.state);\r\n\r\n            let cleanupNavMenuChanged: Function = this._rootScope.$on('pipNavMenuChanged', ($event: ng.IAngularEvent, config: NavMenuConfig) => { //navState\r\n                this.onConfigChanged($event, config)\r\n            });\r\n            let cleanupSideNavStateChanged: Function = this._rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: SideNavState) => { //navState\r\n                this.onStateChanged($event, state)\r\n            });\r\n\r\n            this._scope.$on('$destroy', () => {\r\n                if (angular.isFunction(cleanupNavMenuChanged)) {\r\n                    cleanupNavMenuChanged();\r\n                }\r\n                if (angular.isFunction(cleanupSideNavStateChanged)) {\r\n                    cleanupSideNavStateChanged();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        private setCollapsible(): void {\r\n            var collapsed: boolean;\r\n            if (angular.isFunction(this._scope['collapsed'])) {\r\n                collapsed = this._scope['collapsed']();\r\n            } else {\r\n                collapsed = this._scope['collapsed'] !== false && this._scope['collapsed'] !== 'false';\r\n            }\r\n\r\n            this.isCollapsed = collapsed;\r\n        }\r\n\r\n        public onExpand(): void {\r\n            if (!this.isCollapsed) { return }\r\n\r\n            this.expanded = !this.expanded;\r\n\r\n            if (this.expanded) {\r\n                this._pipSideNavElement.removeClass('pip-sticky-nav-small');\r\n            } else {\r\n                this._pipSideNavElement.addClass('pip-sticky-nav-small');\r\n            }\r\n            this._rootScope.$emit('pipNavExpanded', this.expanded);\r\n        }\r\n\r\n        public isHidden(item: NavMenuLink): boolean {\r\n            return item && item.access && !item.access(item);\r\n        }\r\n\r\n        public isSectionEmpty(linkCollection: NavMenuLink[]): boolean {\r\n            var result = true;\r\n            _.each(linkCollection, (link: NavMenuLink) => {\r\n                if (!this.isHidden(link)) {\r\n                    result = false;\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        private onConfigChanged($event: ng.IAngularEvent, config: NavMenuConfig): void {\r\n            if (!config) return;\r\n            this.sections = config.sections;\r\n        }\r\n\r\n        private onStateChanged(event: ng.IAngularEvent, state: SideNavState): void {\r\n            // SS> You shall not set it into the menu state. Instead it shall be controlled by the state of Sidenav\r\n            if (!state) return;\r\n\r\n            this.isCollapsed = state.expand;\r\n            this.expanded = state.isExpanded;\r\n            this.expandedButton = state.expandedButton;\r\n\r\n            this.sideNavState = state;\r\n        }\r\n\r\n        public isActive(link: NavMenuLink): boolean {\r\n            if (link.parentState) {\r\n\r\n                if (this._state != null && this._state.includes(link.parentState)) {\r\n                    return true;\r\n                }\r\n            } else if (link.state) {\r\n                if (this._state != null && this._state.includes(link.state)) {\r\n                    return true;\r\n                }\r\n            } else if (link.href) {\r\n                if (link.href.split('?')[0] === this._window.location.href.split('?')[0]) {\r\n                    return true;\r\n                }\r\n            } else if (link.url) {\r\n                if (link.url.split(/[\\s/?]+/)[1] === this._location.url().split(/[\\s/?]+/)[1]) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        public clickLink(event: ng.IAngularEvent, link: NavMenuLink): void {\r\n            event.stopPropagation();\r\n\r\n            if (!link) {\r\n                this._pipSideNav.close();\r\n\r\n                return;\r\n            }\r\n\r\n            if (link.href) {\r\n                if (link.href.split('?')[0] === this._window.location.href.split('?')[0]) {\r\n                    this._pipSideNav.close();\r\n\r\n                    return;\r\n                }\r\n\r\n                this._pipSideNav.close();\r\n                this._timeout(() => {\r\n                    this._window.location.href = link.href;\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.url) {\r\n                if (link.url.split(/[\\s/?]+/)[1] === this._location.url().split(/[\\s/?]+/)[1]) {\r\n                    this._pipSideNav.close();\r\n                    return;\r\n                }\r\n\r\n                this._pipSideNav.close();\r\n                this._timeout(() => {\r\n                    this._location.url(link.url);\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.state) {\r\n                if (this._state != null && this._state.current.name === link.state) {\r\n                    this._pipSideNav.close();\r\n\r\n                    return;\r\n                }\r\n\r\n                this._pipSideNav.close();\r\n                this._timeout(() => {\r\n                    this._state.go(link.state, link.stateParams);\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.event) {\r\n                this._rootScope.$broadcast(link.event, link);\r\n            }\r\n\r\n\r\n            this._pipSideNav.close();\r\n        }\r\n    }\r\n\r\n\r\n    function navMenuDirective() {\r\n        return {\r\n            restrict: 'EA',\r\n            scope: {\r\n                sections: '=?pipSections',\r\n                collapsed: '=?pipCollapsed'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'menu/NavMenu.html',\r\n            controller: NavMenuDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipNavMenu')\r\n        .directive('pipNavMenu', navMenuDirective);\r\n\r\n})();","\r\n\r\nexport let NavMenuChangedEvent = 'pipNavMenuChanged';\r\n\r\nexport class NavMenuLink {\r\n    // Name to refer to the item\r\n    public name: string;\r\n    // Link visible title\r\n    public title: string;\r\n    // Tooltip text\r\n    public tooltipText?: string;    \r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Counter badge\r\n    public count?: number;\r\n    // class for badge style\r\n    public badgeStyle?: string;\r\n    // Access function\r\n    public access?: (link: NavMenuLink) => boolean;\r\n    // window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // parent state or parent state for selection item \r\n    public parentState?: string;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public click?: (link: NavMenuLink) => void;\r\n}\r\n\r\nexport class NavMenuSection {\r\n    // Name to refer to the section\r\n    public name: string;\r\n    // Section visible title\r\n    public title?: string;\r\n    // Tooltip text\r\n    public tooltipText?: string;      \r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Links shown in the section\r\n    public links: NavMenuLink[];\r\n    // Access function\r\n    public access?: (section: NavMenuSection) => boolean;\r\n}\r\n\r\nexport class NavMenuConfig {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n}\r\n\r\nexport interface INavMenuService {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n    updateCount(link: string, count: number): void; \r\n    updateBadgeStyle(link: string, style: string): void;\r\n    clearCounts(): void;\r\n}\r\n\r\nexport interface INavMenuProvider extends ng.IServiceProvider {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n}\r\n\r\nclass NavMenuService implements INavMenuService {\r\n    private _config: NavMenuConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: NavMenuConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get sections(): NavMenuSection[] {\r\n        return this._config.sections;\r\n    }\r\n\r\n    public set sections(value: NavMenuSection[]) {\r\n        this._config.sections = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get defaultIcon(): string {\r\n        return this._config.defaultIcon;\r\n    }\r\n\r\n    public updateBadgeStyle(link: string, style: string): void {\r\n        if (link == null || !_.isString(style)) return;\r\n\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                if (l.name == link)\r\n                    l.badgeStyle = style;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public set defaultIcon(value: string) {\r\n        this._config.defaultIcon = value;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public updateCount(link: string, count: number): void {\r\n        if (link == null || !_.isNumber(count)) return;\r\n\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                if (l.name == link)\r\n                    l.count = count;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public clearCounts(): void {\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                l.count = null;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    private sendChangeEvent() {\r\n        this._rootScope.$emit(NavMenuChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavMenuProvider implements INavMenuProvider {\r\n    private _config: NavMenuConfig = {\r\n        sections: [],\r\n        defaultIcon: 'icons:folder'\r\n    };\r\n    private _service: NavMenuService;\r\n\r\n    public get sections(): NavMenuSection[] {\r\n        return this._config.sections;\r\n    }\r\n\r\n    public set sections(value: NavMenuSection[]) {\r\n        this._config.sections = value || [];\r\n    }\r\n\r\n    public get defaultIcon(): string {\r\n        return this._config.defaultIcon;\r\n    }\r\n\r\n    public set defaultIcon(value: string) {\r\n        this._config.defaultIcon = value;\r\n    }\r\n\r\n    public $get($rootScope) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavMenuService(this._config, $rootScope);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNavMenu')\r\n    .provider('pipNavMenu', NavMenuProvider);\r\n","angular.module('pipNavMenu', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './NavMenuService';\r\nimport './NavMenuDirective';\r\n\r\nexport * from './NavMenuService';","\r\n\r\nimport { SearchConfig } from './SearchService';\r\nimport { ISearchService } from './SearchService';\r\nimport { SearchChangedEvent } from './SearchService';\r\nimport { SearchActivatedEvent } from './SearchService';\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\n\r\nclass SearchBarController {\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _element: any;\r\n\r\n    public config: SearchConfig;\r\n    public enabled: boolean = false;\r\n    public search: any = { text: '' };\r\n\r\n    public constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipSearch: ISearchService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._rootScope = $rootScope;\r\n        this._element = $element;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-search-bar');\r\n\r\n        this.config = pipSearch.config;\r\n        this.stateChange();\r\n        $rootScope.$on(SearchChangedEvent, (event: ng.IAngularEvent, config: SearchConfig) => {\r\n            this.onSearchChanged(event, config);\r\n        });\r\n    }\r\n\r\n    private stateChange(): void {\r\n        if (this.enabled) {\r\n            this._element.addClass('w-stretch');\r\n            this._element.parent().addClass('pip-search-active');\r\n\r\n        } else {\r\n            this._element.removeClass('w-stretch');\r\n            this._element.parent().removeClass('pip-search-active');\r\n        }\r\n    }\r\n\r\n    private onSearchChanged(event: ng.IAngularEvent, config: SearchConfig): void {\r\n        this.config = config;\r\n        this.enabled = false;\r\n        this.search.text = '';\r\n        this.stateChange();\r\n    }\r\n\r\n    private focusText(): void {\r\n        setTimeout(() => {\r\n            let element: JQuery = $('.pip-search-text');\r\n            if (element.length > 0)\r\n                element.focus();\r\n        }, 0);\r\n    }\r\n\r\n    public enable(): void {\r\n        this.search.text = this.config.criteria;\r\n        this.enabled = true;\r\n        this.focusText();\r\n        this.stateChange();\r\n    }\r\n\r\n    public onClick(): void {\r\n        let search = this.search.text;\r\n\r\n        this.search.text = '';\r\n        this.enabled = false;\r\n        this.stateChange();\r\n\r\n        if (this.config.callback) {\r\n            this.config.callback(search);\r\n        } else {\r\n            this._rootScope.$broadcast(SearchActivatedEvent, search);\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        if (this.search.text) {\r\n            this.search.text = '';\r\n            this.focusText();\r\n        } else {\r\n            this.enabled = false;\r\n            this.stateChange();\r\n            this.onClick();\r\n        }\r\n    }\r\n\r\n    public onKeyDown(event: KeyboardEvent): void {\r\n        // Enter pressed\r\n        if (event.keyCode === 13)\r\n            this.onClick();\r\n        // ESC pressed\r\n        else if (event.keyCode === 27) {\r\n            this.enabled = false;\r\n            this.stateChange();\r\n        }\r\n    }\r\n}\r\n\r\n(() => {\r\n    function searchBarDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {},\r\n            replace: false,\r\n            templateUrl: 'search/SearchBar.html',\r\n            controller: SearchBarController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular.module('pipSearchBar')\r\n        .directive('pipSearchBar', searchBarDirective);\r\n\r\n})();","\r\n\r\nexport let OpenSearchEvent = 'pipOpenSearch';\r\nexport let CloseSearchEvent = 'pipCloseSearch';\r\nexport let SearchChangedEvent = 'pipSearchChanged';\r\nexport let SearchActivatedEvent = 'pipSearchActivated';\r\n\r\nexport class SearchConfig {\r\n    // Search visible\r\n    public visible: boolean;\r\n    // Search criteria\r\n    public criteria: string;\r\n    // Custom search parameters\r\n    public params: any;\r\n    // History for search autocomplete\r\n    public history: string[];\r\n    // Callback for search\r\n    callback: (criteria: string) => void;\r\n}\r\n\r\nexport interface ISearchService {\r\n    config: SearchConfig;\r\n    criteria: string;\r\n    params: any;\r\n    history: string[];\r\n    callback: (criteria: string) => void;\r\n\r\n    set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void;\r\n    clear(): void;\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n}\r\n\r\nexport interface ISearchProvider extends ng.IServiceProvider {    \r\n}\r\n\r\n\r\nclass SearchService implements ISearchService {\r\n    private _config: SearchConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: SearchConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n\r\n        $rootScope.$on(OpenSearchEvent, () => { this.open });\r\n        $rootScope.$on(CloseSearchEvent, () => { this.close });\r\n    }\r\n\r\n    public get config(): SearchConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get criteria(): string {\r\n        return this._config.criteria;\r\n    }\r\n\r\n    public set criteria(value: string) {\r\n        this._config.criteria = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get params(): any {\r\n        return this._config.params;\r\n    }\r\n\r\n    public set params(value: any) {\r\n        this._config.params = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get history(): string[] {\r\n        return this._config.history;\r\n    }\r\n\r\n    public set history(value: string[]) {\r\n        this._config.history = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get callback(): (criteria: string) => void {\r\n        return this._config.callback;\r\n    }\r\n\r\n    public set callback(value: (criteria: string) => void) {\r\n        this._config.callback = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void {\r\n        this._config.callback = callback;\r\n        this._config.criteria = criteria;\r\n        this._config.params = params;\r\n        this._config.history = history;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.callback = null;\r\n        this._config.criteria = null;\r\n        this._config.params = null;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public open(): void {\r\n        this._config.visible = true;\r\n        this.sendConfigEvent();                \r\n    }\r\n            \r\n    public close(): void {\r\n        this._config.visible = false;        \r\n        this.sendConfigEvent();                \r\n    }                \r\n\r\n    public toggle(): void {\r\n        this._config.visible = !this._config.visible;\r\n        this.sendConfigEvent();                \r\n    }                   \r\n\r\n    private sendConfigEvent(): void {\r\n        this._rootScope.$broadcast(SearchChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass SearchProvider implements ISearchProvider {\r\n    private _config: SearchConfig = new SearchConfig();\r\n    private _service: SearchService = null;\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SearchService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    } \r\n}\r\n\r\n\r\nangular.module('pipSearchBar')\r\n    .provider('pipSearch', SearchProvider);\r\n","\r\n\r\nangular.module('pipSearchBar', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './SearchService';\r\nimport './SearchBarDirective';\r\n\r\nexport * from './SearchService';","\r\nimport { ISideNavService, SideNavConfig } from './SideNavService';\r\n\r\nimport { SideNavStateNames, SideNavState, SideNavStateConfig } from './SideNavState';\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\n\r\nclass SideNavDirectiveController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _pipSideNav: ISideNavService;\r\n\r\n    private _pipMedia: pip.layouts.IMediaService;\r\n    private _timeout: ng.ITimeoutService;\r\n\r\n    private _isResizing: boolean;\r\n    private _animationDuration: number;\r\n    private _mainContainer: string; // todo add  to config\r\n    private _bigWidth: number;\r\n\r\n    private _middleWidth: number;\r\n    private _smallWidth: number;\r\n    private _mediaBreakpoints: pip.layouts.MediaBreakpoints;\r\n    private _navState: SideNavStateConfig;\r\n\r\n    private windowResize: Function;\r\n\r\n    public sidenavState: SideNavState;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $timeout: ng.ITimeoutService,\r\n        pipSideNav: ISideNavService,\r\n        navConstant: any\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n        this._pipSideNav = pipSideNav;\r\n\r\n        this._pipMedia = this._injector.has('pipMedia') ? <pip.layouts.IMediaService>this._injector.get('pipMedia') : null;\r\n\r\n        this._mainContainer = navConstant.SIDENAV_CONTAINER;\r\n        this._bigWidth = navConstant.SIDENAV_LARGE_WIDTH;\r\n        this._middleWidth = navConstant.SIDENAV_MIDDLE_WIDTH;\r\n        this._smallWidth = navConstant.SIDENAV_SMALL_WIDTH;\r\n        this._isResizing = false;\r\n        this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION;\r\n        this._navState = new SideNavStateConfig();\r\n        this._mediaBreakpoints = this.setBreakpoints();\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-sticky-sidenav');\r\n\r\n        let cleanupMainResized;\r\n        let cleanupSideNavState;\r\n\r\n        if (this._pipSideNav.config && this._pipSideNav.config.type != 'popup') {\r\n            this._timeout(() => {\r\n                this.setSideNaveState()\r\n            }, 100);\r\n\r\n            this.windowResize = _.debounce(() => { this.setSideNaveState(); }, 10);\r\n            cleanupMainResized = this._rootScope.$on('pipMainResized', () => {\r\n                this.windowResize();\r\n            });\r\n            cleanupSideNavState = this._rootScope.$on('pipSideNavState', ($event: ng.IAngularEvent, state: SideNavStateNames) => {\r\n                this.onSideNavState($event, state)\r\n            });\r\n        } else {\r\n            this._isResizing = false;\r\n            this.sidenavState = null;\r\n            this._timeout(() => {\r\n                this.setState(SideNavStateNames.Toggle);\r\n            }, 100);\r\n        }\r\n\r\n        let cleanupNavHeaderChanged: Function = this._rootScope.$on('pipNavIconClicked', () => {\r\n            this.onNavIconClick();\r\n        });\r\n        let cleanupSideNavChanged: Function = this._rootScope.$on('pipSideNavChanged', ($event: ng.IAngularEvent, config: SideNavConfig) => { //navState\r\n            this.onSideNavChanged($event, config)\r\n        });\r\n\r\n        this._scope.$on('$destroy', () => {\r\n            if (angular.isFunction(cleanupNavHeaderChanged)) {\r\n                cleanupNavHeaderChanged();\r\n            }\r\n            if (angular.isFunction(cleanupSideNavChanged)) {\r\n                cleanupSideNavChanged();\r\n            }\r\n            if (angular.isFunction(cleanupMainResized)) {\r\n                cleanupMainResized();\r\n            }\r\n            if (angular.isFunction(cleanupSideNavState)) {\r\n                cleanupSideNavState();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private setBreakpoints(): pip.layouts.MediaBreakpoints {\r\n        if (!this._pipMedia || !angular.isObject(this._pipMedia.breakpoints)) {\r\n            return { xs: 639, sm: 959, md: 1024, lg: 1919 };\r\n        } else {\r\n            return this._pipMedia.breakpoints;\r\n        }\r\n    }\r\n\r\n    private onSideNavChanged($event: ng.IAngularEvent, config: SideNavConfig): void {\r\n        if (config && config.visible) {\r\n            this._element.css('display', 'block');\r\n        } else {\r\n            this._element.css('display', 'none');\r\n        }\r\n    }\r\n\r\n    private onNavIconClick(): void {\r\n        this._pipSideNav.open();\r\n    }\r\n\r\n    private onSideNavState($event: ng.IAngularEvent, stateName: SideNavStateNames): void {\r\n        if (angular.isString(stateName) && this._navState[stateName] !== undefined) {\r\n            this.setState(stateName);\r\n        }\r\n    }\r\n\r\n    private setSideNaveState(): void {\r\n        if (this._pipSideNav.config && this._pipSideNav.config.type == 'popup') { return }\r\n\r\n        if (this._isResizing) {\r\n            this._timeout(() => { this.setSideNaveState() }, this._animationDuration); \r\n\r\n            return;\r\n        }\r\n\r\n        let mainWidth: number = $(this._mainContainer).innerWidth();\r\n        let sideNavWidth: number = $('.pip-sticky-sidenav').innerWidth();\r\n        let currentWidth: number = sideNavWidth ? sideNavWidth + 2 : 0; // add border width\r\n\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.sm) {\r\n            this.setState(SideNavStateNames.Toggle);\r\n            return;\r\n        }\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.md) {\r\n            this.setState(SideNavStateNames.Small);\r\n            return;\r\n        }\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.lg) {\r\n            this.setState(SideNavStateNames.Large);\r\n            return;\r\n        }\r\n        this.setState(SideNavStateNames.XLarge);\r\n    }\r\n\r\n    private setState(stateName: SideNavStateNames) {\r\n        if (this._isResizing) return;\r\n        if (this.sidenavState && this.sidenavState.id == stateName) return;\r\n\r\n        if (stateName != SideNavStateNames.Toggle) {\r\n            this._element.removeClass('sidenav-mobile');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.Small) {\r\n            this._element.removeClass('pip-sticky-nav-small');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.XLarge) {\r\n            this._element.removeClass('sidenav-desktop');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.Large) {\r\n            this._element.removeClass('sidenav-smalldesktop');\r\n        }\r\n\r\n        this._isResizing = true;\r\n        if (stateName == SideNavStateNames.Toggle) {\r\n            this._pipSideNav.close();\r\n        }\r\n        this.sidenavState = this._navState[String(stateName)];\r\n        this._element.addClass(this.sidenavState.addClass);\r\n\r\n        this._pipSideNav.state = this.sidenavState;\r\n\r\n        // check sideNav State\r\n        this._timeout(() => {\r\n            this.setSideNaveState()\r\n        }, 15);\r\n\r\n        // complete animation\r\n        this._timeout(() => {\r\n            this._isResizing = false;\r\n        }, this._animationDuration); //animationDuration\r\n\r\n    }\r\n}\r\n\r\n(() => {\r\n    function sideNavDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: true,\r\n            templateUrl: 'sidenav/SideNav.html',\r\n            controller: SideNavDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipSideNav')\r\n        .directive('pipSidenav', sideNavDirective);\r\n\r\n})();","export let SideNavChangedEvent = 'pipSideNavChanged';\r\nexport let SideNavStateChangedEvent = 'pipSideNavStateChanged';\r\nexport let OpenSideNavEvent = 'pipOpenSideNav';\r\nexport let CloseSideNavEvent = 'pipCloseSideNav';","\r\n\r\n// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\n    function SideNavPartDirectiveController($scope, $element, $attrs, $rootScope, pipSideNav) {\r\n        \"ngInject\";\r\n\r\n        var partName = '' + $attrs.pipSidenavPart;\r\n        var partValue = null;\r\n\r\n        // Break part apart\r\n        var pos = partName.indexOf(':');\r\n        if (pos > 0) {\r\n            partValue = partName.substr(pos + 1);\r\n            partName = partName.substr(0, pos);\r\n        }\r\n\r\n        onSideNavChanged(null, pipSideNav.config)\r\n        $rootScope.$on('pipSideNavChanged', onSideNavChanged);\r\n\r\n        function onSideNavChanged(event, config) {\r\n            var parts = config.parts || {};\r\n            var currentPartValue = parts[partName];\r\n            var visible = !!(partValue ? currentPartValue == partValue : currentPartValue);\r\n\r\n            if (visible != $scope.visible)\r\n                $scope.visible = visible;\r\n        }\r\n\r\n    }\r\n\r\n    function sidenavPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        var ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function linkFunction($scope: any, $element, $attrs) {\r\n                $attrs.ngIf = function () { return $scope.visible };\r\n                ngIf.link.apply(ngIf, arguments);\r\n            },\r\n            controller: SideNavPartDirectiveController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipSideNav')\r\n        .directive('pipSidenavPart', sidenavPartDirective);\r\n\r\n})();","import { SideNavChangedEvent, SideNavStateChangedEvent, OpenSideNavEvent, CloseSideNavEvent } from './SideNavEvents';\r\n\r\nexport class SideNavConfig {\r\n    parts: any;\r\n    classes: string[];\r\n    state: any;\r\n    type: string;\r\n    visible: boolean;\r\n}\r\n\r\nexport interface ISideNavService {\r\n    readonly config: SideNavConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n    state: any;\r\n\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n    show(): void;\r\n    hide(): void;\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface ISideNavProvider extends ng.IServiceProvider {\r\n    config: SideNavConfig;\r\n    parts: any;\r\n    type: string;\r\n    visible: boolean;\r\n    classes: string[];\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nclass SideNavService implements ISideNavService {\r\n    private _config: SideNavConfig;\r\n    private _state: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _sidenav: ng.material.ISidenavService;\r\n\r\n\r\n    public constructor(config: SideNavConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n        this._sidenav = $mdSidenav;\r\n    }\r\n\r\n    public get config(): SideNavConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: any) {\r\n        this._state = value || {};\r\n        this._rootScope.$broadcast(SideNavStateChangedEvent, value);\r\n    }\r\n\r\n    public open() {\r\n        this._sidenav('pip-sticky-sidenav').open();\r\n    }\r\n\r\n    public close() {\r\n        this._sidenav('pip-sticky-sidenav').close();\r\n    }\r\n\r\n    public toggle() {\r\n        this._sidenav('pip-sticky-sidenav').toggle();\r\n    }\r\n\r\n    public show() {\r\n        if (!this._config.visible) {\r\n            this._config.visible = true;\r\n            this.sendConfigEvent();\r\n        }\r\n    }\r\n\r\n    public hide() {\r\n        if (this._config.visible) {\r\n            this._config.visible = false;\r\n            this.sendConfigEvent();\r\n        }\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(SideNavChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass SideNavProvider implements ISideNavProvider {\r\n    private _config: SideNavConfig = {\r\n        parts: {},\r\n        classes: [],\r\n        type: 'popup',\r\n        state: null,\r\n        visible: true\r\n    };\r\n\r\n    private _service: SideNavService;\r\n\r\n    public get config(): SideNavConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: SideNavConfig) {\r\n        this._config = value || new SideNavConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get visible(): boolean {\r\n        return this._config.visible;\r\n    }\r\n\r\n    public set visible(value: boolean) {\r\n        this._config.visible = value;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SideNavService(this._config, $rootScope, $mdSidenav);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nfunction hookSideNavEvents($rootScope: ng.IRootScopeService, pipSideNav: ISideNavService) {\r\n    $rootScope.$on(OpenSideNavEvent, () => { pipSideNav.open(); });\r\n    $rootScope.$on(CloseSideNavEvent, () => { pipSideNav.close(); });\r\n}\r\n\r\nangular\r\n    .module('pipSideNav')\r\n    .provider('pipSideNav', SideNavProvider)\r\n    .run(hookSideNavEvents);\r\n","export class SideNavStateNames {\r\n        static Toggle: string = 'toggle';\r\n        static Small: string = 'small';\r\n        static Large: string = 'large';\r\n        static XLarge: string = 'xlarge';\r\n}               \r\n               \r\n export class SideNavState {\r\n    id: SideNavStateNames;\r\n    // Class which added to sidenav in this state\r\n    addClass: string;\r\n    // Side nav always open\r\n    isLockedOpen: boolean;\r\n    // Show SideNav header \r\n    showHeader: boolean;\r\n    // Show expanded button\r\n    expandedButton: boolean;\r\n    // SideNav has expand\r\n    isExpanded: boolean;\r\n    // SideNav is Expanded in this state by default\r\n    expand: boolean;\r\n    // Tooltype is show\r\n    showIconTooltype: boolean;\r\n } \r\n\r\nexport class SideNavStateConfig {\r\n            toggle: SideNavState = { // media(sm, xs)\r\n                id: SideNavStateNames.Toggle,\r\n                addClass: 'sidenav-mobile', \r\n                showHeader: true,\r\n                isLockedOpen: false,\r\n                expandedButton: false,\r\n                isExpanded: true,\r\n                expand: true,\r\n                showIconTooltype: false\r\n            };\r\n            small: SideNavState = { // media(md)\r\n                id: SideNavStateNames.Small,\r\n                addClass: 'pip-sticky-nav-small sidenav-smalldesktop', \r\n                showHeader: false,\r\n                isLockedOpen: true,\r\n                expandedButton: false,\r\n                isExpanded: false,\r\n                expand: false,\r\n                showIconTooltype: true\r\n            };\r\n            large: SideNavState = { // media(lg)\r\n                id: SideNavStateNames.Large,\r\n                addClass: 'sidenav-smalldesktop', \r\n                showHeader: false,\r\n                isLockedOpen: true,\r\n                expandedButton: true,\r\n                isExpanded: true,\r\n                expand: true,\r\n                showIconTooltype: true\r\n            };\r\n            xlarge: SideNavState = { // media(xl)\r\n                id: SideNavStateNames.XLarge,\r\n                addClass: 'sidenav-desktop', \r\n                showHeader: false,\r\n                isLockedOpen: true,\r\n                expandedButton: false,\r\n                isExpanded: true,\r\n                expand: true,\r\n                showIconTooltype: false\r\n            };   \r\n}","\r\n\r\nangular.module('pipSideNav', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './SideNavEvents';\r\nimport './SideNavState';\r\nimport './SideNavService';\r\nimport './SideNavPartDirective';\r\nimport './SideNavDirective';\r\n\r\nexport * from './SideNavService';","\r\n// Prevent junk from going into typescript definitions\r\n{\r\n    class Selected {\r\n        activeIndex: number = 0;\r\n        activeTab: number = 0;\r\n    }\r\n\r\n    class TabsDirectiveController {\r\n\r\n        private _element: ng.IAugmentedJQuery;\r\n        private _attrs: ng.IAttributes;\r\n        private _injector: ng.auto.IInjectorService;\r\n        private _scope: angular.IScope;\r\n        private _log: ng.ILogService;\r\n        private _rootScope: ng.IRootScopeService;\r\n        private _pipTranslate: pip.services.ITranslateService;\r\n\r\n        private _pipTheme: pip.themes.IThemeService;\r\n        private _pipMedia: pip.layouts.IMediaService;\r\n        private _timeout: ng.ITimeoutService;\r\n\r\n        public themeClass: string;\r\n        public media: any;\r\n        public pipTabIndex: number;\r\n        public selected: Selected;\r\n        public tabs: any[];\r\n        public currentTheme: string;\r\n        public breakpoints: string;\r\n\r\n        constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $attrs: ng.IAttributes,\r\n            $injector: ng.auto.IInjectorService,\r\n            $scope: angular.IScope,\r\n            $log: ng.ILogService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $mdMedia: angular.material.IMedia,\r\n            $timeout: ng.ITimeoutService,\r\n            navConstant: any\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._element = $element;\r\n            this._attrs = $attrs;\r\n            this._scope = $scope;\r\n            this._injector = $injector;\r\n            this._log = $log;\r\n            this._rootScope = $rootScope;\r\n            this._timeout = $timeout;\r\n\r\n            this.selected = new Selected();\r\n            this.setTheme();\r\n            this.setMedia($mdMedia);\r\n            this.initTabs();\r\n\r\n            this.breakpoints = this._scope['breakpoints'] ? this._scope['breakpoints'] : navConstant.TAB_BREAKPOINT;\r\n\r\n            if (this.toBoolean($attrs['pipRebind'])) {\r\n                this._scope.$watch(() => this._scope['activeIndex'],\r\n                    (newValue: number, oldValue: number) => {\r\n                        this.selected.activeIndex = newValue || 0;\r\n                        this.selected.activeTab = this.selected.activeIndex;\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        private setTheme(): void {\r\n            this._pipTheme = this._injector.has('pipTheme') ? <pip.themes.IThemeService>this._injector.get('pipTheme') : null;\r\n            if (this._pipTheme) {\r\n                this.currentTheme = this._pipTheme.theme;\r\n            } else if (this._rootScope['$theme']) {\r\n                this.currentTheme = this._rootScope['$theme'];\r\n            }\r\n\r\n            this.themeClass = (this._attrs['class'] || '') + ' md-' + this.currentTheme + '-theme';\r\n        }\r\n\r\n        private setMedia($mdMedia: angular.material.IMedia): void {\r\n            this._pipMedia = this._injector.has('pipMedia') ? <pip.layouts.IMediaService>this._injector.get('pipMedia') : null;\r\n            this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\r\n        }\r\n\r\n        private setTranslate(): void {\r\n            this._pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n            if (this._pipTranslate) {\r\n                if (this.tabs.length > 0 && this.tabs[0].title) {\r\n                    this._pipTranslate.translateObjects(this.tabs, 'title', 'nameLocal');\r\n                } else {\r\n                    this._pipTranslate.translateObjects(this.tabs, 'name', 'nameLocal');\r\n                }\r\n            }\r\n        }\r\n\r\n        private initTabs(): void {\r\n            this.tabs = (this._scope['tabs'] && _.isArray(this._scope['tabs'])) ? this._scope['tabs'] : [];\r\n            this.pipTabIndex = this._attrs['pipTabIndex'] ? parseInt(this._attrs['pipTabIndex']) : 0;\r\n            this.selected.activeIndex = this._scope['activeIndex'] || 0;\r\n            this.selected.activeTab = this.selected.activeIndex;\r\n\r\n\r\n\r\n            if (this.pipTabIndex) {\r\n                this._timeout(() => {\r\n                    let a = this._element.find('md-tabs-canvas');\r\n                    if (a && a[0]) {\r\n                        angular.element(a[0]).attr('tabindex', this.pipTabIndex);\r\n                    }\r\n                    a.on('focusout', function () {\r\n                        angular.element(a[0]).attr('tabindex', this.pipTabIndex);\r\n                        this._timeout(() => {\r\n                            angular.element(a[0]).attr('tabindex', this.pipTabIndex);\r\n                        }, 50);\r\n                    });\r\n                }, 1000);\r\n            }\r\n            this.setTranslate();\r\n        }\r\n\r\n\r\n        public disabled(): boolean {\r\n            if (this._scope['ngDisabled']) {\r\n                return this._scope['ngDisabled']();\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        public tabDisabled(index: number): boolean {\r\n            return (this.disabled() && this.selected.activeIndex != index);\r\n        };\r\n\r\n        public onSelect(index: number): void {\r\n            if (this.disabled()) return;\r\n\r\n            this.selected.activeIndex = index;\r\n            this.selected.activeTab = this.selected.activeIndex;\r\n            this._timeout(() => {\r\n                this._scope['activeIndex'] = index;\r\n                if (this._scope['select']) {\r\n                    this._scope['select'](this.tabs[this.selected.activeIndex], this.selected.activeIndex);\r\n                }\r\n            }, 0);\r\n\r\n        };\r\n\r\n        public showShadow(): boolean {\r\n            if (this._scope['showTabsShadow']) {\r\n                return this._scope['showTabsShadow']();\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        public show(): boolean {\r\n            if (this._scope['showTabs']) {\r\n                return this._scope['showTabs']();\r\n            } else {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        public toBoolean(value: any): boolean {\r\n            if (value == null) return false;\r\n            if (!value) return false;\r\n            value = value.toString().toLowerCase();\r\n            return value == '1' || value == 'true';\r\n        }\r\n\r\n    }\r\n\r\n    function tabsDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                ngDisabled: '&',\r\n                tabs: '=pipTabs',\r\n                showTabs: '&pipShowTabs',\r\n                showTabsShadow: '&pipTabsShadow',\r\n                activeIndex: '=pipActiveIndex',\r\n                select: '=pipTabsSelect',\r\n                breakpoints: '=pipBreakpoints'\r\n            },\r\n            templateUrl: 'tabs/Tabs.html',\r\n            controller: TabsDirectiveController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module(\"pipTabs\", ['pipNav.Templates'])\r\n        .directive('pipTabs', tabsDirective);\r\n\r\n}","(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/PrimaryActions.html',\n    '<div pip-focused=\"\" pip-focused-tabindex=\"2\"><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in $ctrl.config.primaryLocalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"$ctrl.clickAction(action, $mdOpenMenu);\" tabindex=\"-1\" ng-hide=\"$ctrl.isHidden(action)\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge\" ng-show=\"action.count > 0\">{{ $ctrl.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon}}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"$ctrl.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"$ctrl.clickAction(subAction)\">{{ ::subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in $ctrl.config.primaryGlobalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"$ctrl.clickAction(action, $mdOpenMenu);\" ng-hide=\"$ctrl.isHidden(action)\" tabindex=\"-1\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge color-badge-bg\" ng-show=\"action.count > 0\">{{ $ctrl.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon }}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"$ctrl.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"$ctrl.clickAction(subAction)\">{{ subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/SecondaryActions.html',\n    '<md-menu ng-if=\"$ctrl.secondaryActionsVisible()\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button\" tabindex=\"3\" ng-init=\"$ctrl.getMenu($mdOpenMenu)\" ng-click=\"$ctrl.onSecondaryActionClick(); $ctrl.openMenu($mdOpenMenu, $event);\" aria-label=\"open actions\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"action in $ctrl.config.secondaryLocalActions\" ng-if=\"!action.divider\" ng-hide=\"$ctrl.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"$ctrl.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider><md-menu-divider ng-if=\"$ctrl.secondaryDividerVisible()\"></md-menu-divider><md-menu-item ng-repeat-start=\"action in $ctrl.config.secondaryGlobalActions\" ng-if=\"!action.divider\" ng-hide=\"$ctrl.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"$ctrl.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('appbar/AppBar.html',\n    '<md-toolbar class=\"{{ $ctrl.config.classes.join(\\' \\') }}\" ng-if=\"$ctrl.config.visible\" ng-transclude=\"\"></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('breadcrumb/Breadcrumb.html',\n    '<div class=\"pip-breadcrumb-block\"><div class=\"text-overflow\" ng-if=\"!$ctrl._media(\\'xs\\')\"><span ng-if=\"$ctrl.config.criteria\" ng-click=\"$ctrl.openSearch()\">{{ $ctrl.config.criteria }} -</span><span class=\"pip-breadcrumb-item {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\" ng-repeat-start=\"item in $ctrl.config.items\" ng-click=\"$ctrl.onClick(item)\" ng-init=\"stepWidth = 100/($ctrl.config.items.length + 1)\" ng-class=\"{\\'cursor-pointer\\': !$last}\" ng-style=\"{\\'max-width\\': stepWidth + \\'%\\'}\"><span ng-if=\"!$last || !$ctrl.actionsVisible(item)\">{{ item.title | translate }}</span><div ng-if=\"$last && $ctrl.actionsVisible(item)\" style=\"display: inline-block; position: relative;\"><md-menu md-offset=\"0 44\"><span class=\"layout-row pip-breadcrumb-item-menu cursor-pointer {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-click=\"$ctrl.onOpenMenu($mdOpenMenu, $event)\" md-ink-ripple=\"\" aria-label=\"open breadcrumb actions\">{{ item.title | translate }}<md-icon class=\"pip-triangle-down\" md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-if=\"!subItem.divider\" ng-repeat-start=\"subItem in item.subActions\"><md-button ng-click=\"$ctrl.onSubActionClick(subItem)\" ng-if=\"!action.divider\" tabindex=\"4\"><md-icon md-menu-align-target=\"\" ng-if=\"subItem.icon\" md-svg-icon=\"{{ subItem.icon }}\"></md-icon><span>{{ subItem.title | translate }}</span></md-button></md-menu-item><md-menu-divider ng-if=\"subItem.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div></span><md-icon ng-repeat-end=\"\" md-svg-icon=\"icons:chevron-right\" ng-hide=\"$last\"></md-icon><span class=\"pip-title breadcrumb-accent\" ng-if=\"$ctrl.config.text\">{{ $ctrl.config.text | translate }}</span></div><div style=\"position: relative;\" ng-if=\"$ctrl._media(\\'xs\\')\"><md-menu md-offset=\"0 44\"><span class=\"pip-mobile-breadcrumb layout-row\" ng-click=\"$ctrl.config.items && $ctrl.config.items.length > 1 ? $mdOpenMenu() : return\"><span class=\"text-overflow\"><span ng-if=\"$ctrl.config.criteria\" ng-click=\"$ctrl.openSearch()\">{{ $ctrl.config.criteria }} -</span> <span class=\"breadcrumb-accent\" ng-if=\"$ctrl.config.text\">{{ $ctrl.config.text | translate }}</span> <span ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\" class=\"breadcrumb-accent {{ ($ctrl.config.items && $ctrl.config.items.length > 1) ? \\'cursor-pointer\\' : \\'\\' }}\">{{ $ctrl.config.items[$ctrl.config.items.length - 1].title | translate }}</span></span><md-icon class=\"pip-triangle-down cursor-pointer breadcrumb-accent\" md-svg-icon=\"icons:triangle-down\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 1\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.config.items\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\"><md-button ng-click=\"$ctrl.onClick(item)\" tabindex=\"5\"><md-icon md-menu-align-target=\"\" ng-if=\"item.icon\" md-svg-icon=\"{{ item.icon }}\"></md-icon><span>{{ item.title | translate }}</span></md-button></md-menu-item><md-menu-item ng-if=\"$ctrl.config.text\"><md-button tabindex=\"5\"><span class=\"text-grey\">{{ $ctrl.config.text | translate }}</span></md-button></md-menu-item></md-menu-content></md-menu></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dropdown/Dropdown.html',\n    '<md-toolbar class=\"md-subhead color-primary-bg {{ $ctrl.themeClass}}\" ng-if=\"$ctrl.show()\" ng-class=\"{\\'md-whiteframe-3dp\\': $ctrl.media(\\'xs\\')}\"><div class=\"pip-divider\"></div><md-select ng-model=\"$ctrl.selectedIndex\" tabindex=\"15\" ng-disabled=\"$ctrl.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"DROPDOWN\" md-ink-ripple=\"\" md-on-close=\"$ctrl.onSelect($ctrl.selectedIndex)\"><md-option ng-repeat=\"action in $ctrl.actions\" value=\"{{ ::$index }}\" ng-selected=\"$ctrl.activeIndex == $index ? true : false\">{{ (action.title || action.name || action) | translate }}</md-option></md-select></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('header/NavHeader.html',\n    '<md-toolbar ng-show=\"showHeader\" class=\"layout-row layout-align-start-center\"><div class=\"flex-fixed pip-sticky-nav-header-user\"><md-button class=\"md-icon-button\" ng-click=\"onUserClick()\" aria-label=\"current user\" tabindex=\"-1\"><img src=\"\" class=\"pip-sticky-nav-header-user-image\" ng-class=\"imageCss\"></md-button></div><div class=\"pip-sticky-nav-header-user-text\"><div class=\"pip-sticky-nav-header-user-pri\" ng-click=\"onUserClick()\" tabindex=\"-1\">{{ title | translate }}</div><div class=\"pip-sticky-nav-header-user-sec\">{{ subtitle | translate }}</div></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('icon/NavIcon.html',\n    '<md-button class=\"md-icon-button pip-nav-icon\" ng-if=\"$ctrl.config.type != \\'none\\'\" ng-class=\"$ctrl.config.class\" ng-click=\"$ctrl.onNavIconClick()\" tabindex=\"{{ $ctrl.config.type==\\'menu\\' || $ctrl.config.type==\\'back\\' ? 4 : -1 }}\" aria-label=\"menu\"><md-icon ng-if=\"$ctrl.config.type==\\'menu\\'\" md-svg-icon=\"icons:menu\"></md-icon><img ng-src=\"{{ $ctrl.config.imageUrl }}\" ng-if=\"$ctrl.config.type==\\'image\\'\" height=\"24\" width=\"24\"><md-icon ng-if=\"$ctrl.config.type==\\'back\\'\" md-svg-icon=\"icons:arrow-left\"></md-icon><md-icon ng-if=\"$ctrl.config.type==\\'icon\\'\" md-svg-icon=\"{{ $ctrl.config.icon }}\"></md-icon></md-button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu/NavMenu.html',\n    '<div ng-if=\"$ctrl.sections && $ctrl.sections.length\"><md-list class=\"sidenav-list\" pip-focused=\"\" pip-focused-tabindex=\"10\" pip-with-hidden=\"true\"><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-sticky-nav-expanded-button\" ng-click=\"$ctrl.onExpand()\" ng-disabled=\"!$ctrl.isCollapsed\" tabindex=\"-1\" ng-if=\"$ctrl.expandedButton\"><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-left\" ng-if=\"$ctrl.expanded\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-right\" ng-if=\"!$ctrl.expanded\"></md-icon></md-list-item><md-divider ng-show=\"$ctrl.expandedButton\"></md-divider><div class=\"pip-section\" ng-repeat=\"section in $ctrl.sections\" ng-hide=\"section.access && !section.access(section)\"><md-divider ng-show=\"$index > 0 && !$ctrl.isSectionEmpty(section.links)\"></md-divider><md-subheader ng-show=\"section.title\" style=\"height: 48px;\"><span ng-if=\"$ctrl.expanded\" class=\"pip-sticky-nav-menu-title section-title\">{{ ::section.title | translate }}</span><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && section.icon\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ $ctrl.defaultIcon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && !section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ $ctrl.defaultIcon }}\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && !section.icon\"><md-tooltip md-visible=\"showTooltip\" class=\"md-secondary\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon></md-subheader><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-focusable\" tabindex=\"-1\" ng-repeat=\"link in section.links\" ng-class=\"{\\'active\\': $ctrl.isActive(link)}\" ng-hide=\"link.access && !link.access(link)\"><md-button class=\"layout-row layout-align-start-center pip-button-block\" tabindex=\"-1\" ng-click=\"$ctrl.clickLink($event, link)\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">{{ ::link.tooltipText | translate }}</md-tooltip><div class=\"pip-sticky-nav-menu-icon-block\"><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-if=\"!($ctrl.sideNavState.showIconTooltype && !link.tooltipText && !$ctrl.expanded)\" ng-hide=\"!link.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-hide=\"!link.icon\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !link.tooltipText && !$ctrl.expanded\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::link.tooltipText || link.title | translate }}</md-tooltip></md-icon></div><div class=\"pip-sticky-nav-menu-title\">{{ ::link.title | translate }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count < 100\">{{ link.count }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count > 99\">!</div></md-button></md-list-item></div></md-list></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('language/LanguagePicker.html',\n    '<md-menu md-position-mode=\"target-right target\"><span class=\"pip-language\" ng-click=\"$mdOpenMenu()\" aria-label=\"language selection\">{{ $ctrl.selectedLanguage | translate }}<md-icon md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"3\"><md-menu-item ng-repeat=\"language in $ctrl.languages\"><md-button ng-click=\"$ctrl.onLanguageClick(language)\" tabindex=\"7\">{{ language | translate }}</md-button></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('search/SearchBar.html',\n    '<div class=\"md-toolbar-tools pip-search-container\" ng-if=\"$ctrl.enabled\"><div class=\"layout-row pip-search-selected\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"start search\" ng-click=\"$ctrl.onClick()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><input class=\"pip-search-text flex\" type=\"search\" tabindex=\"6\" ng-model=\"$ctrl.search.text\" ng-keydown=\"$ctrl.onKeyDown($event)\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"clear search\" ng-click=\"$ctrl.clear()\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div><div class=\"md-toolbar-tools layout-row layout-align-end-center flex-fixed lp0 rp0\" ng-if=\"!$ctrl.enabled\"><md-button class=\"md-icon-button\" tabindex=\"5\" aria-label=\"start search\" ng-click=\"$ctrl.enable()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('sidenav/SideNav.html',\n    '<md-sidenav class=\"md-sidenav-left\" md-is-locked-open=\"$ctrl.sidenavState.isLockedOpen\" md-component-id=\"pip-sticky-sidenav\" ng-transclude=\"\"></md-sidenav>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tabs/Tabs.html',\n    '<md-toolbar class=\"pip-nav {{ $ctrl.themeClass }}\" ng-class=\"{\\'pip-visible\\': $ctrl.show(), \\'pip-shadow\\': $ctrl.showShadow()}\"><md-tabs ng-if=\"$ctrl.media($ctrl.breakpoints)\" md-selected=\"$ctrl.selected.activeTab\" ng-class=\"{\\'disabled\\': $ctrl.disabled()}\" md-stretch-tabs=\"true\" md-dynamic-height=\"true\"><md-tab ng-repeat=\"tab in $ctrl.tabs track by $index\" ng-disabled=\"$ctrl.tabDisabled($index)\" md-on-select=\"$ctrl.onSelect($index)\"><md-tab-label>{{:: tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ tab.newCounts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div></md-tab-label></md-tab></md-tabs><div class=\"md-subhead pip-tabs-content color-primary-bg\" ng-if=\"!$ctrl.media($ctrl.breakpoints)\"><div class=\"pip-divider position-top m0\"></div><md-select ng-model=\"$ctrl.selected.activeIndex\" ng-disabled=\"$ctrl.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"SELECT\" md-ink-ripple=\"\" md-on-close=\"$ctrl.onSelect($ctrl.selected.activeIndex)\"><md-option ng-repeat=\"tab in $ctrl.tabs track by $index\" class=\"pip-tab-option\" value=\"{{ ::$index }}\">{{ ::tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ tab.newCounts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div></md-option></md-select></div></md-toolbar>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-nav-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
>>>>>>> 319fa70d83ee2fd85b7481ca8979b6fd53c46565
