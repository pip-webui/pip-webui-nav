{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/actions/ActionsService.ts","src/actions/IActionsService.ts","src/actions/PrimaryActions.ts","src/actions/SecondaryActions.ts","src/actions/index.ts","src/appbar/AppBar.ts","src/appbar/AppBarConfig.ts","src/appbar/AppBarPart.ts","src/appbar/AppBarService.ts","src/appbar/index.ts","src/breadcrumb/Breadcrumb.ts","src/breadcrumb/BreadcrumbConfig.ts","src/breadcrumb/BreadcrumbService.ts","src/breadcrumb/index.ts","src/common/NavService.ts","src/dependencies/TranslateFilter.ts","src/dropdown/Dropdown.ts","src/header/NavHeader.ts","src/header/NavHeaderConfig.ts","src/header/NavHeaderService.ts","src/header/index.ts","src/icon/NavIcon.ts","src/icon/NavIconConfig.ts","src/icon/NavIconService.ts","src/icon/index.ts","src/index.ts","src/language/LanguagePickerDirective.ts","src/menu/NavMenu.ts","src/menu/NavMenuService.ts","src/menu/index.ts","src/search/SearchBar.ts","src/search/SearchConfig.ts","src/search/SearchService.ts","src/search/index.ts","src/sidenav/SideNav.ts","src/sidenav/SideNavPart.ts","src/sidenav/SideNavService.ts","src/sidenav/SideNavState.ts","src/sidenav/index.ts","src/tabs/Tabs.ts","temp/pip-webui-nav-html.min.js"],"names":[],"mappings":"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":"pip-webui-nav.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { ActionsConfig } from './IActionsService';\r\nimport { ActionItem } from './IActionsService';\r\nimport { ActionsChangedEvent } from './IActionsService';\r\nimport { SecondaryActionsOpenEvent } from './IActionsService';\r\nimport { IActionsService } from './IActionsService';\r\nimport { IActionsProvider } from './IActionsService';\r\n\r\n\r\nclass ActionsService implements IActionsService {\r\n    private _config: ActionsConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: ActionsConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): ActionsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get primaryGlobalActions(): ActionItem[] {\r\n        return this._config.primaryGlobalActions;\r\n    }\r\n\r\n    public set primaryGlobalActions(value: ActionItem[]) {\r\n        this._config.primaryGlobalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get secondaryGlobalActions(): ActionItem[] {\r\n        return this._config.secondaryGlobalActions;\r\n    }\r\n\r\n    public set secondaryGlobalActions(value: ActionItem[]) {\r\n        this._config.secondaryGlobalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get primaryLocalActions(): ActionItem[] {\r\n        return this._config.primaryLocalActions;\r\n    }\r\n\r\n    public set primaryLocalActions(value: ActionItem[]) {\r\n        this._config.primaryLocalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get secondaryLocalActions(): ActionItem[] {\r\n        return this._config.secondaryLocalActions;\r\n    }\r\n\r\n    public set secondaryLocalActions(value: ActionItem[]) {\r\n        this._config.secondaryLocalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void {\r\n        this._config.primaryLocalActions = primaryActions || [];\r\n        this._config.secondaryLocalActions = secondaryActions || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.primaryLocalActions = [];\r\n        this._config.secondaryLocalActions = [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public updateCount(action: string, count: number) {\r\n        if (action == null || !_.isNumber(count)) return;\r\n\r\n        _.each(this._config.primaryGlobalActions, (a) => {\r\n            if (a.name == action)\r\n                a.count = count;\r\n        });\r\n        _.each(this._config.primaryLocalActions, (a) => {\r\n            if (a.name == action)\r\n                a.count = count;\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public clearCounts(): void {\r\n        _.each(this._config.primaryGlobalActions, (a) => {\r\n            a.count = null;\r\n        });\r\n        _.each(this._config.primaryLocalActions, (a) => {\r\n            a.count = null;\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    private sendChangeEvent() {\r\n        this._rootScope.$emit(ActionsChangedEvent, this._config);\r\n    }\r\n\r\n    public openMenuEvent(): void {\r\n        this._rootScope.$emit(SecondaryActionsOpenEvent);\r\n    }\r\n}\r\n\r\nclass ActionsProvider implements IActionsProvider {\r\n    private _config: ActionsConfig = new ActionsConfig();\r\n    private _service: ActionsService;\r\n\r\n    public get config(): ActionsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ActionsConfig) {\r\n        this._config = value || new ActionsConfig();\r\n    }\r\n\r\n    public get primaryGlobalActions(): ActionItem[] {\r\n        return this._config.primaryGlobalActions;\r\n    }\r\n\r\n    public set primaryGlobalActions(value: ActionItem[]) {\r\n        this._config.primaryGlobalActions = value || [];\r\n    }\r\n\r\n    public get secondaryGlobalActions(): ActionItem[] {\r\n        return this._config.secondaryGlobalActions;\r\n    }\r\n\r\n    public set secondaryGlobalActions(value: ActionItem[]) {\r\n        this._config.secondaryGlobalActions = value || [];\r\n    }\r\n\r\n    public get primaryLocalActions(): ActionItem[] {\r\n        return this._config.primaryLocalActions;\r\n    }\r\n\r\n    public set primaryLocalActions(value: ActionItem[]) {\r\n        this._config.primaryLocalActions = value || [];\r\n    }\r\n\r\n    public get secondaryLocalActions(): ActionItem[] {\r\n        return this._config.secondaryLocalActions;\r\n    }\r\n\r\n    public set secondaryLocalActions(value: ActionItem[]) {\r\n        this._config.secondaryLocalActions = value || [];\r\n    }\r\n\r\n    public $get($rootScope) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ActionsService(this._config, $rootScope);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipActions')\r\n    .provider('pipActions', ActionsProvider);\r\n\r\n","export const ActionsChangedEvent: string = 'pipActionsChanged';\r\nexport const SecondaryActionsOpenEvent: string = 'pipSecondaryActionsOpen';\r\n\r\nexport class SimpleActionItem {\r\n    // Name to refer to the item\r\n    public name: string;\r\n    // Link visible title\r\n    public title?: string;\r\n    // Show divider instead of title\r\n    public divider?: boolean;\r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Counter badge\r\n    public count?: number;\r\n    // Access function\r\n    public access?: (action: SimpleActionItem) => boolean;\r\n    // Show on specified breakpoints\r\n    public breakpoints?: string[];\r\n    // window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public click?: (action: SimpleActionItem) => void;\r\n}\r\n\r\nexport class ActionItem extends SimpleActionItem {\r\n    public subActions?: SimpleActionItem[];\r\n}\r\n\r\nexport class ActionsConfig {\r\n    // Primary global actions visible on the screen\r\n    public primaryGlobalActions: ActionItem[] = [];\r\n    // Primary local actions visible on the screen\r\n    public primaryLocalActions: ActionItem[] = [];\r\n\r\n    // Secondary global actions available in popup\r\n    public secondaryGlobalActions: ActionItem[] = [];\r\n    // Secondary local actions available in popup\r\n    public secondaryLocalActions: ActionItem[]= [];\r\n}\r\n\r\nexport interface IActionsService {\r\n    readonly config: ActionsConfig;\r\n\r\n    primaryGlobalActions: ActionItem[];\r\n    primaryLocalActions: ActionItem[];\r\n    secondaryGlobalActions: ActionItem[];\r\n    secondaryLocalActions: ActionItem[];    \r\n\r\n    show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void;\r\n    hide(): void;\r\n    updateCount(link: string, count: number): void; \r\n    clearCounts(): void;\r\n    openMenuEvent(): void;\r\n}\r\n\r\nexport interface IActionsProvider extends ng.IServiceProvider {\r\n    config: ActionsConfig;\r\n    \r\n    primaryGlobalActions: ActionItem[];\r\n    primaryLocalActions: ActionItem[];\r\n    secondaryGlobalActions: ActionItem[];\r\n    secondaryLocalActions: ActionItem[];    \r\n}","import { IActionsService, ActionItem, ActionsConfig } from \"./IActionsService\";\r\n\r\nclass PrimaryActionsController {\r\n    private _pipTranslate: pip.services.ITranslateService\r\n\r\n    public config: ActionsConfig;\r\n\r\n    public localActions: ActionItem[];\r\n    public globalActions: ActionItem[];\r\n    public originatorEv: any;\r\n\r\n    constructor(\r\n        private $element: ng.IAugmentedJQuery,\r\n        private $injector: ng.auto.IInjectorService,\r\n        private $scope: angular.IScope,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService,\r\n        private $location: ng.ILocationService,\r\n        private pipActions: IActionsService,\r\n        $log: ng.ILogService,\r\n        $attrs: ng.IAttributes\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n\r\n        this._pipTranslate = this.$injector.has('pipTranslate') ? <pip.services.ITranslateService>this.$injector.get('pipTranslate') : null;\r\n        if (this._pipTranslate && this._pipTranslate.setTranslations) {\r\n            this._pipTranslate.setTranslations('en', {\r\n                DOCUMENTS_ATTACHED: 'document(s) attached',\r\n                ERROR_DOCUMENTS_LOADED: 'Error: <%= error_number %> document(s) are not loaded'\r\n            });\r\n            this._pipTranslate.setTranslations('ru', {\r\n                DOCUMENTS_ATTACHED: 'документов добавлено',\r\n                ERROR_DOCUMENTS_LOADED: 'Ошибка: <%= error_number %> документ(ов) не загружено'\r\n\r\n            });\r\n        }\r\n\r\n        // Apply class and call resize\r\n        this.$element.addClass('pip-primary-actions');\r\n\r\n        this.$rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\r\n            this.onActionsChanged(event, config);\r\n        });\r\n\r\n    }\r\n    \r\n    public $onInit() {\r\n        if (this.localActions) {\r\n            this.pipActions.primaryLocalActions = this.localActions;\r\n        }\r\n\r\n        if (this.globalActions) {\r\n            this.pipActions.primaryGlobalActions = this.globalActions;\r\n        }\r\n\r\n        this.config = this.pipActions.config;\r\n    }\r\n\r\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\r\n        this.config = config;\r\n    }\r\n\r\n    public isHidden(action: ActionItem): boolean {\r\n        // Todo: Check breakpoints here\r\n        return action.access && !action.access(action);\r\n    }\r\n\r\n    public actionCount(action: ActionItem): string {\r\n        if (action.count === null || action.count <= 0) {\r\n            return '';\r\n        }\r\n        if (action.count > 99) {\r\n            return '!';\r\n        }\r\n\r\n        return String(action.count);\r\n    }\r\n\r\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        if (action.subActions) {\r\n            $mdOpenMenu(this.originatorEv);\r\n            return;\r\n        }\r\n\r\n        if (_.isFunction(action.click)) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this.$window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this.$location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this.$injector.has('$state')) {\r\n                let _state: angular.ui.IStateService = this.$injector.has('pipTranslate') ? <angular.ui.IStateService>this.$injector.get('$state') : null ;\r\n                if (_state) {\r\n                    _state.go(action.state, action.stateParams);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this.$rootScope.$broadcast(action.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this.$rootScope.$broadcast('pipActionClicked', action.name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\ninterface IPrimaryActionsBindings {\r\n    [key: string]: any;\r\n\r\n    localActions: any,\r\n    globalActions: any,\r\n    originatorEv: any\r\n}\r\n\r\nconst PrimaryActionsBindings: IPrimaryActionsBindings = {\r\n    localActions: '<pipLocalActions',\r\n    globalActions: '<pipGlobalActions',\r\n    originatorEv: '<?pipOriginatorEv'\r\n}\r\n\r\nclass PrimaryActionsChanges implements ng.IOnChangesObject, IPrimaryActionsBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    localActions: ng.IChangesObject<ActionItem[]>;\r\n    globalActions: ng.IChangesObject<ActionItem[]>;\r\n    originatorEv: ng.IChangesObject<any>;\r\n}\r\n\r\n\r\n(() => {\r\n    const primaryActions: ng.IComponentOptions = {\r\n        bindings: PrimaryActionsBindings,\r\n        templateUrl: 'actions/PrimaryActions.html',\r\n        controller: PrimaryActionsController\r\n    };\r\n\r\n\r\n    angular\r\n        .module('pipActions')\r\n        .component('pipPrimaryActions', primaryActions);\r\n\r\n})();","import { IActionsService, ActionItem, ActionsConfig } from \"./IActionsService\";\r\n\r\nclass SecondaryActionsController {\r\n    private pipTranslate: pip.services.ITranslateService\r\n    private _menuFn: Function;\r\n    private originatorEv: any;\r\n\r\n    public config: ActionsConfig;\r\n    public localActions: ActionItem[];\r\n    public globalActions: ActionItem[];\r\n\r\n    constructor(\r\n        private $attrs: ng.IAttributes,\r\n        private $injector: ng.auto.IInjectorService,\r\n        private $log: ng.ILogService,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService,\r\n        private $location: ng.ILocationService,\r\n        private pipActions: IActionsService,\r\n        $element: ng.IAugmentedJQuery,\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-secondary-actions');\r\n\r\n        if (this.localActions) {\r\n            pipActions.secondaryLocalActions = this.localActions;\r\n        }\r\n\r\n        if (this.globalActions) {\r\n            pipActions.secondaryGlobalActions = this.globalActions;\r\n        }\r\n\r\n        this.config = pipActions.config;\r\n\r\n        this.$rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\r\n            this.onActionsChanged(event, config);\r\n        });\r\n\r\n        this.$rootScope.$on('pipSecondaryActionsOpen', () => {\r\n            this.onActionsMenuOpen();\r\n        });\r\n\r\n    }\r\n\r\n    public getMenu(menuFn: Function): void {\r\n         this._menuFn = menuFn;\r\n    }\r\n\r\n    public onActionsMenuOpen(): void {\r\n        this._menuFn();\r\n    }\r\n\r\n    public openMenu($mdOpenMenu: Function, ev: ng.IAngularEvent): void {\r\n        this.originatorEv = ev;\r\n        $mdOpenMenu(ev);\r\n    }\r\n\r\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\r\n        this.config = config;\r\n    }\r\n\r\n    public isHidden(action: ActionItem): boolean {\r\n        // Todo: Check breakpoints here\r\n        return action.access && !action.access(action);\r\n    }\r\n\r\n    public actionCount(action: ActionItem): string {\r\n        if (action.count === null || action.count <= 0) {\r\n            return '';\r\n        }\r\n        if (action.count > 99) {\r\n            return '!';\r\n        }\r\n\r\n        return String(action.count);\r\n    }\r\n\r\n\r\n    private calcActions(actions: ActionItem[]): number {\r\n        let count: number = 0;\r\n\r\n        _.each(actions, (action: ActionItem) => {\r\n            if (!this.isHidden(action)) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    public secondaryActionsVisible() {\r\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 ||\r\n            this.calcActions(this.config.secondaryLocalActions) > 0;\r\n    }\r\n\r\n    public secondaryDividerVisible() {\r\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 &&\r\n            this.calcActions(this.config.secondaryLocalActions) > 0;\r\n    }\r\n\r\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        // todo: do not supported into ActionItem\r\n        // if (action.close) {\r\n        //     this.$scope.originatorEv = null;\r\n        // }\r\n\r\n        if (action.subActions) {\r\n            $mdOpenMenu(this.originatorEv);\r\n            return;\r\n        }\r\n\r\n        if (action.click) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this.$window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this.$location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this.$injector.has('$state')) {\r\n                let _state: angular.ui.IStateService = this.$injector.has('pipTranslate') ? <angular.ui.IStateService>this.$injector.get('$state') : null;\r\n                if (_state) {\r\n                    _state.go(action.state, action.stateParams);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this.$rootScope.$broadcast(action.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this.$rootScope.$broadcast('pipActionClicked', action.name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\ninterface ISecondaryActionsBindings {\r\n    [key: string]: any;\r\n\r\n    localActions: any,\r\n    globalActions: any\r\n}\r\n\r\nconst SecondaryActionsBindings: ISecondaryActionsBindings = {\r\n    localActions: '<pipLocalActions',\r\n    globalActions: '<pipGlobalActions'\r\n}\r\n\r\nclass SecondaryActionsChanges implements ng.IOnChangesObject, ISecondaryActionsBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n\r\n    localActions: ng.IChangesObject<ActionItem[]>;\r\n    globalActions: ng.IChangesObject<ActionItem[]>;\r\n}\r\n\r\n\r\n(() => {\r\n    const secondaryActions: ng.IComponentOptions = {\r\n        bindings: SecondaryActionsBindings,\r\n        templateUrl: 'actions/SecondaryActions.html',\r\n        controller: SecondaryActionsController\r\n    };\r\n\r\n    angular\r\n        .module('pipActions')\r\n        .component('pipSecondaryActions', secondaryActions);\r\n\r\n})();\r\n","angular.module('pipActions', ['ngMaterial', 'pipNav.Templates', 'ui.router']);\r\n\r\nimport './ActionsService';\r\nimport './PrimaryActions';\r\nimport './SecondaryActions';\r\n\r\nexport * from './IActionsService';","﻿import { AppBarConfig } from './AppBarConfig';\r\nimport { IAppBarService } from \"./IAppBarService\";\r\n\r\nclass AppBarController {\r\n    public config: AppBarConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipAppBar: IAppBarService\r\n    ) {\r\n        \"ngInject\";\r\n        // Apply class and call resize\r\n        $element.addClass('pip-appbar');\r\n        $element.addClass('color-primary-bg');\r\n\r\n        this.config = pipAppBar.config;\r\n\r\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\r\n            this.onAppBarChanged(event, config)\r\n        });\r\n    }\r\n\r\n    public onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\r\n        this.config = config;\r\n    }\r\n    \r\n}\r\n\r\n{\r\n    const appbar: ng.IComponentOptions = {\r\n        transclude: true,\r\n        templateUrl: 'appbar/AppBar.html',\r\n        controller: AppBarController\r\n    }\r\n\r\n    angular\r\n        .module('pipAppBar')\r\n        .component('pipAppbar', appbar);\r\n\r\n}","export class AppBarConfig {\r\n    visible: boolean;\r\n    parts: any;\r\n    classes: string[];\r\n} ","import { AppBarConfig } from './AppBarConfig';\r\nimport { IAppBarService } from \"./IAppBarService\";\r\n\r\nclass AppBarPartController {\r\n    \r\n    private _partName: string;\r\n    private _partValue: string;\r\n\r\n    constructor(\r\n        private $scope: ng.IScope,\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipAppBar: IAppBarService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._partName = String($attrs['pipAppbarPart']);\r\n        this._partValue = null;\r\n\r\n        // Break part apart\r\n        let pos: number = this._partName.indexOf(':');\r\n        if (pos > 0) {\r\n            this._partValue = this._partName.substr(pos + 1);\r\n            this._partName = this._partName.substr(0, pos);\r\n        }\r\n\r\n        this.onAppBarChanged(null, pipAppBar.config);\r\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\r\n            this.onAppBarChanged(null, config)\r\n        });\r\n\r\n    }\r\n\r\n    private onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\r\n        let parts: any = config.parts || {};\r\n        let currentPartValue = parts[this._partName];\r\n\r\n        // Set visible variable to switch ngIf\r\n        let visible: boolean = !!(this._partValue ? currentPartValue == this._partValue : currentPartValue);\r\n\r\n        if (visible != this.$scope['visible'])\r\n            this.$scope['visible'] = visible;\r\n    }\r\n\r\n}\r\n\r\n// Example is taken from here: http://stackoverflow.com/questions/20325480/angularjs-whats-the-best-practice-to-add-ngif-to-a-directive-programmatically\r\n(() => {\r\n    function appbarPart(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        var ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function linkFunction($scope: ng.IScope, $element: ng.IAugmentedJQuery, $attrs: ng.IAttributes) {\r\n                // Visualize based on visible variable in scope\r\n                $attrs['ngIf'] = () => {\r\n                    return $scope['visible'];\r\n                };\r\n                ngIf.link.apply(ngIf, arguments);\r\n            },\r\n            controller: AppBarPartController\r\n        };\r\n    }\r\n\r\n    angular.module('pipAppBar')\r\n        .directive('pipAppbarPart', appbarPart);\r\n\r\n})();","import { AppBarConfig } from './AppBarConfig';\r\nimport { IAppBarService, IAppBarProvider } from './IAppBarService';\r\n\r\nexport const AppBarChangedEvent: string = 'pipAppBarChanged';\r\n\r\nclass AppBarService implements IAppBarService {\r\n    private _config: AppBarConfig;\r\n\r\n    public constructor(config: AppBarConfig, private $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n    }\r\n\r\n    public get config(): AppBarConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void {\r\n        this._config.visible = true;\r\n        this._config.parts = parts || this._config.parts || {};\r\n        this._config.classes = classes || this._config.classes || [];\r\n        if (shadowBreakpoints) {\r\n            this.setShadow(shadowBreakpoints); \r\n        }\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.visible = false;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private hideShadow(): void {\r\n        this._config.classes = _.reject(this._config.classes, (c) => c.startsWith('pip-shadow'));\r\n    }\r\n\r\n    private setShadow(breakpoints: string[]): void {\r\n        this.hideShadow();\r\n\r\n        if (breakpoints != null && breakpoints.length > 0) {\r\n            _.each(breakpoints, (bp) => {\r\n                this._config.classes.push('pip-shadow-' + bp);\r\n            });\r\n        } else {\r\n            this._config.classes.push('pip-shadow');\r\n        }\r\n    }\r\n\r\n    public addShadow(...breakpoints: string[]): void {\r\n        this.setShadow(breakpoints);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeShadow(): void {\r\n        this.hideShadow();\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this.$rootScope.$broadcast(AppBarChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass AppBarProvider implements IAppBarProvider {\r\n    private _config: AppBarConfig = {\r\n        visible: true,\r\n        parts: {},\r\n        classes: []\r\n    };\r\n    private _service: AppBarService;\r\n\r\n    public get config(): AppBarConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: AppBarConfig) {\r\n        this._config = value || new AppBarConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AppBarService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }     \r\n}\r\n\r\nangular\r\n    .module('pipAppBar')\r\n    .provider('pipAppBar', AppBarProvider);\r\n","angular\r\n    .module('pipAppBar', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './AppBarConfig';\r\nimport './AppBarService';\r\nimport './AppBar';\r\nimport './AppBarPart';\r\n\r\nexport * from './AppBarService';\r\n","import { SimpleActionItem } from '../actions/IActionsService';\r\nimport { BreadcrumbItem } from './BreadcrumbConfig';\r\nimport { BreadcrumbConfig } from './BreadcrumbConfig';\r\nimport { IBreadcrumbService } from './IBreadcrumbService';\r\nimport { BreadcrumbChangedEvent } from './BreadcrumbService';\r\nimport { BreadcrumbBackEvent } from './BreadcrumbService';\r\nimport { OpenSearchEvent } from '../search/SearchService';\r\n\r\n// interface IBreadcrumbBindings {\r\n//     [key: string]: any;\r\n\r\n//     breakpoint: any;\r\n// }\r\n\r\n// const BreadcrumbBindings: IBreadcrumbBindings = {\r\n//     breakpoint: '<?pipBreakpoint', // string\r\n// }\r\n\r\n// class BreadcrumbChanges implements ng.IOnChangesObject, IBreadcrumbBindings {\r\n//     [key: string]: ng.IChangesObject<any>;\r\n//     // Not one way bindings\r\n//     breakpoint: ng.IChangesObject<string>;\r\n// }\r\n\r\nclass BreadcrumbController {\r\n    private originatorEv: Event;\r\n    private _media: any;\r\n\r\n    public config: BreadcrumbConfig;\r\n    // public breakpoint: string;\r\n\r\n    public constructor(\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService,\r\n        private $location: ng.ILocationService,\r\n        private $injector: ng.auto.IInjectorService,\r\n        pipBreadcrumb: IBreadcrumbService,\r\n        $mdMedia: angular.material.IMedia,\r\n        $state: ng.ui.IStateService,\r\n        $element: ng.IAugmentedJQuery,\r\n        private navConstant: any\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-breadcrumb');\r\n\r\n        this.config = pipBreadcrumb.config;\r\n\r\n        $rootScope.$on(BreadcrumbChangedEvent, (event: ng.IAngularEvent, config: BreadcrumbConfig) => {\r\n            this.onBreadcrumbChanged(event, config);\r\n        });\r\n        $rootScope.$on(BreadcrumbBackEvent, () => { this.onBreadcrumbBack(); });\r\n\r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this._media = pipMedia !== undefined ? pipMedia : $mdMedia;\r\n\r\n        if (!this.config.breakpoint) {\r\n            this.config.breakpoint = this.navConstant.BREADCRUMB_BREAKPOINT;\r\n\r\n        }\r\n    }\r\n\r\n    // public $onChanges(changes: BreadcrumbChanges) {\r\n\r\n    //     if (!changes.breakpoint) {\r\n    //         if (!this.breakpoint) {\r\n    //             this.breakpoint = this.navConstant.BREADCRUMB_BREAKPOINT;\r\n\r\n    //         }\r\n    //     } else {\r\n    //         this.breakpoint = changes.breakpoint.currentValue ? changes.breakpoint.currentValue : this.navConstant.BREADCRUMB_BREAKPOINT\r\n    //     }\r\n    // }\r\n\r\n    private onBreadcrumbChanged(event: ng.IAngularEvent, config: BreadcrumbConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    private onBreadcrumbBack(): void {\r\n        let items: BreadcrumbItem[] = this.config.items;\r\n        // Go to the last breadcrumb item\r\n        if (_.isArray(items) && items.length > 0) {\r\n            let item: BreadcrumbItem = items[items.length - 1];\r\n            if (_.isFunction(item.click)) {\r\n                item.click(item);\r\n            } else {\r\n                this.$window.history.back();\r\n            }\r\n        } else {\r\n            this.$window.history.back();\r\n        }\r\n    }\r\n\r\n    public onClick(item: BreadcrumbItem): void {\r\n        if (_.isFunction(item.click)) {\r\n            item.click(item);\r\n        }\r\n    }\r\n\r\n    public openSearch(): void {\r\n        this.$rootScope.$broadcast(OpenSearchEvent);\r\n    }\r\n\r\n    public actionsVisible(item: BreadcrumbItem): boolean {\r\n\r\n        return angular.isArray(item.subActions) && item.subActions.length > 1;\r\n    }\r\n\r\n    public onOpenMenu($mdOpenMenu: Function, event: Event): void {\r\n        this.originatorEv = event;\r\n        $mdOpenMenu(this.originatorEv);\r\n    }\r\n\r\n    public onSubActionClick(action: SimpleActionItem): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        if (_.isFunction(action.click)) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this.$window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this.$location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this.$injector.has('$state')) {\r\n                let _state: angular.ui.IStateService = this.$injector.get('$state') as ng.ui.IStateService\r\n                _state.go(action.state, action.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this.$rootScope.$broadcast(action.event);\r\n            this.originatorEv = null;\r\n        } else {\r\n            // Otherwise raise notification\r\n            this.$rootScope.$broadcast('pipActionClicked', action.name);\r\n            this.originatorEv = null;\r\n        }\r\n    }\r\n}\r\n\r\nconst breadcrumb: ng.IComponentOptions = {\r\n    // bindings: BreadcrumbBindings,\r\n    templateUrl: 'breadcrumb/Breadcrumb.html',\r\n    controller: BreadcrumbController\r\n}\r\n\r\nangular\r\n    .module('pipBreadcrumb')\r\n    .component('pipBreadcrumb', breadcrumb);","import { SimpleActionItem } from '../actions/IActionsService';\r\nexport class BreadcrumbItem {\r\n    title: string = null;\r\n    click?: (item: BreadcrumbItem) => void = null;   \r\n    subActions?: SimpleActionItem[] = null; \r\n}\r\n\r\nexport class BreadcrumbConfig {\r\n    text: string;\r\n    items: BreadcrumbItem[];\r\n    criteria: string;\r\n    breakpoint: string;\r\n}\r\n","import { BreadcrumbItem, BreadcrumbConfig } from './BreadcrumbConfig';\r\nimport { IBreadcrumbService, IBreadcrumbProvider } from './IBreadcrumbService';\r\n\r\nexport const BreadcrumbChangedEvent: string = \"pipBreadcrumbChanged\";\r\nexport const BreadcrumbBackEvent: string = \"pipBreadcrumbBack\";\r\n\r\nclass BreadcrumbService implements IBreadcrumbService {\r\n    private _config: BreadcrumbConfig;\r\n\r\n    public constructor(\r\n        private $rootScope: ng.IRootScopeService,\r\n        config: BreadcrumbConfig\r\n    ) {\r\n        this._config = config;\r\n    }\r\n\r\n    public get config() {\r\n        return this._config;\r\n    }\r\n\r\n    public get text(): string {\r\n        return this._config.text;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._config.text = value;\r\n        this._config.items = null;\r\n\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get items(): BreadcrumbItem[] {\r\n        return this._config.items;\r\n    }\r\n\r\n    public set items(value: BreadcrumbItem[]) {\r\n        this._config.text = null;\r\n        this._config.items = value;\r\n\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get criteria(): string {\r\n        return this._config.criteria;\r\n    }\r\n\r\n    public set criteria(value: string) {\r\n        this._config.criteria = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get breakpoint(): string {\r\n        return this._config.breakpoint;\r\n    }\r\n\r\n    public set breakpoint(value: string) {\r\n        this._config.breakpoint = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showText(text: string, criteria?: string): void {\r\n        this._config.text = text;\r\n        this._config.items = null;\r\n        this._config.criteria = criteria;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showItems(items: BreadcrumbItem[], criteria?: string): void {\r\n        this._config.items = items || [];\r\n        this._config.text = null;\r\n        this._config.criteria = criteria;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public sendConfigEvent() {\r\n        this.$rootScope.$broadcast(BreadcrumbChangedEvent, this._config);\r\n    }\r\n}\r\n\r\n\r\nclass BreadcrumbProvider implements IBreadcrumbProvider, ng.IServiceProvider {\r\n    private _config: BreadcrumbConfig = new BreadcrumbConfig();\r\n    private _service: BreadcrumbService;\r\n\r\n    public get text(): string {\r\n        return this._config.text;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._config.text = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService): IBreadcrumbService {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new BreadcrumbService($rootScope, this._config);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\n\r\nangular\r\n    .module('pipBreadcrumb')\r\n    .provider('pipBreadcrumb', BreadcrumbProvider);\r\n","angular.module('pipBreadcrumb', ['ngMaterial', 'pipNav.Templates', 'pipNav.Translate']);\r\n\r\nimport './Breadcrumb';\r\nimport './BreadcrumbService';\r\n\r\nexport * from './BreadcrumbService';\r\n\r\n\r\n","import { INavService } from './INavService'\r\nimport { INavIconService } from '../icon/INavIconService';\r\nimport { INavMenuService } from '../menu/INavMenuService';\r\nimport { INavHeaderService } from '../header/INavHeaderService';\r\nimport { IBreadcrumbService } from '../breadcrumb/IBreadcrumbService';\r\nimport { ISearchService } from '../search/ISearchService';\r\nimport { IActionsService } from '../actions/IActionsService';\r\nimport { IAppBarService } from '../appbar/IAppBarService';\r\nimport { ISideNavService } from '../sidenav/ISideNavService';\r\n\r\nclass NavService implements INavService {\r\n\r\n    public appbar: IAppBarService;\r\n    public icon: INavIconService;\r\n    public breadcrumb: IBreadcrumbService;\r\n    public actions: IActionsService;\r\n    public search: ISearchService;\r\n    public sidenav: ISideNavService;\r\n    public header: INavHeaderService;\r\n    public menu: INavMenuService;\r\n\r\n    public constructor($injector: ng.auto.IInjectorService) {\r\n        \"ngInject\";\r\n\r\n        this.appbar = $injector.has('pipAppBar') ? <IAppBarService>$injector.get('pipAppBar') : null;\r\n        this.icon = $injector.has('pipNavIcon') ? <INavIconService>$injector.get('pipNavIcon') : null;\r\n        this.breadcrumb = $injector.has('pipBreadcrumb') ? <IBreadcrumbService>$injector.get('pipBreadcrumb') : null;\r\n        this.actions = $injector.has('pipActions') ? <IActionsService>$injector.get('pipActions') : null;\r\n        this.search = $injector.has('pipSearch') ? <ISearchService>$injector.get('pipSearch') : null;\r\n        this.sidenav = $injector.has('pipSideNav') ? <ISideNavService>$injector.get('pipSideNav') : null;\r\n        this.header = $injector.has('pipNavHeader') ? <INavHeaderService>$injector.get('pipNavHeader') : null;\r\n        this.menu = $injector.has('pipNavMenu') ? <INavMenuService>$injector.get('pipNavMenu') : null;\r\n    }\r\n\r\n    public reset() {\r\n        // Reset appbar\r\n        if (this.appbar) {\r\n            this.appbar.show();\r\n        }\r\n\r\n        // Reset icon\r\n        if (this.icon) {\r\n            this.icon.showMenu();\r\n        }\r\n\r\n        // Reset breadcrumb\r\n        if (this.breadcrumb) {\r\n            this.breadcrumb.showText(null);\r\n        }\r\n\r\n        // Reset actions\r\n        if (this.actions) {\r\n            this.actions.show();\r\n        }\r\n\r\n        // Reset search\r\n        if (this.search) {\r\n            this.search.set(null);\r\n        }\r\n\r\n        if (this.sidenav) {\r\n            this.sidenav.show();\r\n        }\r\n\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNavService', [])\r\n    .service('pipNavService', NavService);","{\r\n\r\n    function translateFilter($injector: ng.auto.IInjectorService) {\r\n        \"ngInject\";\r\n\r\n        let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') \r\n            ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n        return function (key: string) {\r\n            return pipTranslate ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipNav.Translate', [])\r\n        .filter('translate', translateFilter);\r\n\r\n}\r\n\r\n","{\r\n    class DropdownController {\r\n        private _pipTranslate: pip.services.ITranslateService;\r\n        private _pipTheme: pip.themes.IThemeService;\r\n        private _pipMedia: pip.layouts.IMediaService;\r\n\r\n        public themeClass: string;\r\n        public media: any;\r\n        public actions: any[]; // string or array\r\n        public activeIndex: number;\r\n        public selectedIndex: number;\r\n        public currentTheme: string;\r\n\r\n        public ngDisabled: Function;\r\n        public showDropdown: Function;\r\n        public select: any;\r\n        public pipChange: Function;\r\n\r\n        constructor(\r\n            private $scope: angular.IScope,\r\n            private $timeout: ng.ITimeoutService,\r\n            $element: ng.IAugmentedJQuery,\r\n            $attrs: ng.IAttributes,\r\n            $injector: ng.auto.IInjectorService,\r\n            $log: ng.ILogService,\r\n            $rootScope: ng.IRootScopeService,\r\n            $mdMedia: angular.material.IMedia,\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._pipTheme = $injector.has('pipTheme') ? <pip.themes.IThemeService>$injector.get('pipTheme') : null;\r\n            this._pipMedia = $injector.has('pipMedia') ? <pip.layouts.IMediaService>$injector.get('pipMedia') : null;\r\n\r\n            if (this._pipTheme) {\r\n                this.currentTheme = this._pipTheme.theme;\r\n            } else if ($rootScope['$theme']) {\r\n                this.currentTheme = $rootScope['$theme'];\r\n            }\r\n\r\n            this.themeClass = ($attrs['class'] || '') + ' md-' + this.currentTheme + '-theme';\r\n\r\n            //pipAssert.isArray($scope.actions, 'pipDropdown: pip-actions attribute should take an array, but take ' + typeof $scope.actions);\r\n            this.media = !_.isUndefined(this._pipMedia) ? this._pipMedia : $mdMedia;\r\n            this.actions = (this.actions && _.isArray(this.actions)) ? this.actions : [];\r\n            this.activeIndex = this.activeIndex || 0;\r\n        }\r\n\r\n        public disabled(): boolean {\r\n            if (this.ngDisabled) {\r\n                return this.ngDisabled();\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public onSelect(index: number): void {\r\n            this.activeIndex = index;\r\n            if (this.select) {\r\n                this.select(this.actions[index], this.activeIndex);\r\n            }\r\n\r\n            if (this.pipChange) {\r\n                this.$timeout(() => {\r\n                    this.pipChange();\r\n                });\r\n            }\r\n        }\r\n\r\n        public show(): boolean {\r\n            let result: boolean;\r\n            if (this.showDropdown()) {\r\n                return !!this.showDropdown();\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    interface IDropdownBindings {\r\n        [key: string]: any;\r\n\r\n        ngDisabled: any,\r\n        actions: any,\r\n        showDropdown: any,\r\n        activeIndex: any,\r\n        select: any,\r\n        pipChange: any\r\n    }\r\n\r\n    const DropdownBindings: IDropdownBindings = {\r\n        ngDisabled: '&',\r\n        actions: '=pipActions',\r\n        showDropdown: '&pipShow',\r\n        activeIndex: '=pipActiveIndex',\r\n        select: '=pipDropdownSelect',\r\n        pipChange: '&'\r\n    }\r\n\r\n    class DropdownChanges implements ng.IOnChangesObject, IDropdownBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        ngDisabled: ng.IChangesObject<Function>;\r\n        actions: ng.IChangesObject<any>;\r\n        showDropdown: ng.IChangesObject<Function>;\r\n        activeIndex: ng.IChangesObject<number>;\r\n        select: ng.IChangesObject<any>;\r\n        pipChange: ng.IChangesObject<Function>;\r\n    }\r\n\r\n    const dropdown: ng.IComponentOptions = {\r\n        bindings: DropdownBindings,\r\n        templateUrl: 'dropdown/Dropdown.html',\r\n        controller: DropdownController\r\n    };\r\n\r\n    angular\r\n        .module('pipDropdown', ['pipNav.Templates'])\r\n        .component('pipDropdown', dropdown);\r\n\r\n}","import { INavHeaderService } from \"./INavHeaderService\";\r\nimport { NavHeaderConfig } from \"./NavHeaderConfig\";\r\n\r\n{\r\n    class NavHeaderController {\r\n        private cleanupNavHeaderChanged: Function;\r\n        private cleanupSideNavStateChanged: Function;\r\n\r\n        public title: string;\r\n        public subtitle: string;\r\n        public imageUrl: string = null;\r\n        public imageCss: string;\r\n        public image: any;\r\n        public imageBlock: any;\r\n        public loadedDefaultImage: boolean;\r\n        public showHeader: boolean;\r\n\r\n        constructor(\r\n            private $element: ng.IAugmentedJQuery,\r\n            private $scope: angular.IScope,\r\n            $log: ng.ILogService,\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipNavHeader: INavHeaderService,\r\n            navConstant: any\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            // Apply class and call resize\r\n            $element.addClass('pip-sticky-nav-header');\r\n\r\n            this.initImage();\r\n\r\n            this.cleanupNavHeaderChanged = $rootScope.$on('pipNavHeaderChanged', ($event: ng.IAngularEvent, config: NavHeaderConfig) => {\r\n                this.onNavHeaderChanged($event, config)\r\n            });\r\n            this.cleanupSideNavStateChanged = $rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: any) => { //navState\r\n                this.onStateChanged($event, state)\r\n            });\r\n\r\n        }\r\n\r\n        public $onDestroy() {\r\n\r\n            if (angular.isFunction(this.cleanupNavHeaderChanged)) {\r\n                this.cleanupNavHeaderChanged();\r\n            }\r\n            if (angular.isFunction(this.cleanupSideNavStateChanged)) {\r\n                this.cleanupSideNavStateChanged();\r\n            }\r\n        }\r\n\r\n        private initImage() {\r\n            this.imageBlock = this.$element.find('.pip-sticky-nav-header-user');\r\n\r\n            this.$timeout(() => {\r\n                this.image = this.$element.find('.pip-sticky-nav-header-user-image');\r\n\r\n                if (this.image[0]) {\r\n                    this.image[0].onload = (() => this.onImageLoad());\r\n\r\n                    // ($event: HTMLElement, erroev: Event): any =>  {\r\n                    //     this.onImageLoad($event);\r\n                    //     return null;\r\n                    // }\r\n                    this.image[0].onerror = (() => this.onImageError());\r\n                    // ($event: ng.IAngularEvent) => {\r\n                    //     this.onImageError($event);\r\n                    // }\r\n                } else {\r\n                    this.image.onload = (() => this.onImageLoad());\r\n                    this.image.onerror = (() => this.onImageError());\r\n                }\r\n\r\n                this.onNavHeaderChanged(null, this.pipNavHeader.config);\r\n            }, 20);\r\n        }\r\n\r\n        private initHeader() {\r\n            if (!this.pipNavHeader.config) return;\r\n\r\n            this.title = this.pipNavHeader.config.title;\r\n            this.subtitle = this.pipNavHeader.config.subtitle;\r\n            this.imageUrl = this.pipNavHeader.config.imageUrl;\r\n            this.imageCss = this.pipNavHeader.config.imageCss;\r\n        }\r\n\r\n        // // When image is loaded resize/reposition it\r\n        // private onImageLoad($event) {\r\n        //     let image: ng.IAugmentedJQuery = $($event.target);\r\n        //     this.setImageMarginCSS(image);\r\n        // };\r\n\r\n        // private onImageError($event) {\r\n        //     if (this.loadedDefaultImage) return;\r\n        //     this.$scope.$apply(() => {\r\n        //         this.setImage(this.pipNavHeader.config, true);\r\n        //     });\r\n        // };\r\n        // When image is loaded resize/reposition it\r\n        private onImageLoad() {\r\n            this.setImageMarginCSS(this.image);\r\n        };\r\n\r\n        private onImageError() {\r\n            if (this.loadedDefaultImage) return;\r\n            this.$scope.$apply(() => {\r\n                this.setImage(this.pipNavHeader.config, true);\r\n            });\r\n        };\r\n\r\n        private onStateChanged(event: ng.IAngularEvent, state: any) { // navState\r\n            if (state === undefined) return;\r\n\r\n            if (state.id == 'toggle') {\r\n                this.$timeout(() => {\r\n                    this.showHeader = state && state.id == 'toggle';\r\n                }, 400);\r\n            } else {\r\n                this.showHeader = false;\r\n            }\r\n        }\r\n\r\n        private setImageMarginCSS(image: ng.IAugmentedJQuery) { //image[0]\r\n            var cssParams = {},\r\n                containerWidth = this.imageBlock.width ? this.imageBlock.width() : this.imageBlock.clientWidth,\r\n                containerHeight = this.imageBlock.height ? this.imageBlock.height() : this.imageBlock.clientHeight,\r\n                imageWidth = image[0]['naturalWidth'] || image.width,\r\n                imageHeight = image[0]['naturalHeight'] || image.height,\r\n                margin = 0;\r\n\r\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n                cssParams['margin-left'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + containerHeight + 'px';\r\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px';\r\n                cssParams['margin-top'] = '';\r\n            } else {\r\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n                cssParams['margin-top'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px';\r\n                cssParams['width'] = '' + containerWidth + 'px';\r\n                cssParams['margin-left'] = '';\r\n            }\r\n\r\n            image.css(cssParams);\r\n        };\r\n\r\n        private setImage(config, loadError: boolean) {\r\n            if (!config) return;\r\n\r\n            let url: string;\r\n\r\n            if (!loadError && !!config.imageUrl) {\r\n                url = config.imageUrl;\r\n            } else {\r\n                this.loadedDefaultImage = true;\r\n                url = config.defaultImageUrl;\r\n            }\r\n\r\n            if (url && this.image) {\r\n                this.image.attr('src', url);\r\n            } else {\r\n                this.imageBlock.css(\"display\", \"none\");\r\n            }\r\n        }\r\n\r\n        private onNavHeaderChanged($event: ng.IAngularEvent, config: NavHeaderConfig) {\r\n            if (!config) return;\r\n\r\n            this.title = config.title;\r\n            this.subtitle = config.subtitle;\r\n            this.imageUrl = config.imageUrl;\r\n            this.imageCss = config.imageCss;\r\n\r\n            this.setImage(config, false)\r\n        }\r\n\r\n        public onUserClick() {\r\n            this.$rootScope.$broadcast('pipNavUserClicked'); // todo\r\n        }\r\n\r\n    }\r\n\r\n    const navHeader: ng.IComponentOptions = {\r\n        templateUrl: 'header/NavHeader.html',\r\n        controller: NavHeaderController\r\n    };\r\n\r\n    angular\r\n        .module('pipNavHeader')\r\n        .component('pipNavHeader', navHeader);\r\n\r\n}","export class NavHeaderConfig {\r\n    // Image url\r\n    public imageUrl: string;\r\n    // Image url\r\n    public defaultImageUrl: string;\r\n    // Title\r\n    public title: string;\r\n    // Subtitle\r\n    public subtitle: string;\r\n    // image styles\r\n    public imageCss: string;\r\n    // Handle header click event\r\n    click: () => void;\r\n    // Event name\r\n    event: string\r\n};","import { NavHeaderConfig } from \"./NavHeaderConfig\";\r\nimport { INavHeaderService, INavHeaderProvider } from \"./INavHeaderService\";\r\n\r\nexport let NavHeaderChangedEvent = 'pipNavHeaderChanged';\r\n\r\nclass NavHeaderService implements INavHeaderService {\r\n    private _config: NavHeaderConfig;\r\n\r\n    public constructor(config: NavHeaderConfig, private $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n    }\r\n\r\n    public get config(): NavHeaderConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get title(): string {\r\n        return this._config.title;\r\n    }\r\n\r\n    public set title(value: string) {\r\n        this._config.title = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get subtitle(): string {\r\n        return this._config.subtitle;\r\n    }\r\n\r\n    public set subtitle(value: string) {\r\n        this._config.subtitle = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get imageUrl(): string {\r\n        return this._config.imageUrl;\r\n    }\r\n\r\n    public set imageUrl(value: string) {\r\n        this._config.imageUrl = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get click(): () => void {\r\n        return this._config.click;\r\n    }\r\n\r\n    public set click(value: () => void) {\r\n        this._config.click = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get event(): string {\r\n        return this._config.event;\r\n    }\r\n\r\n    public set event(value: string) {\r\n        this._config.event = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.title = title;\r\n        this._config.subtitle = subtitle;\r\n        this._config.imageUrl = imageUrl;\r\n\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n        }\r\n        if (_.isString(callbackOrEvent)) {\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.event = null;\r\n        }\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.title = null;\r\n        this._config.subtitle = null;\r\n        this._config.imageUrl = null;\r\n        this._config.click = null;\r\n        this._config.event = null;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this.$rootScope.$emit(NavHeaderChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavHeaderProvider implements INavHeaderProvider {\r\n    private _config: NavHeaderConfig = new NavHeaderConfig();\r\n    private _service: NavHeaderService;\r\n\r\n    public get config(): NavHeaderConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: NavHeaderConfig) {\r\n        this._config = value || new NavHeaderConfig();\r\n    }\r\n\r\n    public get defaultImageUrl(): string {\r\n        return this._config.defaultImageUrl;\r\n    }\r\n\r\n    public set defaultImageUrl(value: string) {\r\n        this._config.defaultImageUrl = value;\r\n    }\r\n\r\n    public get title(): string {\r\n        return this._config.title;\r\n    }\r\n\r\n    public set title(value: string) {\r\n        this._config.title = value;\r\n    }\r\n\r\n    public get subtitle(): string {\r\n        return this._config.subtitle;\r\n    }\r\n\r\n    public set subtitle(value: string) {\r\n        this._config.subtitle = value;\r\n    }\r\n\r\n    public get imageUrl(): string {\r\n        return this._config.imageUrl;\r\n    }\r\n\r\n    public set imageUrl(value: string) {\r\n        this._config.imageUrl = value;\r\n    }\r\n\r\n    public get click(): () => void {\r\n        return this._config.click;\r\n    }\r\n\r\n    public set click(value: () => void) {\r\n        this._config.click = value;\r\n    }\r\n\r\n    public get event(): string {\r\n        return this._config.event;\r\n    }\r\n\r\n    public set event(value: string) {\r\n        this._config.event = value;\r\n    }\r\n\r\n    public set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.title = title;\r\n        this._config.subtitle = subtitle;\r\n        this._config.imageUrl = imageUrl;\r\n\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n        }\r\n        if (_.isString(callbackOrEvent)) {\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.event = null;\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.title = null;\r\n        this._config.subtitle = null;\r\n        this._config.imageUrl = null;\r\n        this._config.click = null;\r\n        this._config.event = null;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavHeaderService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n\r\n}\r\n\r\n\r\nangular\r\n    .module('pipNavHeader')\r\n    .provider('pipNavHeader', NavHeaderProvider);\r\n","angular.module('pipNavHeader', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './NavHeaderService';\r\nimport './NavHeader';\r\n\r\nexport * from './NavHeaderService';","import { ToggleSideNavEvent } from '../sidenav/SideNavService';\r\nimport { NavIconConfig } from './NavIconConfig';\r\nimport { INavIconService } from './INavIconService';\r\nimport { NavIconClickedEvent, NavIconChangedEvent } from './NavIconService';\r\n\r\ninterface INavIconBindings {\r\n    [key: string]: any;\r\n\r\n    type: any;\r\n    imageUrl: any;\r\n    icon: any;\r\n}\r\n\r\nconst NavIconBindings: INavIconBindings = {\r\n    type: '<?pipType',\r\n    imageUrl: '<?pipImageUrl',\r\n    icon: '<?pipIcon'\r\n}\r\n\r\nclass NavIconChanges implements ng.IOnChangesObject, INavIconBindings {\r\n    [key: string]: ng.IChangesObject<any>;\r\n    // Not one way bindings\r\n\r\n    type: ng.IChangesObject<string>;\r\n    imageUrl: ng.IChangesObject<string>;\r\n    icon: ng.IChangesObject<string>;\r\n}\r\n\r\nclass NavIconController implements INavIconBindings {\r\n    private clearFn: Function;\r\n\r\n    public config: NavIconConfig;\r\n    public type: string;\r\n    public imageUrl: string;\r\n    public icon: string;\r\n\r\n    constructor(\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $window: ng.IWindowService,\r\n        $element: ng.IAugmentedJQuery,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        pipNavIcon: INavIconService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-nav-icon');\r\n\r\n        this.config = pipNavIcon.config;\r\n\r\n        this.clearFn = $rootScope.$on('pipNavIconChanged', (event: ng.IAngularEvent, config: NavIconConfig) => {\r\n            this.onNavIconChanged(event, config)\r\n        });\r\n\r\n    }\r\n\r\n    public $onInit() {\r\n        if (this.type) {\r\n            this.config.type = this.type;\r\n        }\r\n        if (this.imageUrl) {\r\n            this.config.imageUrl = this.imageUrl;\r\n        }\r\n        if (this.icon) {\r\n            this.config.icon = this.icon;\r\n        }        \r\n    }\r\n\r\n    public $onDestroy() {\r\n        if (_.isFunction(this.clearFn)) {\r\n            this.clearFn();\r\n        }\r\n    }\r\n\r\n    public onNavIconChanged(event: ng.IAngularEvent, config: NavIconConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    public onNavIconClick(): void {\r\n        if (_.isFunction(this.config.click)) {\r\n            // Execute nav icon callback\r\n            this.config.click();\r\n        } else if (this.config.event) {\r\n            this.$rootScope.$broadcast(this.config.event);\r\n        } else if (this.config.type == 'menu') {\r\n            this.$rootScope.$broadcast(ToggleSideNavEvent);\r\n        } else if (this.config.type == 'back') {\r\n            this.$window.history.back();\r\n        } else {\r\n            this.$rootScope.$broadcast(NavIconClickedEvent);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst NavIcon: ng.IComponentOptions = {\r\n    bindings: NavIconBindings,\r\n    templateUrl: 'icon/NavIcon.html',\r\n    controller: NavIconController\r\n}\r\n\r\nangular\r\n    .module('pipNavIcon')\r\n    .component('pipNavIcon', NavIcon);\r\n","export class NavIconConfig {\r\n    // Type of nav icon: 'back', 'menu', 'image' or 'none'\r\n    public type: string;\r\n    // Image url\r\n    public imageUrl: string;\r\n    // Icon name\r\n    public icon: string;\r\n    // Handle nav icon click event\r\n    click: () => void;\r\n    // Event name\r\n    event: string\r\n};","import { NavIconConfig } from './NavIconConfig';\r\nimport { INavIconService, INavIconProvider } from './INavIconService';\r\n\r\nexport const NavIconClickedEvent: string = 'pipNavIconClicked';\r\nexport const NavIconChangedEvent: string = 'pipNavIconChanged';\r\n\r\nclass NavIconService implements INavIconService {\r\n    private _config: NavIconConfig;\r\n\r\n    public constructor(config: NavIconConfig, private $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n    }\r\n\r\n    public get config(): NavIconConfig {\r\n        return this._config;\r\n    }\r\n\r\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n            this._config.event = null;\r\n        } else if (_.isString(callbackOrEvent)) {\r\n            this._config.click = null;\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n            this._config.event = null;\r\n        }\r\n    }\r\n\r\n    public showMenu(callbackOrEvent?: any): void {\r\n        this._config.type = 'menu';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showIcon(icon: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'icon';\r\n        this._config.icon = icon;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showBack(callbackOrEvent?: any): void {\r\n        this._config.type = 'back';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showImage(imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'image';\r\n        this._config.imageUrl = imageUrl;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.type = 'none';\r\n        this.setCallbackOrEvent(null);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this.$rootScope.$broadcast(NavIconChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavIconProvider implements INavIconProvider {\r\n    private _config: NavIconConfig = new NavIconConfig();\r\n    private _service: NavIconService;\r\n\r\n    public get config(): NavIconConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: NavIconConfig) {\r\n        this._config = value || new NavIconConfig();\r\n    }\r\n\r\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\r\n        if (_.isFunction(callbackOrEvent))\r\n            this._config.click = callbackOrEvent;\r\n        else this._config.click = null;\r\n\r\n        if (_.isString(callbackOrEvent))\r\n            this._config.event = callbackOrEvent;\r\n        else this._config.event = null;\r\n    }\r\n\r\n    public setMenu(callbackOrEvent?: any): void {\r\n        this._config.type = 'menu';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setIcon(icon: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'icon';\r\n        this._config.icon = icon;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setBack(callbackOrEvent?: any): void {\r\n        this._config.type = 'back';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setImage(imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'image';\r\n        this._config.imageUrl = imageUrl;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.type = 'none';\r\n        this.setCallbackOrEvent(null);\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavIconService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n     \r\n}\r\n\r\n\r\nangular\r\n    .module('pipNavIcon')\r\n    .provider('pipNavIcon', NavIconProvider);\r\n","angular.module('pipNavIcon', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './NavIconConfig';\r\nimport './INavIconService';\r\nimport './NavIconService';\r\nimport './NavIcon';\r\n\r\n\r\nexport * from './NavIconConfig';\r\nexport * from './INavIconService';\r\nexport * from './NavIconService';\r\n","﻿import './dependencies/TranslateFilter';\r\nimport './language/LanguagePickerDirective';\r\nimport './dropdown/Dropdown';\r\nimport './tabs/Tabs';\r\nimport './actions';\r\nimport './appbar';\r\nimport './search';\r\nimport './breadcrumb';\r\nimport './sidenav';\r\nimport './header';\r\nimport './menu';\r\nimport './icon';\r\nimport './common/NavService';\r\n\r\nangular\r\n    .module('pipNav', [\r\n        'pipNavService',\r\n        'pipDropdown',\r\n        'pipTabs',\r\n        'pipAppBar',\r\n        'pipSearchBar',\r\n        'pipNavIcon',\r\n        'pipBreadcrumb',\r\n        'pipLanguagePicker',\r\n        'pipActions', \r\n        'pipSideNav',\r\n        'pipNavMenu',\r\n        'pipNavHeader'\r\n    ])\r\n    .constant('navConstant', {\r\n        'TAB_BREAKPOINT': 'gt-sm',\r\n        'BREADCRUMB_BREAKPOINT': 'gt-xs',\r\n        'SIDENAV_CONTAINER': '.pip-main',\r\n        'SIDENAV_LARGE_WIDTH': 320,\r\n        'SIDENAV_MIDDLE_WIDTH': 240,\r\n        'SIDENAV_SMALL_WIDTH': 72,\r\n        'SIDENAV_ANIMATION_DURATION': 600\r\n    })\r\n\r\nexport * from './actions';\r\nexport * from './appbar';\r\nexport * from './breadcrumb';\r\nexport * from './search';\r\nexport * from './sidenav';\r\nexport * from './icon';\r\nexport * from './menu';\r\nexport * from './header';\r\nexport * from './common/INavService';\r\n","{\r\n    class LanguagePickerDirectiveController implements ILanguagePickerBindings {\r\n        private _translate: pip.services.ITranslateService;\r\n        public languages: string[];\r\n        public value: string;\r\n\r\n        public constructor(\r\n            $element: ng.IAugmentedJQuery,\r\n            $injector: ng.auto.IInjectorService,\r\n            $rootScope: ng.IRootScopeService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._translate = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n            // Apply class and call resize\r\n            $element.addClass('pip-language-picker');\r\n\r\n            this.setLanguages(this.languages);\r\n            this.value = this.value || this.languages[0];\r\n        }\r\n\r\n        public $onChanges(changes: LanguagePickerChanges) {\r\n            if (this.value != changes.value.previousValue) {\r\n            }\r\n        }\r\n\r\n        public get language() {\r\n            return this._translate ? this._translate.language : null;\r\n        }\r\n\r\n        public setLanguages(languages: string[]): void {\r\n            this.languages = languages && languages.length > 0 ? languages : ['en', 'ru'];\r\n        }\r\n\r\n        public onLanguageClick(language: string) {\r\n            if (this._translate != null) {\r\n                this.value = language;\r\n                this._translate.language = this.value;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    interface ILanguagePickerBindings {\r\n        [key: string]: any;\r\n\r\n        languages: any,\r\n        value: any\r\n    }\r\n\r\n    const LanguagePickerBindings: ILanguagePickerBindings = {\r\n        languages: '<?languages',\r\n        value: '<?value'\r\n    }\r\n\r\n    class LanguagePickerChanges implements ng.IOnChangesObject, ILanguagePickerBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n        // Not one way bindings\r\n\r\n        languages: ng.IChangesObject<string[]>;\r\n        value: ng.IChangesObject<string>;\r\n    }\r\n\r\n    const languagePickerDirective: ng.IComponentOptions = {\r\n        bindings: LanguagePickerBindings,\r\n        templateUrl: 'language/LanguagePicker.html',\r\n        controller: LanguagePickerDirectiveController\r\n    }\r\n\r\n    angular\r\n        .module('pipLanguagePicker', [\r\n            'ngMaterial', 'pipNav.Translate', 'pipNav.Templates'\r\n        ])\r\n        .component('pipLanguagePicker', languagePickerDirective);\r\n\r\n}","import { ISideNavService} from '../sidenav/ISideNavService';\r\nimport { INavMenuService} from './INavMenuService';\r\nimport { SideNavStateNames, SideNavState, SideNavConfig } from '../sidenav/SideNavState';\r\nimport { NavMenuConfig, NavMenuSection, NavMenuLink } from './NavMenuConfig';\r\n\r\n(() => {\r\n    class NavMenuController {\r\n        private _state: angular.ui.IStateService;\r\n        private _pipMedia: pip.layouts.IMediaService;\r\n        private _animationDuration;\r\n        private _pipSideNavElement: ng.IAugmentedJQuery;\r\n\r\n        public sections: NavMenuSection[];\r\n        public defaultIcon: string;\r\n        public isCollapsed: boolean;\r\n        public expanded: boolean = null;\r\n        public expandedButton: boolean;\r\n        public sideNavState: SideNavState;\r\n\r\n        constructor(\r\n            private $scope: angular.IScope,\r\n            private $window: ng.IWindowService,\r\n            private $location: ng.ILocationService,\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private pipSideNav: ISideNavService,\r\n            private pipNavMenu: INavMenuService,\r\n\r\n            $element: ng.IAugmentedJQuery,\r\n            $injector: ng.auto.IInjectorService,\r\n            navConstant: any\r\n\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this._state = $injector.has('$state') ? <angular.ui.IStateService>$injector.get('$state') : null;\r\n\r\n            this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION,\r\n                this._pipSideNavElement = $element.parents('pip-sidenav');///$element.parent().parent();\r\n            // Apply class and call resize\r\n            $element.addClass('pip-sticky-nav-menu');\r\n\r\n            this.sections = this.$scope['sections'] || this.pipNavMenu.sections;\r\n\r\n            this.setCollapsible();\r\n\r\n            this.defaultIcon = this.pipNavMenu.defaultIcon;\r\n\r\n            this.onStateChanged(null, this.pipSideNav.state);\r\n\r\n            let cleanupNavMenuChanged: Function = this.$rootScope.$on('pipNavMenuChanged', ($event: ng.IAngularEvent, config: NavMenuConfig) => { //navState\r\n                this.onConfigChanged($event, config)\r\n            });\r\n            let cleanupSideNavStateChanged: Function = this.$rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: SideNavState) => { //navState\r\n                this.onStateChanged($event, state)\r\n            });\r\n\r\n            this.$scope.$on('$destroy', () => {\r\n                if (angular.isFunction(cleanupNavMenuChanged)) {\r\n                    cleanupNavMenuChanged();\r\n                }\r\n                if (angular.isFunction(cleanupSideNavStateChanged)) {\r\n                    cleanupSideNavStateChanged();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        private setCollapsible(): void {\r\n            var collapsed: boolean;\r\n            if (angular.isFunction(this.$scope['collapsed'])) {\r\n                collapsed = this.$scope['collapsed']();\r\n            } else {\r\n                collapsed = this.$scope['collapsed'] !== false && this.$scope['collapsed'] !== 'false';\r\n            }\r\n\r\n            this.isCollapsed = collapsed;\r\n        }\r\n\r\n        public onExpand(): void {\r\n            if (!this.isCollapsed) { return }\r\n\r\n            this.expanded = !this.expanded;\r\n\r\n            if (this.expanded) {\r\n                this._pipSideNavElement.removeClass('pip-sticky-nav-small');\r\n            } else {\r\n                this._pipSideNavElement.addClass('pip-sticky-nav-small');\r\n            }\r\n            this.$rootScope.$emit('pipNavExpanded', this.expanded);\r\n        }\r\n\r\n        public isHidden(item: NavMenuLink): boolean {\r\n            return item && item.access && !item.access(item);\r\n        }\r\n\r\n        public isSectionEmpty(linkCollection: NavMenuLink[]): boolean {\r\n            var result = true;\r\n            _.each(linkCollection, (link: NavMenuLink) => {\r\n                if (!this.isHidden(link)) {\r\n                    result = false;\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        private onConfigChanged($event: ng.IAngularEvent, config: NavMenuConfig): void {\r\n            if (!config) return;\r\n            this.sections = config.sections;\r\n        }\r\n\r\n        private onStateChanged(event: ng.IAngularEvent, state: SideNavState): void {\r\n            // SS> You shall not set it into the menu state. Instead it shall be controlled by the state of Sidenav\r\n            if (!state) return;\r\n\r\n            this.isCollapsed = state.expand;\r\n            if (!state.expandedButton || this.expanded == null) this.expanded = state.isExpanded;\r\n            this.expandedButton = state.expandedButton;\r\n\r\n            this.sideNavState = state;\r\n        }\r\n\r\n        public isActive(link: NavMenuLink): boolean {\r\n            if (link.parentState) {\r\n\r\n                if (this._state != null && this._state.includes(link.parentState)) {\r\n                    return true;\r\n                }\r\n            } else if (link.state) {\r\n                if (this._state != null && this._state.includes(link.state)) {\r\n                    return true;\r\n                }\r\n            } else if (link.href) {\r\n                if (link.href.split('?')[0] === this.$window.location.href.split('?')[0]) {\r\n                    return true;\r\n                }\r\n            } else if (link.url) {\r\n                if (link.url.split(/[\\s/?]+/)[1] === this.$location.url().split(/[\\s/?]+/)[1]) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        public clickLink(event: ng.IAngularEvent, link: NavMenuLink): void {\r\n            event.stopPropagation();\r\n\r\n            if (!link) {\r\n                this.pipSideNav.close();\r\n\r\n                return;\r\n            }\r\n\r\n            if (link.href) {\r\n                if (link.href.split('?')[0] === this.$window.location.href.split('?')[0]) {\r\n                    this.pipSideNav.close();\r\n\r\n                    return;\r\n                }\r\n\r\n                this.pipSideNav.close();\r\n                this.$timeout(() => {\r\n                    this.$window.location.href = link.href;\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.url) {\r\n                if (link.url.split(/[\\s/?]+/)[1] === this.$location.url().split(/[\\s/?]+/)[1]) {\r\n                    this.pipSideNav.close();\r\n                    return;\r\n                }\r\n\r\n                this.pipSideNav.close();\r\n                this.$timeout(() => {\r\n                    this.$location.url(link.url);\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.state) {\r\n                if (this._state != null && this._state.current.name === link.state) {\r\n                    this.pipSideNav.close();\r\n\r\n                    return;\r\n                }\r\n\r\n                this.pipSideNav.close();\r\n                this.$timeout(() => {\r\n                    this._state.go(link.state, link.stateParams);\r\n                }, this._animationDuration);\r\n\r\n                return;\r\n            } else if (link.event) {\r\n                this.$rootScope.$broadcast(link.event, link);\r\n            }\r\n\r\n            this.pipSideNav.close();\r\n        }\r\n    }\r\n\r\n    interface INavMenuBindings {\r\n        [key: string]: any;\r\n        sections: any,\r\n        collapsed: any\r\n    }\r\n\r\n    const NavMenuBindings: INavMenuBindings = {\r\n        sections: '=?pipSections',\r\n        collapsed: '=?pipCollapsed'\r\n    };\r\n\r\n    function navMenuDirective() {\r\n        return {\r\n            restrict: 'EA',\r\n            scope: NavMenuBindings,\r\n            replace: false,\r\n            templateUrl: 'menu/NavMenu.html',\r\n            controller: NavMenuController,\r\n            controllerAs: '$ctrl'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipNavMenu')\r\n        .directive('pipNavMenu', navMenuDirective);\r\n\r\n})();","import { NavMenuConfig, NavMenuSection } from './NavMenuConfig';\r\nimport { INavMenuService, INavMenuProvider } from './INavMenuService';\r\n\r\nexport const NavMenuChangedEvent = 'pipNavMenuChanged';\r\n\r\nclass NavMenuService implements INavMenuService {\r\n    private _config: NavMenuConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: NavMenuConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get sections(): NavMenuSection[] {\r\n        return this._config.sections;\r\n    }\r\n\r\n    public set sections(value: NavMenuSection[]) {\r\n        this._config.sections = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get defaultIcon(): string {\r\n        return this._config.defaultIcon;\r\n    }\r\n\r\n    public updateBadgeStyle(link: string, style: string): void {\r\n        if (link == null || !_.isString(style)) return;\r\n\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                if (l.name == link)\r\n                    l.badgeStyle = style;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public set defaultIcon(value: string) {\r\n        this._config.defaultIcon = value;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public updateCount(link: string, count: number): void {\r\n        if (link == null || !_.isNumber(count)) return;\r\n\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                if (l.name == link)\r\n                    l.count = count;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public clearCounts(): void {\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                l.count = null;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    private sendChangeEvent() {\r\n        this._rootScope.$emit(NavMenuChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavMenuProvider implements INavMenuProvider {\r\n    private _config: NavMenuConfig = {\r\n        sections: [],\r\n        defaultIcon: 'icons:folder'\r\n    };\r\n    private _service: NavMenuService;\r\n\r\n    public get sections(): NavMenuSection[] {\r\n        return this._config.sections;\r\n    }\r\n\r\n    public set sections(value: NavMenuSection[]) {\r\n        this._config.sections = value || [];\r\n    }\r\n\r\n    public get defaultIcon(): string {\r\n        return this._config.defaultIcon;\r\n    }\r\n\r\n    public set defaultIcon(value: string) {\r\n        this._config.defaultIcon = value;\r\n    }\r\n\r\n    public $get($rootScope) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavMenuService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNavMenu')\r\n    .provider('pipNavMenu', NavMenuProvider);\r\n","angular.module('pipNavMenu', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './NavMenuService';\r\nimport './NavMenu';","import { SearchConfig } from './SearchConfig';\r\nimport { ISearchService } from './ISearchService';\r\nimport { OpenSearchEvent, CloseSearchEvent, SearchChangedEvent, SearchActivatedEvent } from './SearchService';\r\n\r\nclass SearchBarController {\r\n    private clearFn: Function;\r\n\r\n    public config: SearchConfig;\r\n    public enabled: boolean = false;\r\n    public search: any = { text: '' };\r\n\r\n    public constructor(\r\n        private $element: ng.IAugmentedJQuery,\r\n        private $rootScope: ng.IRootScopeService,\r\n        pipSearch: ISearchService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-search-bar');\r\n\r\n        this.config = pipSearch.config;\r\n        this.stateChange();\r\n        this.clearFn = $rootScope.$on(SearchChangedEvent, (event: ng.IAngularEvent, config: SearchConfig) => {\r\n            this.onSearchChanged(event, config);\r\n        });\r\n    }\r\n\r\n    public $onDestroy() {\r\n        if (_.isFunction(this.clearFn)) {\r\n            this.clearFn();\r\n        }\r\n    }\r\n\r\n    private stateChange(): void {\r\n        if (this.enabled) {\r\n            this.$element.addClass('w-stretch');\r\n            this.$element.parent().addClass('pip-search-active');\r\n\r\n        } else {\r\n            this.$element.removeClass('w-stretch');\r\n            this.$element.parent().removeClass('pip-search-active');\r\n        }\r\n    }\r\n\r\n    private onSearchChanged(event: ng.IAngularEvent, config: SearchConfig): void {\r\n        this.config = config;\r\n        this.enabled = false;\r\n        this.search.text = '';\r\n        this.stateChange();\r\n    }\r\n\r\n    private focusText(): void {\r\n        setTimeout(() => {\r\n            let element: JQuery = $('.pip-search-text');\r\n            if (element.length > 0)\r\n                element.focus();\r\n        }, 0);\r\n    }\r\n\r\n    public enable(): void {\r\n        this.search.text = this.config.criteria;\r\n        this.enabled = true;\r\n        this.focusText();\r\n        this.stateChange();\r\n    }\r\n\r\n    public onClick(): void {\r\n        let search = this.search.text;\r\n\r\n        this.search.text = '';\r\n        this.enabled = false;\r\n        this.stateChange();\r\n\r\n        if (this.config.callback) {\r\n            this.config.callback(search);\r\n        } else {\r\n            this.$rootScope.$broadcast(SearchActivatedEvent, search);\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        if (this.search.text) {\r\n            this.search.text = '';\r\n            this.focusText();\r\n        } else {\r\n            this.enabled = false;\r\n            this.stateChange();\r\n            this.onClick();\r\n        }\r\n    }\r\n\r\n    public onKeyDown(event: KeyboardEvent): void {\r\n        // Enter pressed\r\n        if (event.keyCode === 13)\r\n            this.onClick();\r\n        // ESC pressed\r\n        else if (event.keyCode === 27) {\r\n            this.enabled = false;\r\n            this.stateChange();\r\n        }\r\n    }\r\n}\r\n\r\nconst SearchBar: ng.IComponentOptions = {\r\n    templateUrl: 'search/SearchBar.html',\r\n    controller: SearchBarController\r\n}\r\n\r\nangular\r\n    .module('pipSearchBar')\r\n    .component('pipSearchBar', SearchBar);\r\n","export class SearchConfig {\r\n    // Search visible\r\n    public visible: boolean;\r\n    // Search criteria\r\n    public criteria: string;\r\n    // Custom search parameters\r\n    public params: any;\r\n    // History for search autocomplete\r\n    public history: string[];\r\n    // Callback for search\r\n    callback: (criteria: string) => void;\r\n}","import { SearchConfig } from './SearchConfig';\r\nimport { ISearchProvider, ISearchService } from './ISearchService';\r\n\r\nexport const OpenSearchEvent = 'pipOpenSearch';\r\nexport const CloseSearchEvent = 'pipCloseSearch';\r\nexport const SearchChangedEvent = 'pipSearchChanged';\r\nexport const SearchActivatedEvent = 'pipSearchActivated';\r\n\r\nclass SearchService implements ISearchService {\r\n    private _config: SearchConfig;\r\n\r\n    public constructor(\r\n        config: SearchConfig,\r\n        private $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n\r\n        $rootScope.$on(OpenSearchEvent, () => { this.open });\r\n        $rootScope.$on(CloseSearchEvent, () => { this.close });\r\n    }\r\n\r\n    public get config(): SearchConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get criteria(): string {\r\n        return this._config.criteria;\r\n    }\r\n\r\n    public set criteria(value: string) {\r\n        this._config.criteria = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get params(): any {\r\n        return this._config.params;\r\n    }\r\n\r\n    public set params(value: any) {\r\n        this._config.params = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get history(): string[] {\r\n        return this._config.history;\r\n    }\r\n\r\n    public set history(value: string[]) {\r\n        this._config.history = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get callback(): (criteria: string) => void {\r\n        return this._config.callback;\r\n    }\r\n\r\n    public set callback(value: (criteria: string) => void) {\r\n        this._config.callback = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void {\r\n        this._config.callback = callback;\r\n        this._config.criteria = criteria;\r\n        this._config.params = params;\r\n        this._config.history = history;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.callback = null;\r\n        this._config.criteria = null;\r\n        this._config.params = null;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public open(): void {\r\n        this._config.visible = true;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public close(): void {\r\n        this._config.visible = false;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public toggle(): void {\r\n        this._config.visible = !this._config.visible;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent(): void {\r\n        this.$rootScope.$broadcast(SearchChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass SearchProvider implements ISearchProvider {\r\n    private _config: SearchConfig = new SearchConfig();\r\n    private _service: SearchService = null;\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SearchService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\n\r\nangular.module('pipSearchBar')\r\n    .provider('pipSearch', SearchProvider);\r\n","angular.module('pipSearchBar', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './SearchConfig';\r\nimport './ISearchService';\r\nimport './SearchService';\r\nimport './SearchBar';\r\n\r\nexport * from './ISearchService';\r\n","import { ISideNavService } from './ISideNavService';\r\nimport { ToggleSideNavEvent } from '../sidenav/SideNavService';\r\nimport { SideNavStateNames, SideNavState, SideNavStateConfig, SideNavConfig } from './SideNavState';\r\n\r\nclass SideNavController implements ISideNavBindings {\r\n    private _pipMedia: pip.layouts.IMediaService;\r\n    private _isResizing: boolean;\r\n    private _animationDuration: number;\r\n    private _mainContainer: string; // todo add  to config\r\n    private _bigWidth: number;\r\n    private _middleWidth: number;\r\n    private _smallWidth: number;\r\n    private _mediaBreakpoints: pip.layouts.MediaBreakpoints;\r\n    private _navState: SideNavStateConfig;\r\n    private cleanupMainResized: Function;\r\n    private cleanupSideNavState: Function;\r\n    private cleanupNavHeaderChanged: Function;\r\n    private cleanupSideNavChanged: Function;\r\n    private windowResize: Function;\r\n\r\n    public sidenavState: SideNavState;\r\n\r\n    constructor(\r\n        private $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        private $scope: angular.IScope,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $timeout: ng.ITimeoutService,\r\n        private pipSideNav: ISideNavService,\r\n        navConstant: any\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._pipMedia = $injector.has('pipMedia') ? <pip.layouts.IMediaService>$injector.get('pipMedia') : null;\r\n\r\n        this._mainContainer = navConstant.SIDENAV_CONTAINER;\r\n        this._bigWidth = navConstant.SIDENAV_LARGE_WIDTH;\r\n        this._middleWidth = navConstant.SIDENAV_MIDDLE_WIDTH;\r\n        this._smallWidth = navConstant.SIDENAV_SMALL_WIDTH;\r\n        this._isResizing = false;\r\n        this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION;\r\n        this._navState = new SideNavStateConfig();\r\n        this._mediaBreakpoints = this.setBreakpoints();\r\n\r\n        // Apply class and call resize\r\n        this.$element.addClass('pip-sticky-sidenav');\r\n\r\n        if (this.pipSideNav.config && this.pipSideNav.config.type != 'popup') {\r\n            this.$timeout(() => {\r\n                this.setSideNaveState()\r\n            }, 100);\r\n\r\n            this.windowResize = _.debounce(() => { this.setSideNaveState(); }, 10);\r\n            this.cleanupMainResized = this.$rootScope.$on('pipMainResized', () => {\r\n                this.windowResize();\r\n            });\r\n            this.cleanupSideNavState = this.$rootScope.$on('pipSideNavState', ($event: ng.IAngularEvent, state: SideNavStateNames) => {\r\n                this.onSideNavState($event, state)\r\n            });\r\n        } else {\r\n            this._isResizing = false;\r\n            this.sidenavState = null;\r\n            this.$timeout(() => {\r\n                if (this.pipSideNav.config.backdrop == false) {\r\n                    this.$element.addClass('pip-sidenav-hide-backdrop');\r\n                } else {\r\n                    this.$element.removeClass('pip-sidenav-hide-backdrop');\r\n                }\r\n                this.setState(SideNavStateNames.Toggle);\r\n            }, 100);\r\n        }\r\n\r\n        this.cleanupNavHeaderChanged = this.$rootScope.$on(ToggleSideNavEvent, () => {\r\n            this.onNavIconClick();\r\n        });\r\n        this.cleanupSideNavChanged = this.$rootScope.$on('pipSideNavChanged', ($event: ng.IAngularEvent, config: SideNavConfig) => { //navState\r\n            this.onSideNavChanged($event, config)\r\n        });\r\n\r\n    }\r\n\r\n    public $onDestroy() {\r\n        if (angular.isFunction(this.cleanupNavHeaderChanged)) {\r\n            this.cleanupNavHeaderChanged();\r\n        }\r\n        if (angular.isFunction(this.cleanupSideNavChanged)) {\r\n            this.cleanupSideNavChanged();\r\n        }\r\n        if (angular.isFunction(this.cleanupMainResized)) {\r\n            this.cleanupMainResized();\r\n        }\r\n        if (angular.isFunction(this.cleanupSideNavState)) {\r\n            this.cleanupSideNavState();\r\n        }\r\n    }\r\n\r\n    private setBreakpoints(): pip.layouts.MediaBreakpoints {\r\n        if (!this._pipMedia || !angular.isObject(this._pipMedia.breakpoints)) {\r\n            return { xs: 639, sm: 959, md: 1024, lg: 1919 };\r\n        } else {\r\n            return this._pipMedia.breakpoints;\r\n        }\r\n    }\r\n\r\n    private onSideNavChanged($event: ng.IAngularEvent, config: SideNavConfig): void {\r\n        if (config && config.visible) {\r\n            this.$element.css('display', 'block');\r\n        } else {\r\n            this.$element.css('display', 'none');\r\n        }\r\n    }\r\n\r\n    private onNavIconClick(): void {\r\n        this.pipSideNav.toggle();\r\n    }\r\n\r\n    private onSideNavState($event: ng.IAngularEvent, stateName: SideNavStateNames): void {\r\n        if (angular.isString(stateName) && this._navState[stateName] !== undefined) {\r\n            this.setState(stateName);\r\n        }\r\n    }\r\n\r\n    private setSideNaveState(): void {\r\n        if (this.pipSideNav.config && this.pipSideNav.config.type == 'popup') { return }\r\n\r\n        if (this._isResizing) {\r\n            this.$timeout(() => { this.setSideNaveState() }, this._animationDuration);\r\n\r\n            return;\r\n        }\r\n\r\n        let mainWidth: number = $(this._mainContainer).innerWidth();\r\n        let sideNavWidth: number = $('.pip-sticky-sidenav').innerWidth();\r\n        let currentWidth: number = sideNavWidth ? sideNavWidth + 1 : 0; // add border width\r\n\r\n        if (mainWidth + currentWidth <= this._mediaBreakpoints.sm) {\r\n            this.setState(SideNavStateNames.Toggle);\r\n            return;\r\n        }\r\n        if (mainWidth + currentWidth <= this._mediaBreakpoints.md) {\r\n            this.setState(SideNavStateNames.Small);\r\n            return;\r\n        }\r\n        if (mainWidth + currentWidth <= this._mediaBreakpoints.lg) {\r\n            this.setState(SideNavStateNames.Large);\r\n            return;\r\n        }\r\n        this.setState(SideNavStateNames.XLarge);\r\n    }\r\n\r\n    private setState(stateName: SideNavStateNames) {\r\n        if (this._isResizing) return;\r\n        if (this.sidenavState && this.sidenavState.id == stateName) return;\r\n\r\n        if (stateName != SideNavStateNames.Toggle) {\r\n            this.$element.removeClass('sidenav-mobile');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.Small) {\r\n            this.$element.removeClass('pip-sticky-nav-small');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.XLarge) {\r\n            this.$element.removeClass('sidenav-desktop');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.Large) {\r\n            this.$element.removeClass('sidenav-smalldesktop');\r\n        }\r\n\r\n        this._isResizing = true;\r\n        /*if (stateName == SideNavStateNames.Toggle) {\r\n            this.pipSideNav.close();\r\n        }*/\r\n        this.sidenavState = this._navState[String(stateName)];\r\n        this.$element.addClass(this.sidenavState.addClass);\r\n\r\n        this.pipSideNav.state = this.sidenavState;\r\n\r\n        // check sideNav State\r\n        this.$timeout(() => {\r\n            this.setSideNaveState()\r\n        }, 15);\r\n\r\n        // complete animation\r\n        this.$timeout(() => {\r\n            this._isResizing = false;\r\n        }, this._animationDuration); //animationDuration\r\n\r\n    }\r\n}\r\n\r\n\r\ninterface ISideNavBindings {\r\n    [key: string]: any;\r\n    sidenavState: any;\r\n}\r\n\r\nconst SideNavBindings: ISideNavBindings = {\r\n    sidenavState: '=?'\r\n};\r\n\r\n(() => {\r\n\r\n    const sideNav: ng.IComponentOptions = {\r\n        transclude: true,\r\n        bindings: SideNavBindings,\r\n        templateUrl: 'sidenav/SideNav.html',\r\n        controller: SideNavController\r\n    };\r\n\r\n    angular\r\n        .module('pipSideNav')\r\n        .component('pipSidenav', sideNav);\r\n\r\n})();","{\r\n\r\n    interface ISideNavPartBindings {\r\n        [key: string]: any;\r\n        visible: any\r\n    }\r\n\r\n    const SideNavPartBindings: ISideNavPartBindings = {\r\n        visible: '=?'\r\n    }\r\n\r\n    class SideNavPartController {\r\n        private partName: string;\r\n        private partValue: string = null;\r\n        private pos: number;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            $element: ng.IRootElementService,\r\n            $attrs: ng.IAttributes,\r\n            $rootScope: ng.IRootScopeService,\r\n            pipSideNav) {\r\n\r\n            this.partName = '' + $attrs['pipSidenavPart'];\r\n            this.pos = this.partName.indexOf(':');\r\n            if (this.pos > 0) {\r\n                this.partValue = this.partName.substr(this.pos + 1);\r\n                this.partName = this.partName.substr(0, this.pos);\r\n            }\r\n\r\n            this.onSideNavChanged(null, pipSideNav.config)\r\n            $rootScope.$on('pipSideNavChanged', (event, config) => { this.onSideNavChanged(event, config) });\r\n        }\r\n\r\n        private onSideNavChanged(event, config) {\r\n            let parts = config.parts || {};\r\n            let currentPartValue = parts[this.partName];\r\n            let visible: boolean = !!(this.partValue ? currentPartValue == this.partValue : currentPartValue);\r\n\r\n            if (visible != this.$scope['visible'])\r\n                this.$scope['visible'] = visible;\r\n        }\r\n    }\r\n\r\n    function sidenavPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n        let ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: SideNavPartBindings,\r\n            link: function linkFunction(\r\n                $scope: ng.IScope,\r\n                $element: ng.IRootElementService,\r\n                $attrs: ng.IAttributes) {\r\n                $attrs['ngIf'] = () => { return $scope['visible'] };\r\n                ngIf.link.apply(ngIf, arguments);\r\n            },\r\n            controller: SideNavPartController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipSideNav')\r\n        .directive('pipSidenavPart', sidenavPartDirective);\r\n\r\n}","import { SideNavState, SideNavConfig } from \"./SideNavState\";\r\nimport { ISideNavProvider, ISideNavService } from \"./ISideNavService\";\r\n\r\nexport const SideNavChangedEvent = 'pipSideNavChanged';\r\nexport const SideNavStateChangedEvent = 'pipSideNavStateChanged';\r\nexport const OpenSideNavEvent = 'pipOpenSideNav';\r\nexport const CloseSideNavEvent = 'pipCloseSideNav';\r\nexport const ToggleSideNavEvent = 'pipToggleSideNav';\r\n\r\nclass SideNavService implements ISideNavService {\r\n    private _config: SideNavConfig;\r\n    private _state: any;\r\n\r\n    public constructor(\r\n        config: SideNavConfig,\r\n        private $rootScope: ng.IRootScopeService,\r\n        private $mdSidenav: ng.material.ISidenavService) {\r\n        this._config = config;\r\n    }\r\n\r\n    public get config(): SideNavConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: any) {\r\n        this._state = value || {};\r\n        this.$rootScope.$broadcast(SideNavStateChangedEvent, value);\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get backdrop(): boolean {\r\n        return this._config.backdrop;\r\n    }\r\n\r\n    public set backdrop(value: boolean) {\r\n        this._config.backdrop = value;\r\n    }\r\n\r\n    public open() {\r\n        this.$mdSidenav('pip-sticky-sidenav').open();\r\n    }\r\n\r\n    public close() {\r\n        this.$mdSidenav('pip-sticky-sidenav').close();\r\n    }\r\n\r\n    public toggle() {\r\n        this.$mdSidenav('pip-sticky-sidenav').toggle();\r\n    }\r\n\r\n    public show() {\r\n        if (!this._config.visible) {\r\n            this._config.visible = true;\r\n            this.sendConfigEvent();\r\n        }\r\n    }\r\n\r\n    public hide() {\r\n        if (this._config.visible) {\r\n            this._config.visible = false;\r\n            this.sendConfigEvent();\r\n        }\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this.$rootScope.$emit(SideNavChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass SideNavProvider implements ISideNavProvider {\r\n    private _config: SideNavConfig = {\r\n        parts: {},\r\n        classes: [],\r\n        type: 'popup',\r\n        backdrop: true,\r\n        state: null,\r\n        visible: true\r\n    };\r\n\r\n    private _service: SideNavService;\r\n\r\n    public get backdrop(): boolean {\r\n        return this._config.backdrop;\r\n    }\r\n\r\n    public set backdrop(value: boolean) {\r\n        this._config.backdrop = value;\r\n    }\r\n\r\n    public get config(): SideNavConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: SideNavConfig) {\r\n        this._config = value || new SideNavConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get visible(): boolean {\r\n        return this._config.visible;\r\n    }\r\n\r\n    public set visible(value: boolean) {\r\n        this._config.visible = value;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SideNavService(this._config, $rootScope, $mdSidenav);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nfunction hookSideNavEvents($rootScope: ng.IRootScopeService, pipSideNav: ISideNavService) {\r\n    $rootScope.$on(OpenSideNavEvent, () => { pipSideNav.open(); });\r\n    $rootScope.$on(CloseSideNavEvent, () => { pipSideNav.close(); });\r\n}\r\n\r\nangular\r\n    .module('pipSideNav')\r\n    .provider('pipSideNav', SideNavProvider)\r\n    .run(hookSideNavEvents);\r\n","export class SideNavStateNames {\r\n    static Toggle: string = 'toggle';\r\n    static Small: string = 'small';\r\n    static Large: string = 'large';\r\n    static XLarge: string = 'xlarge';\r\n}\r\n\r\nexport class SideNavState {\r\n    id: SideNavStateNames;\r\n    // Class which added to sidenav in this state\r\n    addClass: string;\r\n    // Side nav always open\r\n    isLockedOpen: boolean;\r\n    // Show SideNav header \r\n    showHeader: boolean;\r\n    // Show expanded button\r\n    expandedButton: boolean;\r\n    // SideNav has expand\r\n    isExpanded: boolean;\r\n    // SideNav is Expanded in this state by default\r\n    expand: boolean;\r\n    // Tooltype is show\r\n    showIconTooltype: boolean;\r\n}\r\n\r\nexport class SideNavStateConfig {\r\n    toggle: SideNavState = { // media(sm, xs)\r\n        id: SideNavStateNames.Toggle,\r\n        addClass: 'sidenav-mobile',\r\n        showHeader: true,\r\n        isLockedOpen: false,\r\n        expandedButton: false,\r\n        isExpanded: true,\r\n        expand: true,\r\n        showIconTooltype: false\r\n    };\r\n    small: SideNavState = { // media(md)\r\n        id: SideNavStateNames.Small,\r\n        addClass: 'pip-sticky-nav-small sidenav-smalldesktop',\r\n        showHeader: false,\r\n        isLockedOpen: true,\r\n        expandedButton: false,\r\n        isExpanded: false,\r\n        expand: false,\r\n        showIconTooltype: true\r\n    };\r\n    large: SideNavState = { // media(lg)\r\n        id: SideNavStateNames.Large,\r\n        addClass: 'sidenav-smalldesktop',\r\n        showHeader: false,\r\n        isLockedOpen: true,\r\n        expandedButton: true,\r\n        isExpanded: true,\r\n        expand: true,\r\n        showIconTooltype: true\r\n    };\r\n    xlarge: SideNavState = { // media(xl)\r\n        id: SideNavStateNames.XLarge,\r\n        addClass: 'sidenav-desktop',\r\n        showHeader: false,\r\n        isLockedOpen: true,\r\n        expandedButton: false,\r\n        isExpanded: true,\r\n        expand: true,\r\n        showIconTooltype: false\r\n    };\r\n}\r\n\r\nexport class SideNavConfig {\r\n    parts: any;\r\n    classes: string[];\r\n    state: SideNavState;\r\n    type: string;\r\n    backdrop: boolean = true;\r\n    visible: boolean;\r\n}","angular.module('pipSideNav', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './SideNavState';\r\nimport './SideNavService';\r\nimport './SideNavPart';\r\nimport './SideNav';\r\n\r\nexport * from './SideNavService';","\r\nexport class PipTab {\r\n    id: string;\r\n    name?: string;\r\n    count: number;\r\n    title: string;\r\n}\r\n\r\n{\r\n    interface ITabsBindings {\r\n        [key: string]: any;\r\n\r\n        ngDisabled: any;\r\n        tabs: any;\r\n        showTabs: any;\r\n        showTabsShadow: any;\r\n        activeIndex: any;\r\n        select: any;\r\n        breakpoints: any;\r\n        themeClass: any;\r\n    }\r\n\r\n    const TabsBindings: ITabsBindings = {\r\n        ngDisabled: '&?', // function\r\n        tabs: '<pipTabs', // PipTab[]\r\n        showTabs: '&pipShowTabs', // function\r\n        showTabsShadow: '&pipTabsShadow', // function\r\n        activeIndex: '<?pipActiveIndex', // number\r\n        select: '=pipTabsSelect', // function\r\n        breakpoints: '<?pipBreakpoints', // string\r\n        themeClass: '<?themeClass', // string\r\n    }\r\n\r\n    class TabsChanges implements ng.IOnChangesObject, ITabsBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n        // Not one way bindings\r\n        ngDisabled: ng.IChangesObject<() => ng.IPromise<void>>;\r\n        tabs: ng.IChangesObject<PipTab[]>;\r\n        showTabs: ng.IChangesObject<() => ng.IPromise<void>>;\r\n        showTabsShadow: ng.IChangesObject<() => ng.IPromise<void>>;\r\n        activeIndex: ng.IChangesObject<number>;\r\n        select: ng.IChangesObject<() => ng.IPromise<void>>;\r\n        breakpoints: ng.IChangesObject<string>;\r\n        themeClass: ng.IChangesObject<string>;\r\n    }\r\n\r\n    class TabsDirectiveController implements ITabsBindings {\r\n        private _pipTranslate: pip.services.ITranslateService;\r\n        private _pipTheme: pip.themes.IThemeService;\r\n        private pipMedia;\r\n        private selectedTabId: string;\r\n\r\n        public ngDisabled: Function;\r\n        public tabs: PipTab[];\r\n        public activeIndex: number;\r\n        public breakpoints: string;\r\n        public showTabs: Function;\r\n        public showTabsShadow: Function;\r\n        public select: Function;\r\n        public themeClass: string;\r\n\r\n        public currentTheme: string;\r\n\r\n        public change: () => ng.IPromise<any>;\r\n\r\n        constructor(\r\n            private $element: ng.IAugmentedJQuery,\r\n            private $injector: ng.auto.IInjectorService,\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private navConstant: any,\r\n            $mdMedia: angular.material.IMedia\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            this.setTheme();\r\n            this.pipMedia = this.$injector.has('pipMedia') ? <pip.layouts.IMediaService>this.$injector.get('pipMedia') : $mdMedia;\r\n            \r\n            if (!this.breakpoints) {\r\n                this.breakpoints = this.navConstant.TAB_BREAKPOINT;\r\n\r\n            }\r\n        }\r\n\r\n        private setTheme(): void {\r\n            this._pipTheme = this.$injector.has('pipTheme') ? <pip.themes.IThemeService>this.$injector.get('pipTheme') : null;\r\n            if (this._pipTheme) {\r\n                this.currentTheme = this._pipTheme.theme;\r\n            } else if (this.$rootScope['$theme']) {\r\n                this.currentTheme = this.$rootScope['$theme'];\r\n            }\r\n\r\n            this.themeClass = (this.themeClass || '') + ' md-' + this.currentTheme + '-theme';\r\n        }\r\n\r\n        private setTranslate(): void {\r\n            this._pipTranslate = this.$injector.has('pipTranslate') ? <pip.services.ITranslateService>this.$injector.get('pipTranslate') : null;\r\n            if (this._pipTranslate) {\r\n                if (this.tabs.length > 0 && this.tabs[0].title) {\r\n                    this._pipTranslate.translateObjects(this.tabs, 'title', 'nameLocal');\r\n                } else {\r\n                    this._pipTranslate.translateObjects(this.tabs, 'name', 'nameLocal');\r\n                }\r\n            }\r\n        }\r\n\r\n        public isDisabled(): boolean {\r\n            if (_.isFunction(this.ngDisabled)) {\r\n                return this.ngDisabled();\r\n            } else {\r\n                return this.toBoolean(this.ngDisabled);\r\n            }\r\n        };\r\n\r\n        public tabDisabled(index: number): boolean {\r\n            return (this.isDisabled() && this.activeIndex != index);\r\n        };\r\n\r\n        public onSelect(index: number): void {\r\n            if (this.isDisabled()) return;\r\n            this.activeIndex = index;\r\n            this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\r\n            this.$timeout(() => {\r\n                if (this.select) {\r\n                    this.select(this.tabs[this.activeIndex], this.activeIndex);\r\n                }\r\n            }, 0);\r\n\r\n        };\r\n\r\n        public showShadow(): boolean {\r\n            if (_.isFunction(this.showTabsShadow)) {\r\n                return this.showTabsShadow();\r\n            } else {\r\n                return this.toBoolean(this.showTabsShadow);\r\n            }\r\n        };\r\n\r\n        public show(): boolean {\r\n            if (!this.showTabs) return true;\r\n            if (_.isFunction(this.showTabs)) {\r\n                return this.showTabs();\r\n            } else {\r\n                return this.toBoolean(this.showTabs);\r\n            }\r\n        };\r\n\r\n        public toBoolean(value: any): boolean {\r\n            if (value == null) return false;\r\n            if (!value) return false;\r\n            value = value.toString().toLowerCase();\r\n            return value == '1' || value == 'true';\r\n        }\r\n\r\n        public $onChanges(changes: TabsChanges) {\r\n\r\n            if (!changes.breakpoints) {\r\n                if (!this.breakpoints) {\r\n                    this.breakpoints = this.navConstant.TAB_BREAKPOINT;\r\n\r\n                }\r\n            } else {\r\n                this.breakpoints = changes.breakpoints.currentValue ? changes.breakpoints.currentValue : this.navConstant.TAB_BREAKPOINT\r\n            }\r\n\r\n            if (changes.activeIndex === undefined) {\r\n                if (!this.activeIndex) {\r\n                    this.activeIndex = 0;\r\n                }\r\n            } else {\r\n                this.activeIndex = changes.activeIndex.currentValue || 0;\r\n                if (this.$timeout && this.activeIndex !== changes.activeIndex.previousValue) {\r\n                    this.$timeout(() => {\r\n                        let a = this.$element.find('md-tabs-canvas');\r\n                        if (a && a[0]) {\r\n                            angular.element(a[0]).attr('activeIndex', this.activeIndex);\r\n                        }\r\n                        a.on('focusout', () => {\r\n                            angular.element(a[0]).attr('activeIndex', this.activeIndex);\r\n                            this.$timeout(() => {\r\n                                angular.element(a[0]).attr('activeIndex', this.activeIndex);\r\n                            }, 50);\r\n                        });\r\n                    }, 1000);\r\n                }\r\n            }\r\n\r\n            if (changes.tabs === undefined || !_.isArray(changes.tabs.currentValue)) {\r\n                if (!this.tabs) {\r\n                    this.tabs = [];\r\n                }\r\n            } else {\r\n                this.tabs = changes.tabs.currentValue;\r\n                this.setTranslate();\r\n            }\r\n\r\n            if (!changes.activeIndex && changes.tabs && this.selectedTabId !== undefined) {\r\n                const index = _.indexOf(this.tabs, _.find(this.tabs, {\r\n                    id: this.selectedTabId\r\n                }));\r\n                if (index < 0) {\r\n                    this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\r\n                } else if (this.tabs.length > 0 && this.activeIndex) {\r\n                    this.onSelect(index);\r\n                }\r\n            } else {\r\n                this.selectedTabId = this.tabs.length >= this.activeIndex ? this.tabs[this.activeIndex].id : null;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const Tabs: ng.IComponentOptions = {\r\n        bindings: TabsBindings,\r\n        templateUrl: 'tabs/Tabs.html',\r\n        controller: TabsDirectiveController\r\n    }\r\n\r\n    angular\r\n        .module('pipTabs', ['pipNav.Templates'])\r\n        .component('pipTabs', Tabs);\r\n}\r\n","(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/PrimaryActions.html',\n    '<div pip-focused=\"\" pip-focused-tabindex=\"2\"><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in $ctrl.config.primaryLocalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"$ctrl.clickAction(action, $mdOpenMenu);\" tabindex=\"-1\" ng-hide=\"$ctrl.isHidden(action)\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge\" ng-show=\"action.count > 0\">{{ $ctrl.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon}}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"$ctrl.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"$ctrl.clickAction(subAction)\">{{ ::subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in $ctrl.config.primaryGlobalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"$ctrl.clickAction(action, $mdOpenMenu);\" ng-hide=\"$ctrl.isHidden(action)\" tabindex=\"-1\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge color-badge-bg\" ng-show=\"action.count > 0\">{{ $ctrl.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon }}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"$ctrl.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"$ctrl.clickAction(subAction)\">{{ subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/SecondaryActions.html',\n    '<md-menu ng-if=\"$ctrl.secondaryActionsVisible()\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button\" tabindex=\"3\" ng-init=\"$ctrl.getMenu($mdOpenMenu)\" ng-click=\"$ctrl.onSecondaryActionClick(); $ctrl.openMenu($mdOpenMenu, $event);\" aria-label=\"open actions\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"action in $ctrl.config.secondaryLocalActions\" ng-if=\"!action.divider\" ng-hide=\"$ctrl.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"$ctrl.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider><md-menu-divider ng-if=\"$ctrl.secondaryDividerVisible()\"></md-menu-divider><md-menu-item ng-repeat-start=\"action in $ctrl.config.secondaryGlobalActions\" ng-if=\"!action.divider\" ng-hide=\"$ctrl.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"$ctrl.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('appbar/AppBar.html',\n    '<md-toolbar class=\"color-primary-bg {{ $ctrl.config.classes.join(\\' \\') }}\" ng-if=\"$ctrl.config.visible\" ng-transclude=\"\"></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('breadcrumb/Breadcrumb.html',\n    '<div class=\"pip-breadcrumb-block\"><div class=\"text-overflow\" ng-if=\"$ctrl._media($ctrl.config.breakpoint)\"><span ng-if=\"$ctrl.config.criteria\" ng-click=\"$ctrl.openSearch()\">{{ $ctrl.config.criteria }} -</span><span class=\"pip-breadcrumb-item {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\" ng-repeat-start=\"item in $ctrl.config.items\" ng-click=\"$ctrl.onClick(item)\" ng-init=\"stepWidth = 100/($ctrl.config.items.length + 1)\" ng-class=\"{\\'cursor-pointer\\': !$last}\" ng-style=\"{\\'max-width\\': stepWidth + \\'%\\'}\"><span ng-if=\"!$last || !$ctrl.actionsVisible(item)\">{{ item.title | translate }}</span><div ng-if=\"$last && $ctrl.actionsVisible(item)\" style=\"display: inline-block; position: relative;\"><md-menu md-offset=\"0 44\"><span class=\"layout-row pip-breadcrumb-item-menu cursor-pointer {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-click=\"$ctrl.onOpenMenu($mdOpenMenu, $event)\" md-ink-ripple=\"\" aria-label=\"open breadcrumb actions\">{{ item.title | translate }}<md-icon class=\"pip-triangle-down\" md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-if=\"!subItem.divider\" ng-repeat-start=\"subItem in item.subActions\"><md-button ng-click=\"$ctrl.onSubActionClick(subItem)\" ng-if=\"!action.divider\" tabindex=\"4\"><md-icon md-menu-align-target=\"\" ng-if=\"subItem.icon\" md-svg-icon=\"{{ subItem.icon }}\"></md-icon><span>{{ subItem.title | translate }}</span></md-button></md-menu-item><md-menu-divider ng-if=\"subItem.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div></span><md-icon ng-repeat-end=\"\" md-svg-icon=\"icons:chevron-right\" ng-hide=\"$last\"></md-icon><span class=\"pip-title breadcrumb-accent\" ng-if=\"$ctrl.config.text\">{{ $ctrl.config.text | translate }}</span></div><div style=\"position: relative;\" ng-if=\"!$ctrl._media($ctrl.config.breakpoint)\"><md-menu md-offset=\"0 44\"><span class=\"pip-mobile-breadcrumb layout-row\" ng-click=\"$ctrl.config.items && $ctrl.config.items.length > 1 ? $mdOpenMenu() : return\"><span class=\"text-overflow\"><span ng-if=\"$ctrl.config.criteria\" ng-click=\"$ctrl.openSearch()\">{{ $ctrl.config.criteria }} -</span> <span class=\"breadcrumb-accent\" ng-if=\"$ctrl.config.text\">{{ $ctrl.config.text | translate }}</span> <span ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\" class=\"breadcrumb-accent {{ ($ctrl.config.items && $ctrl.config.items.length > 1) ? \\'cursor-pointer\\' : \\'\\' }}\">{{ $ctrl.config.items[$ctrl.config.items.length - 1].title | translate }}</span></span><md-icon class=\"pip-triangle-down cursor-pointer breadcrumb-accent\" md-svg-icon=\"icons:triangle-down\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 1\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in $ctrl.config.items\" ng-if=\"$ctrl.config.items && $ctrl.config.items.length > 0\"><md-button ng-click=\"$ctrl.onClick(item)\" tabindex=\"5\"><md-icon md-menu-align-target=\"\" ng-if=\"item.icon\" md-svg-icon=\"{{ item.icon }}\"></md-icon><span>{{ item.title | translate }}</span></md-button></md-menu-item><md-menu-item ng-if=\"$ctrl.config.text\"><md-button tabindex=\"5\"><span class=\"text-grey\">{{ $ctrl.config.text | translate }}</span></md-button></md-menu-item></md-menu-content></md-menu></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('header/NavHeader.html',\n    '<md-toolbar ng-show=\"$ctrl.showHeader\" class=\"layout-row layout-align-start-center\"><div class=\"flex-fixed pip-sticky-nav-header-user\"><md-button class=\"md-icon-button\" ng-click=\"$ctrl.onUserClick()\" aria-label=\"current user\" tabindex=\"-1\"><img src=\"\" class=\"pip-sticky-nav-header-user-image\" ng-class=\"$ctrl.imageCss\"></md-button></div><div class=\"pip-sticky-nav-header-user-text\"><div class=\"pip-sticky-nav-header-user-pri\" ng-click=\"$ctrl.onUserClick()\" tabindex=\"-1\">{{ $ctrl.title | translate }}</div><div class=\"pip-sticky-nav-header-user-sec\">{{ $ctrl.subtitle | translate }}</div></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('icon/NavIcon.html',\n    '<md-button class=\"md-icon-button pip-nav-icon\" ng-if=\"$ctrl.config.type != \\'none\\'\" ng-class=\"$ctrl.config.class\" ng-click=\"$ctrl.onNavIconClick()\" tabindex=\"{{ $ctrl.config.type==\\'menu\\' || $ctrl.config.type==\\'back\\' ? 4 : -1 }}\" aria-label=\"menu\"><md-icon ng-if=\"$ctrl.config.type==\\'menu\\'\" md-svg-icon=\"icons:menu\"></md-icon><img ng-src=\"{{ $ctrl.config.imageUrl }}\" ng-if=\"$ctrl.config.type==\\'image\\'\" height=\"24\" width=\"24\"><md-icon ng-if=\"$ctrl.config.type==\\'back\\'\" md-svg-icon=\"icons:arrow-left\"></md-icon><md-icon ng-if=\"$ctrl.config.type==\\'icon\\'\" md-svg-icon=\"{{ $ctrl.config.icon }}\"></md-icon></md-button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dropdown/Dropdown.html',\n    '<md-toolbar class=\"md-subhead color-primary-bg {{ $ctrl.themeClass}}\" ng-if=\"$ctrl.show()\" ng-class=\"{\\'md-whiteframe-3dp\\': $ctrl.media(\\'xs\\')}\"><div class=\"pip-divider\"></div><md-select ng-model=\"$ctrl.selectedIndex\" tabindex=\"15\" ng-disabled=\"$ctrl.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"DROPDOWN\" md-ink-ripple=\"\" md-on-close=\"$ctrl.onSelect($ctrl.selectedIndex)\"><md-option ng-repeat=\"action in $ctrl.actions\" value=\"{{ ::$index }}\" ng-selected=\"$ctrl.activeIndex == $index ? true : false\">{{ (action.title || action.name || action) | translate }}</md-option></md-select></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('language/LanguagePicker.html',\n    '<md-menu md-position-mode=\"target-right target\"><span class=\"pip-language\" ng-click=\"$mdOpenMenu()\" aria-label=\"language selection\">{{ $ctrl.value | translate }}<md-icon md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"3\"><md-menu-item ng-repeat=\"language in $ctrl.languages\"><md-button ng-click=\"$ctrl.onLanguageClick(language)\" tabindex=\"7\">{{ language | translate }}</md-button></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('search/SearchBar.html',\n    '<div class=\"md-toolbar-tools pip-search-container\" ng-if=\"$ctrl.enabled\"><div class=\"layout-row pip-search-selected\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"start search\" ng-click=\"$ctrl.onClick()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><input class=\"pip-search-text flex\" type=\"search\" tabindex=\"6\" ng-model=\"$ctrl.search.text\" ng-keydown=\"$ctrl.onKeyDown($event)\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"clear search\" ng-click=\"$ctrl.clear()\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div><div class=\"md-toolbar-tools layout-row layout-align-end-center flex-fixed lp0 rp0\" ng-if=\"!$ctrl.enabled\"><md-button class=\"md-icon-button\" tabindex=\"5\" aria-label=\"start search\" ng-click=\"$ctrl.enable()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('sidenav/SideNav.html',\n    '<md-sidenav class=\"md-sidenav-left\" md-is-locked-open=\"$ctrl.sidenavState.isLockedOpen\" md-component-id=\"pip-sticky-sidenav\" ng-transclude=\"\"></md-sidenav>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tabs/Tabs.html',\n    '<md-toolbar ng-if=\"$ctrl.pipMedia\" class=\"pip-nav color-primary-bg {{ $ctrl.themeClass }}\" ng-class=\"{\\'pip-visible\\': $ctrl.show(), \\'pip-shadow\\': $ctrl.showShadow()}\"><md-tabs class=\"color-primary-bg\" ng-if=\"$ctrl.pipMedia($ctrl.breakpoints)\" md-selected=\"$ctrl.activeIndex\" ng-class=\"{\\'disabled\\': $ctrl.isDisabled()}\" md-stretch-tabs=\"true\" md-dynamic-height=\"true\"><md-tab ng-repeat=\"tab in $ctrl.tabs track by $index\" ng-disabled=\"$ctrl.tabDisabled($index)\" md-on-select=\"$ctrl.onSelect($index)\"><md-tab-label>{{:: tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 0 && tab.counts <= 99\">{{ tab.counts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 99\">!</div></md-tab-label></md-tab></md-tabs><div class=\"md-subhead pip-tabs-content color-primary-bg\" ng-if=\"!$ctrl.pipMedia($ctrl.breakpoints)\"><div class=\"pip-divider position-top m0\"></div><md-select ng-model=\"$ctrl.activeIndex\" ng-disabled=\"$ctrl.isDisabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"SELECT\" md-ink-ripple=\"\" md-on-close=\"$ctrl.onSelect($ctrl.activeIndex)\"><md-option ng-repeat=\"tab in $ctrl.tabs track by $index\" class=\"pip-tab-option\" value=\"{{ ::$index }}\">{{ ::tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 0 && tab.counts <= 99\">{{ tab.counts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.counts > 99\">!</div></md-option></md-select></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu/NavMenu.html',\n    '<div ng-if=\"$ctrl.sections && $ctrl.sections.length\"><md-list class=\"sidenav-list\" pip-focused=\"\" pip-focused-tabindex=\"10\" pip-with-hidden=\"true\"><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-sticky-nav-expanded-button\" ng-click=\"$ctrl.onExpand()\" ng-disabled=\"!$ctrl.isCollapsed\" tabindex=\"-1\" ng-if=\"$ctrl.expandedButton\"><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-left\" ng-if=\"$ctrl.pipSideNav.state.isExpanded\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon\" md-svg-icon=\"icons:chevron-right\" ng-if=\"!$ctrl.pipSideNav.state.isExpanded\"></md-icon></md-list-item><md-divider ng-show=\"$ctrl.expandedButton\"></md-divider><div class=\"pip-section\" ng-repeat=\"section in $ctrl.sections\" xxxng-hide=\"section.access && !section.access(section)\"><md-divider ng-show=\"$index > 0 && !$ctrl.isSectionEmpty(section.links)\"></md-divider><md-subheader ng-show=\"section.title\" style=\"height: 48px;\"><span ng-if=\"$ctrl.pipSideNav.state.isExpanded\" class=\"pip-sticky-nav-menu-title section-title\">{{ ::section.title | translate }}</span><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ section.icon }}\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && section.icon\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ $ctrl.defaultIcon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && !section.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon section-icon\" md-svg-icon=\"{{ $ctrl.defaultIcon }}\" ng-if=\"$ctrl.sideNavState.showIconTooltype && !$ctrl.expanded && !section.icon\"><md-tooltip md-visible=\"showTooltip\" class=\"md-secondary\">{{ ::section.tooltipText || section.title | translate }}</md-tooltip></md-icon></md-subheader><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-focusable\" tabindex=\"-1\" ng-repeat=\"link in section.links\" ng-class=\"{\\'active\\': $ctrl.isActive(link)}\"><md-button class=\"layout-row layout-align-start-center pip-button-block\" tabindex=\"-1\" ng-disabled=\"link.access && !link.access(link)\" ng-click=\"$ctrl.clickLink($event, link)\"><div class=\"pip-sticky-nav-menu-icon-block\"><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-if=\"!$ctrl.sideNavState.showIconTooltype || !link.tooltipText || $ctrl.pipSideNav.state.isExpanded\" ng-hide=\"!link.icon\"></md-icon><md-icon class=\"pip-sticky-nav-menu-icon flex-fixed\" md-svg-icon=\"{{ link.icon }}\" ng-hide=\"!link.icon\" ng-if=\"$ctrl.sideNavState.showIconTooltype && link.tooltipText && !$ctrl.pipSideNav.state.isExpanded\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{ ::link.tooltipText || link.title | translate }}</md-tooltip></md-icon></div><div class=\"pip-sticky-nav-menu-title\">{{ ::link.title | translate }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count < 100\">{{ link.count }}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count > 99\">!</div></md-button></md-list-item></div></md-list></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-nav-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}