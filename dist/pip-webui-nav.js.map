{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/actions/ActionsService.ts","src/actions/PrimaryActionsDirective.ts","src/actions/SecondaryActionsDirective.ts","src/actions/index.ts","src/appbar/AppBarDirective.ts","src/appbar/AppBarPartDirective.ts","src/appbar/AppBarService.ts","src/appbar/index.ts","src/breadcrumb/BreadcrumbDirective.ts","src/breadcrumb/BreadcrumbService.ts","src/breadcrumb/index.ts","src/common/NavService.ts","src/dependencies/TranslateFilter.ts","src/dropdown/DropdownDirective.ts","src/header/NavHeaderDirective.ts","src/header/NavHeaderService.ts","src/header/index.ts","src/icon/NavIconDirective.ts","src/icon/NavIconService.ts","src/icon/index.ts","src/index.ts","src/language/LanguagePickerDirective.ts","src/menu/NavMenuDirective.ts","src/menu/NavMenuService.ts","src/menu/index.ts","src/search/SearchBarDirective.ts","src/search/SearchService.ts","src/search/index.ts","src/sidenav/SideNavDirective.ts","src/sidenav/SideNavEvents.ts","src/sidenav/SideNavPartDirective.ts","src/sidenav/SideNavService.ts","src/sidenav/SideNavState.ts","src/sidenav/index.ts","src/tabs/TabsDirective.ts","temp/pip-webui-nav-html.min.js"],"names":[],"mappings":"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C;IAAA,CAAC;IAEK,2CAAS,GAAhB,UAAiB,KAAU;QACvB,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAChC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;IAC3C,CAAC;IAEL,8BAAC;AAAD,CAvKA,AAuKC,IAAA;AAED,CAAC;IACG;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,cAAc;gBACxB,cAAc,EAAE,gBAAgB;gBAChC,WAAW,EAAE,iBAAiB;gBAC9B,MAAM,EAAE,gBAAgB;gBACxB,WAAW,EAAE,iBAAiB;aACjC;YACD,WAAW,EAAE,gBAAgB;YAC7B,UAAU,EAAE,uBAAuB;YACnC,YAAY,EAAE,IAAI;SACrB,CAAC;IACN,CAAC;IAGD,OAAO;SACF,MAAM,CAAC,SAAS,EAAE,CAAC,kBAAkB,CAAC,CAAC;SACvC,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AAE7C,CAAC,CAAC,EAAE,CAAC;;AC1ML;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-nav.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nexport let ActionsChangedEvent = 'pipActionsChanged';\r\nexport let SecondaryActionsOpenEvent = 'pipSecondaryActionsOpen';\r\n\r\nexport class SimpleActionItem {\r\n    // Name to refer to the item\r\n    public name: string;\r\n    // Link visible title\r\n    public title?: string;\r\n    // Show divider instead of title\r\n    public divider?: boolean;\r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Counter badge\r\n    public count?: number;\r\n    // Access function\r\n    public access?: (action: SimpleActionItem) => boolean;\r\n    // Show on specified breakpoints\r\n    public breakpoints?: string[];\r\n    // window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public click?: (action: SimpleActionItem) => void;\r\n}\r\n\r\nexport class ActionItem extends SimpleActionItem {\r\n    public subActions: SimpleActionItem[];\r\n}\r\n\r\nexport class ActionsConfig {\r\n    // Primary global actions visible on the screen\r\n    public primaryGlobalActions: ActionItem[] = [];\r\n    // Primary local actions visible on the screen\r\n    public primaryLocalActions: ActionItem[] = [];\r\n\r\n    // Secondary global actions available in popup\r\n    public secondaryGlobalActions: ActionItem[] = [];\r\n    // Secondary local actions available in popup\r\n    public secondaryLocalActions: ActionItem[]= [];\r\n}\r\n\r\nexport interface IActionsService {\r\n    readonly config: ActionsConfig;\r\n\r\n    primaryGlobalActions: ActionItem[];\r\n    primaryLocalActions: ActionItem[];\r\n    secondaryGlobalActions: ActionItem[];\r\n    secondaryLocalActions: ActionItem[];    \r\n\r\n    show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void;\r\n    hide(): void;\r\n    updateCount(link: string, count: number): void; \r\n    clearCounts(): void;\r\n    openMenuEvent(): void;\r\n}\r\n\r\nexport interface IActionsProvider extends ng.IServiceProvider {\r\n    config: ActionsConfig;\r\n    \r\n    primaryGlobalActions: ActionItem[];\r\n    primaryLocalActions: ActionItem[];\r\n    secondaryGlobalActions: ActionItem[];\r\n    secondaryLocalActions: ActionItem[];    \r\n}\r\n\r\nclass ActionsService implements IActionsService {\r\n    private _config: ActionsConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: ActionsConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): ActionsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get primaryGlobalActions(): ActionItem[] {\r\n        return this._config.primaryGlobalActions;\r\n    }\r\n\r\n    public set primaryGlobalActions(value: ActionItem[]) {\r\n        this._config.primaryGlobalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get secondaryGlobalActions(): ActionItem[] {\r\n        return this._config.secondaryGlobalActions;\r\n    }\r\n\r\n    public set secondaryGlobalActions(value: ActionItem[]) {\r\n        this._config.secondaryGlobalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get primaryLocalActions(): ActionItem[] {\r\n        return this._config.primaryLocalActions;\r\n    }\r\n\r\n    public set primaryLocalActions(value: ActionItem[]) {\r\n        this._config.primaryLocalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get secondaryLocalActions(): ActionItem[] {\r\n        return this._config.secondaryLocalActions;\r\n    }\r\n\r\n    public set secondaryLocalActions(value: ActionItem[]) {\r\n        this._config.secondaryLocalActions = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public show(primaryActions?: ActionItem[], secondaryActions?: ActionItem[]): void {\r\n        this._config.primaryLocalActions = primaryActions || [];\r\n        this._config.secondaryLocalActions = secondaryActions || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.primaryLocalActions = [];\r\n        this._config.secondaryLocalActions = [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public updateCount(action: string, count: number) {\r\n        if (action == null || !_.isNumber(count)) return;\r\n\r\n        _.each(this._config.primaryGlobalActions, (a) => {\r\n            if (a.name == action)\r\n                a.count = count;\r\n        });\r\n        _.each(this._config.primaryLocalActions, (a) => {\r\n            if (a.name == action)\r\n                a.count = count;\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public clearCounts(): void {\r\n        _.each(this._config.primaryGlobalActions, (a) => {\r\n            a.count = null;\r\n        });\r\n        _.each(this._config.primaryLocalActions, (a) => {\r\n            a.count = null;\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    private sendChangeEvent() {\r\n        this._rootScope.$emit(ActionsChangedEvent, this._config);\r\n    }\r\n\r\n    public openMenuEvent(): void {\r\n        this._rootScope.$emit(SecondaryActionsOpenEvent);\r\n    }\r\n}\r\n\r\nclass ActionsProvider implements IActionsProvider {\r\n    private _config: ActionsConfig = new ActionsConfig();\r\n    private _service: ActionsService;\r\n\r\n    public get config(): ActionsConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ActionsConfig) {\r\n        this._config = value || new ActionsConfig();\r\n    }\r\n\r\n    public get primaryGlobalActions(): ActionItem[] {\r\n        return this._config.primaryGlobalActions;\r\n    }\r\n\r\n    public set primaryGlobalActions(value: ActionItem[]) {\r\n        this._config.primaryGlobalActions = value || [];\r\n    }\r\n\r\n    public get secondaryGlobalActions(): ActionItem[] {\r\n        return this._config.secondaryGlobalActions;\r\n    }\r\n\r\n    public set secondaryGlobalActions(value: ActionItem[]) {\r\n        this._config.secondaryGlobalActions = value || [];\r\n    }\r\n\r\n    public get primaryLocalActions(): ActionItem[] {\r\n        return this._config.primaryLocalActions;\r\n    }\r\n\r\n    public set primaryLocalActions(value: ActionItem[]) {\r\n        this._config.primaryLocalActions = value || [];\r\n    }\r\n\r\n    public get secondaryLocalActions(): ActionItem[] {\r\n        return this._config.secondaryLocalActions;\r\n    }\r\n\r\n    public set secondaryLocalActions(value: ActionItem[]) {\r\n        this._config.secondaryLocalActions = value || [];\r\n    }\r\n\r\n    public $get($rootScope) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new ActionsService(this._config, $rootScope);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipActions')\r\n    .provider('pipActions', ActionsProvider);\r\n\r\n","'use strict';\r\n\r\nimport { IActionsService, ActionItem, ActionsConfig } from \"./ActionsService\";\r\n// Prevent junk from going into typescript definitions\r\n\r\n// todo: create class ActionsController and extend it \r\n\r\nclass PrimaryActionsController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _pipActions: IActionsService;\r\n    private _pipTranslate: pip.services.ITranslateService\r\n\r\n    public config: ActionsConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $location: ng.ILocationService,\r\n        pipActions: IActionsService\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._pipActions = pipActions;\r\n\r\n\r\n        this._pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n        if (this._pipTranslate && this._pipTranslate.setTranslations) {\r\n            this._pipTranslate.setTranslations('en', {\r\n                DOCUMENTS_ATTACHED: 'document(s) attached',\r\n                ERROR_DOCUMENTS_LOADED: 'Error: <%= error_number %> document(s) are not loaded'\r\n            });\r\n            this._pipTranslate.setTranslations('ru', {\r\n                DOCUMENTS_ATTACHED: 'документов добавлено',\r\n                ERROR_DOCUMENTS_LOADED: 'Ошибка: <%= error_number %> документ(ов) не загружено'\r\n\r\n            });\r\n        }\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-primary-actions');\r\n\r\n        if (this._scope.localActions) {\r\n            pipActions.primaryLocalActions = this._scope.localActions;\r\n        }\r\n\r\n        if (this._scope.globalActions) {\r\n            pipActions.primaryGlobalActions = this._scope.globalActions;\r\n        }\r\n\r\n        this.config = pipActions.config;\r\n\r\n        this._rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\r\n            this.onActionsChanged(event, config);\r\n        });\r\n\r\n    }\r\n\r\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\r\n        this.config = config;\r\n    }\r\n\r\n    public isHidden(action: ActionItem): boolean {\r\n        // Todo: Check breakpoints here\r\n        return action.access && !action.access(action);\r\n    }\r\n\r\n    public actionCount(action: ActionItem): string {\r\n        if (action.count === null || action.count <= 0) {\r\n            return '';\r\n        }\r\n        if (action.count > 99) {\r\n            return '!';\r\n        }\r\n\r\n        return String(action.count);\r\n    }\r\n\r\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        // todo: do not supported into ActionItem\r\n        // if (action.close) {\r\n        //     this._scope.originatorEv = null;\r\n        // }\r\n\r\n        if (action.subActions) {\r\n            $mdOpenMenu(this._scope.originatorEv);\r\n            return;\r\n        }\r\n\r\n        if (_.isFunction(action.click)) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('this._state')) {\r\n                let _state: angular.ui.IStateService = this._injector.has('pipTranslate') ? <angular.ui.IStateService>this._injector.get('$state') : null ;\r\n                if (_state) {\r\n                    _state.go(action.state, action.stateParams);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function primaryActionsDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                localActions: '=pipLocalActions',\r\n                globalActions: '=pipGlobalActions'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'actions/PrimaryActions.html',\r\n            controller: PrimaryActionsController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipActions')\r\n        .directive('pipPrimaryActions', primaryActionsDirective);\r\n\r\n})();","'use strict';\r\n\r\nimport { IActionsService, ActionItem, ActionsConfig } from \"./ActionsService\";\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\n// todo: create class ActionsController and extend it \r\n\r\nclass SecondaryActionsController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _pipActions: IActionsService;\r\n    private _pipTranslate: pip.services.ITranslateService\r\n    private _menuFn: Function;\r\n    public config: ActionsConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $location: ng.ILocationService,\r\n        pipActions: IActionsService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._pipActions = pipActions;\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-secondary-actions');\r\n\r\n        if (this._scope.localActions) {\r\n            pipActions.secondaryLocalActions = this._scope.localActions;\r\n        }\r\n\r\n        if (this._scope.globalActions) {\r\n            pipActions.secondaryGlobalActions = this._scope.globalActions;\r\n        }\r\n\r\n        this.config = pipActions.config;\r\n\r\n        this._rootScope.$on('pipActionsChanged', (event: ng.IAngularEvent, config: ActionsConfig) => {\r\n            this.onActionsChanged(event, config);\r\n        });\r\n\r\n        this._rootScope.$on('pipSecondaryActionsOpen', () => {\r\n            this.onActionsMenuOpen();\r\n        });\r\n\r\n    }\r\n\r\n    public getMenu(menuFn: Function): void {\r\n         this._menuFn = menuFn;\r\n    }\r\n\r\n    public onActionsMenuOpen(): void {\r\n        this._menuFn();\r\n    }\r\n\r\n    public openMenu($mdOpenMenu: Function, ev: ng.IAngularEvent): void {\r\n        this._scope.originatorEv = ev;\r\n        $mdOpenMenu(ev);\r\n    }\r\n\r\n    private onActionsChanged(event: ng.IAngularEvent, config: ActionsConfig) {\r\n        this.config = config;\r\n    }\r\n\r\n    public isHidden(action: ActionItem): boolean {\r\n        // Todo: Check breakpoints here\r\n        return action.access && !action.access(action);\r\n    }\r\n\r\n    public actionCount(action: ActionItem): string {\r\n        if (action.count === null || action.count <= 0) {\r\n            return '';\r\n        }\r\n        if (action.count > 99) {\r\n            return '!';\r\n        }\r\n\r\n        return String(action.count);\r\n    }\r\n\r\n\r\n    private calcActions(actions: ActionItem[]): number {\r\n        let count: number = 0;\r\n\r\n        _.each(actions, (action: ActionItem) => {\r\n            if (!this.isHidden(action)) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    public secondaryActionsVisible() {\r\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 ||\r\n            this.calcActions(this.config.secondaryLocalActions) > 0;\r\n    }\r\n\r\n    public secondaryDividerVisible() {\r\n        return this.calcActions(this.config.secondaryGlobalActions) > 0 &&\r\n            this.calcActions(this.config.secondaryLocalActions) > 0;\r\n    }\r\n\r\n    public clickAction(action: ActionItem, $mdOpenMenu: Function): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        // todo: do not supported into ActionItem\r\n        // if (action.close) {\r\n        //     this._scope.originatorEv = null;\r\n        // }\r\n\r\n        if (action.subActions) {\r\n            $mdOpenMenu(this._scope.originatorEv);\r\n            return;\r\n        }\r\n\r\n        if (action.click) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('this._state')) {\r\n                let _state: angular.ui.IStateService = this._injector.has('pipTranslate') ? <angular.ui.IStateService>this._injector.get('$state') : null;\r\n                if (_state) {\r\n                    _state.go(action.state, action.stateParams);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function secondaryActionsDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                localActions: '=pipLocalActions',\r\n                globalActions: '=pipGlobalActions'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'actions/SecondaryActions.html',\r\n            controller: SecondaryActionsController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipActions')\r\n        .directive('pipSecondaryActions', secondaryActionsDirective);\r\n\r\n})();\r\n","'use strict';\r\n\r\nangular.module('pipActions', ['ngMaterial', 'pipNav.Templates', 'ui.router']);\r\n\r\nimport './ActionsService';\r\nimport './PrimaryActionsDirective';\r\nimport './SecondaryActionsDirective';\r\n\r\nexport * from './ActionsService';","﻿'use strict';\r\n\r\nimport { IAppBarService, AppBarConfig } from \"./AppBarService\";\r\n// Prevent junk from going into typescript definitions\r\n\r\nclass AppBarDirectiveController {\r\n    public config: AppBarConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipAppBar: IAppBarService\r\n    ) {\r\n        \"ngInject\";\r\n        // Apply class and call resize\r\n        $element.addClass('pip-appbar');\r\n        $element.addClass('color-primary-bg');\r\n\r\n        $scope.config = pipAppBar.config;\r\n\r\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\r\n            this.onAppBarChanged(event, config)\r\n        });\r\n    }\r\n\r\n    public onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\r\n        this.config = config;\r\n    }\r\n    \r\n}\r\n\r\n(() => {\r\n    function appbarDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: true,\r\n            templateUrl: 'appbar/AppBar.html',\r\n            controller: AppBarDirectiveController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipAppBar')\r\n        .directive('pipAppbar', appbarDirective);\r\n\r\n})();","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\nimport { AppBarConfig, IAppBarService } from \"./AppBarService\";\r\n\r\nclass AppBarPartDirectiveController {\r\n    private _scope: ng.IScope;\r\n    private _partName: string;\r\n    private _partValue: string;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipAppBar: IAppBarService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._scope = $scope;\r\n        this._partName = String($attrs.pipAppbarPart);\r\n        this._partValue = null;\r\n\r\n        // Break part apart\r\n        let pos: number = this._partName.indexOf(':');\r\n        if (pos > 0) {\r\n            this._partValue = this._partName.substr(pos + 1);\r\n            this._partName = this._partName.substr(0, pos);\r\n        }\r\n\r\n        // onAppBarChanged(null, pipAppBar.config);\r\n        $rootScope.$on('pipAppBarChanged', (event: ng.IAngularEvent, config: AppBarConfig) => {\r\n            this.onAppBarChanged(null, config)\r\n        });\r\n\r\n    }\r\n\r\n    private onAppBarChanged(event: ng.IAngularEvent, config: AppBarConfig) {\r\n        let parts: any = config.parts || {};\r\n        let currentPartValue = parts[this._partName];\r\n\r\n        // Set visible variable to switch ngIf\r\n        let visible: boolean = !!(this._partValue ? currentPartValue == this._partValue : currentPartValue);\r\n\r\n        if (visible != this._scope['visible'])\r\n            this._scope['visible'] = visible;\r\n    }\r\n\r\n}\r\n\r\n// Example is taken from here: http://stackoverflow.com/questions/20325480/angularjs-whats-the-best-practice-to-add-ngif-to-a-directive-programmatically\r\n(() => {\r\n    function appbarPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        var ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function linkFunction($scope: ng.IScope, $element: ng.IAugmentedJQuery, $attrs: ng.IAttributes) {\r\n                // Visualize based on visible variable in scope\r\n                $attrs.ngIf = function () {\r\n                    return $scope.visible;\r\n                };\r\n                ngIf.link.apply(ngIf, arguments);\r\n            },\r\n            controller: AppBarPartDirectiveController\r\n        };\r\n    }\r\n\r\n    angular.module('pipAppBar')\r\n        .directive('pipAppbarPart', appbarPartDirective);\r\n\r\n})();","'use strict';\r\n\r\nexport let AppBarChangedEvent = 'pipAppBarChanged';\r\n\r\nexport class AppBarConfig {\r\n    visible: boolean;\r\n    parts: any;\r\n    classes: string[];\r\n} \r\n\r\nexport interface IAppBarService {\r\n    readonly config: AppBarConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n\r\n    show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void;\r\n    hide(): void;\r\n \r\n    addShadow(...breakpoints: string[]): void;\r\n    removeShadow(): void;\r\n \r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n \r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface IAppBarProvider extends ng.IServiceProvider {\r\n    config: AppBarConfig;\r\n    parts: any;\r\n    classes: string[];\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nclass AppBarService implements IAppBarService {\r\n    private _config: AppBarConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: AppBarConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): AppBarConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public show(parts?: any, classes?: string[], shadowBreakpoints?: string[]): void {\r\n        this._config.visible = true;\r\n        this._config.parts = parts || this._config.parts || {};\r\n        this._config.classes = classes || this._config.classes || [];\r\n        if (shadowBreakpoints) {\r\n            this.setShadow(shadowBreakpoints); \r\n        }\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.visible = false;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private hideShadow(): void {\r\n        this._config.classes = _.reject(this._config.classes, (c) => c.startsWith('pip-shadow'));\r\n    }\r\n\r\n    private setShadow(breakpoints: string[]): void {\r\n        this.hideShadow();\r\n\r\n        if (breakpoints != null && breakpoints.length > 0) {\r\n            _.each(breakpoints, (bp) => {\r\n                this._config.classes.push('pip-shadow-' + bp);\r\n            });\r\n        } else {\r\n            this._config.classes.push('pip-shadow');\r\n        }\r\n    }\r\n\r\n    public addShadow(...breakpoints: string[]): void {\r\n        this.setShadow(breakpoints);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeShadow(): void {\r\n        this.hideShadow();\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$broadcast(AppBarChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass AppBarProvider implements IAppBarProvider {\r\n    private _config: AppBarConfig = {\r\n        visible: true,\r\n        parts: {},\r\n        classes: []\r\n    };\r\n    private _service: AppBarService;\r\n\r\n    public get config(): AppBarConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: AppBarConfig) {\r\n        this._config = value || new AppBarConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AppBarService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }     \r\n}\r\n\r\nangular\r\n    .module('pipAppBar')\r\n    .provider('pipAppBar', AppBarProvider);\r\n","'use strict';\r\n\r\nangular\r\n    .module('pipAppBar', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './AppBarService';\r\nimport './AppBarDirective';\r\nimport './AppBarPartDirective';\r\n\r\nexport * from './AppBarService';\r\n","'use strict';\r\n\r\nimport { SimpleActionItem } from '../actions/ActionsService';\r\nimport { BreadcrumbItem } from './BreadcrumbService';\r\nimport { BreadcrumbConfig } from './BreadcrumbService';\r\nimport { IBreadcrumbService } from './BreadcrumbService';\r\nimport { BreadcrumbChangedEvent } from './BreadcrumbService';\r\nimport { BreadcrumbBackEvent } from './BreadcrumbService';\r\nimport { OpenSearchEvent } from '../search/SearchService'\r\n\r\n// Prevent junk from going into typescript definitions\r\nclass BreadcrumbController {\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n    private _location: ng.ILocationService;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private originatorEv: Event;\r\n    private _media: any;\r\n\r\n    public config: BreadcrumbConfig;\r\n\r\n    public constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        $state: ng.ui.IStateService,\r\n        $location: ng.ILocationService,\r\n        $injector: ng.auto.IInjectorService,\r\n        pipBreadcrumb: IBreadcrumbService,\r\n        $mdMedia: angular.material.IMedia\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n        this._location = $location;\r\n        this._injector = $injector;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-breadcrumb');\r\n\r\n        this.config = pipBreadcrumb.config;\r\n\r\n        $rootScope.$on(BreadcrumbChangedEvent, (event: ng.IAngularEvent, config: BreadcrumbConfig) => {\r\n            this.onBreadcrumbChanged(event, config);\r\n        });\r\n        $rootScope.$on(BreadcrumbBackEvent, () => { this.onBreadcrumbBack(); });\r\n\r\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\r\n        this._media = pipMedia !== undefined ? pipMedia : $mdMedia;\r\n    }\r\n\r\n    private onBreadcrumbChanged(event: ng.IAngularEvent, config: BreadcrumbConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    private onBreadcrumbBack(): void {\r\n        let items: BreadcrumbItem[] = this.config.items;\r\n        // Go to the last breadcrumb item\r\n        if (_.isArray(items) && items.length > 0) {\r\n            let item: BreadcrumbItem = items[items.length - 1];\r\n            if (_.isFunction(item.click)) {\r\n                item.click(item);\r\n            } else {\r\n                this._window.history.back();\r\n            }\r\n        } else {\r\n            this._window.history.back();\r\n        }\r\n    }\r\n\r\n    public onClick(item: BreadcrumbItem): void {\r\n        if (_.isFunction(item.click)) {\r\n            item.click(item);\r\n        }\r\n    }\r\n\r\n    public openSearch(): void {\r\n        this._rootScope.$broadcast(OpenSearchEvent);\r\n    }\r\n\r\n    public actionsVisible(item: BreadcrumbItem): boolean {\r\n\r\n        return angular.isArray(item.subActions) && item.subActions.length > 1;\r\n    }\r\n\r\n    public onOpenMenu($mdOpenMenu: Function, event: Event): void {\r\n        this.originatorEv = event;\r\n        $mdOpenMenu(this.originatorEv);\r\n    }\r\n\r\n    public onSubActionClick(action: SimpleActionItem): void {\r\n        if (!action || action.divider) {\r\n            return;\r\n        }\r\n\r\n        if (_.isFunction(action.click)) {\r\n            action.click(action);\r\n            return;\r\n        }\r\n\r\n        if (action.href) {\r\n            this._window.location.href = action.href;\r\n            return;\r\n        }\r\n\r\n        if (action.url) {\r\n            this._location.url(action.url);\r\n            return;\r\n        }\r\n\r\n        if (action.state) {\r\n            if (this._injector.has('$state')) {\r\n                let _state: angular.ui.IStateService = this._injector.get('$state') as ng.ui.IStateService\r\n                _state.go(action.state, action.stateParams);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (action.event) {\r\n            this._rootScope.$broadcast(action.event);\r\n            this.originatorEv = null;\r\n        } else {\r\n            // Otherwise raise notification\r\n            this._rootScope.$broadcast('pipActionClicked', action.name);\r\n            this.originatorEv = null;\r\n        }\r\n    }\r\n}\r\n\r\n(() => {\r\n    function breadcrumbDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {},\r\n            replace: false,\r\n            templateUrl: 'breadcrumb/Breadcrumb.html',\r\n            controller: BreadcrumbController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n\r\n    angular.module('pipBreadcrumb')\r\n        .directive('pipBreadcrumb', breadcrumbDirective);\r\n\r\n})();","'use strict';\r\n\r\nimport { SimpleActionItem } from '../actions/ActionsService';\r\nexport let BreadcrumbChangedEvent = \"pipBreadcrumbChanged\";\r\nexport let BreadcrumbBackEvent = \"pipBreadcrumbBack\";\r\n\r\nexport class BreadcrumbItem {\r\n    title: string;\r\n    click?: (item: BreadcrumbItem) => void;   \r\n    subActions?: SimpleActionItem[]; \r\n}\r\n\r\nexport class BreadcrumbConfig {\r\n    text: string;\r\n    items: BreadcrumbItem[];\r\n    criteria: string;\r\n}\r\n\r\nexport interface IBreadcrumbService {\r\n    config: BreadcrumbConfig;\r\n    text: string;\r\n    items: BreadcrumbItem[];\r\n    criteria: string;\r\n\r\n    showText(text: string, criteria?: string): void;\r\n    showItems(items: BreadcrumbItem[], criteria?: string): void;\r\n}\r\n\r\nexport interface IBreadcrumbProvider extends ng.IServiceProvider {\r\n    text: string;\r\n}\r\n\r\nclass BreadcrumbService implements IBreadcrumbService {\r\n    private _config: BreadcrumbConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: BreadcrumbConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config() {\r\n        return this._config;\r\n    }\r\n\r\n    public get text(): string {\r\n        return this._config.text;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._config.text = value;\r\n        this._config.items = null;\r\n\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get items(): BreadcrumbItem[] {\r\n        return this._config.items;\r\n    }\r\n\r\n    public set items(value: BreadcrumbItem[]) {\r\n        this._config.text = null;\r\n        this._config.items = value;\r\n\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get criteria(): string {\r\n        return this._config.criteria;\r\n    }\r\n\r\n    public set criteria(value: string) {\r\n        this._config.criteria = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showText(text: string, criteria?: string): void {\r\n        this._config.text = text;\r\n        this._config.items = null;\r\n        this._config.criteria = criteria;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showItems(items: BreadcrumbItem[], criteria?: string): void {\r\n        this._config.items = items || [];\r\n        this._config.text = null;\r\n        this._config.criteria = criteria;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public sendConfigEvent() {\r\n        this._rootScope.$broadcast(BreadcrumbChangedEvent, this._config);\r\n    }\r\n}\r\n\r\n\r\nclass BreadcrumbProvider implements IBreadcrumbProvider {\r\n    private _config: BreadcrumbConfig = { \r\n        text: null,\r\n        items: null,\r\n        criteria: null\r\n    };\r\n    private _service: BreadcrumbService;\r\n\r\n    public get text(): string {\r\n        return this._config.text;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._config.text = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService): any {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new BreadcrumbService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\n\r\nangular.module('pipBreadcrumb')\r\n    .provider('pipBreadcrumb', BreadcrumbProvider);\r\n","'use strict';\r\n\r\nangular.module('pipBreadcrumb', ['ngMaterial', 'pipNav.Templates', 'pipNav.Translate']);\r\n\r\nimport './BreadcrumbDirective';\r\nimport './BreadcrumbService';\r\n\r\nexport * from './BreadcrumbService';\r\n\r\n\r\n","'use strict';\r\n\r\nimport { INavIconService } from '../icon/NavIconService';\r\nimport { INavMenuService } from '../menu/NavMenuService';\r\nimport { INavHeaderService } from '../header/NavHeaderService';\r\nimport { IBreadcrumbService } from '../breadcrumb/BreadcrumbService';\r\nimport { ISearchService } from '../search/SearchService';\r\nimport { IActionsService } from '../actions/ActionsService';\r\nimport { IAppBarService } from '../appbar/AppBarService';\r\nimport { ISideNavService } from '../sidenav/SideNavService';\r\n\r\nexport interface INavService {\r\n    appbar: IAppBarService;\r\n    icon: INavIconService;\r\n    breadcrumb: IBreadcrumbService;\r\n    actions: IActionsService;\r\n    search: ISearchService;\r\n    sidenav: ISideNavService;\r\n    header: INavHeaderService;\r\n    menu: INavMenuService;\r\n\r\n    reset(): void;\r\n}\r\n\r\nclass NavService implements INavService {\r\n\r\n    public constructor($injector: ng.auto.IInjectorService) {\r\n        \"ngInject\";\r\n\r\n        this.appbar = $injector.has('pipAppBar') ? <IAppBarService>$injector.get('pipAppBar') : null;\r\n        this.icon = $injector.has('pipNavIcon') ? <INavIconService>$injector.get('pipNavIcon') : null;\r\n        this.breadcrumb = $injector.has('pipBreadcrumb') ? <IBreadcrumbService>$injector.get('pipBreadcrumb') : null;\r\n        this.actions = $injector.has('pipActions') ? <IActionsService>$injector.get('pipActions') : null;\r\n        this.search = $injector.has('pipSearch') ? <ISearchService>$injector.get('pipSearch') : null;\r\n        this.sidenav = $injector.has('pipSideNav') ? <ISideNavService>$injector.get('pipSideNav') : null;\r\n        this.header = $injector.has('pipNavHeader') ? <INavHeaderService>$injector.get('pipNavHeader') : null;\r\n        this.menu = $injector.has('pipNavMenu') ? <INavMenuService>$injector.get('pipNavMenu') : null;\r\n    }\r\n\r\n    public appbar: IAppBarService;\r\n    public icon: INavIconService;\r\n    public breadcrumb: IBreadcrumbService;\r\n    public actions: IActionsService;\r\n    public search: ISearchService;\r\n    public sidenav: ISideNavService;\r\n    public header: INavHeaderService;\r\n    public menu: INavMenuService;\r\n\r\n    public reset() {\r\n        // Reset appbar\r\n        if (this.appbar) {\r\n            this.appbar.show();\r\n        }\r\n\r\n        // Reset icon\r\n        if (this.icon) {\r\n            this.icon.showMenu();\r\n        }\r\n\r\n        // Reset breadcrumb\r\n        if (this.breadcrumb) {\r\n            this.breadcrumb.showText(null);\r\n        }\r\n\r\n        // Reset actions\r\n        if (this.actions) {\r\n            this.actions.show();\r\n        }\r\n\r\n        // Reset search\r\n        if (this.search) {\r\n            this.search.set(null);\r\n        }\r\n\r\n        if (this.sidenav) {\r\n            this.sidenav.show();\r\n        }\r\n\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNavService', [])\r\n    .service('pipNavService', NavService);","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\nfunction translateFilter($injector: ng.auto.IInjectorService) {\r\n    \"ngInject\";\r\n\r\n    let pipTranslate: pip.services.ITranslateService = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n    return function (key: string) {\r\n        return pipTranslate ? pipTranslate.translate(key) || key : key;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNav.Translate', [])\r\n    .filter('translate', translateFilter);\r\n\r\n})();\r\n\r\n","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\nclass DropdownDirectiveController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _pipTranslate: pip.services.ITranslateService;\r\n\r\n    private _pipTheme: pip.themes.IThemeService;\r\n    private _pipMedia: pip.layouts.IMediaService;\r\n    private _timeout: ng.ITimeoutService;\r\n\r\n    public themeClass: string;\r\n    public media: any;\r\n    public actions: any; // string or array\r\n    public activeIndex: number;\r\n    public selectedIndex: number;\r\n    public currentTheme: string;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $mdMedia: angular.material.IMedia,\r\n        $timeout: ng.ITimeoutService\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n\r\n        this._pipTheme = $injector.has('pipTheme') ? <pip.themes.IThemeService>$injector.get('pipTheme') : null;\r\n        this._pipMedia = $injector.has('pipMedia') ? <pip.layouts.IMediaService>$injector.get('pipMedia') : null;\r\n\r\n        if (this._pipTheme) {\r\n            this.currentTheme = this._pipTheme.theme;\r\n        } else if (this._rootScope['$theme']) {\r\n            this.currentTheme = this._rootScope['$theme'];\r\n        }\r\n\r\n        this.themeClass = ($attrs.class || '') + ' md-' + this.currentTheme + '-theme';\r\n\r\n        //pipAssert.isArray($scope.actions, 'pipDropdown: pip-actions attribute should take an array, but take ' + typeof $scope.actions);\r\n        this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\r\n        this.actions = ($scope['actions'] && _.isArray($scope['actions'])) ? $scope['actions'] : [];\r\n        this.activeIndex = $scope['activeIndex'] || 0;\r\n    }\r\n\r\n\r\n    public disabled(): boolean {\r\n        if (this._scope['ngDisabled']) {\r\n            return this._scope['ngDisabled']();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public onSelect(index: number): void {\r\n        this.activeIndex = index;\r\n        this._scope['activeIndex'] = index;\r\n        if (this._scope['select']) {\r\n            this._scope['select'](this.actions[index], this.activeIndex);\r\n        }\r\n\r\n        if (this._scope['pipChange']) {\r\n            this._timeout(() => {\r\n                this._scope['pipChange']();\r\n            });\r\n        }\r\n    }\r\n\r\n    public show(): boolean {\r\n        let result: boolean;\r\n        if (this._scope['showDropdown']()) {\r\n            return !!this._scope['showDropdown']();\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n\r\n    function dropdownDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                ngDisabled: '&',\r\n                actions: '=pipActions',\r\n                showDropdown: '&pipShow',\r\n                activeIndex: '=pipActiveIndex',\r\n                select: '=pipDropdownSelect',\r\n                pipChange: '&'\r\n            },\r\n            templateUrl: 'dropdown/Dropdown.html',\r\n            controller: DropdownDirectiveController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipDropdown', ['pipNav.Templates'])\r\n        .directive('pipDropdown', dropdownDirective);\r\n\r\n})();","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\nimport { INavHeaderService, NavHeaderConfig } from \"./NavHeaderService\";\r\n\r\n    class NavHeaderDirectiveController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _timeout: ng.ITimeoutService;\r\n    private _pipNavHeader: INavHeaderService;\r\n\r\npublic title: string;\r\npublic subtitle: string;\r\npublic imageUrl: string;\r\npublic imageCss: string;\r\npublic image: ng.IAugmentedJQuery;\r\npublic imageBlock: ng.IAugmentedJQuery;\r\npublic loadedDefaultImage: boolean;\r\npublic showHeader: boolean;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $timeout: ng.ITimeoutService,\r\n        pipNavHeader: INavHeaderService,\r\n        navConstant: any\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._scope = $scope;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n        this._pipNavHeader = pipNavHeader;\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-sticky-nav-header');\r\n\r\n\r\n        this.initImage();\r\n\r\n        let cleanupNavHeaderChanged: Function = this._rootScope.$on('pipNavHeaderChanged', ($event: ng.IAngularEvent, config: NavHeaderConfig) => {\r\n            this.onNavHeaderChanged($event, config)\r\n        });\r\n        let cleanupSideNavStateChanged: Function = this._rootScope.$on('pipSideNavStateChanged', ($event: ng.IAngularEvent, state: any) => { //navState\r\n            this.onStateChanged($event, state)\r\n        });\r\n\r\n        $scope.$on('$destroy', () => {\r\n            if (angular.isFunction(cleanupNavHeaderChanged)) {\r\n                cleanupNavHeaderChanged();\r\n            }\r\n            if (angular.isFunction(cleanupSideNavStateChanged)) {\r\n                cleanupSideNavStateChanged();\r\n            }            \r\n        });\r\n\r\n    }\r\n\r\n    private initImage() {\r\n        this.imageBlock = this._element.find('.pip-sticky-nav-header-user')\r\n\r\n        this._timeout(() => {\r\n            this.image = this._element.find('.pip-sticky-nav-header-user-image');\r\n\r\n            if (this.image[0]) {\r\n                this.image[0].onload =  (() => this.onImageLoad());\r\n                \r\n                // ($event: HTMLElement, erroev: Event): any =>  {\r\n                //     this.onImageLoad($event);\r\n                //     return null;\r\n                // }\r\n                this.image[0].onerror = (() => this.onImageError());\r\n                // ($event: ng.IAngularEvent) => {\r\n                //     this.onImageError($event);\r\n                // }\r\n            } else {\r\n                this.image.onload = (() => this.onImageLoad());\r\n                this.image.onerror = (() => this.onImageError());\r\n            }\r\n\r\n            this.onNavHeaderChanged(null, this._pipNavHeader.config);\r\n        }, 20);        \r\n    }\r\n\r\n       private initHeader() {\r\n            if (!this._pipNavHeader.config) return;\r\n\r\n            this.title = this._pipNavHeader.config.title;\r\n            this.subtitle = this._pipNavHeader.config.subtitle;\r\n            this.imageUrl = this._pipNavHeader.config.imageUrl;\r\n            this.imageCss = this._pipNavHeader.config.imageCss;\r\n        }\r\n\r\n        // // When image is loaded resize/reposition it\r\n        // private onImageLoad($event) {\r\n        //     let image: ng.IAugmentedJQuery = $($event.target);\r\n        //     this.setImageMarginCSS(image);\r\n        // };\r\n\r\n        // private onImageError($event) {\r\n        //     if (this.loadedDefaultImage) return;\r\n        //     this._scope.$apply(() => {\r\n        //         this.setImage(this._pipNavHeader.config, true);\r\n        //     });\r\n        // };\r\n        // When image is loaded resize/reposition it\r\n        private onImageLoad() {\r\n            this.setImageMarginCSS(this.image);\r\n        };\r\n\r\n        private onImageError() {\r\n            if (this.loadedDefaultImage) return;\r\n            this._scope.$apply(() => {\r\n                this.setImage(this._pipNavHeader.config, true);\r\n            });\r\n        };\r\n\r\n        private onStateChanged(event: ng.IAngularEvent, state: any) { // navState\r\n            if (state === undefined) return;\r\n\r\n            if (state.id == 'toggle') {\r\n                this._timeout(function () {\r\n                    this.showHeader = state && state.id == 'toggle';\r\n                }, 400);\r\n            } else {\r\n                this.showHeader = false;\r\n            }\r\n        }\r\n\r\n        private setImageMarginCSS(image: ng.IAugmentedJQuery) { //image[0]\r\n            var cssParams = {},\r\n                containerWidth = this.imageBlock.width ? this.imageBlock.width() : this.imageBlock.clientWidth,\r\n                containerHeight = this.imageBlock.height ? this.imageBlock.height() : this.imageBlock.clientHeight,\r\n                imageWidth = image[0]['naturalWidth'] || image.width,\r\n                imageHeight = image[0]['naturalHeight'] || image.height,\r\n                margin = 0;\r\n\r\n            if ((imageWidth / containerWidth) > (imageHeight / containerHeight)) {\r\n                margin = -((imageWidth / imageHeight * containerHeight - containerWidth) / 2);\r\n                cssParams['margin-left'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + containerHeight + 'px';\r\n                cssParams['width'] = '' + imageWidth * containerHeight / imageHeight + 'px';\r\n                cssParams['margin-top'] = '';\r\n            } else {\r\n                margin = -((imageHeight / imageWidth * containerWidth - containerHeight) / 2);\r\n                cssParams['margin-top'] = '' + margin + 'px';\r\n                cssParams['height'] = '' + imageHeight * containerWidth / imageWidth + 'px';\r\n                cssParams['width'] = '' + containerWidth + 'px';\r\n                cssParams['margin-left'] = '';\r\n            }\r\n\r\n            image.css(cssParams);\r\n        };\r\n\r\n        private setImage(config, loadError: boolean) {\r\n            if (!config) return;\r\n\r\n            var url: string;\r\n\r\n            if (!loadError && !!config.imageUrl && !this.loadedDefaultImage) {\r\n                url = config.imageUrl;\r\n            } else {\r\n                this.loadedDefaultImage = true;\r\n                url = config.defaultImageUrl;\r\n            }\r\n\r\n            if (url && this.image) {\r\n                this.image.attr('src', url);\r\n            } else {\r\n                this.imageBlock.css('display', 'none');\r\n            }\r\n        }\r\n\r\n        private onNavHeaderChanged($event: ng.IAngularEvent, config: NavHeaderConfig) {\r\n            if (!config) return;\r\n            this.setImage(config, false)\r\n\r\n            this.title = config.title;\r\n            this.subtitle = config.subtitle;\r\n            this.imageUrl = config.imageUrl;\r\n            this.imageCss = config.imageCss;\r\n        }\r\n\r\n        public onUserClick() {\r\n            this._rootScope.$broadcast('pipNavUserClicked'); // todo\r\n        }\r\n\r\n    }\r\n\r\n(() => {\r\n    function navHeaderDirective() {\r\n        return {\r\n            restrict: 'EA',\r\n            replace: false,\r\n            templateUrl: 'header/NavHeader.html',\r\n            controller: NavHeaderDirectiveController,\r\n            controllerAs: 'vm'\r\n\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipNavHeader')\r\n        .directive('pipNavHeader', navHeaderDirective);\r\n\r\n})();","'use strict';\r\n\r\nexport let NavHeaderChangedEvent = 'pipNavHeaderChanged';\r\n\r\nexport class NavHeaderConfig {\r\n    // Image url\r\n    public imageUrl: string;\r\n    // Image url\r\n    public defaultImageUrl: string;\r\n    // Title\r\n    public title: string;\r\n    // Subtitle\r\n    public subtitle: string;\r\n    // image styles\r\n    public imageCss: string;\r\n    // Handle header click event\r\n    click: () => void;\r\n    // Event name\r\n    event: string\r\n};\r\n\r\nexport interface INavHeaderService {\r\n    readonly config: NavHeaderConfig;\r\n    imageUrl: string;\r\n    title: string;\r\n    subtitle: string;\r\n    event: string;\r\n\r\n    show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\r\n    hide(): void;\r\n    click: () => void;\r\n}\r\n\r\nexport interface INavHeaderProvider extends ng.IServiceProvider {\r\n    config: NavHeaderConfig;\r\n    defaultImageUrl: string;\r\n    imageUrl: string;\r\n    title: string;\r\n    subtitle: string;\r\n    event: string;\r\n\r\n    set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void;\r\n    clear(): void;\r\n    click: () => void;\r\n}\r\n\r\nclass NavHeaderService {\r\n    private _config: NavHeaderConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: NavHeaderConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): NavHeaderConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get title(): string {\r\n        return this._config.title;\r\n    }\r\n\r\n    public set title(value: string) {\r\n        this._config.title = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get subtitle(): string {\r\n        return this._config.subtitle;\r\n    }\r\n\r\n    public set subtitle(value: string) {\r\n        this._config.subtitle = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get imageUrl(): string {\r\n        return this._config.imageUrl;\r\n    }\r\n\r\n    public set imageUrl(value: string) {\r\n        this._config.imageUrl = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get click(): () => void {\r\n        return this._config.click;\r\n    }\r\n\r\n    public set click(value: () => void) {\r\n        this._config.click = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get event(): string {\r\n        return this._config.event;\r\n    }\r\n\r\n    public set event(value: string) {\r\n        this._config.event = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public show(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.title = title;\r\n        this._config.subtitle = subtitle;\r\n        this._config.imageUrl = imageUrl;\r\n\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n        }\r\n        if (_.isString(callbackOrEvent)) {\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.event = null;\r\n        }\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.title = null;\r\n        this._config.subtitle = null;\r\n        this._config.imageUrl = null;\r\n        this._config.click = null;\r\n        this._config.event = null;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(NavHeaderChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavHeaderProvider implements INavHeaderProvider {\r\n    private _config: NavHeaderConfig = new NavHeaderConfig();\r\n    private _service: NavHeaderService;\r\n\r\n    public get config(): NavHeaderConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: NavHeaderConfig) {\r\n        this._config = value || new NavHeaderConfig();\r\n    }\r\n\r\n    public get defaultImageUrl(): string {\r\n        return this._config.defaultImageUrl;\r\n    }\r\n\r\n    public set defaultImageUrl(value: string) {\r\n        this._config.defaultImageUrl = value;\r\n    }\r\n\r\n    public get title(): string {\r\n        return this._config.title;\r\n    }\r\n\r\n    public set title(value: string) {\r\n        this._config.title = value;\r\n    }\r\n\r\n    public get subtitle(): string {\r\n        return this._config.subtitle;\r\n    }\r\n\r\n    public set subtitle(value: string) {\r\n        this._config.subtitle = value;\r\n    }\r\n\r\n    public get imageUrl(): string {\r\n        return this._config.imageUrl;\r\n    }\r\n\r\n    public set imageUrl(value: string) {\r\n        this._config.imageUrl = value;\r\n    }\r\n\r\n    public get click(): () => void {\r\n        return this._config.click;\r\n    }\r\n\r\n    public set click(value: () => void) {\r\n        this._config.click = value;\r\n    }\r\n\r\n    public get event(): string {\r\n        return this._config.event;\r\n    }\r\n\r\n    public set event(value: string) {\r\n        this._config.event = value;\r\n    }\r\n\r\n    public set(title: string, subtitle: string, imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.title = title;\r\n        this._config.subtitle = subtitle;\r\n        this._config.imageUrl = imageUrl;\r\n\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n        }\r\n        if (_.isString(callbackOrEvent)) {\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.event = null;\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.title = null;\r\n        this._config.subtitle = null;\r\n        this._config.imageUrl = null;\r\n        this._config.click = null;\r\n        this._config.event = null;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavHeaderService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n\r\n}\r\n\r\n\r\nangular\r\n    .module('pipNavHeader')\r\n    .provider('pipNavHeader', NavHeaderProvider);\r\n","'use strict';\r\n\r\nangular.module('pipNavHeader', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './NavHeaderService';\r\nimport './NavHeaderDirective';\r\n\r\nexport * from './NavHeaderService';","'use strict';\r\nimport { OpenSideNavEvent } from '../sidenav/SideNavEvents';\r\nimport {  INavIconService, NavIconConfig } from \"./NavIconService\";\r\n// Prevent junk from going into typescript definitions\r\nexport let NavIconClickedEvent = 'pipNavIconClicked';\r\n\r\nclass NavIconDirectiveController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _window: ng.IWindowService;\r\n\r\n    public config: NavIconConfig;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $window: ng.IWindowService,\r\n        pipNavIcon: INavIconService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._scope = $scope;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._window = $window;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-nav-icon');\r\n\r\n        this.config = pipNavIcon.config;\r\n\r\n        $rootScope.$on('pipNavIconChanged', (event: ng.IAngularEvent, config: NavIconConfig) => {\r\n            this.onNavIconChanged(event, config)\r\n        });\r\n\r\n    }\r\n\r\n    public onNavIconChanged(event: ng.IAngularEvent, config: NavIconConfig): void {\r\n        this.config = config;\r\n    }\r\n\r\n    public onNavIconClick(): void {\r\n        if (_.isFunction(this.config.click)) {\r\n            // Execute nav icon callback\r\n            this.config.click();\r\n        } else if (this.config.event) {\r\n            this._rootScope.$broadcast(this.config.event);\r\n        } else if (this.config.type == 'menu') {\r\n            this._rootScope.$broadcast(OpenSideNavEvent);\r\n        } else if (this.config.type == 'back') {\r\n            this._window.history.back();\r\n        } else {\r\n            this._rootScope.$broadcast(NavIconClickedEvent);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function navIconDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                type: '=pipType',\r\n                imageUrl: '=pipImageUrl',\r\n                icon: '=pipIcon'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'icon/NavIcon.html',\r\n            controller: NavIconDirectiveController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipNavIcon')\r\n        .directive('pipNavIcon', navIconDirective);\r\n\r\n})();","'use strict';\r\n\r\nexport let NavIconChangedEvent = 'pipNavIconChanged';\r\n\r\nexport class NavIconConfig {\r\n    // Type of nav icon: 'back', 'menu', 'image' or 'none'\r\n    public type: string;\r\n    // Image url\r\n    public imageUrl: string;\r\n    // Icon name\r\n    public icon: string;\r\n    // Handle nav icon click event\r\n    click: () => void;\r\n    // Event name\r\n    event: string\r\n};\r\n\r\nexport interface INavIconService {\r\n    readonly config: NavIconConfig;\r\n\r\n    showMenu(callbackOrEvent?: any): void;\r\n    showIcon(icon: string, callbackOrEvent?: any): void;\r\n    showBack(callbackOrEvent?: any): void;\r\n    showImage(imageUrl: string, callbackOrEvent?: any): void;\r\n    hide(): void;\r\n}\r\n\r\nexport interface INavIconProvider extends ng.IServiceProvider {\r\n    config: NavIconConfig;\r\n\r\n    setMenu(callbackOrEvent?: any): void;\r\n    setIcon(icon: string, callbackOrEvent?: any): void;\r\n    setBack(callbackOrEvent?: any): void;\r\n    setImage(imageUrl: string, callbackOrEvent?: any): void;\r\n    clear(): void;\r\n}\r\n\r\nclass NavIconService implements INavIconService {\r\n    private _config: NavIconConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(config: NavIconConfig, $rootScope: ng.IRootScopeService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get config(): NavIconConfig {\r\n        return this._config;\r\n    }\r\n\r\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\r\n        if (_.isFunction(callbackOrEvent)) {\r\n            this._config.click = callbackOrEvent;\r\n            this._config.event = null;\r\n        } else if (_.isString(callbackOrEvent)) {\r\n            this._config.click = null;\r\n            this._config.event = callbackOrEvent;\r\n        } else {\r\n            this._config.click = null;\r\n            this._config.event = null;\r\n        }\r\n    }\r\n\r\n    public showMenu(callbackOrEvent?: any): void {\r\n        this._config.type = 'menu';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showIcon(icon: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'icon';\r\n        this._config.icon = icon;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showBack(callbackOrEvent?: any): void {\r\n        this._config.type = 'back';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public showImage(imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'image';\r\n        this._config.imageUrl = imageUrl;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public hide(): void {\r\n        this._config.type = 'none';\r\n        this.setCallbackOrEvent(null);\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$broadcast(NavIconChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavIconProvider implements INavIconProvider {\r\n    private _config: NavIconConfig = new NavIconConfig();\r\n    private _service: NavIconService;\r\n\r\n    public get config(): NavIconConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: NavIconConfig) {\r\n        this._config = value || new NavIconConfig();\r\n    }\r\n\r\n    private setCallbackOrEvent(callbackOrEvent?: any): void {\r\n        if (_.isFunction(callbackOrEvent))\r\n            this._config.click = callbackOrEvent;\r\n        else this._config.click = null;\r\n\r\n        if (_.isString(callbackOrEvent))\r\n            this._config.event = callbackOrEvent;\r\n        else this._config.event = null;\r\n    }\r\n\r\n    public setMenu(callbackOrEvent?: any): void {\r\n        this._config.type = 'menu';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setIcon(icon: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'icon';\r\n        this._config.icon = icon;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setBack(callbackOrEvent?: any): void {\r\n        this._config.type = 'back';\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public setImage(imageUrl: string, callbackOrEvent?: any): void {\r\n        this._config.type = 'image';\r\n        this._config.imageUrl = imageUrl;\r\n        this.setCallbackOrEvent(callbackOrEvent);\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.type = 'none';\r\n        this.setCallbackOrEvent(null);\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavIconService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    }\r\n     \r\n}\r\n\r\n\r\nangular\r\n    .module('pipNavIcon')\r\n    .provider('pipNavIcon', NavIconProvider);\r\n","'use strict';\r\n\r\nangular.module('pipNavIcon', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './NavIconService';\r\nimport './NavIconDirective';\r\n\r\nexport * from './NavIconService';\r\n","﻿'use strict';\r\n\r\nimport './dependencies/TranslateFilter';\r\nimport './language/LanguagePickerDirective';\r\nimport './dropdown/DropdownDirective';\r\nimport './tabs/TabsDirective';\r\nimport './actions';\r\nimport './appbar';\r\nimport './search';\r\nimport './breadcrumb';\r\nimport './sidenav';\r\nimport './header';\r\nimport './menu';\r\nimport './icon';\r\nimport './common/NavService';\r\n\r\nangular\r\n    .module('pipNav', [\r\n        'pipNavService',\r\n        'pipDropdown',\r\n        'pipTabs',\r\n        'pipAppBar',\r\n        'pipSearchBar',\r\n        'pipNavIcon',\r\n        'pipBreadcrumb',\r\n        'pipLanguagePicker',\r\n        'pipActions', \r\n        'pipSideNav',\r\n        'pipNavMenu',\r\n        'pipNavHeader'\r\n    ])\r\n    .constant('navConstant', {\r\n        'TAB_BREAKPOINT': 'gt-sm',\r\n        'SIDENAV_CONTAINER': '.pip-main',\r\n        'SIDENAV_LARGE_WIDTH': 320,\r\n        'SIDENAV_MIDDLE_WIDTH': 240,\r\n        'SIDENAV_SMALL_WIDTH': 72,\r\n        'SIDENAV_ANIMATION_DURATION': 600\r\n\r\n    })\r\n\r\nexport * from './actions';\r\nexport * from './appbar';\r\nexport * from './breadcrumb';\r\nexport * from './search';\r\nexport * from './sidenav';\r\nexport * from './icon';\r\nexport * from './menu';\r\nexport * from './header';\r\nexport * from './common/NavService';\r\n","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\n\r\nclass LanguagePickerDirectiveController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: ng.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _translate: pip.services.ITranslateService;\r\n    private _timeout: ng.ITimeoutService;\r\n\r\n    public languages: string[] = ['en', 'ru'];\r\n    public selectedLanguage: string;\r\n\r\n    public constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: ng.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $timeout: ng.ITimeoutService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n        this._translate = $injector.has('pipTranslate') ? <pip.services.ITranslateService>$injector.get('pipTranslate') : null;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-language-picker');\r\n\r\n        this.setLanguages($scope['languages']);\r\n\r\n        this.selectedLanguage = $scope['value'] || this.languages[0]; \r\n    }\r\n\r\n    public get language() {\r\n        return this._translate ? this._translate.language : null;\r\n    }\r\n\r\n    public setLanguages(languages: string[]): void {\r\n        this.languages = languages.length > 0 ? languages : ['en', 'ru'];\r\n    }\r\n\r\n    public onLanguageClick(language: string) {\r\n        if (this._translate != null) {\r\n            this.selectedLanguage = language;\r\n            // this._timeout(() => {\r\n                this._translate.language = this.selectedLanguage;\r\n            // }, 0);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function languagePickerDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                languages: '=languages',\r\n                value: '=value'\r\n            },\r\n            replace: false,\r\n            templateUrl: function (element, attr) {\r\n                return 'language/LanguagePicker.html';\r\n            },\r\n            controller: LanguagePickerDirectiveController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipLanguagePicker', [\r\n            'ngMaterial', 'pipNav.Translate', 'pipNav.Templates'\r\n        ])\r\n        .directive('pipLanguagePicker', languagePickerDirective);\r\n\r\n})();","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\n    function NavMenuDirectiveController($scope, $element, $rootScope, $window, $location, $timeout, $injector, pipSideNav, pipNavMenu) {\r\n        \"ngInject\";\r\n\r\n        var animationDuration = 450,\r\n            pipSideNavElement = $element.parent().parent();\r\n        // Apply class and call resize\r\n        $element.addClass('pip-sticky-nav-menu');\r\n\r\n        $scope.sections = $scope.sections || pipNavMenu.sections;\r\n        // $scope.showTooltip = true;\r\n        // pipNavMenu.sections = $scope.sections;\r\n        setCollapsible();\r\n        // todo set from services\r\n        $scope.defaultIcon = pipNavMenu.defaultIcon;\r\n\r\n        onStateChanged(null, pipSideNav.state);\r\n\r\n        $rootScope.$on('pipNavMenuChanged', onConfigChanged);\r\n        $rootScope.$on('pipSideNavStateChanged', onStateChanged);\r\n\r\n        $scope.itemVisible = isHidden;\r\n        $scope.clickLink = clickLink;\r\n        $scope.isSectionEmpty = isSectionEmpty;\r\n        $scope.onExpand = onExpand;\r\n        $scope.isActive = isActive;\r\n\r\n        return;\r\n\r\n        function setCollapsible() {\r\n            var collapsed;\r\n            if (angular.isFunction($scope.collapsed)) {\r\n                collapsed = $scope.collapsed();\r\n            } else {\r\n                collapsed = $scope.collapsed !== false && $scope.collapsed !== 'false';\r\n            }\r\n\r\n            $scope.isCollapsed = collapsed;\r\n        }\r\n\r\n        function onExpand() {\r\n            if (!$scope.isCollapsed) { return }\r\n\r\n            $scope.expanded = !$scope.expanded;\r\n\r\n            if ($scope.expanded) {\r\n                pipSideNavElement.removeClass('pip-sticky-nav-small');\r\n            } else {\r\n                pipSideNavElement.addClass('pip-sticky-nav-small');\r\n            }\r\n            $rootScope.$emit('pipNavExpanded', $scope.expanded);\r\n        }\r\n\r\n        function isHidden(item) {\r\n            return item && item.access && !item.access(item);\r\n        }\r\n\r\n        function isSectionEmpty(linkCollection) {\r\n            var result = true;\r\n            _.each(linkCollection, function (link) {\r\n                if (!isHidden(link))\r\n                    result = false;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        function onConfigChanged(event, config) {\r\n            if (!config) return;\r\n\r\n            $scope.sections = config.sections;\r\n        }\r\n\r\n        function onStateChanged(event, state) {\r\n            // SS> You shall not set it into the menu state. Instead it shall be controlled by the state of Sidenav\r\n            //pipNavMenu.collapsed(state.expand);\r\n            if (!state) return;\r\n\r\n            $scope.isCollapsed = state.expand;\r\n            $scope.expanded = state.isExpanded;\r\n            $scope.expandedButton = state.expandedButton;\r\n\r\n            $scope.sideNavState = state;\r\n        }\r\n\r\n        function isActive(link) {\r\n            if (link.parentState) {\r\n                var $state = $injector.has('$state') ? $injector.get('$state') : null;\r\n                if ($state != null && $state.includes(link.parentState)) {\r\n                    return true;\r\n                }\r\n            } else if (link.state) {\r\n                var $state = $injector.has('$state') ? $injector.get('$state') : null;\r\n                if ($state != null && $state.includes(link.state)) {\r\n                    return true;\r\n                }\r\n            } else if (link.href) {\r\n                if (link.href.split('?')[0] === $window.location.href.split('?')[0]) {\r\n                    return true;\r\n                }\r\n            } else if (link.url) {\r\n                if (link.url.split(/[\\s/?]+/)[1] === $location.url().split(/[\\s/?]+/)[1]) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        function clickLink(event, link) {\r\n            event.stopPropagation();\r\n\r\n            if (!link) {\r\n                pipSideNav.close();\r\n                return;\r\n            }\r\n\r\n            if (link.href) {\r\n                if (link.href.split('?')[0] === $window.location.href.split('?')[0]) {\r\n                    pipSideNav.close();\r\n                    return;\r\n                }\r\n\r\n                pipSideNav.close();\r\n                $timeout(function () {\r\n                    $window.location.href = link.href;\r\n                }, animationDuration);\r\n\r\n                return;\r\n            }\r\n            else if (link.url) {\r\n                if (link.url.split(/[\\s/?]+/)[1] === $location.url().split(/[\\s/?]+/)[1]) {\r\n                    pipSideNav.close();\r\n                    return;\r\n                }\r\n\r\n                pipSideNav.close();\r\n                $timeout(function () {\r\n                    $location.url(link.url);\r\n                }, animationDuration);\r\n\r\n                return;\r\n            }\r\n            else if (link.state) {\r\n                var $state = $injector.has('$state') ? $injector.get('$state') : null;\r\n\r\n                if ($state != null && $state.current.name === link.state) {\r\n                    pipSideNav.close();\r\n                    return;\r\n                }\r\n\r\n                pipSideNav.close();\r\n                $timeout(function () {\r\n                    if ($injector.has('$state')) {\r\n                        var $state = $injector.get('$state');\r\n                        $state.go(link.state, link.stateParams);\r\n                    }\r\n                }, animationDuration);\r\n\r\n                return;\r\n            }\r\n            else if (link.event)\r\n                $rootScope.$broadcast(link.event, link);\r\n\r\n            pipSideNav.close();\r\n        }\r\n    }\r\n\r\n    function navMenuDirective() {\r\n        return {\r\n            restrict: 'EA',\r\n            scope: {\r\n                // sections: '?=pipSections',\r\n                // collapsed: '=pipCollapsed'\r\n            },\r\n            replace: false,\r\n            templateUrl: 'menu/NavMenu.html',\r\n            controller: NavMenuDirectiveController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipNavMenu')\r\n        .directive('pipNavMenu', navMenuDirective);\r\n\r\n})();","'use strict';\r\n\r\nexport let NavMenuChangedEvent = 'pipNavMenuChanged';\r\n\r\nexport class NavMenuLink {\r\n    // Name to refer to the item\r\n    public name: string;\r\n    // Link visible title\r\n    public title: string;\r\n    // Tooltip text\r\n    public tooltipText?: string;    \r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Counter badge\r\n    public count?: number;\r\n    // class for badge style\r\n    public badgeStyle?: string;\r\n    // Access function\r\n    public access?: (link: NavMenuLink) => boolean;\r\n    // window.location.href\r\n    public href?: string;\r\n    // $location.url\r\n    public url?: string;\r\n    // $state.go(state, stateParams)\r\n    public state?: string;\r\n    // Parameters for $state.go(state, stateParams)\r\n    public stateParams?: any;\r\n    // parent state or parent state for selection item \r\n    public parentState?: string;\r\n    // $rootScope.broadcast(event)\r\n    public event?: string;\r\n    // Click callback\r\n    public click?: (link: NavMenuLink) => void;\r\n}\r\n\r\nexport class NavMenuSection {\r\n    // Name to refer to the section\r\n    public name: string;\r\n    // Section visible title\r\n    public title?: string;\r\n    // Tooltip text\r\n    public tooltipText?: string;      \r\n    // Icon name from $iconProvider\r\n    public icon?: string;\r\n    // Links shown in the section\r\n    public links: NavMenuLink[];\r\n    // Access function\r\n    public access?: (section: NavMenuSection) => boolean;\r\n}\r\n\r\nexport class NavMenuConfig {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n}\r\n\r\nexport interface INavMenuService {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n    updateCount(link: string, count: number): void; \r\n    updateBadgeStyle(link: string, style: string): void;\r\n    clearCounts(): void;\r\n}\r\n\r\nexport interface INavMenuProvider extends ng.IServiceProvider {\r\n    sections: NavMenuSection[];\r\n    defaultIcon: string;\r\n}\r\n\r\nclass NavMenuService implements INavMenuService {\r\n    private _config: NavMenuConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: NavMenuConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n    }\r\n\r\n    public get sections(): NavMenuSection[] {\r\n        return this._config.sections;\r\n    }\r\n\r\n    public set sections(value: NavMenuSection[]) {\r\n        this._config.sections = value || [];\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public get defaultIcon(): string {\r\n        return this._config.defaultIcon;\r\n    }\r\n\r\n    public updateBadgeStyle(link: string, style: string): void {\r\n        if (link == null || !_.isString(style)) return;\r\n\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                if (l.name == link)\r\n                    l.badgeStyle = style;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public set defaultIcon(value: string) {\r\n        this._config.defaultIcon = value;\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public updateCount(link: string, count: number): void {\r\n        if (link == null || !_.isNumber(count)) return;\r\n\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                if (l.name == link)\r\n                    l.count = count;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    public clearCounts(): void {\r\n        _.each(this._config.sections, (s) => {\r\n            _.each(s.links, (l) => {\r\n                l.count = null;\r\n            });\r\n        });\r\n\r\n        this.sendChangeEvent();\r\n    }\r\n\r\n    private sendChangeEvent() {\r\n        this._rootScope.$emit(NavMenuChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass NavMenuProvider implements INavMenuProvider {\r\n    private _config: NavMenuConfig = {\r\n        sections: [],\r\n        defaultIcon: 'icons:folder'\r\n    };\r\n    private _service: NavMenuService;\r\n\r\n    public get sections(): NavMenuSection[] {\r\n        return this._config.sections;\r\n    }\r\n\r\n    public set sections(value: NavMenuSection[]) {\r\n        this._config.sections = value || [];\r\n    }\r\n\r\n    public get defaultIcon(): string {\r\n        return this._config.defaultIcon;\r\n    }\r\n\r\n    public set defaultIcon(value: string) {\r\n        this._config.defaultIcon = value;\r\n    }\r\n\r\n    public $get($rootScope) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new NavMenuService(this._config, $rootScope);\r\n        \r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipNavMenu')\r\n    .provider('pipNavMenu', NavMenuProvider);\r\n","'use strict';\r\n\r\nangular.module('pipNavMenu', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './NavMenuService';\r\nimport './NavMenuDirective';\r\n\r\nexport * from './NavMenuService';","'use strict';\r\n\r\nimport { SearchConfig } from './SearchService';\r\nimport { ISearchService } from './SearchService';\r\nimport { SearchChangedEvent } from './SearchService';\r\nimport { SearchActivatedEvent } from './SearchService';\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\n\r\nclass SearchBarController {\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _element: any;\r\n\r\n    public config: SearchConfig;\r\n    public enabled: boolean = false;\r\n    public search: any = { text: '' };\r\n\r\n    public constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $rootScope: ng.IRootScopeService,\r\n        pipSearch: ISearchService\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._rootScope = $rootScope;\r\n        this._element = $element;\r\n\r\n        // Apply class and call resize\r\n        $element.addClass('pip-search-bar');\r\n\r\n        this.config = pipSearch.config;\r\n        this.stateChange();\r\n        $rootScope.$on(SearchChangedEvent, (event: ng.IAngularEvent, config: SearchConfig) => {\r\n            this.onSearchChanged(event, config);\r\n        });\r\n    }\r\n\r\n    private stateChange(): void {\r\n        if (this.enabled) {\r\n            this._element.addClass('w-stretch');\r\n            this._element.parent().addClass('pip-search-active');\r\n\r\n        } else {\r\n            this._element.removeClass('w-stretch');\r\n            this._element.parent().removeClass('pip-search-active');\r\n        }\r\n    }\r\n\r\n    private onSearchChanged(event: ng.IAngularEvent, config: SearchConfig): void {\r\n        this.config = config;\r\n        this.enabled = false;\r\n        this.search.text = '';\r\n        this.stateChange();\r\n    }\r\n\r\n    private focusText(): void {\r\n        setTimeout(() => {\r\n            let element: JQuery = $('.pip-search-text');\r\n            if (element.length > 0)\r\n                element.focus();\r\n        }, 0);\r\n    }\r\n\r\n    public enable(): void {\r\n        this.search.text = this.config.criteria;\r\n        this.enabled = true;\r\n        this.focusText();\r\n        this.stateChange();\r\n    }\r\n\r\n    public onClick(): void {\r\n        let search = this.search.text;\r\n\r\n        this.search.text = '';\r\n        this.enabled = false;\r\n        this.stateChange();\r\n\r\n        if (this.config.callback) {\r\n            this.config.callback(search);\r\n        } else {\r\n            this._rootScope.$broadcast(SearchActivatedEvent, search);\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        if (this.search.text) {\r\n            this.search.text = '';\r\n            this.focusText();\r\n        } else {\r\n            this.enabled = false;\r\n            this.stateChange();\r\n            this.onClick();\r\n        }\r\n    }\r\n\r\n    public onKeyDown(event: KeyboardEvent): void {\r\n        // Enter pressed\r\n        if (event.keyCode === 13)\r\n            this.onClick();\r\n        // ESC pressed\r\n        else if (event.keyCode === 27) {\r\n            this.enabled = false;\r\n            this.stateChange();\r\n        }\r\n    }\r\n}\r\n\r\n(() => {\r\n    function searchBarDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {},\r\n            replace: false,\r\n            templateUrl: 'search/SearchBar.html',\r\n            controller: SearchBarController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n    angular.module('pipSearchBar')\r\n        .directive('pipSearchBar', searchBarDirective);\r\n\r\n})();","'use strict';\r\n\r\nexport let OpenSearchEvent = 'pipOpenSearch';\r\nexport let CloseSearchEvent = 'pipCloseSearch';\r\nexport let SearchChangedEvent = 'pipSearchChanged';\r\nexport let SearchActivatedEvent = 'pipSearchActivated';\r\n\r\nexport class SearchConfig {\r\n    // Search visible\r\n    public visible: boolean;\r\n    // Search criteria\r\n    public criteria: string;\r\n    // Custom search parameters\r\n    public params: any;\r\n    // History for search autocomplete\r\n    public history: string[];\r\n    // Callback for search\r\n    callback: (criteria: string) => void;\r\n}\r\n\r\nexport interface ISearchService {\r\n    config: SearchConfig;\r\n    criteria: string;\r\n    params: any;\r\n    history: string[];\r\n    callback: (criteria: string) => void;\r\n\r\n    set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void;\r\n    clear(): void;\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n}\r\n\r\nexport interface ISearchProvider extends ng.IServiceProvider {    \r\n}\r\n\r\n\r\nclass SearchService implements ISearchService {\r\n    private _config: SearchConfig;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor(\r\n        config: SearchConfig,\r\n        $rootScope: ng.IRootScopeService\r\n    ) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n\r\n        $rootScope.$on(OpenSearchEvent, () => { this.open });\r\n        $rootScope.$on(CloseSearchEvent, () => { this.close });\r\n    }\r\n\r\n    public get config(): SearchConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get criteria(): string {\r\n        return this._config.criteria;\r\n    }\r\n\r\n    public set criteria(value: string) {\r\n        this._config.criteria = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get params(): any {\r\n        return this._config.params;\r\n    }\r\n\r\n    public set params(value: any) {\r\n        this._config.params = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get history(): string[] {\r\n        return this._config.history;\r\n    }\r\n\r\n    public set history(value: string[]) {\r\n        this._config.history = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get callback(): (criteria: string) => void {\r\n        return this._config.callback;\r\n    }\r\n\r\n    public set callback(value: (criteria: string) => void) {\r\n        this._config.callback = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public set(callback: (criteria: string) => void, criteria?: string, params?: any, history?: string[]): void {\r\n        this._config.callback = callback;\r\n        this._config.criteria = criteria;\r\n        this._config.params = params;\r\n        this._config.history = history;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public clear(): void {\r\n        this._config.callback = null;\r\n        this._config.criteria = null;\r\n        this._config.params = null;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public open(): void {\r\n        this._config.visible = true;\r\n        this.sendConfigEvent();                \r\n    }\r\n            \r\n    public close(): void {\r\n        this._config.visible = false;        \r\n        this.sendConfigEvent();                \r\n    }                \r\n\r\n    public toggle(): void {\r\n        this._config.visible = !this._config.visible;\r\n        this.sendConfigEvent();                \r\n    }                   \r\n\r\n    private sendConfigEvent(): void {\r\n        this._rootScope.$broadcast(SearchChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass SearchProvider implements ISearchProvider {\r\n    private _config: SearchConfig = new SearchConfig();\r\n    private _service: SearchService = null;\r\n\r\n    public $get($rootScope: ng.IRootScopeService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SearchService(this._config, $rootScope);\r\n\r\n        return this._service;\r\n    } \r\n}\r\n\r\n\r\nangular.module('pipSearchBar')\r\n    .provider('pipSearch', SearchProvider);\r\n","'use strict';\r\n\r\nangular.module('pipSearchBar', ['ngMaterial', 'pipNav.Translate', 'pipNav.Templates']);\r\n\r\nimport './SearchService';\r\nimport './SearchBarDirective';\r\n\r\nexport * from './SearchService';","'use strict';\r\nimport { ISideNavService, SideNavConfig } from './SideNavService';\r\n\r\nimport { SideNavStateNames, SideNavState, SideNavStateConfig } from './SideNavState';\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\n\r\nclass SideNavDirectiveController {\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _pipSideNav: ISideNavService;\r\n    private _pipSystemInfo: pip.services.ISystemInfo;\r\n\r\n    private _pipMedia: pip.layouts.IMediaService;\r\n    private _timeout: ng.ITimeoutService;\r\n\r\n    private _isResizing: boolean;\r\n    private _animationDuration: number;\r\n    private _mainContainer: string; // todo add  to config\r\n    private _bigWidth: number;\r\n\r\n    private _middleWidth: number;\r\n    private _smallWidth: number;\r\n    private _mediaBreakpoints: pip.layouts.MediaBreakpoints;\r\n    private _navState: SideNavStateConfig;\r\n\r\n    private windowResize: Function;\r\n\r\n    public sidenavState: SideNavState;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $timeout: ng.ITimeoutService,\r\n        pipSideNav: ISideNavService,\r\n        navConstant: any\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n        this._pipSideNav = pipSideNav;\r\n\r\nconsole.log('this._pipSideNav', this._pipSideNav);\r\n\r\n        this._pipMedia = this._injector.has('pipMedia') ? <pip.layouts.IMediaService>this._injector.get('pipMedia') : null;\r\n\r\n        this._mainContainer = navConstant.SIDENAV_CONTAINER;\r\n        this._bigWidth = navConstant.SIDENAV_LARGE_WIDTH;\r\n        this._middleWidth = navConstant.SIDENAV_MIDDLE_WIDTH;\r\n        this._smallWidth = navConstant.SIDENAV_SMALL_WIDTH;\r\n        this._isResizing = false;\r\n        this._animationDuration = navConstant.SIDENAV_ANIMATION_DURATION;\r\n        this._navState = new SideNavStateConfig();\r\n        this._mediaBreakpoints = this.setBreakpoints();\r\n\r\n        // Apply class and call resize\r\n        this._element.addClass('pip-sticky-sidenav');\r\n\r\n        let cleanupMainResized;\r\n        let cleanupSideNavState;\r\n\r\n        if (this._pipSideNav.config && this._pipSideNav.config.type != 'popup') {\r\n            this._timeout(() => {\r\n                this.setSideNaveState()\r\n            }, 100);\r\n\r\n            this.windowResize = _.debounce(() => { this.setSideNaveState(); }, 10);\r\n            cleanupMainResized = $rootScope.$on('pipMainResized', () => {\r\n                this.windowResize();\r\n            });\r\n            cleanupSideNavState = $rootScope.$on('pipSideNavState', ($event: ng.IAngularEvent, state: SideNavStateNames) => {\r\n                this.onSideNavState($event, state)\r\n            });\r\n        } else {\r\n            this._isResizing = false;\r\n            $scope.sidenavState = null;\r\n            $timeout(function () {\r\n                this.setState(SideNavStateNames.Toggle);\r\n            }, 100);\r\n        }\r\n\r\n        let cleanupNavHeaderChanged: Function = this._rootScope.$on('pipNavIconClicked', () => {\r\n            this.onNavIconClick();\r\n        });\r\n        let cleanupSideNavChanged: Function = this._rootScope.$on('pipSideNavChanged', ($event: ng.IAngularEvent, config: SideNavConfig) => { //navState\r\n            this.onSideNavChanged($event, config)\r\n        });\r\n\r\n        $scope.$on('$destroy', () => {\r\n            if (angular.isFunction(cleanupNavHeaderChanged)) {\r\n                cleanupNavHeaderChanged();\r\n            }\r\n            if (angular.isFunction(cleanupSideNavChanged)) {\r\n                cleanupSideNavChanged();\r\n            }\r\n            if (angular.isFunction(cleanupMainResized)) {\r\n                cleanupMainResized();\r\n            }\r\n            if (angular.isFunction(cleanupSideNavState)) {\r\n                cleanupSideNavState();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private setBreakpoints(): pip.layouts.MediaBreakpoints {\r\n        if (!this._pipMedia || !angular.isObject(this._pipMedia.breakpoints)) {\r\n            return { xs: 639, sm: 959, md: 1024, lg: 1919 };\r\n        } else {\r\n            return this._pipMedia.breakpoints;\r\n        }\r\n    }\r\n\r\n    private onSideNavChanged($event: ng.IAngularEvent, config: SideNavConfig): void {\r\n        if (config && config.visible) {\r\n            this._element.css('display', 'block');\r\n        } else {\r\n            this._element.css('display', 'none');\r\n        }\r\n    }\r\n\r\n    private onNavIconClick(): void {\r\n        this._pipSideNav.open();\r\n    }\r\n\r\n    private onSideNavState($event: ng.IAngularEvent, stateName: SideNavStateNames): void {\r\n        if (angular.isString(stateName) && this._navState[stateName] !== undefined) {\r\n            this.setState(stateName);\r\n        }\r\n    }\r\n\r\n    private setSideNaveState(): void {\r\n        if (this._pipSideNav.config && this._pipSideNav.config.type == 'popup') { return }\r\n\r\n        if (this._isResizing) {\r\n            this._timeout(() => { this.setSideNaveState() }, this._animationDuration); \r\n\r\n            return;\r\n        }\r\n\r\n        let mainWidth: number = $(this._mainContainer).innerWidth();\r\n        let sideNavWidth: number = $('.pip-sticky-sidenav').innerWidth();\r\n        let currentWidth: number = sideNavWidth ? sideNavWidth + 2 : 0; // add border width\r\n\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.sm) {\r\n            this.setState(SideNavStateNames.Toggle);\r\n            return;\r\n        }\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.md) {\r\n            this.setState(SideNavStateNames.Small);\r\n            return;\r\n        }\r\n        if (mainWidth + currentWidth < this._mediaBreakpoints.lg) {\r\n            this.setState(SideNavStateNames.Large);\r\n            return;\r\n        }\r\n        this.setState(SideNavStateNames.XLarge);\r\n    }\r\n\r\n    private setState(stateName: SideNavStateNames) {\r\n        if (this._isResizing) return;\r\n        if (this.sidenavState && this.sidenavState.id == stateName) return;\r\n\r\n        if (stateName != SideNavStateNames.Toggle) {\r\n            this._element.removeClass('sidenav-mobile');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.Small) {\r\n            this._element.removeClass('pip-sticky-nav-small');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.XLarge) {\r\n            this._element.removeClass('sidenav-desktop');\r\n        }\r\n\r\n        if (stateName != SideNavStateNames.Large) {\r\n            this._element.removeClass('sidenav-smalldesktop');\r\n        }\r\n\r\n        this._isResizing = true;\r\n        if (stateName == SideNavStateNames.Toggle) {\r\n            this._pipSideNav.close();\r\n        }\r\n        this.sidenavState = this._navState[String(stateName)];\r\n        this._element.addClass(this.sidenavState.addClass);\r\n\r\n        this._pipSideNav.state = this.sidenavState;\r\n\r\n        // check sideNav State\r\n        this._timeout(() => {\r\n            this.setSideNaveState()\r\n        }, 15);\r\n\r\n        // complete animation\r\n        this._timeout(() => {\r\n            this._isResizing = false;\r\n        }, this._animationDuration); //animationDuration\r\n\r\n    }\r\n}\r\n\r\n(() => {\r\n    function sideNavDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: true,\r\n            templateUrl: 'sidenav/SideNav.html',\r\n            controller: SideNavDirectiveController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipSideNav')\r\n        .directive('pipSidenav', sideNavDirective);\r\n\r\n})();","export let SideNavChangedEvent = 'pipSideNavChanged';\r\nexport let SideNavStateChangedEvent = 'pipSideNavStateChanged';\r\nexport let OpenSideNavEvent = 'pipOpenSideNav';\r\nexport let CloseSideNavEvent = 'pipCloseSideNav';","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\n    function SideNavPartDirectiveController($scope, $element, $attrs, $rootScope, pipSideNav) {\r\n        \"ngInject\";\r\n\r\n        var partName = '' + $attrs.pipSidenavPart;\r\n        var partValue = null;\r\n\r\n        // Break part apart\r\n        var pos = partName.indexOf(':');\r\n        if (pos > 0) {\r\n            partValue = partName.substr(pos + 1);\r\n            partName = partName.substr(0, pos);\r\n        }\r\n\r\n        onSideNavChanged(null, pipSideNav.config)\r\n        $rootScope.$on('pipSideNavChanged', onSideNavChanged);\r\n\r\n        function onSideNavChanged(event, config) {\r\n            var parts = config.parts || {};\r\n            var currentPartValue = parts[partName];\r\n            var visible = !!(partValue ? currentPartValue == partValue : currentPartValue);\r\n\r\n            if (visible != $scope.visible)\r\n                $scope.visible = visible;\r\n        }\r\n\r\n    }\r\n\r\n    function sidenavPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        var ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function linkFunction($scope: any, $element, $attrs) {\r\n                $attrs.ngIf = function () { return $scope.visible };\r\n                ngIf.link.apply(ngIf, arguments);\r\n            },\r\n            controller: SideNavPartDirectiveController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipSideNav')\r\n        .directive('pipSidenavPart', sidenavPartDirective);\r\n\r\n})();","import { SideNavChangedEvent, SideNavStateChangedEvent, OpenSideNavEvent, CloseSideNavEvent } from './SideNavEvents';\r\n\r\nexport class SideNavConfig {\r\n    parts: any;\r\n    classes: string[];\r\n    state: any;\r\n    type: string;\r\n    visible: boolean;\r\n}\r\n\r\nexport interface ISideNavService {\r\n    readonly config: SideNavConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n    state: any;\r\n\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n    show(): void;\r\n    hide(): void;\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface ISideNavProvider extends ng.IServiceProvider {\r\n    config: SideNavConfig;\r\n    parts: any;\r\n    type: string;\r\n    visible: boolean;\r\n    classes: string[];\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nclass SideNavService implements ISideNavService {\r\n    private _config: SideNavConfig;\r\n    private _state: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _sidenav: ng.material.ISidenavService;\r\n\r\n\r\n    public constructor(config: SideNavConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n        this._sidenav = $mdSidenav;\r\n    }\r\n\r\n    public get config(): SideNavConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: any) {\r\n        this._state = value || {};\r\n        this._rootScope.$broadcast(SideNavStateChangedEvent, value);\r\n    }\r\n\r\n    public open() {\r\n        this._sidenav('pip-sticky-sidenav').open();\r\n    }\r\n\r\n    public close() {\r\n        this._sidenav('pip-sticky-sidenav').close();\r\n    }\r\n\r\n    public toggle() {\r\n        this._sidenav('pip-sticky-sidenav').toggle();\r\n    }\r\n\r\n    public show() {\r\n        if (!this._config.visible) {\r\n            this._config.visible = true;\r\n            this.sendConfigEvent();\r\n        }\r\n    }\r\n\r\n    public hide() {\r\n        if (this._config.visible) {\r\n            this._config.visible = false;\r\n            this.sendConfigEvent();\r\n        }\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(SideNavChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass SideNavProvider implements ISideNavProvider {\r\n    private _config: SideNavConfig = {\r\n        parts: {},\r\n        classes: [],\r\n        type: 'popup',\r\n        state: null,\r\n        visible: true\r\n    };\r\n\r\n    private _service: SideNavService;\r\n\r\n    public get config(): SideNavConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: SideNavConfig) {\r\n        this._config = value || new SideNavConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get visible(): boolean {\r\n        return this._config.visible;\r\n    }\r\n\r\n    public set visible(value: boolean) {\r\n        this._config.visible = value;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new SideNavService(this._config, $rootScope, $mdSidenav);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nfunction hookSideNavEvents($rootScope: ng.IRootScopeService, pipSideNav: ISideNavService) {\r\n    $rootScope.$on(OpenSideNavEvent, () => { pipSideNav.open(); });\r\n    $rootScope.$on(CloseSideNavEvent, () => { pipSideNav.close(); });\r\n}\r\n\r\nangular\r\n    .module('pipSideNav')\r\n    .provider('pipSideNav', SideNavProvider)\r\n    .run(hookSideNavEvents);\r\n","export class SideNavStateNames {\r\n        static Toggle: string = 'toogle';\r\n        static Small: string = 'small';\r\n        static Large: string = 'large';\r\n        static XLarge: string = 'xlarge';\r\n}               \r\n               \r\n export class SideNavState {\r\n    id: SideNavStateNames;\r\n    // Class which added to sidenav in this state\r\n    addClass: string;\r\n    // Side nav always open\r\n    isLockedOpen: boolean;\r\n    // Show SideNav header \r\n    showHeader: boolean;\r\n    // Show expanded button\r\n    expandedButton: boolean;\r\n    // SideNav has expand\r\n    isExpanded: boolean;\r\n    // SideNav is Expanded in this state by default\r\n    expand: boolean;\r\n    // Tooltype is show\r\n    showIconTooltype: boolean;\r\n } \r\n\r\nexport class SideNavStateConfig {\r\n            toggle: SideNavState = { // media(sm, xs)\r\n                id: SideNavStateNames.Toggle,\r\n                addClass: 'sidenav-mobile', \r\n                showHeader: true,\r\n                isLockedOpen: false,\r\n                expandedButton: false,\r\n                isExpanded: true,\r\n                expand: true,\r\n                showIconTooltype: false\r\n            };\r\n            small: SideNavState = { // media(md)\r\n                id: SideNavStateNames.Small,\r\n                addClass: 'pip-sticky-nav-small sidenav-smalldesktop', \r\n                showHeader: false,\r\n                isLockedOpen: true,\r\n                expandedButton: false,\r\n                isExpanded: false,\r\n                expand: false,\r\n                showIconTooltype: true\r\n            };\r\n            large: SideNavState = { // media(lg)\r\n                id: SideNavStateNames.Large,\r\n                addClass: 'sidenav-smalldesktop', \r\n                showHeader: false,\r\n                isLockedOpen: true,\r\n                expandedButton: true,\r\n                isExpanded: true,\r\n                expand: true,\r\n                showIconTooltype: true\r\n            };\r\n            xlarge: SideNavState = { // media(xl)\r\n                id: SideNavStateNames.XLarge,\r\n                addClass: 'sidenav-desktop', \r\n                showHeader: false,\r\n                isLockedOpen: true,\r\n                expandedButton: false,\r\n                isExpanded: true,\r\n                expand: true,\r\n                showIconTooltype: false\r\n            };   \r\n}","'use strict';\r\n\r\nangular.module('pipSideNav', ['ngMaterial', 'pipNav.Templates']);\r\n\r\nimport './SideNavEvents';\r\nimport './SideNavState';\r\nimport './SideNavService';\r\nimport './SideNavPartDirective';\r\nimport './SideNavDirective';\r\n\r\nexport * from './SideNavService';","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\n\r\nclass Selected {\r\n    activeIndex: number = 0;\r\n    activeTab: number = 0;\r\n}\r\n\r\nclass TabsDirectiveController {\r\n\r\n    private _element: ng.IAugmentedJQuery;\r\n    private _attrs: ng.IAttributes;\r\n    private _injector: ng.auto.IInjectorService;\r\n    private _scope: angular.IScope;\r\n    private _log: ng.ILogService;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _pipTranslate: pip.services.ITranslateService;\r\n\r\n    private _pipTheme: pip.themes.IThemeService;\r\n    private _pipMedia: pip.layouts.IMediaService;\r\n    private _timeout: ng.ITimeoutService;\r\n\r\n    public themeClass: string;\r\n    public media: any;\r\n    public pipTabIndex: number;\r\n    public selected: Selected;\r\n    public tabs: any[];\r\n    public currentTheme: string;\r\n    public breakpoints: string;\r\n\r\n    constructor(\r\n        $element: ng.IAugmentedJQuery,\r\n        $attrs: ng.IAttributes,\r\n        $injector: ng.auto.IInjectorService,\r\n        $scope: angular.IScope,\r\n        $log: ng.ILogService,\r\n        $rootScope: ng.IRootScopeService,\r\n        $mdMedia: angular.material.IMedia,\r\n        $timeout: ng.ITimeoutService,\r\n        navConstant: any\r\n\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        this._element = $element;\r\n        this._attrs = $attrs;\r\n        this._scope = $scope;\r\n        this._injector = $injector;\r\n        this._log = $log;\r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n\r\n        this.selected = new Selected();\r\n        this.setTheme();\r\n        this.setMedia($mdMedia);\r\n        this.initTabs();\r\n\r\n        this.breakpoints = this._scope['breakpoints'] ? this._scope['breakpoints'] : navConstant.TAB_BREAKPOINT;\r\n\r\n        if (this.toBoolean($attrs['pipRebind'])) {\r\n            this._scope.$watch(() => this._scope['activeIndex'],\r\n                (newValue: number, oldValue: number) => {\r\n                    this.selected.activeIndex = newValue || 0;\r\n                    this.selected.activeTab = this.selected.activeIndex;\r\n                }\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    private setTheme(): void {\r\n        this._pipTheme = this._injector.has('pipTheme') ? <pip.themes.IThemeService>this._injector.get('pipTheme') : null;\r\n        if (this._pipTheme) {\r\n            this.currentTheme = this._pipTheme.theme;\r\n        } else if (this._rootScope['$theme']) {\r\n            this.currentTheme = this._rootScope['$theme'];\r\n        }\r\n\r\n        this.themeClass = (this._attrs['class'] || '') + ' md-' + this.currentTheme + '-theme';\r\n    }\r\n\r\n    private setMedia($mdMedia: angular.material.IMedia): void {\r\n        this._pipMedia = this._injector.has('pipMedia') ? <pip.layouts.IMediaService>this._injector.get('pipMedia') : null;\r\n        this.media = this._pipMedia !== undefined ? this._pipMedia : $mdMedia;\r\n    }\r\n\r\n    private setTranslate(): void {\r\n        this._pipTranslate = this._injector.has('pipTranslate') ? <pip.services.ITranslateService>this._injector.get('pipTranslate') : null;\r\n        if (this._pipTranslate) {\r\n            if (this.tabs.length > 0 && this.tabs[0].title) {\r\n                this._pipTranslate.translateObjects(this.tabs, 'title', 'nameLocal');\r\n            } else {\r\n                this._pipTranslate.translateObjects(this.tabs, 'name', 'nameLocal');\r\n            }\r\n        }\r\n    }\r\n\r\n    private initTabs(): void {\r\n        this.tabs = (this._scope['tabs'] && _.isArray(this._scope['tabs'])) ? this._scope['tabs'] : [];\r\n        this.pipTabIndex = this._attrs['pipTabIndex'] ? parseInt(this._attrs['pipTabIndex']) : 0;\r\n        this.selected.activeIndex = this._scope['activeIndex'] || 0;\r\n        this.selected.activeTab = this.selected.activeIndex;\r\n\r\n\r\n\r\n        if (this.pipTabIndex) {\r\n            this._timeout(() => {\r\n                let a = this._element.find('md-tabs-canvas');\r\n                if (a && a[0]) {\r\n                    angular.element(a[0]).attr('tabindex', this.pipTabIndex);\r\n                }\r\n                a.on('focusout', function () {\r\n                    angular.element(a[0]).attr('tabindex', this.pipTabIndex);\r\n                    this._timeout(() => {\r\n                        angular.element(a[0]).attr('tabindex', this.pipTabIndex);\r\n                    }, 50);\r\n                });\r\n            }, 1000);\r\n        }\r\n        this.setTranslate();\r\n    }\r\n\r\n\r\n    public disabled(): boolean {\r\n        if (this._scope['ngDisabled']) {\r\n            return this._scope['ngDisabled']();\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    public tabDisabled(index: number): boolean {\r\n        return (this.disabled() && this.selected.activeIndex != index);\r\n    };\r\n\r\n    public onSelect(index: number): void {\r\n        console.log('onSelect', index);\r\n        if (this.disabled()) return;\r\n\r\n\r\n        this.selected.activeIndex = index;\r\n        this.selected.activeTab = this.selected.activeIndex;\r\n        this._timeout(() => {\r\n            this._scope['activeIndex'] = index;\r\n            console.log('activeIndex', this._scope['activeIndex']);\r\n            if (this._scope['select']) {\r\n                this._scope['select'](this.tabs[this.selected.activeIndex], this.selected.activeIndex);\r\n            }\r\n        }, 0);\r\n\r\n    };\r\n\r\n    public showShadow(): boolean {\r\n        if (this._scope['showTabsShadow']) {\r\n            return this._scope['showTabsShadow']();\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    public show(): boolean {\r\n        if (this._scope['showTabs']) {\r\n            return this._scope['showTabs']();\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    public toBoolean(value: any): boolean {\r\n        if (value == null) return false;\r\n        if (!value) return false;\r\n        value = value.toString().toLowerCase();\r\n        return value == '1' || value == 'true';\r\n    }\r\n\r\n}\r\n\r\n(() => {\r\n    function tabsDirective() {\r\n        return {\r\n            restrict: 'E',\r\n            scope: {\r\n                ngDisabled: '&',\r\n                tabs: '=pipTabs',\r\n                showTabs: '&pipShowTabs',\r\n                showTabsShadow: '&pipTabsShadow',\r\n                activeIndex: '=pipActiveIndex',\r\n                select: '=pipTabsSelect',\r\n                breakpoints: '=pipBreakpoints'\r\n            },\r\n            templateUrl: 'tabs/Tabs.html',\r\n            controller: TabsDirectiveController,\r\n            controllerAs: 'vm'\r\n        };\r\n    }\r\n\r\n\r\n    angular\r\n        .module(\"pipTabs\", ['pipNav.Templates'])\r\n        .directive('pipTabs', tabsDirective);\r\n\r\n})();","(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/PrimaryActions.html',\n    '<div pip-focused=\"\" pip-focused-tabindex=\"2\"><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in vm.config.primaryLocalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"vm.clickAction(action, $mdOpenMenu);\" tabindex=\"-1\" ng-hide=\"vm.isHidden(action)\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge\" ng-show=\"action.count > 0\">{{ vm.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon}}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"vm.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"vm.clickAction(subAction)\">{{ ::subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu><md-menu md-position-mode=\"target-right target\" class=\"pip-primary-actions\" ng-repeat=\"action in vm.config.primaryGlobalActions\"><md-button class=\"pip-primary-actions-action md-icon-button pip-focusable\" ng-click=\"vm.clickAction(action, $mdOpenMenu);\" ng-hide=\"vm.isHidden(action)\" tabindex=\"-1\" aria-label=\"{{ action.title | translate }}\"><div class=\"pip-primary-actions-badge color-badge-bg\" ng-show=\"action.count > 0\">{{ vm.actionCount(action) }}</div><md-icon md-svg-icon=\"{{ action.icon }}\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"subAction in action.subActions\" ng-if=\"!subAction.divider\" ng-hide=\"vm.isHidden(subAction)\"><md-button class=\"pip-focusable\" ng-hide=\"subAction.divider\" tabindex=\"-1\" ng-click=\"vm.clickAction(subAction)\">{{ subAction.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"subAction.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('actions/SecondaryActions.html',\n    '<md-menu ng-if=\"vm.secondaryActionsVisible()\" md-position-mode=\"target-right target\"><md-button class=\"md-icon-button\" tabindex=\"3\" ng-init=\"vm.getMenu($mdOpenMenu)\" ng-click=\"vm.onSecondaryActionClick(); vm.openMenu($mdOpenMenu, $event);\" aria-label=\"open actions\"><md-icon md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item ng-repeat-start=\"action in vm.config.secondaryLocalActions\" ng-if=\"!action.divider\" ng-hide=\"vm.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"vm.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider><md-menu-divider ng-if=\"vm.secondaryDividerVisible()\"></md-menu-divider><md-menu-item ng-repeat-start=\"action in vm.config.secondaryGlobalActions\" ng-if=\"!action.divider\" ng-hide=\"vm.isHidden(action)\"><md-button ng-hide=\"action.divider\" ng-click=\"vm.clickAction(action)\">{{ ::action.title | translate }}</md-button></md-menu-item><md-menu-divider ng-if=\"action.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('appbar/AppBar.html',\n    '<md-toolbar class=\"{{ vm.config.classes.join(\\' \\') }}\" ng-if=\"vm.config.visible\" ng-transclude=\"\"></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('breadcrumb/Breadcrumb.html',\n    '<div class=\"pip-breadcrumb-block\"><div class=\"text-overflow\" ng-if=\"!vm._media(\\'xs\\')\"><span ng-if=\"vm.config.criteria\" ng-click=\"vm.openSearch()\">{{ vm.config.criteria }} -</span><span class=\"pip-breadcrumb-item {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-if=\"vm.config.items && vm.config.items.length > 0\" ng-repeat-start=\"item in vm.config.items\" ng-click=\"vm.onClick(item)\" ng-init=\"stepWidth = 100/(vm.config.items.length + 1)\" ng-class=\"{\\'cursor-pointer\\': !$last}\" ng-style=\"{\\'max-width\\': stepWidth + \\'%\\'}\"><span ng-if=\"!$last || !vm.actionsVisible(item)\">{{ item.title | translate }}</span><div ng-if=\"$last && vm.actionsVisible(item)\" style=\"display: inline-block; position: relative;\"><md-menu md-offset=\"0 44\"><span class=\"layout-row pip-breadcrumb-item-menu cursor-pointer {{ $last ? \\'breadcrumb-accent\\' : \\'\\' }}\" ng-click=\"vm.onOpenMenu($mdOpenMenu, $event)\" md-ink-ripple=\"\" aria-label=\"open breadcrumb actions\">{{ item.title | translate }}<md-icon class=\"pip-triangle-down\" md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-if=\"!subItem.divider\" ng-repeat-start=\"subItem in item.subActions\"><md-button ng-click=\"vm.onSubActionClick(subItem)\" ng-if=\"!action.divider\" tabindex=\"4\"><md-icon md-menu-align-target=\"\" ng-if=\"subItem.icon\" md-svg-icon=\"{{ subItem.icon }}\"></md-icon><span>{{ subItem.title | translate }}</span></md-button></md-menu-item><md-menu-divider ng-if=\"subItem.divider\" ng-repeat-end=\"\"></md-menu-divider></md-menu-content></md-menu></div></span><md-icon ng-repeat-end=\"\" md-svg-icon=\"icons:chevron-right\" ng-hide=\"$last\"></md-icon><span class=\"pip-title breadcrumb-accent\" ng-if=\"vm.config.text\">{{ vm.config.text | translate }}</span></div><div style=\"position: relative;\" ng-if=\"vm._media(\\'xs\\')\"><md-menu md-offset=\"0 44\"><span class=\"pip-mobile-breadcrumb layout-row\" ng-click=\"vm.config.items && vm.config.items.length > 1 ? $mdOpenMenu() : return\"><span class=\"text-overflow\"><span ng-if=\"vm.config.criteria\" ng-click=\"vm.openSearch()\">{{ vm.config.criteria }} -</span> <span class=\"breadcrumb-accent\" ng-if=\"vm.config.text\">{{ vm.config.text | translate }}</span> <span ng-if=\"vm.config.items && vm.config.items.length > 0\" class=\"breadcrumb-accent {{ (vm.config.items && vm.config.items.length > 1) ? \\'cursor-pointer\\' : \\'\\' }}\">{{ vm.config.items[vm.config.items.length - 1].title | translate }}</span></span><md-icon class=\"pip-triangle-down cursor-pointer breadcrumb-accent\" md-svg-icon=\"icons:triangle-down\" ng-if=\"vm.config.items && vm.config.items.length > 1\"></md-icon></span><md-menu-content width=\"4\"><md-menu-item ng-repeat=\"item in vm.config.items\" ng-if=\"vm.config.items && vm.config.items.length > 0\"><md-button ng-click=\"vm.onClick(item)\" tabindex=\"5\"><md-icon md-menu-align-target=\"\" ng-if=\"item.icon\" md-svg-icon=\"{{ item.icon }}\"></md-icon><span>{{ item.title | translate }}</span></md-button></md-menu-item><md-menu-item ng-if=\"vm.config.text\"><md-button tabindex=\"5\"><span class=\"text-grey\">{{ vm.config.text | translate }}</span></md-button></md-menu-item></md-menu-content></md-menu></div></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('dropdown/Dropdown.html',\n    '<md-toolbar class=\"md-subhead color-primary-bg {{ vm.themeClass}}\" ng-if=\"vm.show()\" ng-class=\"{\\'md-whiteframe-3dp\\': vm.media(\\'xs\\')}\"><div class=\"pip-divider\"></div><md-select ng-model=\"vm.selectedIndex\" tabindex=\"15\" ng-disabled=\"vm.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"DROPDOWN\" md-ink-ripple=\"\" md-on-close=\"vm.onSelect(vm.selectedIndex)\"><md-option ng-repeat=\"action in vm.actions\" value=\"{{ ::$index }}\" ng-selected=\"vm.activeIndex == $index ? true : false\">{{ (action.title || action.name || action) | translate }}</md-option></md-select></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('header/NavHeader.html',\n    '<md-toolbar ng-show=\"showHeader\" class=\"layout-row layout-align-start-center\"><div class=\"flex-fixed pip-sticky-nav-header-user\"><md-button class=\"md-icon-button\" ng-click=\"onUserClick()\" aria-label=\"current user\" tabindex=\"-1\"><img src=\"\" class=\"pip-sticky-nav-header-user-image\" ng-class=\"imageCss\"></md-button></div><div class=\"pip-sticky-nav-header-user-text\"><div class=\"pip-sticky-nav-header-user-pri\" ng-click=\"onUserClick()\" tabindex=\"-1\">{{ title | translate }}</div><div class=\"pip-sticky-nav-header-user-sec\">{{ subtitle | translate }}</div></div></md-toolbar>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('icon/NavIcon.html',\n    '<md-button class=\"md-icon-button pip-nav-icon\" ng-if=\"vm.config.type != \\'none\\'\" ng-class=\"vm.config.class\" ng-click=\"vm.onNavIconClick()\" tabindex=\"{{ vm.config.type==\\'menu\\' || vm.config.type==\\'back\\' ? 4 : -1 }}\" aria-label=\"menu\"><md-icon ng-if=\"vm.config.type==\\'menu\\'\" md-svg-icon=\"icons:menu\"></md-icon><img ng-src=\"{{ vm.config.imageUrl }}\" ng-if=\"vm.config.type==\\'image\\'\" height=\"24\" width=\"24\"><md-icon ng-if=\"vm.config.type==\\'back\\'\" md-svg-icon=\"icons:arrow-left\"></md-icon><md-icon ng-if=\"vm.config.type==\\'icon\\'\" md-svg-icon=\"{{ vm.config.icon }}\"></md-icon></md-button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('language/LanguagePicker.html',\n    '<md-menu md-position-mode=\"target-right target\"><span class=\"pip-language\" ng-click=\"$mdOpenMenu()\" aria-label=\"language selection\">{{ vm.selectedLanguage | translate }}<md-icon md-svg-icon=\"icons:triangle-down\"></md-icon></span><md-menu-content width=\"3\"><md-menu-item ng-repeat=\"language in vm.languages\"><md-button ng-click=\"vm.onLanguageClick(language)\" tabindex=\"7\">{{ language | translate }}</md-button></md-menu-item></md-menu-content></md-menu>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('menu/NavMenu.html',\n    '<div ng-if=\"sections && sections.length\"><md-list class=\"sidenav-list\" pip-focused=\"\" pip-focused-tabindex=\"10\" pip-with-hidden=\"true\"><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-sticky-nav-expanded-button\" ng-click=\"onExpand()\" ng-disabled=\"!isCollapsed\" tabindex=\"-1\" ng-if=\"expandedButton\"><md-icon md-svg-icon=\"icons:chevron-left\" ng-if=\"expanded\" class=\"pip-sticky-nav-menu-icon\"></md-icon><md-icon md-svg-icon=\"icons:chevron-right\" ng-if=\"!expanded\" class=\"pip-sticky-nav-menu-icon\"></md-icon></md-list-item><md-divider ng-show=\"expandedButton\"></md-divider><div class=\"pip-section\" ng-repeat=\"section in sections\" ng-hide=\"section.access && !section.access(section)\"><md-divider ng-show=\"$index > 0 && !isSectionEmpty(section.links)\"></md-divider><md-subheader ng-show=\"section.title\" style=\"height: 48px;\"><span ng-if=\"expanded\" class=\"pip-sticky-nav-menu-title section-title\">{{::section.title | translate}}</span><md-icon md-svg-icon=\"{{section.icon}}\" ng-if=\"!sideNavState.showIconTooltype && !expanded && section.icon\" class=\"pip-sticky-nav-menu-icon section-icon\"></md-icon><md-icon md-svg-icon=\"{{section.icon}}\" ng-if=\"sideNavState.showIconTooltype && !expanded && section.icon\" class=\"pip-sticky-nav-menu-icon section-icon\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{::section.tooltipText || section.title | translate}}</md-tooltip></md-icon><md-icon md-svg-icon=\"{{defaultIcon}}\" ng-if=\"!sideNavState.showIconTooltype && !expanded && !section.icon\" class=\"pip-sticky-nav-menu-icon section-icon\"></md-icon><md-icon md-svg-icon=\"{{defaultIcon}}\" ng-if=\"sideNavState.showIconTooltype && !expanded && !section.icon\" class=\"pip-sticky-nav-menu-icon section-icon\"><md-tooltip md-visible=\"showTooltip\" class=\"md-secondary\">{{::section.tooltipText || section.title | translate}}</md-tooltip></md-icon></md-subheader><md-list-item class=\"no-border pip-sticky-nav-menu-item pip-focusable\" ng-repeat=\"link in section.links\" tabindex=\"-1\" ng-class=\"{\\'active\\': isActive(link)}\" ng-hide=\"link.access && !link.access(link)\"><md-button class=\"layout-row layout-align-start-center pip-button-block\" tabindex=\"-1\" ng-click=\"clickLink($event, link)\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\">{{::link.tooltipText | translate}}</md-tooltip><div class=\"pip-sticky-nav-menu-icon-block\"><md-icon md-svg-icon=\"{{link.icon}}\" ng-if=\"!(sideNavState.showIconTooltype && !link.tooltipText && !expanded)\" ng-hide=\"!link.icon\" class=\"pip-sticky-nav-menu-icon flex-fixed\"></md-icon><md-icon md-svg-icon=\"{{link.icon}}\" ng-hide=\"!link.icon\" ng-if=\"sideNavState.showIconTooltype && !link.tooltipText && !expanded\" class=\"pip-sticky-nav-menu-icon flex-fixed\"><md-tooltip md-visible=\"showTooltip\" md-direction=\"right\" class=\"sidenav-icon-tooltip\">{{::link.tooltipText || link.title | translate}}</md-tooltip></md-icon></div><div class=\"pip-sticky-nav-menu-title\">{{::link.title | translate}}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count < 100\">{{link.count}}</div><div class=\"pip-sticky-nav-menu-badge {{ link.badgeStyle ? link.badgeStyle : \\'color-badge-bg\\' }} flex-fixed\" ng-if=\"link.count && link.count > 99\">!</div></md-button></md-list-item></div></md-list></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('search/SearchBar.html',\n    '<div class=\"md-toolbar-tools pip-search-container\" ng-if=\"vm.enabled\"><div class=\"layout-row pip-search-selected\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"start search\" ng-click=\"vm.onClick()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><input class=\"pip-search-text flex\" type=\"search\" tabindex=\"6\" ng-model=\"vm.search.text\" ng-keydown=\"vm.onKeyDown($event)\"><md-button class=\"md-icon-button\" tabindex=\"6\" aria-label=\"clear search\" ng-click=\"vm.clear()\"><md-icon md-svg-icon=\"icons:cross-circle\"></md-icon></md-button></div></div><div class=\"md-toolbar-tools layout-row layout-align-end-center flex-fixed lp0 rp0\" ng-if=\"!vm.enabled\"><md-button class=\"md-icon-button\" tabindex=\"5\" aria-label=\"start search\" ng-click=\"vm.enable()\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('sidenav/SideNav.html',\n    '<md-sidenav class=\"md-sidenav-left\" md-is-locked-open=\"vm.sidenavState.isLockedOpen\" md-component-id=\"pip-sticky-sidenav\" ng-transclude=\"\"></md-sidenav>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipNav.Templates');\n} catch (e) {\n  module = angular.module('pipNav.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tabs/Tabs.html',\n    '<md-toolbar class=\"pip-nav {{ vm.themeClass }}\" ng-class=\"{\\'pip-visible\\': vm.show(), \\'pip-shadow\\': vm.showShadow()}\"><md-tabs ng-if=\"vm.media(vm.breakpoints)\" md-selected=\"vm.selected.activeTab\" ng-class=\"{\\'disabled\\': vm.disabled()}\" md-stretch-tabs=\"true\" md-dynamic-height=\"true\"><md-tab ng-repeat=\"tab in vm.tabs track by $index\" ng-disabled=\"vm.tabDisabled($index)\" md-on-select=\"vm.onSelect($index)\"><md-tab-label>{{:: tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ tab.newCounts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div></md-tab-label></md-tab></md-tabs><div class=\"md-subhead pip-tabs-content color-primary-bg\" ng-if=\"!vm.media(vm.breakpoints)\"><div class=\"pip-divider position-top m0\"></div><md-select ng-model=\"vm.selected.activeIndex\" ng-disabled=\"vm.disabled()\" md-container-class=\"pip-full-width-dropdown\" aria-label=\"SELECT\" md-ink-ripple=\"\" md-on-close=\"vm.onSelect(vm.selected.activeIndex)\"><md-option ng-repeat=\"tab in vm.tabs track by $index\" class=\"pip-tab-option\" value=\"{{ ::$index }}\">{{ ::tab.nameLocal }}<div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 0 && tab.newCounts <= 99\">{{ tab.newCounts }}</div><div class=\"pip-tabs-badge color-badge-bg\" ng-if=\"tab.newCounts > 99\">!</div></md-option></md-select></div></md-toolbar>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-nav-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}